[
  {
    "tool": "hammer",
    "openscad_code": "// Realistic 3D-printable hammer\n// Overall length ~90 mm, printable on FDM printer\n\n$fn = 32; // Smooth curves\n\n// Colors\nhandle_color = \"SaddleBrown\";\nmetal_color = \"Silver\";\ngrip_color = \"DarkRed\";\nmarking_color = \"Black\";\n\n// Main module\nmodule hammer() {\n    union() {\n        // Handle assembly\n        translate([0, 0, 0]) handle();\n        // Head assembly\n        translate([0, 0, 35]) head();\n    }\n}\n\n// Handle with grip\nmodule handle() {\n    color(handle_color) {\n        // Main handle shaft\n        cylinder(h = 35, d1 = 10, d2 = 8, center = false);\n        \n        // Wider base for balance\n        translate([0, 0, -2]) cylinder(h = 4, d = 12);\n    }\n    \n    // Rubber grip rings\n    color(grip_color) {\n        for (i = [5:5:30]) {\n            translate([0, 0, i]) \n                difference() {\n                    cylinder(h = 3, d = 11);\n                    cylinder(h = 3.1, d = 9);\n                }\n        }\n    }\n}\n\n// Hammer head\nmodule head() {\n    color(metal_color) {\n        union() {\n            // Main head body\n            translate([0, 0, 0]) {\n                // Rectangular center\n                cube([20, 12, 25], center = true);\n            }\n            \n            // Claw (back end)\n            translate([0, 0, 18]) {\n                difference() {\n                    // Main claw shape\n                    union() {\n                        // Vertical section\n                        cube([12, 12, 15], center = true);\n                        // Curved claw\n                        rotate([90, 0, 0])\n                            cylinder(h = 8, d = 12);\n                    }\n                    // Remove center for claw gap\n                    translate([0, -6, 0])\n                        cube([8, 12, 20], center = true);\n                }\n            }\n            \n            // Strike face (front end)\n            translate([0, 0, -12.5]) {\n                // Main strike surface\n                cylinder(h = 2, d = 18);\n                \n                // Beveled edge\n                difference() {\n                    cylinder(h = 2, d = 22);\n                    cylinder(h = 2.1, d = 18);\n                }\n            }\n            \n            // Handle connection neck\n            translate([0, 0, -25]) {\n                cylinder(h = 8, d1 = 12, d2 = 10);\n            }\n        }\n    }\n    \n    // Manufacturer marking on side\n    color(marking_color) {\n        translate([10.1, 0, 8])\n            rotate([0, 90, 0])\n                linear_extrude(height = 0.5)\n                    text(\"HAMMER\", size = 3, halign = \"center\");\n    }\n}\n\n// Render the hammer\nhammer();",
    "renders": true
  },
  {
    "tool": "screwdriver",
    "openscad_code": "// Realistic medium-complexity screwdriver (â‰ˆ85 mm total)\n$fn = 50;\n\n// Overall dimensions\nhandle_len = 45;\nshaft_len  = 40;\ntip_len    = 6;\n\n// Module for the Phillips tip profile\nmodule phillips_tip(radius, depth) {\n    difference() {\n        cylinder(h = depth, r = radius, center = false);\n        for(a = [0:90:359])\n            rotate([0, 0, a])\n                translate([0, 0, -1])\n                    cube([radius*2.2, 1.2, depth + 2], center = true);\n    }\n}\n\n// Handle grip ridges\nmodule grip_ridges() {\n    color(\"DarkOrange\")\n    for(i = [0:3:handle_len-7]) {\n        translate([0, 0, i])\n            difference() {\n                cylinder(h = 2, r1 = 10, r2 = 9.6);\n                cylinder(h = 2.1, r = 7.5);\n            }\n    }\n}\n\n// Handle main body\nmodule handle() {\n    color(\"SaddleBrown\") {\n        // Core\n        cylinder(h = handle_len, r = 10);\n\n        // End cap\n        translate([0, 0, handle_len])\n            cylinder(h = 4, r1 = 10, r2 = 8);\n\n        // Grip pattern\n        grip_ridges();\n    }\n}\n\n// Shaft\nmodule shaft() {\n    color(\"Silver\") {\n        // Main rod\n        cylinder(h = shaft_len, r = 3.5);\n\n        // Transition collar\n        translate([0, 0, -1])\n            cylinder(h = 3, r1 = 5, r2 = 3.5);\n    }\n}\n\n// Phillips tip\nmodule tip() {\n    color(\"Silver\")\n    translate([0, 0, shaft_len])\n        phillips_tip(radius = 3.5, depth = tip_len);\n}\n\n// Assembly\nhandle();\ntranslate([0, 0, handle_len])\n    shaft();\ntranslate([0, 0, handle_len + shaft_len])\n    tip();",
    "renders": true
  },
  {
    "tool": "wrench",
    "openscad_code": "// Realistic Wrench Tool - OpenSCAD\n// Medium complexity 3D printable wrench\n\n$fn = 50;\n\n// Main colors\n$wrench_color = [0.7, 0.7, 0.7];\n$grip_color = [0.2, 0.2, 0.2];\n\n// Overall dimensions\nwrench_length = 80;\nhandle_length = 55;\nhandle_width = 10;\nhandle_height = 8;\nhead_width = 18;\nhead_thickness = 8;\njaw_opening = 12;\njaw_depth = 6;\n\nmodule handle() {\n    color($grip_color) {\n        // Main handle body\n        translate([0, 0, -handle_height/2])\n            cube([handle_length, handle_width, handle_height], center=false);\n        \n        // Grip pattern - recessed grooves\n        for(i = [5:5:handle_length-10]) {\n            translate([i, handle_width/4, -handle_height/2])\n                cube([1, handle_width/2, handle_height], center=false);\n        }\n        \n        // End rounding\n        translate([handle_length-5, handle_width/2, 0])\n            rotate([0, 90, 0])\n                cylinder(h=handle_width, r=5, center=true);\n    }\n}\n\nmodule hex_jaw() {\n    color($wrench_color) {\n        // Fixed jaw\n        translate([handle_length, 0, 0])\n            difference() {\n                // Main jaw body\n                cube([head_width, head_width, head_thickness], center=true);\n                \n                // Hex opening\n                translate([head_width/2, 0, 0])\n                    rotate([0, 0, 30])\n                        cylinder(h=head_thickness+2, r=jaw_opening/2/sin(60), center=true);\n                \n                // Cut to create jaw opening\n                translate([head_width/2, 0, -head_thickness/2-1])\n                    cube([jaw_depth*2, jaw_opening+2, head_thickness+2], center=true);\n            }\n        \n        // Movable jaw (simplified as fixed)\n        translate([handle_length, 0, 0])\n            cube([jaw_depth, jaw_opening, head_thickness], center=true);\n    }\n}\n\nmodule wrench_head() {\n    color($wrench_color) {\n        // Transition from handle to head\n        translate([handle_length-10, 0, 0])\n            union() {\n                // Tapered section\n                hull() {\n                    translate([0, -handle_width/2, -handle_height/2])\n                        cube([20, handle_width, handle_height]);\n                    translate([10, -head_width/2, -head_thickness/2])\n                        cube([1, head_width, head_thickness]);\n                }\n                \n                // Reinforcement ribs\n                for(side = [-1, 1]) {\n                    translate([handle_length-5, side*(handle_width/2+2), 0])\n                        rotate([90, 0, 0])\n                            cylinder(h=8, r1=3, r2=1);\n                }\n            }\n        \n        // Head structure\n        hex_jaw();\n    }\n}\n\n// Size markings\nmodule markings() {\n    color([0, 0, 0]) {\n        // Metric size marking\n        translate([handle_length/2, handle_width+1, 0])\n            rotate([90, 0, 0])\n                linear_extrude(height=0.5)\n                    text(\"12mm\", size=3, halign=\"center\");\n    }\n}\n\n// Assembly\nunion() {\n    handle();\n    wrench_head();\n    markings();\n}",
    "renders": true
  },
  {
    "tool": "pliers",
    "openscad_code": "// Realistic pliers model - medium complexity\n// Overall size ~80mm\n\n// Color definitions\n$fn = 32;\n\nmodule handle_grip() {\n    // Main handle cylinder\n    color(\"darkblue\")\n    difference() {\n        cylinder(h=35, d=8);\n        // Grip texture - hexagonal pattern\n        for (i = [0:4]) {\n            translate([0, 0, i*7+3.5])\n                cylinder(h=2, d=7.5);\n        }\n    }\n    \n    // End cap\n    translate([0, 0, 35])\n        color(\"silver\")\n        cylinder(h=3, d=9);\n}\n\nmodule handle_bar() {\n    // Metal shaft\n    color(\"silver\")\n    difference() {\n        cylinder(h=40, d=5);\n        // Hollow center\n        cylinder(h=40, d=3);\n    }\n}\n\nmodule pivot_pin() {\n    // Central pivot bolt\n    color(\"silver\")\n    difference() {\n        cylinder(h=10, d=6);\n        translate([0, 0, -1])\n            cylinder(h=12, d=4);\n    }\n    \n    // Bolt head\n    translate([0, 0, 5])\n        cylinder(h=2, d=8);\n}\n\nmodule jaw_half() {\n    // Cutters section\n    color(\"silver\")\n    translate([0, 0, -15])\n        difference() {\n            cube([8, 3, 20], center=true);\n            // Cutting edge\n            translate([-4, 0, -5])\n                rotate([0, 30, 0])\n                cube([10, 4, 10]);\n        }\n    \n    // Gripping section\n    translate([0, 0, 5])\n        difference() {\n            cube([8, 3, 10], center=true);\n            // Grip teeth\n            for (i = [0:3]) {\n                translate([-3.5 + i*2.3, 0, -2.5])\n                    cube([0.5, 3.2, 0.3]);\n            }\n        }\n}\n\nmodule pliers_half() {\n    handle_grip();\n    \n    translate([0, 0, 35])\n        handle_bar();\n    \n    translate([0, 0, 75])\n        rotate([0, 30, 0])\n        jaw_half();\n}\n\n// Main assembly\n// Left half\npliers_half();\n\n// Right half - mirrored\nmirror([1, 0, 0])\n    pliers_half();\n\n// Central pivot\ntranslate([0, 0, 75])\n    rotate([90, 0, 0])\n    pivot_pin();",
    "renders": true
  },
  {
    "tool": "saw",
    "openscad_code": "// Realistic Hand Saw - 3D Printable\n// Medium complexity saw with blade, handle, and grip details\n\n// Overall dimensions\nblade_length = 70;\nblade_width = 20;\nblade_thickness = 1.2;\nhandle_length = 25;\nhandle_diameter = 18;\ngrip_depth = 3;\n\nmodule saw_blade() {\n    // Main blade body\n    color(\"silver\") \n    difference() {\n        // Tapered blade shape\n        hull() {\n            translate([0, 0, blade_thickness/2])\n                cube([blade_length, blade_width*0.4, blade_thickness], center=true);\n            translate([blade_length*0.8, 0, blade_thickness/2])\n                cube([blade_length*0.2, blade_width, blade_thickness], center=true);\n        }\n        \n        // Blade hole\n        translate([blade_length*0.9, 0, 0])\n            cylinder(h=blade_thickness+0.1, r=2, center=true);\n        \n        // Teeth pattern\n        for(i = [0:2:blade_length-5]) {\n            translate([i-blade_length/2, blade_width/2+0.1, 0])\n                rotate([90, 0, 45])\n                    cylinder(h=blade_thickness+0.2, r1=0.8, r2=0.2, center=true);\n            translate([i-blade_length/2+1, blade_width/2+0.1, 0])\n                rotate([90, 0, -45])\n                    cylinder(h=blade_thickness+0.2, r1=0.2, r2=0.8, center=true);\n        }\n    }\n    \n    // Blade spine reinforcement\n    color(\"silver\")\n    translate([0, 0, blade_thickness+0.1])\n        cube([blade_length, 2, 1], center=true);\n}\n\nmodule saw_handle() {\n    // Main handle body\n    color(\"burlywood\") difference() {\n        hull() {\n            sphere(d=handle_diameter);\n            translate([handle_length, 0, 0])\n                sphere(d=handle_diameter*0.8);\n        }\n        \n        // Grip grooves\n        for(i = [0:4]) {\n            rotate([0, i*360/5, 0])\n                translate([handle_length*0.5, 0, 0])\n                    cube([handle_length*1.2, 2, grip_depth*2], center=true);\n        }\n        \n        // Ergonomic finger grooves\n        for(i = [0:3]) {\n            translate([handle_length*0.2 + i*handle_length/4, 0, -handle_diameter/2])\n                rotate([90, 0, 0])\n                    cylinder(h=handle_diameter*0.8, r=handle_diameter/0.8, center=true);\n        }\n    }\n    \n    // Handle grip texture rings\n    color(\"black\")\n    for(i = [0:3]) {\n        translate([handle_length*0.3 + i*handle_length/4, 0, 0])\n            rotate_extrude()\n                translate([handle_diameter/2-0.5, 0, 0])\n                    circle(r=0.5);\n    }\n    \n    // Handle hole for hanging\n    color(\"burlywood\")\n    translate([handle_length*0.9, 0, 0])\n        rotate([0, 90, 0])\n            cylinder(h=handle_diameter*2, r=2, center=true);\n}\n\n// Assembly\nmodule saw_assembly() {\n    saw_blade();\n    \n    // Handle attachment\n    translate([blade_length*0.5, 0, 0])\n        rotate([0, 0, 90])\n            saw_handle();\n    \n    // Rivets securing blade to handle\n    color(\"gray\")\n    for(i = [-1:1]) {\n        translate([blade_length*0.45, i*handle_diameter*0.25, blade_thickness/2+1])\n            cylinder(h=2, r=1.5);\n    }\n}\n\n// Render the complete saw\nsaw_assembly();",
    "renders": true
  },
  {
    "tool": "chisel",
    "openscad_code": "// Chisel Tool - Medium Complexity Realistic Style\n// Woodworking chisel with wooden handle and metal blade\n\n// Overall dimensions (mm)\nblade_length = 30;\nblade_width = 12;\nblade_thickness = 3;\nhandle_length = 70;\nhandle_diameter = 15;\nferrule_length = 10;\nferrule_diameter = 16;\n\n// Colors\nhandle_color = \"BurlyWood\";\nblade_color = \"Silver\";\nferrule_color = \"Goldenrod\";\n\n// Handle grip rings\ngrip_ring_count = 5;\ngrip_ring_width = 2;\ngrip_ring_spacing = 8;\n\n// Main chisel module\nmodule chisel() {\n    // Handle\n    color(handle_color) {\n        // Main handle body\n        cylinder(h=handle_length, d=handle_diameter, $fn=32);\n        \n        // Handle end cap (slightly rounded)\n        translate([0, 0, handle_length])\n            sphere(d=handle_diameter, $fn=32);\n        \n        // Grip rings\n        for(i = [1:grip_ring_count]) {\n            translate([0, 0, handle_length - (i * grip_ring_spacing) - grip_ring_width])\n                cylinder(h=grip_ring_width, d=handle_diameter + 2, $fn=32);\n        }\n    }\n    \n    // Ferrule (metal collar)\n    color(ferrule_color) {\n        translate([0, 0, handle_length - ferrule_length])\n            cylinder(h=ferrule_length + 2, d=ferrule_diameter, $fn=32);\n    }\n    \n    // Blade\n    color(blade_color) {\n        // Blade shank\n        translate([0, 0, handle_length - ferrule_length - blade_length])\n            cylinder(h=blade_length - 10, d1=blade_width, d2=blade_width * 0.8, $fn=4);\n        \n        // Blade body\n        translate([0, 0, handle_length - ferrule_length - blade_length - 5])\n            cube([blade_width, blade_thickness, 15], center=true);\n        \n        // Chisel cutting edge\n        translate([0, 0, handle_length - ferrule_length - blade_length - 12])\n            cube([blade_width, blade_thickness, 5], center=true);\n        \n        // Beveled cutting edge\n        translate([0, 0, handle_length - ferrule_length - blade_length - 14.5])\n            rotate([90, 0, 0])\n                cylinder(h=blade_width/2, d1=blade_thickness, d2=0.5, $fn=3);\n    }\n    \n    // Blade spine\n    color(blade_color) {\n        translate([0, blade_thickness/2 + 0.5, handle_length - ferrule_length - blade_length])\n            cube([blade_width, 1, blade_length], center=true);\n    }\n}\n\n// Create the chisel\nchisel();",
    "renders": true
  },
  {
    "tool": "file",
    "openscad_code": "// OpenSCAD File Tool - Realistic Medium Complexity\n// A hand file with ergonomic handle and proper teeth pattern\n\n$fn = 50;\n\n// File dimensions (mm)\nfile_length = 150;\nhandle_length = 60;\nblade_width = 20;\nblade_thickness = 4;\ntang_length = 35;\n\n// Colors\nhandle_color = \"BurlyWood\";\nmetal_color = \"Silver\";\n\n// Main assembly\nmodule file_tool() {\n    union() {\n        // Handle assembly\n        translate([0, 0, 0]) handle();\n        \n        // Tang (hidden part inside handle)\n        translate([handle_length - tang_length, 0, 0]) tang();\n        \n        // File blade\n        translate([handle_length, 0, 0]) blade();\n        \n        // Tip detail\n        translate([handle_length + file_length - 5, 0, 0]) tip();\n    }\n}\n\n// Ergonomic handle with grip pattern\nmodule handle() {\n    color(handle_color) {\n        difference() {\n            // Main handle body\n            rotate([0, 90, 0]) cylinder(h = handle_length, d1 = 28, d2 = 22, center = false);\n            \n            // Grip grooves\n            for(i = [5:8:handle_length-10]) {\n                translate([i, 0, 0]) rotate([0, 90, 0]) \n                    cylinder(h = 4, d = 24, center = true);\n            }\n        }\n        \n        // End cap detail\n        translate([0, 0, 0]) rotate([0, 90, 0]) \n            cylinder(h = 5, d = 30, center = false);\n    }\n}\n\n// Tang (tapered end that goes into handle)\nmodule tang() {\n    color(metal_color) {\n        difference() {\n            // Main tang body\n            cube([tang_length, 12, 6], center = true);\n            \n            // Rounded corners\n            translate([tang_length/2, 6, 3]) sphere(d = 6);\n            translate([tang_length/2, -6, 3]) sphere(d = 6);\n            translate([tang_length/2, 6, -3]) sphere(d = 6);\n            translate([tang_length/2, -6, -3]) sphere(d = 6);\n        }\n    }\n}\n\n// File blade with teeth pattern\nmodule blade() {\n    color(metal_color) {\n        difference() {\n            // Main blade body\n            cube([file_length, blade_width, blade_thickness], center = true);\n            \n            // Tapered edges\n            translate([0, blade_width/2, 0]) \n                cube([file_length, 2, blade_thickness], center = true);\n            translate([0, -blade_width/2, 0]) \n                cube([file_length, 2, blade_thickness], center = true);\n            \n            // Teeth pattern - single cut file\n            for(i = [5:3:file_length-10]) {\n                // Top teeth\n                translate([i, blade_width/2 - 1, blade_thickness/2]) \n                    cube([0.5, blade_width - 2, 0.3]);\n                \n                // Bottom teeth\n                translate([i, blade_width/2 - 1, -blade_thickness/2 + 0.3]) \n                    cube([0.5, blade_width - 2, 0.3]);\n            }\n            \n            // Safe edges (smooth sides)\n            translate([0, blade_width/2 - 1, 0]) \n                cube([file_length, 2, blade_thickness + 0.1], center = true);\n            translate([0, -blade_width/2 + 1, 0]) \n                cube([file_length, 2, blade_thickness + 0.1], center = true);\n        }\n    }\n}\n\n// Rounded tip\nmodule tip() {\n    color(metal_color) {\n        translate([-2.5, 0, 0]) \n            scale([1, 0.8, 0.8]) sphere(d = blade_width);\n    }\n}\n\n// Render the file\nfile_tool();",
    "renders": true
  },
  {
    "tool": "drill",
    "openscad_code": "// Realistic Hand-Held Electric Drill - Medium Complexity\n// Overall length ~95 mm, printable without supports\n\n$fn = 50;\n\n// Main colors\nhandle_col = \"DarkSlateGray\";\nbody_col   = \"FireBrick\";\nmetal_col  = \"Silver\";\n\n// Overall scale for 3D printing\nscale = 0.8;\n\nmodule drill_assembly() {\n    scale([scale,scale,scale]) {\n        // Handle with ergonomic grip\n        color(handle_col) {\n            translate([0,0,0])\n                rotate([0,90,0])\n                    cylinder(h = 30, d1 = 24, d2 = 28, center = true);\n\n            // Rubber grip rings\n            for(i = [-12:6:12]) {\n                translate([i,0,0])\n                    rotate([0,90,0])\n                        cylinder(h = 4, d = 30, center = true);\n            }\n        }\n\n        // Main motor body\n        color(body_col) {\n            translate([30,0,0])\n                rotate([0,90,0])\n                    cylinder(h = 45, d = 28);\n        }\n\n        // Chuck collar\n        color(metal_col) {\n            translate([52,0,0])\n                rotate([0,90,0])\n                    cylinder(h = 8, d = 22);\n\n            // Chuck jaws (simplified as rings)\n            for(i = [0:2.5:5]) {\n                translate([56+i,0,0])\n                    rotate([0,90,0])\n                        cylinder(h = 2, d = 12 - i*1.2);\n            }\n        }\n\n        // Trigger guard\n        color(handle_col) {\n            difference() {\n                translate([15,-12,0])\n                    cube([16,24,20], center = true);\n                translate([15,-12,0])\n                    cube([12,20,16], center = true);\n            }\n        }\n\n        // Trigger\n        color(\"Black\") {\n            translate([15,-10,5])\n                cube([10,4,8], center = true);\n        }\n\n        // Forward/reverse slider\n        color(\"Black\") {\n            translate([15,10,5])\n                cube([8,3,4], center = true);\n        }\n\n        // Side handle mount ring\n        color(metal_col) {\n            translate([35,0,-15])\n                rotate([90,0,0])\n                    cylinder(h = 8, d = 16);\n        }\n\n        // Ventilation slots\n        color(body_col) {\n            for(i = [1:3:10]) {\n                translate([28+i*2,0,12])\n                    cube([1.5,26,4], center = true);\n            }\n        }\n\n        // Power cable\n        color(\"Black\") {\n            translate([-15,0,0])\n                rotate([0,90,0])\n                    cylinder(h = 25, d = 5);\n        }\n    }\n}\n\ndrill_assembly();",
    "renders": true
  },
  {
    "tool": "level",
    "openscad_code": "// Realistic 3D-printable spirit level\n// Overall length: 80 mm, height: 35 mm, thickness: 14 mm\n\n$fn = 36;\n\nmodule main_body() {\n    // Extruded aluminum channel profile\n    difference() {\n        // Outer block\n        translate([-40, -7, 0])\n            cube([80, 14, 35], center = false);\n\n        // Center cavity\n        translate([-38, -5, 2])\n            cube([76, 10, 31], center = false);\n\n        // Top viewing window\n        translate([-36, -6, 28])\n            cube([72, 12, 5], center = false);\n    }\n}\n\nmodule vial_housing() {\n    // Vertical vial (plumb)\n    color([0.9,0.9,0.9])\n    difference() {\n        translate([0, 0, 18])\n            cube([12, 9, 12], center = true);\n        translate([0, 0, 18])\n            cylinder(h = 10, r = 4.5, center = true);\n    }\n\n    // Horizontal vial\n    color([0.9,0.9,0.9])\n    difference() {\n        translate([-25, 0, 18])\n            cube([12, 9, 12], center = true);\n        translate([-25, 0, 18])\n            rotate([0,90,0])\n                cylinder(h = 10, r = 4.5, center = true);\n    }\n\n    // 45-degree vial\n    color([0.9,0.9,0.9])\n    difference() {\n        translate([25, 0, 18])\n            cube([12, 9, 12], center = true);\n        translate([25, 0, 18])\n            rotate([0,45,90])\n                cylinder(h = 10, r = 4.5, center = true);\n    }\n}\n\nmodule vial_fill() {\n    // Liquid fills (yellowish green)\n    color([0.5,0.7,0.2,0.6])\n    union() {\n        // Vertical vial fill\n        translate([0, 0, 18])\n            sphere(r = 4.4);\n\n        // Horizontal vial fill\n        translate([-25, 0, 18])\n            rotate([0,90,0])\n                sphere(r = 4.4);\n\n        // 45-degree vial fill\n        translate([25, 0, 18])\n            rotate([0,45,90])\n                sphere(r = 4.4);\n    }\n\n    // Bubbles (white)\n    color(\"white\")\n    union() {\n        // Vertical bubble\n        translate([0, 0, 20])\n            sphere(r = 1.2);\n\n        // Horizontal bubble\n        translate([-25, 0, 20])\n            rotate([0,90,0])\n                sphere(r = 1.2);\n\n        // 45-degree bubble\n        translate([25, 0, 20])\n            rotate([0,45,90])\n                sphere(r = 1.2);\n    }\n}\n\nmodule measurement_marks() {\n    // Raised graduation marks\n    for (i = [-36:6:36]) {\n        if (i != 0) {\n            translate([i, -6.5, 1])\n                cube([0.5, 1, 0.5], center = true);\n        }\n    }\n\n    // Center zero mark\n    translate([0, -6.5, 1.5])\n        cube([1, 1.5, 1], center = true);\n}\n\nmodule end_caps() {\n    // Left end cap\n    color([0.2,0.2,0.2])\n    translate([-40, 0, 0])\n        cube([2, 14, 35], center = false);\n\n    // Right end cap\n    color([0.2,0.2,0.2])\n    translate([38, 0, 0])\n        cube([2, 14, 35], center = false);\n}\n\nmodule grip_pads() {\n    // Rubber grip pattern\n    color([0.1,0.1,0.1])\n    for (x = [-30:10:30]) {\n        translate([x, 7.5, 10])\n            cube([8, 1, 15], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    color([0.7,0.75,0.8]) main_body();\n    vial_housing();\n    vial_fill();\n    color([0.6,0.6,0.6]) measurement_marks();\n    end_caps();\n    grip_pads();\n}",
    "renders": true
  },
  {
    "tool": "square",
    "openscad_code": "// Square Tool - Engineer Combination Square (realistic style, medium complexity)\n// Features ruler blade, anodized head, level vial, knurled grip, scribe pin\n\n$fn = 36;  // Smoother curves for realism\n\n// Overall dimensions\nblade_len = 75;\nblade_w = 19;\nblade_thick = 1.6;\nhead_size = 30;\nhead_thick = 20;\ngrip_d = 12;\ngrip_h = 18;\n\nmodule ruler_blade() {\n    color(\"silver\")\n    difference() {\n        // Main blade body\n        translate([-blade_len/2, -blade_w/2, -blade_thick/2])\n            cube([blade_len, blade_w, blade_thick]);\n        \n        // Millimeter scale marks\n        for (i = [1:blade_len-1]) {\n            h = (i % 10 == 0) ? 3 : 1.5;\n            translate([-blade_len/2 + i, -blade_w/2 + 1, -blade_thick/2 - 0.01])\n                cube([0.3, h, blade_thick + 0.02]);\n        }\n        \n        // Number recesses (every 10 mm)\n        for (i = [0:10:blade_len-1]) {\n            translate([-blade_len/2 + i + 2, -blade_w/2 + 5, -blade_thick/2 - 0.01])\n                cube([3, 3, blade_thick + 0.02]);\n        }\n    }\n}\n\nmodule anodized_head() {\n    color([0.1, 0.1, 0.3])  // Dark anodized blue\n    difference() {\n        // Main head block\n        translate([-head_size/2, -head_size/2, -head_thick/2])\n            cube([head_size, head_size, head_thick]);\n        \n        // Blade slot\n        translate([-blade_len/2 - 1, -blade_w/2 - 0.5, -blade_thick/2 - 0.5])\n            cube([blade_len + 2, blade_w + 1, blade_thick + 1]);\n        \n        // Fillets on edges\n        for (x = [-head_size/2 + 2, head_size/2 - 2])\n            for (y = [-head_size/2 + 2, head_size/2 - 2])\n                translate([x, y, -head_thick/2])\n                    cylinder(r=2, h=head_thick);\n    }\n    \n    // Knurled grip cylinder\n    color(\"silver\")\n    rotate([90, 0, 0])\n        translate([0, 0, head_size/2 + grip_h/2])\n        difference() {\n            cylinder(d=grip_d, h=grip_h, $fn=60);\n            // Knurling grooves\n            for (i = [0:30]) {\n                rotate([0, 0, i*12])\n                    translate([-grip_d/2 - 0.1, -0.5, -0.5])\n                        cube([grip_d + 0.2, 1, grip_h + 1]);\n            }\n        }\n    \n    // Level vial\n    color([0.8, 0.9, 1, 0.6])  // Transparent blue\n    translate([0, 0, head_thick/2 - 4])\n        rotate([90, 0, 0])\n            cylinder(d=6, h=head_size - 4, $fn=32);\n    \n    // Scribe pin hole\n    translate([head_size/2 - 4, 0, 0])\n        rotate([0, 90, 0])\n            cylinder(d=2.5, h=10, $fn=20);\n}\n\n// Assembly\nruler_blade();\ntranslate([0, 0, 0])\n    anodized_head();",
    "renders": true
  },
  {
    "tool": "axe",
    "openscad_code": "// Realistic 3D Printable Axe - Medium Complexity\n// Overall length ~85 mm, suitable for FDM printing\n\n// Color constants\nblade_col = \"#C0C0C0\";\nhandle_col = \"#8B4513\";\ngrip_col = \"#2F4F2F\";\nrivet_col = \"#FFD700\";\n\n// Main assembly\nmodule axe() {\n    union() {\n        // Axe head assembly\n        translate([0, 0, 5]) axe_head();\n        \n        // Handle assembly\n        translate([0, 0, -35]) handle();\n    }\n}\n\n// Axe head with blade and poll\nmodule axe_head() {\n    color(blade_col) {\n        union() {\n            // Main head body\n            difference() {\n                // Tapered head shape\n                hull() {\n                    translate([0, 0, 0]) cube([6, 20, 15], center=true);\n                    translate([0, 0, 8]) cube([3, 18, 12], center=true);\n                }\n                \n                // Eye hole for handle\n                translate([0, 0, -2])\n                    rotate([90, 0, 0])\n                        cylinder(h=20, d=8, $fn=32);\n            }\n            \n            // Cutting edge\n            translate([0, 12, 2])\n                rotate([0, 10, 0])\n                    cube([0.5, 8, 10], center=true);\n            \n            // Blade bevel\n            difference() {\n                translate([0, 12, 2])\n                    cube([2, 8, 10], center=true);\n                \n                translate([2, 12, 2])\n                    rotate([0, -15, 0])\n                        cube([4, 9, 11], center=true);\n            }\n            \n            // Poll (back of axe)\n            difference() {\n                translate([0, -12, 2])\n                    sphere(d=8);\n                \n                // Flatten poll slightly\n                translate([0, -12, 2])\n                    cube([6, 4, 8], center=true);\n            }\n        }\n    }\n    \n    // Blade edge highlight\n    color(\"#E8E8E8\")\n        translate([0, 16.5, 2])\n            cube([0.3, 2, 8], center=true);\n}\n\n// Handle with grip and wedges\nmodule handle() {\n    // Main handle shaft\n    color(handle_col) {\n        difference() {\n            // Tapered handle\n            hull() {\n                translate([0, 0, 0])\n                    cylinder(h=40, d1=8, d2=6, $fn=32);\n                translate([0, 0, -30])\n                    cylinder(h=30, d1=6, d2=5, $fn=32);\n            }\n            \n            // Top chamfer\n            translate([0, 0, 2])\n                cylinder(h=10, d=7, $fn=32);\n        }\n    }\n    \n    // Grip texture\n    color(grip_col) {\n        for(i = [-25:5:-5]) {\n            translate([0, 0, i])\n                difference() {\n                    cylinder(h=2.5, d=6.2, $fn=32);\n                    cylinder(h=3, d=5.8, $fn=32);\n                }\n        }\n    }\n    \n    // Wedge at top\n    color(handle_col) {\n        translate([0, 0, 5])\n            rotate([0, 90, 0])\n                wedge();\n    }\n    \n    // Rivet detail\n    color(rivet_col) {\n        for(i = [-20:10:-10]) {\n            translate([2.5, 0, i])\n                sphere(d=1.5);\n            translate([-2.5, 0, i])\n                sphere(d=1.5);\n        }\n    }\n}\n\n// Wedge for securing head\nmodule wedge() {\n    difference() {\n        cube([3, 8, 4], center=true);\n        translate([0, 0, 1])\n            cube([2.5, 7, 4], center=true);\n    }\n}\n\n// Render the complete axe\naxe();",
    "renders": true
  },
  {
    "tool": "mallet",
    "openscad_code": "// Realistic 3D-printable mallet\n// Overall length â‰ˆ 100 mm, head 50 mm\n\n$fn = 36;  // Smooth curves for realistic look\n\n// Colors\ncolor_handle = \"SaddleBrown\";\ncolor_head   = \"DarkGray\";\ncolor_strike = \"LightGray\";\n\nmodule mallet() {\n    /* ---------- Handle ---------- */\n    union() {\n        color(color_handle) {\n            // Main shaft\n            translate([0, 0, 25])\n                cylinder(h = 70, d1 = 12, d2 = 10);\n\n            // Palm swell\n            translate([0, 0, 90])\n                sphere(d = 18);\n\n            // Grip rings\n            for (z = [35 : 7 : 75])\n                translate([0, 0, z])\n                    cylinder(h = 2.5, d = 13.5);\n        }\n\n        /* ---------- Head ---------- */\n        color(color_head) {\n            translate([0, 0, 17]) {\n                // Tapered body\n                cylinder(h = 14, d1 = 45, d2 = 40);\n\n                // Chamfer edges\n                for (z = [14, 0]) {\n                    translate([0, 0, z])\n                        cylinder(h = 2, d1 = (z ? 45 : 40) - 4, d2 = (z ? 45 : 40));\n                }\n            }\n        }\n\n        /* ---------- Strike faces ---------- */\n        color(color_strike) {\n            // Top face\n            translate([0, 0, 31])\n                cylinder(h = 3, d = 42);\n\n            // Bottom face\n            translate([0, 0, 14])\n                cylinder(h = 3, d = 42);\n        }\n    }\n}\n\n// Render the mallet upright for printing\nrotate([0, 90, 0])\n    mallet();",
    "renders": true
  }
]