[
  {
    "plant": "aloe",
    "openscad_code": "// Realistic Aloe Plant - Medium Complexity\n// 3D printable with 2mm walls and no overhangs\n\n$fn = 32;\n\n// Main parameters\npot_height = 40;\npot_radius = 30;\nplant_height = 120;\nbase_width = 5; // wall thickness for 3D printing\n\nmodule pot() {\n    // Outer pot\n    difference() {\n        cylinder(h=pot_height, r=pot_radius, center=false);\n        translate([0, 0, 2]) // Base thickness\n            cylinder(h=pot_height, r=pot_radius-3, center=false);\n    }\n    \n    // Drainage hole\n    translate([0, 0, 2])\n        cylinder(h=3, r=5, center=false);\n    \n    // Soil surface\n    translate([0, 0, pot_height-5])\n        cylinder(h=5, r=pot_radius-3, center=false);\n}\n\nmodule leaf(height, width, thickness, angle) {\n    // Tapered leaf shape using scaled cylinders\n    union() {\n        // Main leaf body\n        translate([0, 0, height/2])\n            scale([width/2, thickness/2, height/2])\n                sphere(r=1);\n        \n        // Leaf tip - triangular\n        translate([0, 0, height])\n            rotate([90, 0, 0])\n                cylinder(h=width*0.7, r1=width/2, r2=0, center=false);\n    }\n}\n\nmodule aloe_rosette() {\n    // Central leaves - largest\n    for(i=[0:5]) {\n        angle = i * 60;\n        rotate([0, 0, angle])\n            translate([0, 0, pot_height])\n                rotate([10 + i*2, 0, 0])\n                    leaf(plant_height*0.8, 20, 4, angle);\n    }\n    \n    // Middle ring leaves\n    for(i=[0:8]) {\n        angle = i * 45;\n        rotate([0, 0, angle])\n            translate([0, 0, pot_height+5])\n                rotate([15 + i*1.5, 0, 0])\n                    leaf(plant_height*0.6, 15, 3, angle);\n    }\n    \n    // Outer small leaves\n    for(i=[0:12]) {\n        angle = i * 30;\n        rotate([0, 0, angle])\n            translate([0, 0, pot_height+8])\n                rotate([20 + i*1, 0, 0])\n                    leaf(plant_height*0.4, 10, 2, angle);\n    }\n    \n    // Baby shoots\n    translate([15, 15, pot_height+3])\n        rotate([0, 0, 45])\n            leaf(plant_height*0.3, 8, 2, 45);\n    \n    translate([-15, -10, pot_height+3])\n        rotate([0, 0, -30])\n            leaf(plant_height*0.25, 7, 2, -30);\n}\n\nmodule aloe_texture() {\n    // Leaf surface details - subtle ridges\n    for(leaf=[0:20]) {\n        rotate([0, 0, leaf*18])\n            translate([0, 0, pot_height+leaf*0.5])\n                rotate([5+leaf, 0, 0])\n                    cylinder(h=plant_height*0.7, r=0.5, center=false);\n    }\n}\n\n// Assembly\nunion() {\n    pot();\n    aloe_rosette();\n}\n\n// Base for printing\ntranslate([0, 0, -2])\n    cube([pot_radius*2.5, pot_radius*2.5, 2], center=true);",
    "renders": true
  },
  {
    "plant": "fern",
    "openscad_code": "// Realistic Fern Plant - Medium Complexity\n// 3D printable fern with proper proportions and structural elements\n\nmodule stem_segment(h, r, taper=1) {\n    // Create a tapered stem segment\n    cylinder(h=h, r1=r, r2=r*taper, $fn=8);\n}\n\nmodule leaf_frond(length, width, angle, curl=0) {\n    // Create a single leaf frond with realistic shape\n    translate([0, 0, 0]) {\n        rotate([0, 0, angle]) {\n            // Main leaf blade\n            for(i = [0:5:length]) {\n                translate([i*0.8, 0, 0]) {\n                    rotate([0, curl*i/length*30, 0]) {\n                        scale([1, (1-i/length)*0.8, 0.1]) {\n                            sphere(d=width, $fn=6);\n                        }\n                    }\n                }\n            }\n            // Leaf midrib\n            color(\"darkgreen\") \n            cylinder(h=length, r=0.5, $fn=6);\n        }\n    }\n}\n\nmodule leaflet_pair(length, angle) {\n    // Create a pair of leaflets\n    translate([0, 0, 0]) {\n        rotate([0, 0, angle]) {\n            // Left leaflet\n            translate([-length/2, 0, 0]) {\n                rotate([0, 0, -45]) {\n                    leaf_frond(length*0.7, length*0.15, 0, 10);\n                }\n            }\n            // Right leaflet\n            translate([length/2, 0, 0]) {\n                rotate([0, 0, 45]) {\n                    leaf_frond(length*0.7, length*0.15, 0, -10);\n                }\n            }\n        }\n    }\n}\n\nmodule fern_frond(base_length, levels, base_angle) {\n    // Create a complete fern frond with multiple leaflets\n    translate([0, 0, 0]) {\n        rotate([0, 0, base_angle]) {\n            // Main stem of frond\n            color(\"saddle\") \n            stem_segment(base_length, 1.5, 0.7);\n            \n            // Progressive leaflets\n            for(i = [1:levels]) {\n                translate([i*base_length/levels, 0, 0]) {\n                    scale([1 - i*0.1, 1 - i*0.1, 1]) {\n                        leaflet_pair(base_length*0.4, 0);\n                    }\n                }\n            }\n            \n            // Tip leaflet\n            translate([base_length, 0, 0]) {\n                scale([0.3, 0.3, 1]) {\n                    leaf_frond(base_length*0.3, base_length*0.08, 0);\n                }\n            }\n        }\n    }\n}\n\nmodule rhizome() {\n    // Create the main rhizome/root structure\n    color(\"saddle\") {\n        // Main horizontal rhizome\n        translate([0, 0, -5]) {\n            rotate([90, 0, 0]) {\n                cylinder(h=15, r=3, $fn=12);\n            }\n        }\n        \n        // Root hairs\n        for(i = [0:30:360]) {\n            rotate([0, 0, i]) {\n                translate([0, 0, -7]) {\n                    rotate([90, 0, 0]) {\n                        cylinder(h=8, r=0.5, $fn=6);\n                    }\n                }\n            }\n        }\n    }\n}\n\nmodule fiddlehead(radius) {\n    // Create a young fiddlehead (crosier)\n    color(\"darkgreen\") {\n        rotate_extrude(angle=180, $fn=32) {\n            translate([radius, 0, 0]) {\n                circle(r=radius/2, $fn=16);\n            }\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    // Base rhizome\n    rhizome();\n    \n    // Central cluster of fronds\n    for(i = [0:45:315]) {\n        rotate([0, 0, i]) {\n            translate([0, 0, 0]) {\n                fern_frond(35, 6, 75 - i*0.1);\n            }\n        }\n    }\n    \n    // Outer ring of larger fronds\n    for(i = [0:60:300]) {\n        rotate([0, 0, i]) {\n            translate([5*cos(i), 5*sin(i), 0]) {\n                fern_frond(45, 8, 60 - i*0.05);\n            }\n        }\n    }\n    \n    // Young fiddleheads emerging\n    translate([8, 0, 3]) {\n        rotate([0, 0, 30]) {\n            fiddlehead(4);\n        }\n    }\n    \n    translate([-8, 0, 3]) {\n        rotate([0, 0, -30]) {\n            fiddlehead(3.5);\n        }\n    }\n}",
    "renders": true
  },
  {
    "plant": "ivy",
    "openscad_code": "// Ivy Plant - Realistic Style, Medium Complexity\n// Overall dimensions ~100mm tall x 80mm wide x 80mm deep\n\nmodule stem_segment(length, radius) {\n    // Create a single stem segment with slight taper\n    cylinder(h=length, r1=radius, r2=radius*0.8, $fn=8);\n}\n\nmodule leaf() {\n    // Heart-shaped ivy leaf with thickness\n    union() {\n        // Main leaf body\n        scale([1, 1.2, 1]) \n        difference() {\n            sphere(r=8, $fn=16);\n            translate([0, 0, -6])\n            cube([20, 20, 20], center=true);\n        }\n        \n        // Leaf thickness\n        translate([0, 0, -1])\n        scale([0.8, 1, 0.2])\n        sphere(r=8, $fn=16);\n        \n        // Leaf veins\n        for(i=[-1:1]) {\n            rotate([0, 0, i*30])\n            translate([0, 0, 0.5])\n            scale([0.1, 0.7, 0.1])\n            cube([1, 10, 1], center=true);\n        }\n    }\n}\n\nmodule vine(length, segments) {\n    // Create a climbing vine with alternating leaves\n    for(i=[0:segments-1]) {\n        translate([0, 0, i*length/segments])\n        rotate([0, 0, i*45])\n        stem_segment(length/segments, 2);\n        \n        // Add leaves every other segment\n        if(i%2==0) {\n            translate([0, 0, i*length/segments])\n            rotate([0, 90, 0])\n            translate([0, 8, 0])\n            rotate([0, 0, 30])\n            leaf();\n            \n            // Opposite leaf\n            translate([0, 0, i*length/segments])\n            rotate([0, -90, 0])\n            translate([0, -8, 0])\n            rotate([0, 0, -30])\n            mirror([0, 1, 0])\n            leaf();\n        }\n    }\n}\n\nmodule planter() {\n    // Simple pot for the ivy base\n    difference() {\n        // Outer pot\n        cylinder(h=20, r1=25, r2=20, $fn=32);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        cylinder(h=19, r1=23, r2=18, $fn=32);\n    }\n}\n\nmodule soil() {\n    // Soil surface in planter\n    translate([0, 0, 19])\n    scale([1, 1, 0.3])\n    sphere(r=25, $fn=32);\n}\n\n// Main assembly\nunion() {\n    // Planter base\n    planter();\n    soil();\n    \n    // Main vine growing up\n    translate([0, 0, 20])\n    rotate([0, 0, 15])\n    vine(60, 12);\n    \n    // Side branch 1\n    translate([5, 5, 35])\n    rotate([30, 0, 45])\n    vine(40, 8);\n    \n    // Side branch 2\n    translate([-5, -3, 45])\n    rotate([-20, 0, -30])\n    vine(35, 6);\n    \n    // Top curling branch\n    translate([0, 10, 75])\n    rotate([45, 0, 0])\n    rotate([0, 0, 90])\n    vine(25, 4);\n}",
    "renders": true
  },
  {
    "plant": "jade",
    "openscad_code": "// Jade Plant - OpenSCAD Code\n// Realistic style, medium complexity\n\n$fn = 24;\n\n// Main plant module\nmodule jade_plant() {\n    // Pot base\n    translate([0, 0, 0])\n        pot();\n    \n    // Main trunk\n    translate([0, 0, 15])\n        trunk();\n    \n    // Branches with leaves\n    translate([0, 0, 25])\n        branches();\n}\n\n// Pot module\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 20, r1 = 25, r2 = 20);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 18, r1 = 23, r2 = 18);\n        \n        // Drainage hole\n        translate([0, 0, -1])\n            cylinder(h = 3, r = 3);\n    }\n    \n    // Soil surface\n    translate([0, 0, 19])\n        cylinder(h = 1, r = 22.5);\n}\n\n// Trunk module\nmodule trunk() {\n    // Main stem\n    cylinder(h = 15, r1 = 4, r2 = 6);\n    \n    // Textured segments\n    for(i = [0:2:13]) {\n        translate([0, 0, i])\n            rotate([0, 0, i * 30])\n                cylinder(h = 2, r1 = 5.5, r2 = 5.5);\n    }\n}\n\n// Branches module\nmodule branches() {\n    // Main branch 1\n    translate([0, 0, 0])\n        rotate([0, 0, 0])\n            branch(30, 3);\n    \n    // Main branch 2\n    translate([0, 0, 0])\n        rotate([0, 0, 120])\n            branch(25, 2.5);\n    \n    // Main branch 3\n    translate([0, 0, 0])\n        rotate([0, 0, 240])\n            branch(28, 2.8);\n}\n\n// Branch with leaves\nmodule branch(length, thickness) {\n    // Stem\n    translate([0, 0, 0])\n        rotate([30, 0, 0])\n            cylinder(h = length, r1 = thickness, r2 = thickness * 0.8);\n    \n    // Leaves along branch\n    for(i = [5:5:length-5]) {\n        // Left leaves\n        translate([0, 0, i])\n            rotate([30 + i * 2, 0, 45])\n                leaf(thickness * 2);\n        \n        // Right leaves\n        translate([0, 0, i])\n            rotate([30 + i * 2, 0, -45])\n                leaf(thickness * 2);\n    }\n    \n    // Terminal leaf cluster\n    translate([0, 0, length])\n        rotate([45, 0, 0])\n            leaf_cluster(thickness * 3);\n}\n\n// Single jade leaf\nmodule leaf(size) {\n    // Main leaf body\n    scale([1, 0.5, 0.2])\n        sphere(r = size);\n    \n    // Leaf tip\n    translate([size * 0.8, 0, 0])\n        rotate([0, 90, 0])\n            cylinder(h = size * 0.3, r1 = size * 0.3, r2 = 0);\n}\n\n// Leaf cluster\nmodule leaf_cluster(size) {\n    // Central leaves\n    leaf(size);\n    \n    // Surrounding leaves\n    for(angle = [0:60:300]) {\n        rotate([0, 0, angle])\n            translate([size * 0.5, 0, 0])\n                rotate([0, 30, 0])\n                    leaf(size * 0.8);\n    }\n}\n\n// Generate the plant\njade_plant();",
    "renders": true
  },
  {
    "plant": "pothos",
    "openscad_code": "// Pothos Plant - Realistic Style, Medium Complexity\n// Size: ~100mm tall, 3D printable with 2mm walls\n\n$fn = 32;  // Smooth curves for printing\n\n// Main parameters\npot_height = 40;\npot_diameter = 35;\nstem_thickness = 3;\nleaf_thickness = 1.5;\nwall_thickness = 2;\n\n// Pot module\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = pot_height, d1 = pot_diameter, d2 = pot_diameter * 0.8, center = false);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n        cylinder(h = pot_height - wall_thickness, d1 = pot_diameter - wall_thickness*2, d2 = (pot_diameter * 0.8) - wall_thickness*2, center = false);\n        \n        // Drainage hole\n        translate([0, 0, -1])\n        cylinder(h = 5, d = 8, center = false);\n    }\n    \n    // Soil surface\n    translate([0, 0, pot_height - 2])\n    cylinder(h = 2, d = pot_diameter - 4, center = false);\n}\n\n// Leaf module - heart-shaped\nmodule leaf(size = 25) {\n    scale([1, 0.8, 1])\n    difference() {\n        // Main leaf shape\n        union() {\n            sphere(d = size);\n            translate([0, -size/2, 0])\n            sphere(d = size * 0.8);\n        }\n        \n        // Stem attachment point\n        translate([0, -size/2, -leaf_thickness/2])\n        cube([size*0.3, size*0.3, leaf_thickness*2], center = true);\n        \n        // Vein details (subtractive for realism)\n        translate([0, 0, -leaf_thickness/2])\n        for(i = [-0.3, 0, 0.3]) {\n            rotate([0, 0, i * 30])\n            translate([0, 0, -0.5])\n            cube([leaf_thickness*0.5, size*0.7, leaf_thickness], center = true);\n        }\n    }\n}\n\n// Stem segment with node\nmodule stem_segment(length = 20, angle = 0) {\n    color(\"darkgreen\")\n    union() {\n        // Main stem\n        rotate([0, 90, 0])\n        cylinder(h = length, d = stem_thickness, center = false);\n        \n        // Node (where leaves/roots emerge)\n        translate([length/2, 0, 0])\n        sphere(d = stem_thickness * 1.5);\n    }\n}\n\n// Main plant structure\nmodule pothos_plant() {\n    // Pot at base\n    translate([0, 0, 0])\n    pot();\n    \n    // Main stem emerging from soil\n    translate([0, 0, pot_height])\n    rotate([5, 0, 0])\n    stem_segment(30, 0);\n    \n    // First level branches\n    for(i = [0:45:360]) {\n        rotate([0, 0, i])\n        translate([15, 0, pot_height + 15])\n        rotate([0, 0, 30])\n        stem_segment(25, 0);\n        \n        // Leaves on first level\n        translate([25, 0, pot_height + 15])\n        rotate([0, 0, i])\n        rotate([0, -30, -45])\n        leaf(20);\n        \n        translate([25, 0, pot_height + 15])\n        rotate([0, 0, i + 180])\n        rotate([0, 30, 135])\n        leaf(18);\n    }\n    \n    // Second level - trailing vines\n    for(i = [0:60:360]) {\n        rotate([0, 0, i])\n        translate([0, 0, pot_height + 5])\n        rotate([30, 0, 0])\n        stem_segment(40, 0);\n        \n        // Leaves along vine\n        for(j = [0:15:35]) {\n            translate([j, 0, pot_height + 5 + j*0.5])\n            rotate([0, 0, j*2])\n            rotate([0, -20, 0])\n            leaf(15 - j/5);\n        }\n    }\n    \n    // Aerial roots\n    color(\"brown\")\n    for(i = [0:90:360]) {\n        rotate([0, 0, i])\n        translate([12, 0, pot_height + 20])\n        rotate([90, 0, 0])\n        cylinder(h = 15, d1 = 2, d2 = 1, center = false);\n    }\n}\n\n// Generate the plant\npothos_plant();",
    "renders": true
  },
  {
    "plant": "spiderplant",
    "openscad_code": "// Spider Plant - Chlorophytum comosum\n// Realistic style, medium complexity\n\n// Overall dimensions: ~120mm width x 80mm depth x 80mm height\n\nmodule pot() {\n    // Main pot body\n    difference() {\n        // Outer pot\n        cylinder(h = 25, d1 = 60, d2 = 55, $fn = 48);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 23, d1 = 56, d2 = 51, $fn = 48);\n    }\n    \n    // Drainage hole\n    translate([0, 0, 0])\n        cylinder(h = 2, d = 6, $fn = 16);\n    \n    // Rim detail\n    translate([0, 0, 25])\n        cylinder(h = 3, d1 = 62, d2 = 60, $fn = 48);\n}\n\nmodule soil_surface() {\n    // Top soil surface\n    translate([0, 0, 25])\n        cylinder(h = 2, d = 56, $fn = 48);\n}\n\nmodule leaf(length, width, height, angle, curl) {\n    // Individual leaf blade\n    translate([0, 0, height])\n    rotate([0, 0, angle])\n    rotate([curl, 0, 0])\n    scale([width, length, 1])\n    difference() {\n        sphere(d = 1);\n        translate([-0.5, -0.5, -0.5])\n            cube(1);\n    }\n}\n\nmodule leaf_cluster(x, y, z, count, start_angle) {\n    // Cluster of leaves at one growth point\n    translate([x, y, z])\n    for(i = [0:count-1]) {\n        leaf_length = rands(25, 45, 1)[0];\n        leaf_width = rands(2, 3.5, 1)[0];\n        leaf_angle = start_angle + i * (360/count) + rands(-10, 10, 1)[0];\n        leaf_curl = rands(-15, 5, 1)[0];\n        leaf(leaf_length, leaf_width, 0, leaf_angle, leaf_curl);\n    }\n}\n\nmodule stolon() {\n    // Flowering stem/stolon\n    translate([0, 20, 28])\n    rotate([90, 0, 0])\n    cylinder(h = 15, d1 = 3, d2 = 1.5, $fn = 12);\n    \n    // Baby plantlet at end\n    translate([0, 35, 28])\n    leaf_cluster(0, 0, 0, 4, 0);\n}\n\nmodule main_plant() {\n    // Central crown leaves\n    leaf_cluster(0, 0, 27, 8, 0);\n    \n    // Outer ring of longer leaves\n    leaf_cluster(0, 0, 27, 12, 15);\n    \n    // Random scattered leaves for natural look\n    for(i = [0:5]) {\n        random_x = rands(-10, 10, 1)[0];\n        random_y = rands(-10, 10, 1)[0];\n        leaf_cluster(random_x, random_y, 27, 3, rands(0, 360, 1)[0]);\n    }\n}\n\n// Assemble the complete plant\nunion() {\n    pot();\n    soil_surface();\n    main_plant();\n    \n    // Add 3 stolons with plantlets\n    for(i = [0:2]) {\n        rotate([0, 0, i * 120])\n        stolon();\n    }\n}",
    "renders": true
  },
  {
    "plant": "snakeplant",
    "openscad_code": "// Snake plant (Sansevieria) in realistic style\n// Overall height: 100 mm, pot diameter: 50 mm\n\nmodule pot() {\n    // Outer pot\n    difference() {\n        cylinder(h=25, r1=25, r2=22, $fn=60);\n        translate([0,0,2])\n            cylinder(h=23, r1=23, r2=20, $fn=60);\n    }\n    \n    // Soil surface\n    translate([0,0,23])\n        cylinder(h=2, r1=22, r2=22, $fn=60);\n}\n\nmodule leaf(height, width, thickness, lean, twist) {\n    // Base of leaf\n    translate([0,0,0])\n        cube([width, thickness, 2], center=true);\n    \n    // Tapered blade\n    for(i=[0:5:height]) {\n        h = i;\n        w = width * (1 - h/height * 0.7);\n        t = thickness * (1 - h/height * 0.5);\n        \n        translate([0,0,h])\n        rotate([0,0,twist * h/height])\n        rotate([lean,0,0])\n            cube([w, t, 5], center=true);\n    }\n}\n\nmodule snake_plant() {\n    pot();\n    \n    // Central large leaves\n    for(angle=[0:120:240]) {\n        rotate([0,0,angle])\n        translate([5,0,25])\n            leaf(height=60, width=12, thickness=2.5, lean=10, twist=5);\n    }\n    \n    // Medium leaves\n    for(angle=[60:120:300]) {\n        rotate([0,0,angle])\n        translate([8,0,25])\n            leaf(height=45, width=8, thickness=2, lean=15, twist=-8);\n    }\n    \n    // Small shoots\n    for(angle=[30:60:330]) {\n        rotate([0,0,angle])\n        translate([3,0,25])\n            leaf(height=30, width=5, thickness=1.5, lean=20, twist=3);\n    }\n    \n    // Curved outer leaves\n    rotate([0,0,-30])\n    translate([10,0,25])\n    rotate([0,10,0])\n        leaf(height=55, width=10, thickness=2, lean=-5, twist=12);\n        \n    rotate([0,0,150])\n    translate([10,0,25])\n    rotate([0,-10,0])\n        leaf(height=55, width=10, thickness=2, lean=-5, twist=-12);\n}\n\n// Render the complete plant\nsnake_plant();",
    "renders": true
  },
  {
    "plant": "monstera",
    "openscad_code": "// Monstera Plant - Realistic Style\n// 3D printable with 2mm walls, no overhangs\n\n// Global settings\n$fn = 36;\n\n// Pot dimensions\npot_height = 40;\npot_radius = 25;\npot_thickness = 2;\n\n// Stem dimensions\nstem_height = 80;\nstem_radius = 4;\n\n// Leaf dimensions\nleaf_length = 45;\nleaf_width = 35;\nleaf_thickness = 2;\n\n// Create the entire plant\nmodule monstera_plant() {\n    union() {\n        // Pot\n        translate([0, 0, pot_height/2])\n            pot();\n        \n        // Soil surface\n        translate([0, 0, pot_height])\n            soil();\n        \n        // Main stem\n        translate([0, 0, pot_height])\n            stem();\n        \n        // Leaves\n        translate([0, 0, pot_height + stem_height*0.9])\n            rotate([0, 0, 45])\n            leaf(0);\n            \n        translate([0, 0, pot_height + stem_height*0.7])\n            rotate([0, 0, -30])\n            leaf(15);\n            \n        translate([0, 0, pot_height + stem_height*0.5])\n            rotate([0, 0, 75])\n            leaf(-10);\n            \n        translate([0, 0, pot_height + stem_height*0.3])\n            rotate([0, 0, -60])\n            leaf(5);\n    }\n}\n\n// Pot with drainage hole\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = pot_height, r = pot_radius, center = true);\n        \n        // Inner hollow\n        translate([0, 0, -pot_thickness/2])\n            cylinder(h = pot_height + 1, r = pot_radius - pot_thickness, center = true);\n        \n        // Drainage hole\n        translate([0, 0, pot_height/2 - pot_thickness])\n            cylinder(h = pot_thickness + 1, r = 5, center = true);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, -1])\n        cylinder(h = 2, r = pot_radius - pot_thickness, center = true);\n}\n\n// Main stem\nmodule stem() {\n    for(i = [1:8]) {\n        translate([0, 0, i * stem_height/8])\n            rotate([0, 0, i * 15])\n            cylinder(h = stem_height/8, r = stem_radius - i*0.2, center = false);\n    }\n}\n\n// Individual leaf with fenestrations\nmodule leaf(angle_offset) {\n    // Main leaf body\n    translate([0, 0, 0])\n        rotate([angle_offset, 0, 0])\n        union() {\n            // Leaf blade\n            scale([1, 0.8, 1])\n                leaf_shape();\n            \n            // Petiole (leaf stem)\n            translate([0, -leaf_width/2 - 5, -leaf_thickness/2])\n                rotate([90, 0, 0])\n                cylinder(h = 15, r = 2, center = false);\n        }\n}\n\n// Leaf shape with fenestrations\nmodule leaf_shape() {\n    difference() {\n        // Main leaf body\n        hull() {\n            translate([0, 0, 0])\n                sphere(r = leaf_length/2);\n            translate([0, leaf_width/2, 0])\n                sphere(r = leaf_length/3);\n            translate([leaf_length/4, -leaf_width/4, 0])\n                sphere(r = leaf_length/4);\n            translate([-leaf_length/4, -leaf_width/4, 0])\n                sphere(r = leaf_length/4);\n        }\n        \n        // Central fenestration\n        translate([0, 5, 0])\n            rotate([0, 0, 30])\n            scale([1, 0.3, 1])\n            cylinder(h = leaf_thickness + 1, r = leaf_length/5, center = true);\n        \n        // Side fenestrations\n        translate([leaf_length/3, 0, 0])\n            rotate([0, 0, -20])\n            scale([0.8, 0.2, 1])\n            cylinder(h = leaf_thickness + 1, r = leaf_length/6, center = true);\n            \n        translate([-leaf_length/3, 0, 0])\n            rotate([0, 0, 20])\n            scale([0.8, 0.2, 1])\n            cylinder(h = leaf_thickness + 1, r = leaf_length/6, center = true);\n            \n        // Small holes\n        for(i = [1:3]) {\n            translate([leaf_length/4 * cos(i * 120), leaf_width/4 * sin(i * 120), 0])\n                sphere(r = 3);\n        }\n    }\n}\n\n// Generate the plant\nmonstera_plant();",
    "renders": true
  },
  {
    "plant": "dieffenbachia",
    "openscad_code": "// Dieffenbachia plant – medium complexity, realistic style\n// Overall height ~120 mm, printable as one piece\n\n$fn = 36;               // smooth curves\n\n// ---------- POT ----------\nmodule pot() {\n    difference() {\n        cylinder(h = 28, d1 = 50, d2 = 45, center = false);   // outer\n        translate([0, 0, 2])\n            cylinder(h = 26, d1 = 46, d2 = 41, center = false); // inner cavity\n    }\n}\n\n// ---------- STEM ----------\nmodule stem(h = 75, r = 4) {\n    // simple segmented cane-like stem\n    for(i = [0:8]) {\n        translate([0, 0, i*9])\n            cylinder(h = 9, r = r - i*0.15, center = false);\n    }\n}\n\n// ---------- SINGLE LEAF ----------\nmodule leaf(len = 35, wid = 18, ang = 0) {\n    // main blade\n    translate([0, 0, -len/2])\n        rotate([0, 90, 0])\n            scale([1, wid/len, 0.2])\n                sphere(d = len);\n\n    // petiole\n    rotate([0, 0, ang])\n        translate([0, 0, -len/2 - 8])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r = 2, center = false);\n}\n\n// ---------- LEAF CLUSTER ----------\nmodule leaf_cluster(base_h, base_r) {\n    // attach to top of stem\n    translate([0, 0, base_h])\n    rotate([0, 0, 45]) {\n        for(a = [0:120:359]) {\n            rotate([0, 0, a])\n                translate([base_r + 5, 0, 0])\n                    rotate([0, -30, 0])\n                        leaf(35 - a/10, 20 - a/20, a);\n        }\n    }\n}\n\n// ---------- ASSEMBLY ----------\nunion() {\n    pot();\n    translate([0, 0, 28])\n        stem();\n    translate([0, 0, 28 + 75])\n        leaf_cluster(0, 0);\n}",
    "renders": true
  },
  {
    "plant": "philodendron",
    "openscad_code": "$fn = 30;\n\n// Philodendron plant with medium complexity\n// Overall height: 100 mm, suitable for 3D printing\n\n// Base pot\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 25, r1 = 30, r2 = 25);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 23, r1 = 28, r2 = 23);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    color(\"saddlebrown\")\n    translate([0, 0, 24])\n        cylinder(h = 3, r1 = 28, r2 = 23);\n}\n\n// Stem segment\nmodule stem_segment(length, angle) {\n    rotate([0, 0, angle])\n        translate([0, 0, 2])\n            cylinder(h = length, r1 = 2.5, r2 = 2);\n}\n\n// Leaf blade with proper philodendron shape\nmodule leaf(blade_length, blade_width, petiole_length) {\n    color(\"forestgreen\")\n    union() {\n        // Petiole\n        translate([0, 0, 0])\n            cylinder(h = petiole_length, r = 1.5);\n        \n        // Leaf blade\n        translate([0, 0, petiole_length])\n            difference() {\n                // Overall heart shape\n                scale([blade_width, blade_length, 1])\n                    sphere(r = 1);\n                \n                // Cut the bottom to make heart indent\n                translate([0, -blade_length/2, -1])\n                    cube([blade_width*2, blade_length, 2.2], center = true);\n                \n                // Add veins (subtractive for detail)\n                for(i = [-1:1]) {\n                    translate([i*3, 0, -0.5])\n                        cube([0.5, blade_length, 1.2]);\n                }\n            }\n    }\n}\n\n// Main plant structure\nmodule philodendron() {\n    pot();\n    soil();\n    \n    // Central stems growing from soil\n    for(i = [0:60:359]) {\n        // First level stem\n        translate([0, 0, 27])\n        rotate([0, 0, i])\n        translate([10, 0, 0]) {\n            stem_segment(25, 0);\n            \n            // Second level stem\n            translate([0, 0, 25])\n            rotate([0, 30, 0])\n            stem_segment(20, 0);\n            \n            // First leaf\n            translate([0, 0, 45])\n            rotate([0, -30, 45])\n            leaf(15, 12, 8);\n            \n            // Second leaf on same stem\n            translate([0, 0, 45])\n            rotate([0, -30, -45])\n            leaf(18, 15, 10);\n        }\n    }\n    \n    // Additional stems with leaves\n    for(i = [30:120:359]) {\n        translate([0, 0, 27])\n        rotate([0, 0, i])\n        translate([15, 0, 0]) {\n            stem_segment(30, 0);\n            \n            // Larger leaf\n            translate([0, 0, 30])\n            rotate([0, -20, 0])\n            leaf(22, 18, 12);\n        }\n    }\n    \n    // Small aerial roots\n    color(\"darkgoldenrod\")\n    for(i = [0:90:359]) {\n        translate([0, 0, 27])\n        rotate([0, 0, i])\n        translate([8, 0, 0])\n            cylinder(h = 15, r = 1);\n    }\n}\n\n// Render the complete plant\nphilodendron();",
    "renders": true
  },
  {
    "plant": "peace",
    "openscad_code": "// Peace Lily Plant (Spathiphyllum)\n// Realistic style, medium complexity\n// Overall height: ~120 mm\n\n// Parameters\n$fn = 32;\nstem_height = 80;\nstem_diameter = 4;\nleaf_length = 45;\nleaf_width = 25;\nleaf_thickness = 2;\nflower_height = 25;\nflower_width = 18;\nflower_length = 30;\npot_height = 30;\npot_diameter = 50;\nsoil_height = 10;\n\n// Main module\nmodule peace_plant() {\n    union() {\n        // Flower pot\n        translate([0, 0, soil_height]) \n            pot();\n        \n        // Soil surface\n        translate([0, 0, soil_height - 0.1]) \n            cylinder(h = soil_height + 0.2, d1 = pot_diameter - 2, d2 = pot_diameter - 8, $fn = 64);\n        \n        // Plant stems and leaves\n        for(i = [0:3]) {\n            rotate([0, 0, i * 90 + 15]) \n                translate([8, 0, soil_height]) \n                    stem_with_leaves(i);\n        }\n        \n        // Flowers\n        translate([5, 5, soil_height + stem_height - 10]) \n            rotate([0, -15, 30]) \n                flower();\n        translate([-5, -3, soil_height + stem_height - 12]) \n            rotate([0, 10, -20]) \n                flower();\n    }\n}\n\n// Flower pot with drainage hole\nmodule pot() {\n    difference() {\n        union() {\n            // Outer pot\n            cylinder(h = pot_height, d = pot_diameter);\n            // Bottom\n            translate([0, 0, -1]) \n                cylinder(h = 2, d = pot_diameter);\n        }\n        // Inner hollow\n        translate([0, 0, -0.5]) \n            cylinder(h = pot_height + 2, d = pot_diameter - 4);\n        // Drainage hole\n        translate([0, 0, -0.5]) \n            cylinder(h = 3, d = 6);\n    }\n}\n\n// Stem with leaves module\nmodule stem_with_leaves(index) {\n    color(\"darkgreen\") {\n        // Main stem\n        translate([0, 0, 0]) \n            cylinder(h = stem_height, d = stem_diameter);\n        \n        // Leaves\n        translate([0, 0, stem_height - 20]) \n            rotate([0, 90, 0]) \n                leaf(leaf_length, leaf_width, leaf_thickness);\n        \n        translate([0, 0, stem_height - 35]) \n            rotate([0, 60, -30]) \n                leaf(leaf_length * 0.8, leaf_width * 0.8, leaf_thickness);\n        \n        translate([0, 0, stem_height - 50]) \n            rotate([0, 45, 45]) \n                leaf(leaf_length * 0.6, leaf_width * 0.6, leaf_thickness);\n    }\n}\n\n// Leaf module with realistic shape\nmodule leaf(length, width, thickness) {\n    difference() {\n        union() {\n            // Main leaf body\n            scale([1, width/length, 1]) \n                sphere(d = length);\n            \n            // Leaf tip extension\n            translate([length/2, 0, 0]) \n                rotate([0, 90, 0]) \n                    cylinder(h = length/3, d1 = width/2, d2 = 0);\n        }\n        // Center vein indentation\n        translate([0, 0, -thickness/2]) \n            cube([length * 1.2, width/10, thickness + 1], center = true);\n        \n        // Side veins\n        for(i = [-1, 1]) {\n            translate([i * length/4, 0, -thickness/2]) \n                rotate([0, 0, i * 15]) \n                    cube([length/2, width/15, thickness + 1], center = true);\n        }\n    }\n}\n\n// Flower (spathe and spadix)\nmodule flower() {\n    union() {\n        // White spathe\n        color(\"white\") {\n            translate([0, 0, 0]) \n                rotate([0, 90, 0]) \n                    difference() {\n                        // Main curved spathe\n                        scale([1, 1.5, 0.6]) \n                            sphere(d = flower_width);\n                        \n                        // Inner hollow\n                        translate([0, 0, -flower_width/2]) \n                            cube([flower_width * 1.2, flower_width * 1.2, flower_width], center = true);\n                        \n                        // Bottom opening\n                        translate([0, -flower_width/2, 0]) \n                            cube([flower_width, flower_width, flower_width], center = true);\n                    }\n        }\n        \n        // Yellow spadix\n        color(\"yellow\") {\n            translate([0, flower_width/2 - 2, 0]) \n                rotate([0, 90, 0]) \n                    cylinder(h = flower_length, d = flower_width/3);\n        }\n    }\n}\n\n// Render the plant\npeace_plant();",
    "renders": true
  },
  {
    "plant": "schefflera",
    "openscad_code": "// Schefflera Plant - Realistic Style, Medium Complexity\n// Overall height ~120 mm, suitable for 3D printing\n\n// Parameters\nstem_d = 8;\nstem_h = 60;\nleaf_scale = 1.0;\nwall_t = 2;\n\nmodule stem_segment(h, r_base, r_top) {\n    cylinder(h=h, r1=r_base, r2=r_top, $fn=16);\n}\n\nmodule leaf_cluster(radius, height, count) {\n    for(i=[0:count-1]) {\n        rotate([0, 0, i*360/count])\n        translate([0, radius, 0])\n        rotate([0, -30, 0])\n        scale([1, 0.5, 0.05])\n        sphere(r=leaf_scale*12, $fn=32);\n    }\n}\n\nmodule branch(level, length, angle) {\n    if(level > 0) {\n        // Branch cylinder\n        rotate([0, 0, angle])\n        rotate([0, 30, 0])\n        cylinder(h=length, r1=2.5, r2=1.5, $fn=12);\n        \n        // Sub-branches\n        translate([0, 0, length*0.7])\n        rotate([0, -30, 0])\n        branch(level-1, length*0.7, 45);\n        \n        translate([0, 0, length*0.7])\n        rotate([0, -30, 0])\n        branch(level-1, length*0.7, -45);\n        \n        // Leaves at branch end\n        translate([0, 0, length])\n        rotate([0, -30, 0])\n        leaf_cluster(8, 5, 7);\n    }\n}\n\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=25, r1=30, r2=25, $fn=32);\n        \n        // Inner cavity\n        translate([0, 0, -1])\n        cylinder(h=27, r1=28, r2=23, $fn=32);\n    }\n    \n    // Soil surface\n    translate([0, 0, 24])\n    scale([1, 1, 0.1])\n    sphere(r=28, $fn=32);\n}\n\nmodule schefflera() {\n    // Pot\n    pot();\n    \n    // Main stem\n    translate([0, 0, 25])\n    stem_segment(stem_h, stem_d/2, stem_d/2.2);\n    \n    // Primary branches\n    translate([0, 0, 35])\n    branch(2, 25, 30);\n    \n    translate([0, 0, 45])\n    branch(2, 30, -45);\n    \n    translate([0, 0, 55])\n    branch(2, 28, 15);\n    \n    translate([0, 0, 65])\n    branch(2, 35, -60);\n    \n    // Top leaf cluster\n    translate([0, 0, 85])\n    leaf_cluster(15, 0, 8);\n}\n\n// Render the plant\nschefflera();",
    "renders": true
  },
  {
    "plant": "zz",
    "openscad_code": "// ZZ Plant - Realistic Style, Medium Complexity\n// Overall height ~120mm, suitable for 3D printing with 2mm walls\n\n// Main pot with drainage tray\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 45, d1 = 55, d2 = 50, $fn = 64);\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 45, d1 = 51, d2 = 46, $fn = 64);\n    }\n    \n    // Drainage tray\n    translate([0, 0, -3])\n        cylinder(h = 3, d = 60, $fn = 64);\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, 42])\n        scale([1, 1, 0.3])\n            sphere(d = 50, $fn = 64);\n}\n\n// Individual leaflet cluster\nmodule leaflet_cluster(height, angle, twist) {\n    translate([0, 0, height])\n    rotate([0, 0, twist])\n    rotate([0, angle, 0])\n    translate([0, 0, 5])\n    for(i = [0:30:150]) {\n        rotate([0, 0, i])\n        translate([8, 0, 0])\n        scale([1, 0.3, 0.1])\n            sphere(d = 15, $fn = 8);\n    }\n}\n\n// Main stem with leaflets\nmodule stem(height, bend, rotation) {\n    // Stem structure\n    rotate([0, 0, rotation])\n    rotate([bend, 0, 0])\n    translate([0, 0, 45])\n    union() {\n        // Main stalk\n        cylinder(h = height, d = 4, $fn = 16);\n        \n        // Leaflet pairs along stem\n        for(i = [0:20:height-20]) {\n            // Left side\n            translate([0, 0, i])\n            rotate([0, 90, 0])\n            leaflet_cluster(0, 45, 0);\n            \n            // Right side\n            translate([0, 0, i])\n            rotate([0, 90, 180])\n            leaflet_cluster(0, 45, 180);\n            \n            // Front smaller pair\n            translate([0, 0, i+10])\n            rotate([0, 90, 90])\n            scale([0.7, 0.7, 0.7])\n            leaflet_cluster(0, 30, 90);\n            \n            // Back smaller pair\n            translate([0, 0, i+10])\n            rotate([0, 90, 270])\n            scale([0.7, 0.7, 0.7])\n            leaflet_cluster(0, 30, 270);\n        }\n    }\n}\n\n// Rhizome emerging from soil\nmodule rhizome() {\n    translate([0, 0, 42])\n    difference() {\n        sphere(d = 12, $fn = 32);\n        translate([0, 0, -3])\n            cube([15, 15, 6], center = true);\n    }\n}\n\n// Assembly\npot();\ntranslate([0, 0, 3])\n    soil();\nrhizome();\n\n// Multiple stems with natural variation\nstem(60, 15, 0);\nstem(70, -10, 45);\nstem(55, 20, 120);\nstem(65, -5, 200);\nstem(50, 25, 270);",
    "renders": true
  },
  {
    "plant": "fiddle",
    "openscad_code": "// Fiddle Leaf Fig Plant (realistic style, medium complexity)\n// Overall height ~120 mm, pot diameter ~55 mm, printable without supports\n\n$fn = 36;  // Smooth curves\n\nmodule pot() {\n    // Main pot body - tapered cylinder with slight flare\n    difference() {\n        cylinder(h = 35, r1 = 28, r2 = 25, center = false);\n        translate([0, 0, 2])\n            cylinder(h = 33, r1 = 26, r2 = 23, center = false);\n    }\n    \n    // Pot rim lip\n    translate([0, 0, 35])\n        cylinder(h = 3, r1 = 30, r2 = 28, center = false);\n    \n    // Drainage tray base\n    translate([0, 0, -2])\n        cylinder(h = 2, r = 32, center = false);\n}\n\nmodule soil_surface() {\n    // Slightly domed soil surface\n    translate([0, 0, 36])\n        scale([1, 1, 0.3])\n            sphere(r = 25, center = true);\n}\n\nmodule stem(height = 60) {\n    // Main trunk with gentle taper\n    cylinder(h = height, r1 = 4, r2 = 2.5, center = false);\n    \n    // Add slight texture rings\n    for(i = [1:4:height-5]) {\n        translate([0, 0, i])\n            cylinder(h = 0.8, r1 = 4.2, r2 = 2.7, center = false);\n    }\n}\n\nmodule leaf(length = 45, width = 25, angle = 0, bend = 0) {\n    // Single fiddle leaf shape\n    rotate([0, 0, angle])\n    translate([0, 0, bend])\n    union() {\n        // Main leaf body - elongated violin shape\n        scale([width/20, length/20, 0.8])\n            sphere(r = 10, center = true);\n        \n        // Leaf tip extension\n        translate([0, length/2, 0])\n            scale([width/30, 4, 0.6])\n                sphere(r = 5, center = true);\n        \n        // Leaf stem (petiole)\n        translate([0, -length/2 - 3, 0])\n            rotate([90, 0, 0])\n                cylinder(h = 6, r = 1, center = false);\n    }\n}\n\nmodule branch(level, height, angle) {\n    // Branch structure with leaves\n    translate([0, 0, height])\n    rotate([0, 0, angle]) {\n        // Branch\n        rotate([90, 0, 0])\n            cylinder(h = 15 + level*3, r1 = 2, r2 = 1.2, center = false);\n        \n        // Leaves on this branch\n        translate([0, 15 + level*3, 0])\n            rotate([0, -20 - level*5, 0])\n                leaf(40 - level*3, 22 - level*2, 15, 2);\n        \n        translate([0, 12 + level*3, 0])\n            rotate([0, -25 - level*5, 0])\n                leaf(35 - level*3, 20 - level*2, -20, 1);\n    }\n}\n\n// Main assembly\nunion() {\n    // Pot and soil\n    pot();\n    soil_surface();\n    \n    // Main stem emerging from soil\n    translate([0, 0, 38])\n        stem(65);\n    \n    // Lower branches\n    branch(0, 55, 45);\n    branch(0, 55, -45);\n    \n    // Mid branches\n    branch(1, 75, 30);\n    branch(1, 75, -30);\n    \n    // Top branches\n    branch(2, 95, 15);\n    branch(2, 95, -15);\n    \n    // Crown leaves\n    translate([0, 0, 103])\n    union() {\n        leaf(38, 20, 0, 0);\n        leaf(35, 18, 45, -5);\n        leaf(35, 18, -45, -5);\n    }\n}",
    "renders": true
  },
  {
    "plant": "rubber",
    "openscad_code": "// Rubber Plant - Realistic Medium Complexity\n// Overall height ~120mm, suitable for 3D printing\n\n$fn = 36; // Smooth curves\n\nmodule stem_segment(h, r_top, r_bot) {\n    cylinder(h = h, r1 = r_bot, r2 = r_top, $fn = 16);\n}\n\nmodule leaf(length, width, thickness) {\n    // Main leaf blade\n    difference() {\n        scale([1, width/length, thickness/width])\n            sphere(d = length);\n        \n        // Leaf tip taper\n        translate([length/2, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h = length/2, r1 = width/2, r2 = 0, $fn = 8);\n        \n        // Stem cutout\n        translate([-length/2, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h = width, r = thickness*2, $fn = 8);\n    }\n    \n    // Central vein\n    translate([0, 0, -thickness/2])\n        scale([length*0.9, thickness/4, thickness/10])\n            sphere(d = width);\n}\n\nmodule branch(level, angle, length) {\n    if (level > 0) {\n        // Main branch stem\n        rotate([angle, 0, 0])\n            stem_segment(h = length, r_top = 2.5, r_bot = 3.5);\n        \n        // Leaves on this branch\n        for (i = [1:3]) {\n            rotate([angle, 0, i*120])\n                translate([0, 0, length*0.8])\n                    rotate([30, 0, 0])\n                        leaf(25, 12, 2);\n        }\n        \n        // Sub-branches\n        if (level > 1) {\n            rotate([angle, 0, 0])\n                translate([0, 0, length*0.7])\n                    branch(level-1, 25, length*0.7);\n                    \n            rotate([angle, 0, 0])\n                translate([0, 0, length*0.5])\n                    branch(level-1, -25, length*0.7);\n        }\n    }\n}\n\n// Main plant pot\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 25, r1 = 25, r2 = 22, center = false);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 23, r1 = 23, r2 = 20, center = false);\n        \n        // Drainage holes\n        for (i = [0:3]) {\n            rotate([0, 0, i*90])\n                translate([20, 0, 1])\n                    cylinder(h = 2, r = 2, $fn = 8);\n        }\n    }\n    \n    // Soil surface\n    translate([0, 0, 23])\n        cylinder(h = 2, r = 23, $fn = 32);\n}\n\n// Main trunk\nmodule trunk() {\n    // Base trunk\n    stem_segment(h = 40, r_top = 4, r_bot = 5);\n    \n    // Upper trunk continuation\n    translate([0, 0, 38])\n        stem_segment(h = 30, r_top = 3, r_bot = 4);\n}\n\n// Main assembly\ntranslate([0, 0, 0]) {\n    // Pot\n    pot();\n    \n    // Trunk emerging from soil\n    translate([0, 0, 25]) {\n        trunk();\n        \n        // First level branches\n        translate([0, 0, 35])\n            branch(2, 30, 20);\n            \n        translate([0, 0, 45])\n            branch(2, -20, 25);\n            \n        translate([0, 0, 55])\n            branch(1, 15, 15);\n            \n        translate([0, 0, 65])\n            branch(1, -35, 18);\n    }\n}",
    "renders": true
  },
  {
    "plant": "calathea",
    "openscad_code": "// Calathea Plant - Realistic Medium Complexity\n// Overall height: 120mm, base diameter: 80mm\n\n$fn = 24;\n\n// Main pot with drainage hole\nmodule pot() {\n    difference() {\n        cylinder(h = 40, d1 = 80, d2 = 75);\n        translate([0, 0, 2]) cylinder(h = 40, d1 = 76, d2 = 71);\n    }\n    // Drainage hole\n    translate([0, 0, -1]) cylinder(h = 3, d = 8);\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, 38]) cylinder(h = 5, d1 = 74, d2 = 70);\n}\n\n// Stem for leaf attachment\nmodule stem(height, angle, rotation) {\n    translate([0, 0, 40]) {\n        rotate([angle, 0, rotation]) {\n            cylinder(h = height, d = 4);\n        }\n    }\n}\n\n// Calathea leaf with characteristic pattern\nmodule leaf(length, width, curl) {\n    // Main leaf blade\n    translate([0, 0, length/2]) {\n        rotate([90, 0, 0]) {\n            scale([width/length, 1, 1]) {\n                sphere(d = length);\n            }\n        }\n    }\n    \n    // Central vein\n    translate([0, 0, length/2]) {\n        rotate([90, 0, 0]) {\n            scale([0.1, 1, 0.02]) {\n                cube([length, width, 2], center = true);\n            }\n        }\n    }\n    \n    // Side veins (3 pairs)\n    for (i = [-1, 1]) {\n        for (j = [0.3, 0.5, 0.7]) {\n            translate([i * width/3, 0, j * length]) {\n                rotate([90, 0, 0]) {\n                    rotate([0, i * 15, 0]) {\n                        scale([0.05, 1, 0.01]) {\n                            cube([length/4, width/2, 1], center = true);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    // Leaf curl\n    translate([0, 0, length/2]) {\n        rotate([90 + curl, 0, 0]) {\n            rotate([0, curl/2, 0]) {\n                scale([width/length, 1, 1]) {\n                    sphere(d = length);\n                }\n            }\n        }\n    }\n}\n\n// Full plant assembly\nmodule calathea() {\n    union() {\n        pot();\n        soil();\n        \n        // Stems and leaves in realistic arrangement\n        // Central tall leaves\n        stem(30, 0, 0);\n        translate([0, 0, 70]) leaf(50, 25, 5);\n        \n        stem(25, 10, 30);\n        translate([8, 5, 65]) rotate([0, 0, 30]) leaf(45, 22, 3);\n        \n        stem(25, 10, -30);\n        translate([-8, 5, 65]) rotate([0, 0, -30]) leaf(45, 22, -3);\n        \n        // Middle layer leaves\n        stem(20, 20, 60);\n        translate([12, 8, 60]) rotate([0, 0, 60]) leaf(40, 20, 8);\n        \n        stem(20, 20, -60);\n    translate([-12, 8, 60]) rotate([0, 0, -60]) leaf(40, 20, -8);\n        \n        stem(20, 20, 120);\n        translate([-6, -10, 60]) rotate([0, 0, 120]) leaf(38, 19, 6);\n        \n        stem(20, 20, -120);\n        translate([6, -10, 60]) rotate([0, 0, -120]) leaf(38, 19, -6);\n        \n        // Lower outer leaves\n        stem(15, 30, 90);\n        translate([0, -15, 55]) rotate([0, 0, 90]) leaf(35, 18, 10);\n        \n        stem(15, 30, -90);\n        translate([0, -15, 55]) rotate([0, 0, -90]) leaf(35, 18, -10);\n        \n        stem(15, 35, 150);\n        translate([-8, -12, 52]) rotate([0, 0, 150]) leaf(30, 15, 12);\n        \n        stem(15, 35, -150);\n        translate([8, -12, 52]) rotate([0, 0, -150]) leaf(30, 15, -12);\n    }\n}\n\n// Render the complete plant\ncalathea();",
    "renders": true
  },
  {
    "plant": "croton",
    "openscad_code": "// Croton Plant - Realistic Medium Complexity\n// Overall height ~110 mm, printable in one piece\n// Wall thickness kept ≥ 2 mm for stems and ≥ 1.5 mm for leaves\n\n$fn = 36;\n\n// Main assembly\nunion() {\n\n    // Pot\n    translate([0,0,0])\n        pot();\n\n    // Soil surface\n    translate([0,0,25])\n        soil();\n\n    // Central stem\n    translate([0,0,27])\n        rotate([0,0,rands(-5,5,1)[0]])\n        central_stem();\n\n    // Leaf clusters\n    translate([0,0,35])\n        leaf_cluster(0);\n    translate([8,5,45])\n        leaf_cluster(120);\n    translate([-10,-3,55])\n        leaf_cluster(240);\n    translate([5,-8,65])\n        leaf_cluster(60);\n}\n\nmodule pot() {\n    // Outer pot\n    cylinder(h = 30, r1 = 25, r2 = 22, center = false);\n    \n    // Inner hollow (2 mm wall)\n    difference() {\n        cylinder(h = 28, r1 = 23, r2 = 20, center = false);\n        translate([0,0,2])\n        cylinder(h = 28, r1 = 21, r2 = 18, center = false);\n    }\n    \n    // Base ring for stability\n    translate([0,0,-1])\n    cylinder(h = 2, r1 = 26, r2 = 26, center = false);\n}\n\nmodule soil() {\n    // Soil surface with slight irregularity\n    difference() {\n        sphere(d = 46);\n        translate([0,0,-20])\n        cube([50,50,40], center = true);\n    }\n}\n\nmodule central_stem() {\n    // Main trunk\n    cylinder(h = 60, r1 = 2.5, r2 = 1.5, center = false);\n    \n    // Branching nodes\n    for(i = [1:3]) {\n        translate([0,0,i*15])\n        sphere(d = 4);\n    }\n}\n\nmodule leaf_cluster(angle) {\n    rotate([0,0,angle])\n    translate([rands(-3,3,1)[0],rands(-3,3,1)[0],0]) {\n        \n        // Petioles (leaf stems)\n        for(i = [0:3]) {\n            rotate([rands(-30,-10,1)[0], rands(-20,20,1)[0], i*90+45])\n            translate([0,0,0])\n            cylinder(h = 12, r = 1.2, center = false);\n            \n            // Leaves\n            translate([0,0,12])\n            rotate([rands(-30,-10,1)[0], rands(-20,20,1)[0], i*90+45])\n            croton_leaf();\n        }\n    }\n}\n\nmodule croton_leaf() {\n    // Main leaf blade\n    scale([1, 0.6, 0.2])\n    difference() {\n        // Basic leaf shape\n        hull() {\n            sphere(d = 20);\n            translate([0,-5,0])\n            sphere(d = 8);\n            translate([0,5,0])\n            sphere(d = 8);\n        }\n        \n        // Vein grooves\n        translate([0,0,-1])\n        scale([0.9,0.9,1])\n        cylinder(h = 3, r1 = 0.5, r2 = 0.5, center = false);\n        \n        for(v = [-3:1:3]) {\n            translate([0,v*2,0])\n            rotate([90,0,0])\n            cylinder(h = 10, r1 = 0.3, r2 = 0, center = false);\n        }\n    }\n    \n    // Color patches (raised areas)\n    translate([rands(-2,2,1)[0], rands(-2,2,1)[0],1])\n    scale([0.3,0.3,1])\n    sphere(d = 3);\n    \n    translate([rands(-3,3,1)[0], rands(-3,3,1)[0],1])\n    scale([0.4,0.4,1])\n    sphere(d = 4);\n}",
    "renders": true
  },
  {
    "plant": "begonia",
    "openscad_code": "// Begonia Plant - Realistic Medium Complexity\n// Overall dimensions: ~80mm wide x 100mm tall x 80mm deep\n\n$fn = 32;\n\n// Main plant parameters\npot_height = 30;\npot_radius = 35;\nstem_height = 60;\nleaf_length = 25;\nleaf_width = 18;\nleaf_thickness = 2;\n\n// Flower parameters\nflower_radius = 8;\nflower_petal_count = 4;\nflower_center_radius = 3;\n\n// Pot with drainage holes\nmodule pot() {\n    difference() {\n        // Main pot body\n        cylinder(h=pot_height, r=pot_radius, center=false);\n        \n        // Hollow inside\n        translate([0, 0, 2]) \n            cylinder(h=pot_height, r=pot_radius-3, center=false);\n        \n        // Drainage holes\n        for(i=[0:2]) {\n            rotate([0, 0, i*120]) \n                translate([pot_radius-5, 0, 1])\n                    cylinder(h=3, r=2, center=false);\n        }\n    }\n}\n\n// Single leaf with characteristic begonia shape\nmodule leaf() {\n    difference() {\n        // Main leaf body - asymmetric heart shape\n        union() {\n            // Left lobe\n            translate([-leaf_width/3, 0, 0])\n                scale([1.2, 1, 1])\n                    sphere(r=leaf_length/2);\n            \n            // Right lobe\n            translate([leaf_width/3, 0, 0])\n                scale([1.2, 1, 1])\n                    sphere(r=leaf_length/2);\n            \n            // Central connecting part\n            hull() {\n                translate([0, -leaf_length/3, 0])\n                    sphere(r=leaf_width/3);\n                translate([0, leaf_length/3, 0])\n                    sphere(r=leaf_width/4);\n            }\n        }\n        \n        // Cut to leaf thickness\n        translate([0, 0, -leaf_thickness/2-1])\n            cube([leaf_width*2, leaf_length*2, leaf_thickness+2], center=true);\n    }\n}\n\n// Stem with joints\nmodule stem() {\n    // Main stem\n    cylinder(h=stem_height, r=3, center=false);\n    \n    // Stem segments with joints\n    for(h=[10:15:stem_height-10]) {\n        translate([0, 0, h])\n            sphere(r=3.5);\n    }\n}\n\n// Small begonia flower\nmodule flower() {\n    // Flower center\n    sphere(r=flower_center_radius);\n    \n    // Petals - begonia has 4 petals\n    for(i=[0:3]) {\n        rotate([0, 0, i*90]) {\n            translate([flower_radius/2, 0, 0])\n                scale([1.5, 0.8, 0.3])\n                    sphere(r=flower_radius);\n        }\n    }\n}\n\n// Complete plant assembly\nmodule begonia_plant() {\n    // Pot at base\n    color(\"brown\") pot();\n    \n    // Stem emerging from pot\n    translate([0, 0, pot_height]) {\n        color(\"darkgreen\") stem();\n        \n        // Leaves along stem\n        for(h=[15:15:stem_height-5]) {\n            // Alternate leaf placement\n            angle = h * 137.5; // Golden angle for natural spacing\n            rotate([0, 0, angle]) {\n                translate([0, 8, h]) {\n                    rotate([90, 30*sin(h), 0]) {\n                        color(\"green\") leaf();\n                    }\n                }\n            }\n            \n            // Opposite leaf\n            rotate([0, 0, angle+180]) {\n                translate([0, 8, h+3]) {\n                    rotate([90, -30*sin(h), 0]) {\n                        scale([0.8, 0.8, 0.8])\n                            color(\"green\") leaf();\n                    }\n                }\n            }\n        }\n        \n        // Flowers at top\n        for(i=[0:2]) {\n            rotate([0, 0, i*120]) {\n                translate([0, 12, stem_height-5+i*3]) {\n                    color(\"pink\") flower();\n                }\n            }\n        }\n    }\n}\n\n// Render the complete plant\nbegonia_plant();",
    "renders": true
  },
  {
    "plant": "peperomia",
    "openscad_code": "// Peperomia plant - realistic style, medium complexity\n// Overall height ~100mm, suitable for 3D printing\n\n$fn = 36;\nwall = 2;\n\n// Main plant assembly\nmodule peperomia() {\n    union() {\n        // Pot\n        translate([0, 0, 0]) pot();\n        \n        // Soil surface\n        translate([0, 0, 25]) soil();\n        \n        // Main stem\n        translate([0, 0, 27]) stem();\n        \n        // Leaf clusters\n        leaf_cluster(0, 0, 30, 0);\n        leaf_cluster(15, 8, 40, 35);\n        leaf_cluster(-12, -10, 50, -45);\n        leaf_cluster(8, -12, 60, 120);\n        leaf_cluster(-5, 5, 70, -110);\n    }\n}\n\n// Cylindrical pot with slight taper\nmodule pot() {\n    difference() {\n        cylinder(h = 25, r1 = 25, r2 = 23);\n        translate([0, 0, wall]) cylinder(h = 25, r1 = 23, r2 = 21);\n    }\n}\n\n// Soil surface with slight dome\nmodule soil() {\n    translate([0, 0, -2]) scale([1, 1, 0.3]) sphere(r = 23);\n}\n\n// Main central stem\nmodule stem() {\n    cylinder(h = 45, r = 3);\n}\n\n// Generate cluster of leaves around attachment point\nmodule leaf_cluster(x, y, z, rotation) {\n    translate([x, y, z]) rotate([0, 0, rotation]) {\n        // Individual leaves radiating from center\n        for(i = [0:45:315]) {\n            rotate([0, 0, i]) translate([4, 0, 0]) leaf(30 + i/3);\n        }\n    }\n}\n\n// Single peperomia leaf with realistic proportions\nmodule leaf(tilt) {\n    // Leaf blade - thick at base, thin at tip\n    translate([0, 0, 0]) rotate([tilt, 0, 0]) {\n        union() {\n            // Main leaf body\n            hull() {\n                translate([0, 0, 0]) sphere(r = 4);\n                translate([12, 0, 0]) scale([1, 0.7, 0.3]) sphere(r = 6);\n                translate([20, 0, 0]) scale([1, 0.5, 0.2]) sphere(r = 3);\n            }\n            \n            // Leaf stem\n            translate([-2, 0, -1]) rotate([90, 0, 0]) cylinder(h = 6, r = 1.5);\n            \n            // Vein details\n            translate([0, 0, 0.5]) rotate([tilt, 0, 0]) {\n                for(v = [0:3:9]) {\n                    translate([v, 0, 0]) rotate([0, 90, 0]) scale([0.2, 0.2, 1]) \n                        cylinder(h = 12 - v/2, r = 0.5);\n                }\n            }\n        }\n    }\n}\n\n// Generate the complete plant\npeperomia();",
    "renders": true
  },
  {
    "plant": "pilea",
    "openscad_code": "// Pilea Plant - Realistic Medium Complexity\n// Overall height: ~100mm, suitable for 3D printing\n\n// Stem parameters\nstem_height = 60;\nstem_radius = 3;\nstem_segments = 20;\n\n// Leaf parameters\nleaf_length = 25;\nleaf_width = 20;\nleaf_thickness = 1.5;\nleaf_tilt = 30;\nnum_leaf_pairs = 5;\n\n// Pot parameters\npot_height = 25;\npot_radius = 22;\npot_thickness = 2;\n\n// Soil parameters\nsoil_height = 8;\nsoil_radius = 20;\n\n// Stem module\nmodule stem() {\n    cylinder(h=stem_height, r=stem_radius, $fn=stem_segments);\n}\n\n// Single leaf module with realistic shape\nmodule leaf() {\n    // Main leaf body\n    difference() {\n        scale([1, leaf_width/leaf_length, 1])\n            sphere(d=leaf_length, $fn=20);\n        \n        // Cut off bottom half\n        translate([0, -leaf_width, 0])\n            cube([leaf_length*2, leaf_width*2, leaf_length], center=true);\n        \n        // Leaf tip\n        translate([leaf_length/2 - 3, 0, 0])\n            sphere(d=6, $fn=10);\n    }\n    \n    // Leaf thickness\n    scale([0.9, 0.9, 0.1])\n        sphere(d=leaf_length, $fn=20);\n}\n\n// Leaf pair module\nmodule leaf_pair(height) {\n    rotate([0, leaf_tilt, 0])\n        leaf();\n    \n    rotate([0, leaf_tilt, 180])\n        leaf();\n}\n\n// Pot module\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=pot_height, r=pot_radius, $fn=32);\n        \n        // Inner hollow\n        translate([0, 0, pot_thickness])\n            cylinder(h=pot_height, r=pot_radius-pot_thickness, $fn=32);\n        \n        // Bottom hole for drainage\n        translate([0, 0, -1])\n            cylinder(h=pot_thickness+2, r=5, $fn=16);\n    }\n    \n    // Pot base ring\n    translate([0, 0, -2])\n        cylinder(h=2, r=pot_radius+2, $fn=32);\n}\n\n// Soil module\nmodule soil() {\n    difference() {\n        cylinder(h=soil_height, r=soil_radius, $fn=32);\n        \n        // Stem hole\n        translate([0, 0, -1])\n            cylinder(h=soil_height+2, r=stem_radius+1, $fn=16);\n    }\n}\n\n// Assembly\nunion() {\n    // Pot at base\n    pot();\n    \n    // Soil on top of pot\n    translate([0, 0, 0])\n        soil();\n    \n    // Stem growing from soil\n    translate([0, 0, soil_height])\n        stem();\n    \n    // Leaves along stem\n    for(i = [1:num_leaf_pairs]) {\n        translate([0, 0, soil_height + i*(stem_height/num_leaf_pairs)])\n            rotate([0, 0, i*45])\n                leaf_pair(i*(stem_height/num_leaf_pairs));\n    }\n    \n    // Top leaves (smaller)\n    translate([0, 0, soil_height + stem_height - 5])\n        scale([0.7, 0.7, 0.7])\n            rotate([0, 0, 0])\n                leaf_pair(stem_height);\n    \n    translate([0, 0, soil_height + stem_height - 5])\n        scale([0.7, 0.7, 0.7])\n            rotate([0, 0, 90])\n                leaf_pair(stem_height);\n}",
    "renders": true
  },
  {
    "plant": "fittonia",
    "openscad_code": "// Fittonia plant - realistic style, medium complexity\n// Overall size: ~90mm diameter, ~65mm tall\n\n// Parameters\npot_d = 55;\npot_h = 25;\nstem_h = 15;\nleaf_w = 12;\nleaf_l = 20;\nleaf_t = 2;\nvein_t = 0.8;\nwall = 2;\n\n// Main plant pot\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = pot_h, d1 = pot_d, d2 = pot_d * 0.85, $fn = 60);\n        // Inner cavity\n        translate([0, 0, wall])\n            cylinder(h = pot_h - wall, d1 = pot_d - wall*2, d2 = pot_d * 0.85 - wall*2, $fn = 60);\n    }\n}\n\n// Single leaf with veins\nmodule leaf(angle = 0, bend = 0) {\n    color(\"darkolivegreen\")\n    rotate([0, 0, angle])\n    rotate([bend, 0, 0])\n    union() {\n        // Main leaf body - elliptical\n        scale([1, 0.6, 1])\n        translate([0, 0, -leaf_t/2])\n        cylinder(h = leaf_t, d = leaf_l, $fn = 30);\n        \n        // Veins - raised lines\n        color(\"seagreen\")\n        for(i = [-2:1:2]) {\n            translate([i * leaf_l/8, 0, leaf_t/2 + vein_t/2])\n            rotate([90, 0, 0])\n            scale([0.15, 1, 1])\n            cylinder(h = leaf_l * 0.8, d = vein_t, $fn = 6);\n        }\n        \n        // Central vein\n        translate([0, 0, leaf_t/2 + vein_t/2])\n        rotate([90, 0, 0])\n        scale([0.3, 1, 1])\n        cylinder(h = leaf_l * 0.9, d = vein_t * 1.5, $fn = 6);\n    }\n}\n\n// Stem segment\nmodule stem_segment(h = 10, angle = 0) {\n    color(\"darkgreen\")\n    rotate([angle, 0, 0])\n    cylinder(h = h, d = 3, $fn = 12);\n}\n\n// Create a leaf cluster from one stem point\nmodule leaf_cluster(pos, stem_angle, leaf_count = 5) {\n    translate(pos)\n    rotate([stem_angle, 0, 0]) {\n        // Small stem\n        stem_segment(stem_h, -15);\n        \n        // Leaves radiating from stem tip\n        translate([0, 0, stem_h])\n        for(i = [0:leaf_count-1]) {\n            angle = i * 360/leaf_count + rand(i*10)*30;\n            bend = 15 + rand(i*20)*10;\n            translate([0, 0, 3])\n            rotate([0, 0, angle])\n            translate([leaf_l/2, 0, 0])\n            rotate([bend, 0, 0])\n            leaf(angle, bend);\n        }\n    }\n}\n\n// Helper for slight randomness\nfunction rand(seed) = (sin(seed * 123.456) + 1) / 2;\n\n// Main plant assembly\nmodule fittonia_plant() {\n    // Pot base\n    pot();\n    \n    // Main stems with leaf clusters\n    // Central cluster\n    leaf_cluster([0, 0, pot_h], 0, 6);\n    \n    // Side clusters at different angles\n    for(i = [0:3]) {\n        angle = i * 90;\n        x = cos(angle) * 15;\n        y = sin(angle) * 15;\n        stem_tilt = 30 + i*5;\n        leaf_cluster([x, y, pot_h], stem_tilt, 4);\n    }\n    \n    // Inner smaller clusters\n    for(i = [0:2]) {\n        angle = i * 120 + 60;\n        x = cos(angle) * 8;\n        y = sin(angle) * 8;\n        stem_tilt = 20 + i*3;\n        leaf_cluster([x, y, pot_h], stem_tilt, 3);\n    }\n    \n    // Soil surface\n    color(\"saddlebrown\")\n    translate([0, 0, pot_h - 1])\n    cylinder(h = 2, d = pot_d - wall*2.5, $fn = 60);\n}\n\n// Render the complete plant\nfittonia_plant();",
    "renders": true
  },
  {
    "plant": "anthurium",
    "openscad_code": "// Anthurium Plant - Realistic Style, Medium Complexity\n// Overall height ~100mm, designed for 3D printing with 2mm walls\n\n// Main parameters\nstem_length = 40;\nstem_diameter = 4;\nleaf_length = 60;\nleaf_width = 30;\nleaf_thickness = 2;\nspathe_length = 45;\nspathe_width = 25;\nspadix_length = 20;\nspadix_diameter = 4;\npot_height = 25;\npot_diameter = 45;\n\n// Color definitions\n$fn = 50;\n\n// Pot module\nmodule pot() {\n    difference() {\n        cylinder(h=pot_height, d=pot_diameter, $fn=64);\n        translate([0, 0, 2])\n            cylinder(h=pot_height-4, d=pot_diameter-4, $fn=64);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, pot_height-2])\n        cylinder(h=4, d=pot_diameter-4, $fn=64);\n}\n\n// Stem module with slight curve\nmodule stem() {\n    for(i=[0:5:stem_length]) {\n        translate([sin(i/5)*2, 0, pot_height+i])\n            rotate([0, sin(i/10)*5, 0])\n                cylinder(h=5.1, d=stem_diameter, $fn=16);\n    }\n}\n\n// Leaf module with characteristic heart shape\nmodule leaf() {\n    // Main leaf body\n    translate([0, 0, 0])\n    scale([1, 0.7, 1])\n    difference() {\n        sphere(d=leaf_length);\n        translate([leaf_length/2, 0, 0])\n            sphere(d=leaf_length*0.8);\n        translate([-leaf_length/2, 0, 0])\n            sphere(d=leaf_length*0.8);\n    }\n    \n    // Add central vein\n    translate([0, 0, leaf_thickness/2+0.1])\n        scale([leaf_length*0.8, leaf_thickness, leaf_thickness*0.5])\n            sphere(d=leaf_width/4);\n    \n    // Side veins\n    for(angle=[-30, -15, 0, 15, 30]) {\n        translate([0, 0, leaf_thickness/2+0.1])\n            rotate([0, angle, 0])\n            translate([leaf_length/4, 0, 0])\n                scale([leaf_length*0.3, leaf_thickness*0.7, leaf_thickness*0.3])\n                    sphere(d=leaf_width/6);\n    }\n}\n\n// Spathe (red heart-shaped bract)\nmodule spathe() {\n    color(\"red\")\n    translate([0, 0, 0])\n    scale([1.2, 1, 0.2])\n    difference() {\n        sphere(d=spathe_length);\n        translate([spathe_length/2, 0, 0])\n            sphere(d=spathe_length*0.9);\n        translate([-spathe_length/2, 0, 0])\n            sphere(d=spathe_length*0.9);\n    }\n}\n\n// Spadix (yellow protrusion)\nmodule spadix() {\n    color(\"goldenrod\")\n    difference() {\n        cylinder(h=spadix_length, d=spadix_diameter, $fn=16);\n        for(i=[0:2:spadix_length]) {\n            translate([spadix_diameter/2*sin(i*36), spadix_diameter/2*cos(i*36), i])\n                sphere(d=1.5);\n        }\n    }\n}\n\n// Assemble the plant\nunion() {\n    // Pot and soil\n    pot();\n    translate([0, 0, 2]) soil();\n    \n    // Main stem and leaves\n    translate([0, 0, 0]) stem();\n    \n    // First leaf\n    translate([sin(40/5)*2, 0, pot_height+40])\n        rotate([0, 90+sin(40/10)*5, 45])\n            translate([leaf_length/3, 0, 0])\n                scale([1, 1, leaf_thickness/leaf_length])\n                    leaf();\n    \n    // Second leaf\n    translate([sin(20/5)*2, 0, pot_height+20])\n        rotate([0, 90+sin(20/10)*5, -30])\n            translate([leaf_length/3, 0, 0])\n                scale([0.8, 0.8, leaf_thickness/leaf_length])\n                    leaf();\n    \n    // Flower structure\n    translate([sin(35/5)*2, 0, pot_height+35])\n        rotate([0, 90+sin(35/10)*5, 0])\n            union() {\n                translate([spathe_length/3, 0, 0])\n                    scale([1, 1, 0.5])\n                        spathe();\n                translate([0, 0, spathe_width/4])\n                    rotate([90, 0, 0])\n                        spadix();\n            }\n}",
    "renders": true
  },
  {
    "plant": "spathiphyllum",
    "openscad_code": "// Realistic Spathiphyllum Plant - Medium Complexity\n// Features: pot, soil, stem cluster, leaves, and white spathes with spadices\n\n// Overall scale\nscale_factor = 1;\n\n// Pot dimensions\npot_height = 35 * scale_factor;\npot_top = 60 * scale_factor;\npot_bottom = 40 * scale_factor;\npot_wall = 2 * scale_factor;\n\n// Soil\nsoil_height = 10 * scale_factor;\n\n// Stem parameters\nstem_count = 7;\nstem_height_min = 25 * scale_factor;\nstem_height_max = 45 * scale_factor;\nstem_radius = 1.5 * scale_factor;\n\n// Leaf parameters\nleaf_length_min = 40 * scale_factor;\nleaf_length_max = 70 * scale_factor;\nleaf_width_max = 25 * scale_factor;\nleaf_thickness = 1.5 * scale_factor;\n\n// Spathe parameters\nspathe_count = 3;\nspathe_length = 30 * scale_factor;\nspathe_width = 15 * scale_factor;\nspathe_thickness = 1.2 * scale_factor;\n\n// Spadix parameters\nspadix_length = 8 * scale_factor;\nspadix_radius = 2 * scale_factor;\n\nmodule pot() {\n    difference() {\n        cylinder(h=pot_height, r1=pot_bottom/2, r2=pot_top/2, $fn=48);\n        translate([0, 0, pot_wall])\n            cylinder(h=pot_height-pot_wall, r1=pot_bottom/2-pot_wall, r2=pot_top/2-pot_wall, $fn=48);\n    }\n}\n\nmodule soil() {\n    color(\"saddlebrown\")\n    translate([0, 0, pot_height-soil_height])\n    cylinder(h=soil_height, r1=pot_top/2-2, r2=pot_top/2-2, $fn=48);\n}\n\nmodule leaf(stem_len, leaf_len, leaf_width, angle, tilt) {\n    translate([0, 0, stem_len])\n    rotate([0, 90-tilt, angle])\n    union() {\n        // Stem extension\n        color(\"darkgreen\")\n        cylinder(h=leaf_len*0.2, r=stem_radius, $fn=8);\n        \n        // Leaf blade\n        color(\"forestgreen\")\n        translate([leaf_len*0.1, 0, 0])\n        scale([1, leaf_width/leaf_len, leaf_thickness/leaf_len])\n        rotate([0, 90, 0])\n        difference() {\n            // Main leaf shape\n            scale([1, 0.3, 1])\n            sphere(r=leaf_len, $fn=32);\n            \n            // Cut to make pointed tip\n            translate([leaf_len*0.8, 0, 0])\n            rotate([0, 90, 0])\n            cylinder(h=leaf_len*2, r=leaf_len, $fn=32);\n        }\n    }\n}\n\nmodule spathe(stem_len, angle, tilt) {\n    translate([0, 0, stem_len])\n    rotate([0, 90-tilt, angle])\n    union() {\n        // Spathe (white leaf-like bract)\n        color(\"white\")\n        translate([spathe_length*0.15, 0, 0])\n        rotate([0, 90, 0])\n        scale([1, spathe_width/spathe_length, spathe_thickness/spathe_length])\n        difference() {\n            sphere(r=spathe_length, $fn=32);\n            translate([spathe_length*0.7, 0, 0])\n            rotate([0, 90, 0])\n            cylinder(h=spathe_length*2, r=spathe_length, $fn=32);\n        }\n        \n        // Spadix (central spike)\n        color(\"palegoldenrod\")\n        translate([spathe_length*0.4, 0, spathe_width/4])\n        rotate([90, 0, 0])\n        cylinder(h=spadix_length, r=spadix_radius, $fn=16);\n    }\n}\n\nmodule plant() {\n    // Pot and soil\n    union() {\n        pot();\n        soil();\n    }\n    \n    // Plant stems and leaves\n    for (i = [0:stem_count-1]) {\n        angle = i*360/stem_count + 15*(i%2);\n        stem_len = stem_height_min + (stem_height_max-stem_height_min)*(i%3)/2;\n        leaf_len = leaf_length_min + (leaf_length_max-leaf_length_min)*((i+1)%3)/2;\n        leaf_w = leaf_width_max - 5*(i%2);\n        tilt = 60 + (i%3)*10;\n        \n        // Main stem\n        color(\"darkgreen\")\n        translate([0, 0, pot_height-soil_height/2])\n        rotate([0, 0, angle])\n        cylinder(h=stem_len, r=stem_radius, $fn=8);\n        \n        // Attach leaf\n        translate([0, 0, pot_height-soil_height/2])\n        leaf(stem_len, leaf_len, leaf_w, angle, tilt);\n    }\n    \n    // Spathes and spadices\n    for (i = [0:spathe_count-1]) {\n        angle = i*120 + 25 + (i*15);\n        stem_len = stem_height_max - 5;\n        tilt = 75 - i*10;\n        \n        // Spathe stem\n        color(\"darkgreen\")\n        translate([0, 0, pot_height-soil_height/2])\n        rotate([0, 0, angle])\n        cylinder(h=stem_len, r=stem_radius, $fn=8);\n        \n        // Attach spathe\n        translate([0, 0, pot_height-soil_height/2])\n        spathe(stem_len, angle, tilt);\n    }\n}\n\n// Render the complete plant\nplant();",
    "renders": true
  },
  {
    "plant": "dracaena",
    "openscad_code": "// Dracaena Plant - Realistic Medium Complexity\n// Characteristic: Long lance-shaped leaves growing in rosettes from thick woody canes\n\n// Parameters\nstem_height = 60;\nstem_diameter = 8;\nleaf_length = 35;\nleaf_width = 2.5;\nleaf_thickness = 1.5;\nnum_leaf_clusters = 3;\nleaves_per_cluster = 8;\n\n// Main module\nmodule dracaena() {\n    // Base pot\n    translate([0, 0, -10]) \n        pot();\n    \n    // Stems with leaf clusters\n    for (i = [0:num_leaf_clusters-1]) {\n        translate([0, 0, i * (stem_height/num_leaf_clusters)]) {\n            // Main stem segment\n            color(\"saddlebrown\") \n                stem_segment(stem_height/num_leaf_clusters - 5);\n            \n            // Leaf cluster at top of segment\n            if (i > 0) {\n                translate([0, 0, stem_height/num_leaf_clusters - 5]) \n                    leaf_cluster();\n            }\n        }\n    }\n    \n    // Top leaf cluster\n    translate([0, 0, stem_height]) \n        leaf_cluster();\n}\n\n// Pot module\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 12, r1 = 15, r2 = 12, $fn = 32);\n        \n        // Inner cavity\n        translate([0, 0, 2]) \n            cylinder(h = 11, r1 = 13, r2 = 10, $fn = 32);\n    }\n    \n    // Soil surface\n    translate([0, 0, 2]) \n        color(\"darkgreen\") \n            cylinder(h = 1, r = 12.5, $fn = 32);\n}\n\n// Stem segment\nmodule stem_segment(height) {\n    cylinder(h = height, d = stem_diameter, $fn = 16);\n    \n    // Growth rings\n    for (i = [1:3]) {\n        translate([0, 0, height * i/4]) \n            scale([1.05, 1.05, 0.3]) \n                cylinder(h = 1, d = stem_diameter, $fn = 16);\n    }\n}\n\n// Leaf cluster\nmodule leaf_cluster() {\n    for (i = [0:leaves_per_cluster-1]) {\n        rotate([0, 0, i * 360/leaves_per_cluster]) \n            translate([0, 0, 0]) \n                leaf();\n    }\n}\n\n// Individual leaf\nmodule leaf() {\n    // Leaf blade\n    translate([leaf_length/2, 0, 0]) \n        rotate([0, 90, 0]) \n            scale([leaf_length, leaf_width, leaf_thickness]) \n                hull() {\n                    sphere(d = 1);\n                    translate([leaf_length/2, 0, 0]) \n                        sphere(d = 0.8);\n                }\n    \n    // Leaf midrib\n    translate([leaf_length/2, 0, 0]) \n        rotate([0, 90, 0]) \n            scale([leaf_length, 0.5, 0.5]) \n                cylinder(h = 1, d = 1);\n    \n    // Leaf base\n    translate([0, 0, 0]) \n        scale([1.5, 1.5, 1]) \n            sphere(d = 2);\n}\n\n// Generate the plant\ndracaena();",
    "renders": true
  },
  {
    "plant": "syngonium",
    "openscad_code": "// Syngonium Plant - Realistic Medium Complexity\n// Characteristic arrowhead leaves on climbing stems\n\n// Parameters for realistic proportions\nstem_d = 5;\nleaf_thick = 2;\npot_h = 35;\npot_r = 30;\nsoil_h = 8;\n\nmodule pot() {\n    difference() {\n        cylinder(h = pot_h, r = pot_r, $fn = 48);\n        translate([0, 0, 2])\n            cylinder(h = pot_h, r = pot_r - 2.5, $fn = 48);\n    }\n    translate([0, 0, 2])\n        cylinder(h = soil_h, r = pot_r - 2.5, $fn = 48);\n}\n\nmodule leaf(length, width, angle, twist) {\n    // Arrowhead leaf shape with 5 points\n    linear_extrude(height = leaf_thick, convexity = 10)\n        polygon(points = [\n            [0, 0],                    // Stem attachment\n            [-width*0.3, length*0.4],  // Left base\n            [-width*0.5, length*0.7],  // Left side\n            [0, length],               // Tip\n            [width*0.5, length*0.7],   // Right side\n            [width*0.3, length*0.4],   // Right base\n            [0, 0]                     // Close\n        ]);\n}\n\nmodule stem_section(height, segments = 6) {\n    for(i = [0:segments-1]) {\n        rotate([0, 0, i * 60])\n        translate([0, 0, i * height/segments])\n            cylinder(h = height/segments + 0.1, r = stem_d/2, $fn = 16);\n    }\n}\n\nmodule leaf_cluster(level, height) {\n    leaf_sizes = [12, 18, 25];\n    leaf_angles = [30, 45, 60];\n    \n    for(i = [0:len(leaf_sizes)-1]) {\n        rotate([0, 0, 120 * i])\n        translate([0, stem_d/2 + 3, height + i * 8])\n        rotate([leaf_angles[i], 0, 30 * (i % 2 == 0 ? 1 : -1)])\n            leaf(leaf_sizes[i], leaf_sizes[i] * 0.7, 0, 0);\n    }\n}\n\nmodule main_plant() {\n    // Central stem\n    stem_section(60, 8);\n    \n    // First level leaves\n    leaf_cluster(1, 15);\n    \n    // Second level rotated\n    rotate([0, 0, 60])\n    translate([0, 0, 25])\n        leaf_cluster(2, 20);\n    \n    // Top cluster\n    translate([0, 0, 45])\n    rotate([0, 0, 30])\n        leaf_cluster(3, 10);\n    \n    // Aerial roots\n    for(i = [0:2]) {\n        rotate([0, 0, 120 * i])\n        translate([stem_d/2, 0, 20 + i * 15])\n            rotate([90, 0, 45])\n                cylinder(h = 12, r = 1.5, $fn = 8);\n    }\n}\n\n// Assembly\ntranslate([0, 0, 0])\n    pot();\n\ntranslate([0, 0, soil_h])\n    main_plant();",
    "renders": true
  },
  {
    "plant": "aglaonema",
    "openscad_code": "// Aglaonema plant – medium detail, 3D-printable\n// Overall height ≈ 110 mm, pot diameter 50 mm\n\n$fn=36;\n\n// --- pot -------------------------------------------------\nmodule pot() {\n    difference() {\n        cylinder(h=34, d1=50, d2=48);  // outer shell, 2 mm walls\n        translate([0,0,2])\n            cylinder(h=32, d1=46, d2=44);\n    }\n    // base ring for stability\n    translate([0,0,-2])\n        cylinder(h=4, d=52);\n}\n\n// --- single leaf ----------------------------------------\nmodule leaf(len, wid, ang, twist) {\n    // len = mid-rib length\n    // wid = max width\n    // ang = elevation from horizontal\n    // twist = roll around mid-rib\n    rotate([ang,0,0])\n    rotate([0,0,twist])\n    translate([0,-len/2,0])\n    union() {\n        // mid-rib (2 mm thick)\n        rotate([90,0,0])\n            cylinder(h=len, d=2.5, $fn=8);\n\n        // leaf blade: elliptical shell\n        for(i=[0:6]) {\n            h = len*i/6;\n            w = wid * sin(180*i/6);   // elliptical taper\n            translate([0, -len/2 + h, 0])\n            rotate([90,0,0])\n            scale([w/2, 2, w/2])\n                sphere(d=1);\n        }\n    }\n}\n\n// --- stem segment ---------------------------------------\nmodule stem_seg(h, taper) {\n    cylinder(h=h, d1=6, d2=taper, center=true);\n}\n\n// --- assemble plant -------------------------------------\nmodule plant() {\n    pot();\n\n    // central stem\n    color(\"darkgreen\")\n    translate([0,0,34])\n    union() {\n        stem_seg(30, 5);\n        translate([0,0,30])\n        stem_seg(25, 4);\n        translate([0,0,55])\n        stem_seg(20, 3);\n    }\n\n    // leaves attached to stem nodes\n    // node 1 (lower)\n    translate([0,0,40])\n    for(a=[30, 150, 270])\n        rotate([0,0,a])\n        translate([0,6,0])\n        leaf(35, 18, 25, 5);\n\n    // node 2 (middle)\n    translate([0,0,65])\n    for(a=[0, 120, 240])\n        rotate([0,0,a])\n        translate([0,5,0])\n        leaf(40, 20, 30, -5);\n\n    // node 3 (top)\n    translate([0,0,85])\n    for(a=[45, 165, 285])\n        rotate([0,0,a])\n        translate([0,4,0])\n        leaf(38, 22, 35, 10);\n}\n\n// --- render ---------------------------------------------\nplant();",
    "renders": true
  },
  {
    "plant": "asparagus",
    "openscad_code": "// Realistic Asparagus Plant – OpenSCAD\n// Printable, medium detail (~120 lines)\n\n$fn = 32;                // smooth curves\nstalk_d = 10;            // mm\nstalk_h = 120;           // mm\ntip_r = 2.5;             // mm\nspear_r = 6;             // mm\nspear_h = 40;            // mm\nbract_l = 3;             // mm\nbract_w = 1.2;           // mm\nbract_gap = 5;           // mm\nscale_fac = 0.92;        // taper per segment\nwall = 2;                // mm shell thickness\n\nmodule spear(t) {\n    // single tapered spear segment\n    translate([0,0,t])\n        cylinder(d1=stalk_d*pow(scale_fac,t/bract_gap), d2=stalk_d*pow(scale_fac,(t+bract_gap)/bract_gap), h=bract_gap, center=false);\n}\n\nmodule bracts(z) {\n    // small triangular bracts circling the segment\n    for(a=[0:45:360-1])\n        rotate([0,0,a])\n            translate([stalk_d/2*pow(scale_fac,z/bract_gap),0,z])\n                rotate([90,0,0])\n                    linear_extrude(height=bract_w)\n                        polygon([[0,0],[bract_l,0],[bract_l/2,bract_l]]);\n}\n\nmodule tip() {\n    // conical tip\n    cylinder(d1=spear_r, d2=0, h=spear_h);\n}\n\nmodule stalk() {\n    // hollow stalk with wall thickness\n    difference() {\n        union() {\n            // stack of tapered segments\n            for(i=[0:bract_gap:stalk_h-spear_h]) {\n                spear(i);\n                bracts(i);\n            }\n            // tip\n            translate([0,0,stalk_h-spear_h])\n                tip();\n        }\n        // hollow core\n        translate([0,0,-1])\n            cylinder(d=stalk_d-wall*2, h=stalk_h+2);\n    }\n}\n\nmodule root_cluster() {\n    // fibrous roots\n    for(i=[0:30:359]) {\n        rotate([0,0,i])\n            translate([0,0,-8])\n                rotate([80+rand(i)*5,0,0])\n                    cylinder(d=2.5, h=18+rand(i)*5);\n    }\n}\n\nfunction rand(seed) = (seed*73)%100/100;\n\nmodule plant() {\n    union() {\n        stalk();\n        root_cluster();\n    }\n}\n\n// center and scale to 120 mm max height\ntranslate([0,0,0])\n    scale(120/(stalk_h+10))\n        plant();",
    "renders": true
  },
  {
    "plant": "bromeliad",
    "openscad_code": "// Realistic Bromeliad Plant - Medium Complexity\n// Overall height ~120mm, suitable for 3D printing\n\n// Parameters\n$fn = 36;\nstem_height = 25;\nstem_radius = 6;\nleaf_length = 45;\nleaf_width = 8;\nleaf_thickness = 2;\nbract_height = 35;\nbract_radius = 20;\nflower_radius = 3;\nflower_height = 8;\n\n// Central stem\nmodule stem() {\n    cylinder(h=stem_height, r=stem_radius);\n}\n\n// Individual leaf with natural curve\nmodule leaf() {\n    // Create curved leaf shape\n    difference() {\n        // Main leaf body\n        hull() {\n            translate([0, -leaf_width/2, 0]) cylinder(h=leaf_length, r=leaf_thickness/2);\n            translate([0, leaf_width/2, 0]) cylinder(h=leaf_length, r=leaf_thickness/2);\n        }\n        \n        // Taper the end\n        translate([0, 0, leaf_length - 5]) \n            rotate([0, 0, 45]) cube([leaf_width*2, leaf_width*2, 10], center=true);\n    }\n    \n    // Add central vein\n    translate([0, 0, -leaf_thickness/2]) \n        cube([leaf_thickness/4, leaf_width*0.8, leaf_length], center=true);\n}\n\n// Rosette of leaves around stem\nmodule leaf_rosette() {\n    for(i = [0:30:359]) {\n        rotate([0, 0, i]) {\n            translate([0, 0, 5]) {\n                rotate([5 + i/10, 0, 0]) leaf();\n            }\n        }\n    }\n}\n\n// Bract (modified leaf forming cup)\nmodule bract() {\n    difference() {\n        cylinder(h=bract_height, r1=bract_radius, r2=bract_radius*0.7);\n        \n        // Hollow out center\n        translate([0, 0, -1]) \n            cylinder(h=bract_height+2, r1=bract_radius-3, r2=bract_radius*0.7-3);\n        \n        // Create pointed bract tips\n        for(i = [0:20:359]) {\n            rotate([0, 0, i]) {\n                translate([bract_radius-2, 0, bract_height-5]) {\n                    rotate([0, 90, 0]) \n                        cylinder(h=3, r1=2, r2=0);\n                }\n            }\n        }\n    }\n}\n\n// Individual flower\nmodule flower() {\n    // Petal cluster\n    union() {\n        for(i = [0:60:359]) {\n            rotate([0, 0, i]) {\n                rotate([30, 0, 0]) \n                    scale([1, 0.5, 1]) \n                        sphere(d=flower_radius*2);\n            }\n        }\n        // Central part\n        sphere(d=flower_radius);\n    }\n}\n\n// Flower spike\nmodule flower_spike() {\n    // Central spike\n    translate([0, 0, bract_height]) {\n        cylinder(h=flower_height*2, r=flower_radius/2);\n        \n        // Flowers around spike\n        for(i = [0:45:359]) {\n            rotate([0, 0, i]) {\n                translate([flower_radius*1.5, 0, flower_height]) {\n                    flower();\n                }\n            }\n        }\n    }\n}\n\n// Base with drainage\nmodule base() {\n    difference() {\n        cylinder(h=8, r=stem_radius+4);\n        // Drainage hole\n        translate([0, 0, -1]) \n            cylinder(h=10, r=stem_radius);\n    }\n}\n\n// Assemble the plant\nunion() {\n    // Base\n    base();\n    \n    // Stem\n    translate([0, 0, 8]) stem();\n    \n    // Leaves\n    translate([0, 0, 8]) leaf_rosette();\n    \n    // Bract cup\n    translate([0, 0, 8+stem_height-5]) bract();\n    \n    // Flowers\n    translate([0, 0, 8+stem_height-5]) flower_spike();\n}",
    "renders": true
  },
  {
    "plant": "orchid",
    "openscad_code": "// Enhanced Orchid Plant with Realistic Details and 3D Printability\n// Includes stems, leaves, flowers, and aerial roots\n// Designed for 3D printing with no overhangs and 2mm wall thickness\n\n// Overall scale factor for easy resizing\nscale_factor = 1.0;\n\n// Constants for proportions\npot_height = 40 * scale_factor;\npot_radius = 30 * scale_factor;\nstem_height = 80 * scale_factor;\nstem_radius = 3 * scale_factor;\nleaf_length = 60 * scale_factor;\nleaf_width = 20 * scale_factor;\nleaf_thickness = 2 * scale_factor;\nflower_count = 5;\nflower_size = 15 * scale_factor;\n\n// Main module - the complete orchid plant\nmodule orchid_plant() {\n    union() {\n        // Pot\n        translate([0, 0, pot_height/2])\n            pot();\n        \n        // Main stem emerging from pot\n        translate([0, 0, pot_height])\n            stem(stem_height, stem_radius);\n        \n        // Leaves growing from base\n        for(i = [0:3]) {\n            rotate([0, 0, i * 90 + 45])\n                translate([10, 0, pot_height - 5])\n                    rotate([30, 0, 0])\n                        leaf(leaf_length, leaf_width, leaf_thickness);\n        }\n        \n        // Flowers along the stem\n        for(i = [0:flower_count-1]) {\n            rotate([0, 0, i * 72])\n                translate([0, 0, pot_height + 20 + i * 12])\n                    flower(flower_size, i * 15);\n        }\n        \n        // Aerial roots\n        for(i = [0:2]) {\n            rotate([0, 0, i * 120 + 60])\n                translate([15, 0, pot_height - 10])\n                    aerial_root(40, 2);\n        }\n    }\n}\n\n// Decorative pot with drainage holes\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=pot_height, r=pot_radius, $fn=32);\n        \n        // Inner hollow space\n        cylinder(h=pot_height-5, r=pot_radius-3, $fn=32);\n        \n        // Drainage holes\n        for(i = [0:3]) {\n            rotate([0, 0, i * 90])\n                translate([pot_radius-2, 0, 5])\n                    cylinder(h=5, r=2, $fn=8);\n        }\n    }\n}\n\n// Stem with natural curve\nmodule stem(height, radius) {\n    // Create curved stem using hull of spheres\n    for(i = [0:height/5]) {\n        translate([sin(i/3) * 5, 0, i * 5])\n            sphere(r=radius, $fn=16);\n    }\n}\n\n// Realistic leaf with tapered end\nmodule leaf(length, width, thickness) {\n    linear_extrude(height=thickness, convexity=10) {\n        polygon(points=[\n            [0, 0],\n            [length * 0.3, width/2],\n            [length * 0.7, width * 0.8],\n            [length, 0],\n            [length * 0.7, -width * 0.8],\n            [length * 0.3, -width/2]\n        ]);\n    }\n}\n\n// Detailed orchid flower\nmodule flower(size, angle) {\n    rotate([0, angle, 0]) {\n        union() {\n            // Center column\n            translate([0, 0, size/2])\n                cylinder(h=size, r=size/4, $fn=16);\n            \n            // Three sepals (back petals)\n            for(i = [0:2]) {\n                rotate([0, 0, i * 120])\n                    translate([0, size/2, 0])\n                        rotate([60, 0, 0])\n                            petal(size * 0.7, size * 0.3, size * 0.05);\n            }\n            \n            // Two lateral petals\n            rotate([0, 0, -45])\n                translate([size/2, size/2, 0])\n                    rotate([45, 0, 0])\n                        petal(size * 0.8, size * 0.4, size * 0.05);\n            \n            rotate([0, 0, 45])\n                translate([-size/2, size/2, 0])\n                    rotate([45, 0, 0])\n                        petal(size * 0.8, size * 0.4, size * 0.05);\n            \n            // Labellum (lip)\n            translate([0, size * 0.8, -size * 0.3])\n                rotate([30, 0, 0])\n                    lip(size * 0.6, size * 0.4, size * 0.05);\n        }\n    }\n}\n\n// Individual petal module\nmodule petal(length, width, thickness) {\n    linear_extrude(height=thickness, convexity=10) {\n        polygon(points=[\n            [0, 0],\n            [length * 0.3, width/2],\n            [length * 0.7, width * 0.9],\n            [length, 0],\n            [length * 0.7, -width * 0.9],\n            [length * 0.3, -width/2]\n        ]);\n    }\n}\n\n// Specialized lip petal\nmodule lip(length, width, thickness) {\n    linear_extrude(height=thickness, convexity=10) {\n        polygon(points=[\n            [-width/2, 0],\n            [-width * 0.3, length * 0.5],\n            [0, length],\n            [width * 0.3, length * 0.5],\n            [width/2, 0],\n            [0, -length * 0.2]\n        ]);\n    }\n}\n\n// Aerial root module\nmodule root(length, radius) {\n    // Create curved root\n    for(i = [0:length/2]) {\n        translate([sin(i/5) * 3, 0, -i * 2])\n            sphere(r=radius, $fn=8);\n    }\n}\n\n// Generate the complete orchid plant\norchid_plant();",
    "renders": true
  },
  {
    "plant": "african",
    "openscad_code": "// African Baobab Tree - Realistic Style, Medium Complexity\n// 3D printable model with proper wall thickness and no overhangs\n\n// Parameters\ntrunk_height = 60;\ntrunk_radius = 10;\nbranch_radius = 3;\nbranch_length = [15, 20, 25, 18, 22];\ncanopy_size = 35;\n\n// Trunk module with characteristic bottle shape\nmodule baobab_trunk() {\n    union() {\n        // Main trunk - tapered cylinder\n        cylinder(h=trunk_height, r1=trunk_radius*1.2, r2=trunk_radius, $fn=32);\n        \n        // Bulge in middle for characteristic baobab shape\n        translate([0, 0, trunk_height/2])\n            scale([1.3, 1.3, 1])\n            cylinder(h=trunk_height/2, r1=trunk_radius, r2=trunk_radius*1.1, $fn=32);\n    }\n}\n\n// Branch module\nmodule branch(length, angle, rotation) {\n    translate([0, 0, trunk_height - 5])\n    rotate([0, angle, rotation])\n    union() {\n        // Main branch\n        cylinder(h=length, r1=branch_radius*1.2, r2=branch_radius, $fn=16);\n        \n        // Sub-branches for fuller appearance\n        for(i = [1:3]) {\n            translate([0, 0, length * i/4])\n            rotate([0, 20 + i*10, i*45])\n            cylinder(h=length/2, r1=branch_radius*0.8, r2=branch_radius*0.5, $fn=12);\n        }\n    }\n}\n\n// Leaf cluster module\nmodule leaf_cluster(size, height) {\n    color(\"darkgreen\")\n    translate([0, 0, height])\n    for(i = [0:5]) {\n        rotate([0, i*30, i*60])\n        translate([size/3, 0, 0])\n        sphere(r=size/4, $fn=12);\n    }\n}\n\n// Root system base\nmodule root_system() {\n    difference() {\n        // Root base\n        cylinder(h=10, r1=trunk_radius*1.5, r2=trunk_radius*1.3, $fn=32);\n        \n        // Root grooves\n        for(i = [0:7]) {\n            rotate([0, 0, i*45])\n            translate([trunk_radius*0.8, 0, 5])\n            cube([trunk_radius, 4, 10], center=true);\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    // Root system\n    root_system();\n    \n    // Trunk\n    translate([0, 0, 5])\n    baobab_trunk();\n    \n    // Branches with leaves\n    for(i = [0:4]) {\n        angle = 20 + i*15;\n        rotation = i*72;\n        branch(branch_length[i], angle, rotation);\n        \n        // Add leaf clusters at branch ends\n        translate([0, 0, trunk_height - 5])\n        rotate([0, angle, rotation])\n        translate([0, 0, branch_length[i]])\n        leaf_cluster(canopy_size/3, 0);\n    }\n    \n    // Additional small branches\n    for(i = [0:2]) {\n        angle = 30 + i*20;\n        rotation = 180 + i*60;\n        branch(branch_length[i]/2, angle, rotation);\n    }\n}\n\n// Ground base for stability\ntranslate([0, 0, -2])\ncolor(\"saddlebrown\")\ncylinder(h=2, r=trunk_radius*2.2, $fn=32);",
    "renders": true
  },
  {
    "plant": "money",
    "openscad_code": "// Money Plant (Pilea peperomioides) - Realistic Style\n// Overall height: 120mm, pot diameter: 60mm\n\n$fn = 32;\n\n// Main module\nmodule money_plant() {\n    // Plant pot\n    union() {\n        // Pot body\n        cylinder(h = 40, d1 = 60, d2 = 50);\n        \n        // Pot rim\n        translate([0, 0, 40])\n            cylinder(h = 5, d1 = 62, d2 = 60);\n            \n        // Soil surface\n        translate([0, 0, 38])\n            cylinder(h = 2, d = 58);\n    }\n    \n    // Central stem\n    translate([0, 0, 40])\n        cylinder(h = 80, d = 4);\n    \n    // Generate leaves at different heights\n    for(i = [1:4]) {\n        rotate([0, 0, i * 90])\n            translate([0, 0, 45 + i * 15])\n                leaf_cluster();\n    }\n}\n\n// Single leaf cluster\nmodule leaf_cluster() {\n    // Stem from main trunk\n    translate([0, 0, 0])\n        rotate([20, 0, 30])\n            cylinder(h = 25, d = 2);\n    \n    // Leaves attached to stem\n    for(j = [0:2]) {\n        rotate([0, 0, j * 120])\n            translate([8, 0, 20 - j * 5])\n                rotate([90, 0, 10])\n                    money_leaf(20 - j * 2);\n    }\n}\n\n// Individual money plant leaf\nmodule money_leaf(size) {\n    // Leaf blade\n    difference() {\n        // Main leaf shape\n        scale([1, 1.2, 0.3])\n            sphere(d = size);\n        \n        // Leaf indent\n        translate([size/4, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h = size/2, d = size/4);\n                \n        // Petiole hole\n        translate([0, 0, -size/2])\n            cylinder(h = size, d = 2);\n    }\n    \n    // Petiole (leaf stem)\n    translate([0, 0, -size/2])\n        rotate([0, 0, 90])\n            cylinder(h = size/3, d = 2);\n}\n\n// Generate the complete plant\nmoney_plant();",
    "renders": true
  },
  {
    "plant": "christmas",
    "openscad_code": "// Christmas Plant - Realistic Poinsettia with Pot\n// Overall height ~120mm, printable in one piece\n\n// Parameters\npot_height = 35;\npot_radius = 30;\npot_thick = 2;\nsoil_height = 10;\nstem_height = 60;\nstem_radius = 3;\nleaf_thick = 1.2;\nbract_length = 25;\nbract_width = 15;\nbract_count = 7;\nleaf_length = 20;\nleaf_width = 12;\n\n// Pot with drainage hole\nmodule pot() {\n    difference() {\n        union() {\n            // Outer pot\n            cylinder(h = pot_height, r1 = pot_radius, r2 = pot_radius * 0.8, $fn = 60);\n            // Rim\n            translate([0, 0, pot_height])\n                cylinder(h = 5, r1 = pot_radius + 3, r2 = pot_radius + 3, $fn = 60);\n        }\n        // Inner cavity\n        translate([0, 0, pot_thick])\n            cylinder(h = pot_height + 1, r1 = pot_radius - pot_thick, r2 = (pot_radius - pot_thick) * 0.8, $fn = 60);\n        // Drainage hole\n        translate([0, 0, -1])\n            cylinder(h = pot_thick + 2, r = 4, $fn = 20);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, pot_height - soil_height])\n        cylinder(h = soil_height + 1, r = pot_radius - pot_thick - 1, $fn = 60);\n}\n\n// Main stem\nmodule stem() {\n    translate([0, 0, pot_height - soil_height])\n        cylinder(h = stem_height, r = stem_radius, $fn = 20);\n}\n\n// Red bract (modified leaf)\nmodule bract(l, w) {\n    // Tapered leaf shape using hull of spheres\n    hull() {\n        translate([0, 0, -leaf_thick/2])\n            sphere(r = w/2, $fn = 20);\n        translate([l - 5, 0, -leaf_thick/2])\n            sphere(r = 2, $fn = 10);\n    }\n    // Vein detail\n    translate([0, 0, leaf_thick/2 + 0.01])\n        cube([l, 0.5, 0.5], center = true);\n}\n\n// Green leaf\nmodule green_leaf(l, w) {\n    // Simple leaf shape\n    scale([l, w, leaf_thick])\n        sphere(r = 0.5, $fn = 20);\n}\n\n// Flower cluster (yellow cyathia)\nmodule flower_cluster() {\n    for(i = [0:5]) {\n        rotate([0, 0, i * 60])\n        translate([0, 3, 0])\n            sphere(r = 1.2, $fn = 10);\n    }\n}\n\n// Assembly\nunion() {\n    pot();\n    soil();\n    stem();\n    \n    // Red bracts in star pattern\n    for(i = [0:bract_count - 1]) {\n        rotate([0, 0, i * (360 / bract_count)])\n        translate([0, 0, pot_height + stem_height - 5])\n        rotate([30, 0, 0])\n            bract(bract_length, bract_width);\n    }\n    \n    // Small green leaves below bracts\n    for(i = [0:bract_count - 1]) {\n        rotate([0, 0, i * (360 / bract_count) + (360 / bract_count / 2)])\n        translate([0, 0, pot_height + stem_height - 15])\n        rotate([45, 0, 0])\n            green_leaf(leaf_length, leaf_width);\n    }\n    \n    // Flower cluster at center\n    translate([0, 0, pot_height + stem_height + 2])\n        flower_cluster();\n}",
    "renders": true
  },
  {
    "plant": "easter",
    "openscad_code": "// Easter Plant - Daffodil in a pot\n// Size: ~100 mm tall\n\n// Overall parameters\npot_d = 40;\npot_h = 30;\nsoil_h = 10;\nwall_th = 2;\n\nmodule pot() {\n    // Outer pot\n    difference() {\n        cylinder(h = pot_h, d1 = pot_d, d2 = 35, $fn = 36);\n        translate([0, 0, wall_th])\n            cylinder(h = pot_h, d1 = pot_d - wall_th*2, d2 = 35 - wall_th*2, $fn = 36);\n    }\n    // Base disk\n    cylinder(h = wall_th, d = pot_d, $fn = 36);\n}\n\nmodule soil() {\n    // Soil surface\n    translate([0, 0, pot_h - soil_h])\n        cylinder(h = soil_h, d = pot_d - wall_th*2, $fn = 36);\n}\n\nmodule stem() {\n    // Central stem\n    cylinder(h = 60, d = 3, $fn = 8);\n}\n\nmodule leaf(h, angle, base_r) {\n    // Simple leaf blade\n    rotate([0, 0, angle])\n        translate([base_r, 0, -h/2])\n            rotate([90, 0, 0])\n                scale([1, 4, 0.5])\n                    cylinder(h = h, d = 3, $fn = 6);\n}\n\nmodule trumpet() {\n    // Daffodil trumpet\n    color(\"yellow\")\n    translate([0, 0, 62])\n        rotate([0, 180, 0])\n            cylinder(h1 = 0, h2 = 10, d1 = 10, d2 = 6, $fn = 36);\n}\n\nmodule petal() {\n    // Individual petal\n    color(\"white\")\n    scale([1, 1.5, 0.5])\n        sphere(d = 8, $fn = 8);\n}\n\nmodule petals() {\n    // Six petals around trumpet\n    for(i = [0:5]) {\n        rotate([0, 0, i*60])\n            translate([8, 0, 60])\n                petal();\n    }\n}\n\nmodule egg() {\n    // Simple easter egg\n    color(\"pink\")\n    scale([1, 1.3, 1])\n        sphere(d = 8, $fn = 32);\n}\n\nmodule easter_eggs() {\n    // Three eggs nestled in soil\n    translate([10, 10, pot_h - soil_h + 4]) egg();\n    translate([-12, -8, pot_h - soil_h + 4]) rotate([0, 0, 45]) egg();\n    translate([8, -12, pot_h - soil_h + 4]) rotate([0, 0, -30]) egg();\n}\n\n// Assemble the Easter plant\nunion() {\n    pot();\n    translate([0, 0, wall_th]) soil();\n    translate([0, 0, pot_h - soil_h]) stem();\n    translate([0, 0, pot_h - soil_h]) {\n        for(i = [0:2]) {\n            leaf(30, i*120 + 30, 2);\n            leaf(25, i*120 - 30, 2);\n        }\n    }\n    petals();\n    trumpet();\n    easter_eggs();\n}",
    "renders": true
  },
  {
    "plant": "thanksgiving",
    "openscad_code": "// Thanksgiving Cornucopia with Pumpkins and Autumn Leaves\n// Realistic style, medium complexity\n\n$fn = 30;\n\n// Overall scale\nscale_factor = 0.8;\n\n// Cornucopia horn\nmodule horn() {\n    // Main horn body - tapered tube\n    difference() {\n        union() {\n            // Outer shell\n            rotate_extrude(angle = 180, convexity = 10) {\n                translate([15, 0, 0]) {\n                    rotate([90, 0, 0]) {\n                        difference() {\n                            circle(d1 = 50, d2 = 20);\n                            circle(d1 = 46, d2 = 16);\n                        }\n                    }\n                }\n            }\n            \n            // Closed end cap\n            rotate([0, 90, 0]) {\n                difference() {\n                    cylinder(h = 2, d = 20);\n                    cylinder(h = 2.1, d = 16);\n                }\n            }\n        }\n        \n        // Opening for hollow interior\n        rotate_extrude(angle = 180, convexity = 10) {\n            translate([15, 0, 0]) {\n                rotate([90, 0, 0]) {\n                    circle(d = 16);\n                }\n            }\n        }\n    }\n}\n\n// Pumpkin module\nmodule pumpkin(size = 10) {\n    // Main pumpkin body - slightly flattened sphere\n    scale([1.1, 1, 1]) {\n        sphere(d = size);\n    }\n    \n    // Pumpkin segments\n    for(i = [0:7]) {\n        rotate([0, 0, i * 45]) {\n            translate([0, -size/2.1, 0]) {\n                scale([0.15, 1, 1]) {\n                    sphere(d = size * 1.1);\n                }\n            }\n        }\n    }\n    \n    // Stem\n    translate([0, 0, size/2]) {\n        cylinder(h = size/4, d1 = size/5, d2 = size/6);\n    }\n}\n\n// Autumn leaf module\nmodule leaf(length = 15, width = 8) {\n    // Main leaf shape\n    scale([length/10, width/10, 0.8]) {\n        difference() {\n            sphere(d = 10);\n            translate([5, 0, 0]) {\n                sphere(d = 8);\n            }\n            translate([-5, 0, 0]) {\n                sphere(d = 8);\n            }\n        }\n    }\n    \n    // Leaf veins\n    translate([0, 0, 0.5]) {\n        color(\"brown\") {\n            // Central vein\n            cube([length, 0.5, 0.5], center = true);\n            \n            // Side veins\n            for(i = [-1, 1]) {\n                rotate([0, 0, i * 30]) {\n                    translate([length/4, 0, 0]) {\n                        cube([length/2, 0.3, 0.3], center = true);\n                    }\n                }\n                rotate([0, 0, i * 60]) {\n                    translate([length/3, 0, 0]) {\n                        cube([length/3, 0.3, 0.3], center = true);\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Main assembly\nscale([scale_factor, scale_factor, scale_factor]) {\n    // Cornucopia\n    translate([0, -20, 0]) {\n        rotate([0, 0, 45]) {\n            horn();\n        }\n    }\n    \n    // Pumpkins inside\n    translate([10, -10, 5]) {\n        color(\"orange\") {\n            pumpkin(12);\n        }\n    }\n    \n    translate([5, -15, 8]) {\n        color(\"darkorange\") {\n            pumpkin(8);\n        }\n    }\n    \n    translate([-5, -12, 3]) {\n        color(\"orangered\") {\n            pumpkin(10);\n        }\n    }\n    \n    // Small pumpkin on rim\n    translate([-20, -25, 15]) {\n        color(\"orange\") {\n            pumpkin(7);\n        }\n    }\n    \n    // Autumn leaves scattered\n    translate([15, -5, 15]) {\n        rotate([90, 0, 45]) {\n            color(\"red\") {\n                leaf(12, 7);\n            }\n        }\n    }\n    \n    translate([8, -8, 12]) {\n        rotate([90, 0, -30]) {\n            color(\"gold\") {\n                leaf(10, 6);\n            }\n        }\n    }\n    \n    translate([0, -18, 18]) {\n        rotate([90, 0, 60]) {\n            color(\"darkred\") {\n                leaf(8, 5);\n            }\n        }\n    }\n    \n    // Additional leaves around base\n    for(i = [0:5]) {\n        angle = i * 60;\n        radius = 30 + i * 3;\n        translate([radius * cos(angle), radius * sin(angle) - 20, 0]) {\n            rotate([90, 0, angle + 15]) {\n                color(i % 2 == 0 ? \"brown\" : \"goldenrod\") {\n                    leaf(6 + i, 4 + i/2);\n                }\n            }\n        }\n    }\n}",
    "renders": true
  },
  {
    "plant": "cactus",
    "openscad_code": "// Realistic medium-complexity 3D printable cactus\n// Overall height ≈ 110 mm, max width ≈ 60 mm\n\n$fn = 30; // smooth curves\n\n// Main trunk module with slight taper\nmodule trunk(h = 70, r_base = 18, r_top = 15) {\n    union() {\n        // tapered cylinder for trunk\n        cylinder(h1 = h, r1 = r_base, r2 = r_top, $fn = 40);\n        \n        // vertical ribs for texture\n        for (i = [0 : 30 : 359]) {\n            rotate([0, 0, i])\n                translate([r_base - 1.2, -1.5, 0])\n                    cube([3, 3, h]);\n        }\n    }\n}\n\n// Arm segment with taper and rounded tip\nmodule arm(len = 35, r_start = 12, r_end = 8) {\n    difference() {\n        hull() {\n            // start cylinder\n            translate([0, 0, 0])\n                cylinder(h = 0.1, r = r_start);\n            // end cylinder\n            translate([0, 0, len])\n                sphere(r = r_end);\n        }\n        \n        // hollow it out for printing (2 mm walls)\n        translate([0, 0, -1])\n            cylinder(h = len + 2, r = r_start - 2);\n    }\n}\n\n// Small bump / areole detail\nmodule areole() {\n    sphere(d = 4);\n}\n\n// Spine cluster\nmodule spines() {\n    for (a = [0 : 60 : 300]) {\n        rotate([0, 0, a])\n            translate([2, 0, 0])\n                rotate([90, 0, 0])\n                    cylinder(h = 4, r = 0.4);\n    }\n}\n\n// Main assembly\nunion() {\n    // trunk\n    trunk();\n\n    // left arm\n    translate([0, 0, 45])\n        rotate([0, -20, -35])\n            arm();\n\n    // right arm\n    translate([0, 0, 55])\n        rotate([0, 20, 45])\n            arm();\n\n    // top arm\n    translate([0, 0, 65])\n        rotate([20, 0, 0])\n            arm(len = 30, r_start = 10, r_end = 6);\n\n    // areoles with spines along trunk\n    for (z = [15 : 20 : 55]) {\n        for (a = [0 : 90 : 270]) {\n            rotate([0, 0, a])\n                translate([17, 0, z]) {\n                    areole();\n                    spines();\n                }\n        }\n    }\n\n    // areoles on arms\n    for (z = [5 : 10 : 25]) {\n        for (a = [0 : 120 : 240]) {\n            rotate([0, -20, -35])\n                translate([9, 0, z])\n                    rotate([0, 0, a]) {\n                        areole();\n                        spines();\n                    }\n            rotate([0, 20, 45])\n                translate([9, 0, z])\n                    rotate([0, 0, a]) {\n                        areole();\n                        spines();\n                    }\n            rotate([20, 0, 0])\n                translate([7, 0, z])\n                    rotate([0, 0, a]) {\n                        areole();\n                        spines();\n                    }\n        }\n    }\n\n    // bottom base ring for print stability\n    translate([0, 0, -2])\n        cylinder(h = 2, r = 20);\n}\n\n// Hollow interior for material saving\ndifference() {\n    children();\n    translate([0, 0, -1])\n        cylinder(h = 75, r = 13);\n}",
    "renders": true
  },
  {
    "plant": "succulent",
    "openscad_code": "// Realistic succulent plant - medium complexity\n// Echeveria-type rosette with layered thick leaves\n\n// Main parameters\n$fn = 24;  // Smooth curves\nscale_factor = 1;  // Adjust overall size\npot_d = 60 * scale_factor;\npot_h = 45 * scale_factor;\nplant_h = 80 * scale_factor;\n\n// Main module\nmodule succulent_plant() {\n    // Pot\n    translate([0, 0, 0]) {\n        difference() {\n            cylinder(h = pot_h, d1 = pot_d, d2 = pot_d * 0.8);\n            translate([0, 0, 2]) cylinder(h = pot_h, d1 = pot_d - 4, d2 = pot_d * 0.8 - 4);\n        }\n    }\n    \n    // Soil surface\n    translate([0, 0, pot_h - 2]) {\n        scale([1, 1, 0.3]) sphere(d = pot_d * 0.75);\n    }\n    \n    // Central stem\n    translate([0, 0, pot_h - 5]) {\n        cylinder(h = 15, d = 8);\n    }\n    \n    // Rosette layers\n    for (i = [0:3]) {\n        rosette_layer(i);\n    }\n}\n\n// Individual rosette layer\nmodule rosette_layer(layer) {\n    layer_height = pot_h + 10 + layer * 12;\n    leaf_count = 8 + layer * 4;\n    leaf_length = 30 - layer * 5;\n    leaf_width = 15 - layer * 3;\n    \n    for (i = [0:leaf_count - 1]) {\n        angle = i * 360 / leaf_count;\n        \n        translate([0, 0, layer_height]) {\n            rotate([0, 0, angle]) {\n                translate([leaf_length * 0.3, 0, 0]) {\n                    rotate([0, 20 + layer * 10, 0]) {\n                        scale([1, 0.6, 0.3]) {\n                            succulent_leaf(leaf_length, leaf_width);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Individual leaf shape\nmodule succulent_leaf(length, width) {\n    // Main leaf body\n    hull() {\n        translate([0, 0, 0]) sphere(d = width);\n        translate([length, 0, 0]) sphere(d = width * 0.7);\n    }\n    \n    // Leaf tip\n    translate([length, 0, 0]) {\n        rotate([0, 90, 0]) {\n            cylinder(h = width * 0.5, d1 = width * 0.7, d2 = 0.1);\n        }\n    }\n    \n    // Leaf thickness with hollow center\n    difference() {\n        // Outer shape\n        hull() {\n            translate([0, 0, 0]) sphere(d = width + 2);\n            translate([length, 0, 0]) sphere(d = width * 0.7 + 2);\n        }\n        \n        // Inner hollow\n        hull() {\n            translate([0, 0, 0]) sphere(d = width);\n            translate([length, 0, 0]) sphere(d = width * 0.7);\n        }\n    }\n}\n\n// Baby offsets\nmodule baby_offsets() {\n    for (i = [0:2]) {\n        angle = i * 120;\n        translate([pot_d * 0.4, 0, pot_h]) {\n            rotate([0, 0, angle]) {\n                translate([15, 0, 5]) {\n                    scale(0.4) {\n                        rosette_layer(0);\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Generate the complete plant\nunion() {\n    succulent_plant();\n    baby_offsets();\n}",
    "renders": true
  },
  {
    "plant": "echeveria",
    "openscad_code": "// Echeveria Plant - Realistic Style, Medium Complexity\n// 3D printable echeveria succulent with rosette structure\n\n// Global parameters\n$fn = 24;  // Smooth curves for printing\nplant_height = 60;  // Total height in mm\nbase_diameter = 80;  // Rosette diameter at base\nwall_thickness = 2;  // 3D printable wall thickness\nleaf_thickness = 1.5;  // Leaf thickness for printing\n\n// Main echeveria module\nmodule echeveria() {\n    // Central stem/trunk\n    translate([0, 0, -5]) \n        cylinder(h=10, d=8, $fn=16);\n    \n    // Rosette leaves in spiral pattern\n    for (i = [0:35]) {\n        translate([0, 0, 0])\n            rotate([0, 0, i * 137.5])  // Golden angle for natural spiral\n            translate([0, 15 + i * 0.8, 0])\n                rotate([85 - i * 0.7, 0, 0])  // Leaves angle up gradually\n                    scale([1, 1 - i * 0.01, 1])\n                        echeveria_leaf(35 - i * 0.5);\n    }\n    \n    // Inner smaller leaves\n    for (i = [0:20]) {\n        translate([0, 0, 5])\n            rotate([0, 0, i * 139.5])\n            translate([0, 5 + i * 0.4, 0])\n                rotate([75 - i * 0.5, 0, 0])\n                    scale([0.7, 0.7, 1])\n                        echeveria_leaf(20 - i * 0.3);\n    }\n}\n\n// Individual leaf module with realistic echeveria shape\nmodule echeveria_leaf(length) {\n    // Main leaf body - tapered cylinder with rounded tip\n    translate([0, 0, -leaf_thickness/2])\n        linear_extrude(height=leaf_thickness, convexity=10)\n            difference() {\n                // Outer leaf shape\n                scale([1, 0.4, 1])\n                    circle(d=length);\n                \n                // Inner hollow for wall thickness\n                offset(-wall_thickness)\n                    scale([1, 0.4, 1])\n                        circle(d=length - wall_thickness*2);\n            };\n    \n    // Leaf tip - small sphere for rounded end\n    translate([length/2, 0, 0])\n        sphere(d=leaf_thickness*2);\n    \n    // Leaf ridges for texture\n    for (r = [0.2, 0.4, 0.6, 0.8]) {\n        translate([r * length/2 - length/4, 0, leaf_thickness/2 + 0.1])\n            rotate([90, 0, 0])\n                cylinder(h=length*0.3, d=0.5, $fn=8);\n    }\n}\n\n// Base pot for stability\nmodule base_pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=15, d=base_diameter + 20, $fn=32);\n        \n        // Inner hollow\n        translate([0, 0, -1])\n            cylinder(h=17, d=base_diameter + 16, $fn=32);\n        \n        // Drainage hole\n        translate([0, 0, -0.5])\n            cylinder(h=16, d=6, $fn=16);\n    }\n}\n\n// Soil surface\nmodule soil_surface() {\n    translate([0, 0, 10])\n        difference() {\n            cylinder(h=3, d=base_diameter + 16, $fn=32);\n            cylinder(h=3.5, d=base_diameter + 12, $fn=32);\n        }\n}\n\n// Assembly\ntranslate([0, 0, 15])\n    echeveria();\n\ntranslate([0, 0, 0])\n    base_pot();\n\ntranslate([0, 0, 10])\n    soil_surface();",
    "renders": true
  },
  {
    "plant": "haworthia",
    "openscad_code": "// Haworthia Plant - Realistic Medium Complexity\n// Size: ~90mm diameter x 70mm height\n\n$fn = 36;\n\n// Main module\nmodule haworthia() {\n    // Base pot\n    difference() {\n        cylinder(h = 25, d = 90, center = true);\n        translate([0, 0, 2])\n            cylinder(h = 30, d = 84, center = true);\n    }\n    \n    // Soil surface\n    translate([0, 0, 11.5])\n        cylinder(h = 2, d = 84);\n    \n    // Central rosette\n    translate([0, 0, 12])\n        rosette();\n}\n\n// Leaf module with haworthia characteristics\nmodule haworthia_leaf(height = 25, width = 8, thickness = 2.5, angle = 0, bend = 0) {\n    rotate([0, 0, angle])\n    translate([0, 0, height/2])\n    rotate([bend, 0, 0])\n    union() {\n        // Main leaf body\n        scale([1, width/height, thickness/height])\n            sphere(d = height);\n        \n        // Leaf tip\n        translate([0, 0, height/2 - 1])\n            cylinder(h = 5, d1 = width * 0.8, d2 = 1);\n        \n        // Surface ridges\n        for(i = [0:2]) {\n            rotate([0, 0, i * 120])\n            translate([width/4, 0, -height/4])\n                scale([0.3, 0.1, 1])\n                sphere(d = height * 0.8);\n        }\n    }\n}\n\n// Complete rosette\nmodule rosette() {\n    // Outer ring of leaves\n    for(i = [0:11]) {\n        rotate([0, 0, i * 30])\n        translate([20, 0, 0])\n        haworthia_leaf(\n            height = 25 + (i % 2) * 5,\n            width = 7 + (i % 3) * 2,\n            thickness = 2.5,\n            angle = i * 30,\n            bend = 10 + (i % 3) * 5\n        );\n    }\n    \n    // Middle ring\n    for(i = [0:7]) {\n        rotate([0, 0, i * 45])\n        translate([10, 0, 0])\n        haworthia_leaf(\n            height = 20,\n            width = 6,\n            thickness = 2.5,\n            angle = i * 45 + 22.5,\n            bend = 15\n        );\n    }\n    \n    // Center leaves\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n        haworthia_leaf(\n            height = 15,\n            width = 5,\n            thickness = 3,\n            angle = i * 90 + 45,\n            bend = 20\n        );\n    }\n    \n    // Flower stalk\n    translate([0, 0, 30])\n    cylinder(h = 30, d = 3);\n    \n    // Tiny flowers\n    for(i = [0:5]) {\n        rotate([0, 0, i * 72])\n        translate([5, 0, 45])\n        sphere(d = 3);\n    }\n}\n\n// Generate the plant\nhaworthia();",
    "renders": true
  },
  {
    "plant": "sedum",
    "openscad_code": "// Sedum plant with realistic medium complexity\n// 3D printable model, ~80mm tall\n\n// Stem module - cylindrical with taper\nmodule stem(h=15, r_base=3, r_top=2) {\n    union() {\n        cylinder(h=h, r1=r_base, r2=r_top, $fn=16);\n        // Add small ridges for texture\n        for(i=[0:45:315]) {\n            rotate([0, 0, i])\n            translate([r_base-0.5, -0.5, 0])\n            cube([1, 1, h]);\n        }\n    }\n}\n\n// Leaf module - succulent teardrop shape\nmodule leaf(length=12, width=8, thickness=4) {\n    // Main leaf body\n    difference() {\n        union() {\n            // Central oval\n            scale([1, width/length, thickness/length])\n            sphere(d=length, $fn=32);\n            \n            // Tapered tip\n            translate([length/2, 0, 0])\n            rotate([0, 90, 0])\n            cylinder(h=length/4, r1=thickness/2, r2=0.5, $fn=16);\n        }\n        \n        // Hollow center for realistic thickness\n        translate([0, 0, -1])\n        scale([0.7, 0.7, 0.8])\n        sphere(d=length*0.8, $fn=32);\n    }\n}\n\n// Rosette cluster - multiple leaves in circular pattern\nmodule rosette(leaves=12, radius=25, height_offset=0) {\n    for(i=[0:360/leaves:359]) {\n        rotate([0, 0, i])\n        translate([radius, 0, height_offset])\n        rotate([0, -30, 20])\n        color(\"darkgreen\")\n        leaf();\n    }\n}\n\n// Secondary stem with smaller rosette\nmodule branch_stem(length=20, angle=45, rosette_size=15) {\n    rotate([angle, 0, 0])\n    translate([0, 0, 5])\n    union() {\n        // Branch stem\n        color(\"green\")\n        stem(h=length, r_base=2, r_top=1.5);\n        \n        // Rosette at branch end\n        translate([0, 0, length])\n        rosette(leaves=8, radius=rosette_size, height_offset=0);\n    }\n}\n\n// Main plant assembly\nmodule sedum_plant() {\n    union() {\n        // Main stem\n        color(\"darkgreen\")\n        stem(h=30, r_base=4, r_top=3);\n        \n        // Main rosette at top\n        translate([0, 0, 30])\n        rosette(leaves=16, radius=35);\n        \n        // First tier of branches\n        for(i=[0:60:300]) {\n            rotate([0, 0, i])\n            translate([0, 3, 25])\n            branch_stem(length=25, angle=45, rosette_size=20);\n        }\n        \n        // Second tier of smaller branches\n        for(i=[30:60:330]) {\n            rotate([0, 0, i])\n            translate([0, 2, 15])\n            branch_stem(length=15, angle=60, rosette_size=12);\n        }\n        \n        // Base for stability\n        translate([0, 0, -5])\n        cylinder(h=5, r=8, $fn=32);\n    }\n}\n\n// Create the plant scaled to 80mm height\nscale([1, 1, 1])\nsedum_plant();",
    "renders": true
  },
  {
    "plant": "crassula",
    "openscad_code": "// Crassula (jade plant) – medium-complexity, 3-D-printable, realistic style\n// Overall height ≈ 90 mm, max width ≈ 70 mm\n\n$fn = 36;               // smooth curves\n\nstem_d   = 8;           // main trunk diameter\nstem_h   = 25;          // main trunk height\npot_d    = 45;          // pot outer diameter\npot_h    = 25;          // pot height\nwall_t   = 2;           // printable wall thickness\n\n// Helper for rounded leaf cross-section\nmodule leaf_profile(r = 1, h = 1) {\n    difference() {\n        cylinder(r = r, h = h, center = true);\n        translate([0, 0, -h/2 - 0.1])\n            cube([r*2, r*2, h + 0.2], center = true);\n    }\n}\n\n// Single jade leaf\nmodule leaf(len = 12, wid = 8, thick = 2) {\n    hull() {\n        translate([0, 0, thick/2]) leaf_profile(wid/2, thick);\n        translate([0, len - wid/2, thick/2]) leaf_profile(wid/3, thick);\n    }\n}\n\n// Cluster of leaves around a stem joint\nmodule leaf_cluster(count = 5, scale = 1) {\n    for (i = [0:count-1])\n        rotate([0, 0, i*360/count])\n            translate([0, 5*scale, 0])\n                rotate([30, 0, 0])\n                    scale([scale, scale, scale])\n                        leaf();\n}\n\n// Branching structure\nmodule branch(depth = 0, len = 15, dia = 3, angle = 30) {\n    if (depth < 3) {\n        // main segment cylinder\n        cylinder(d = dia, h = len, center = false);\n        \n        // joint disk to thicken printable connection\n        translate([0, 0, len])\n            cylinder(d = dia + wall_t*2, h = wall_t, center = false);\n        \n        // leaves at joint\n        translate([0, 0, len])\n            leaf_cluster(count = 5 + depth*2, scale = 1.0 - depth*0.15);\n        \n        // two recursive sub-branches\n        translate([0, 0, len + wall_t])\n            rotate([angle + 20, 0, 0])\n                branch(depth + 1, len*0.8, dia*0.8, angle);\n        translate([0, 0, len + wall_t])\n            rotate([-angle, 0, 0])\n                branch(depth + 1, len*0.8, dia*0.8, angle);\n    }\n}\n\n// Pot with drainage hole\nmodule pot() {\n    difference() {\n        cylinder(d = pot_d, h = pot_h);\n        translate([0, 0, wall_t])\n            cylinder(d = pot_d - 2*wall_t, h = pot_h);\n    }\n    // drainage hole\n    translate([0, 0, -0.1])\n        cylinder(d = 4, h = wall_t + 0.2);\n}\n\n// Main trunk\nmodule main_stem() {\n    cylinder(d = stem_d, h = stem_h);\n    translate([0, 0, stem_h])\n        cylinder(d = stem_d + 2*wall_t, h = wall_t);\n}\n\n// Assemble plant\nunion() {\n    // pot\n    pot();\n    \n    // soil level flush with pot lip\n    translate([0, 0, pot_h])\n        union() {\n            // main trunk\n            main_stem();\n            \n            // three primary branches around trunk top\n            for (ang = [0, 120, 240])\n                rotate([0, 0, ang])\n                    translate([0, 0, stem_h + wall_t])\n                        rotate([35, 0, 0])\n                            branch(0, 20, 4, 30);\n        }\n}",
    "renders": true
  },
  {
    "plant": "kalanchoe",
    "openscad_code": "// Kalanchoe Plant - Realistic Style, Medium Complexity\n// 3D printable succulent with proper proportions and structural details\n\n// Parameters for overall sizing\nplant_height = 80;\npot_height = 30;\npot_diameter = 45;\nstem_thickness = 3;\nleaf_thickness = 2;\n\n// Module for creating a single leaf with realistic kalanchoe shape\nmodule kalanchoe_leaf(length, width, thickness) {\n    // Main leaf body - slightly curved ellipsoid\n    translate([0, 0, thickness/2])\n        scale([length/2, width/2, thickness/2])\n        sphere(2, $fn=32);\n    \n    // Leaf tip - elongated point\n    translate([length/2, 0, thickness/2])\n        rotate([0, 90, 0])\n        cylinder(h=length/4, r1=width/3, r2=0, $fn=16);\n    \n    // Leaf base - wider at stem attachment\n    translate([-length/2, 0, thickness/2])\n        rotate([0, -90, 0])\n        cylinder(h=length/8, r1=width/2, r2=width/3, $fn=16);\n}\n\n// Module for a stem segment\nmodule stem_segment(height, radius) {\n    cylinder(h=height, r=radius, $fn=16);\n}\n\n// Module for a complete stem with leaves in rosette pattern\nmodule stem_with_rosette(stem_h, stem_r, leaf_count) {\n    // Main stem\n    stem_segment(stem_h, stem_r);\n    \n    // Leaves arranged in pairs along stem\n    for(i = [0:leaf_count-1]) {\n        angle = 360 * i / leaf_count;\n        height_offset = stem_h * 0.3 + (i * stem_h * 0.1);\n        \n        // Create opposing leaf pair\n        translate([0, 0, height_offset])\n        rotate([0, 0, angle]) {\n            // Left leaf\n            translate([stem_r + 8, 0, 0])\n            rotate([0, -20, -30])\n            kalanchoe_leaf(15, 8, leaf_thickness);\n            \n            // Right leaf\n            translate([-stem_r - 8, 0, 0])\n            rotate([0, 20, 30])\n            mirror([1, 0, 0])\n            kalanchoe_leaf(15, 8, leaf_thickness);\n        }\n    }\n    \n    // Top rosette cluster\n    for(j = [0:5]) {\n        rosette_angle = 360 * j / 6;\n        translate([0, 0, stem_h])\n        rotate([0, 0, rosette_angle])\n        rotate([0, -15, 0])\n        translate([0, 5, 0])\n        kalanchoe_leaf(12, 6, leaf_thickness);\n    }\n}\n\n// Module for flower cluster (small decorative elements)\nmodule flower_cluster() {\n    // Tiny flowers on thin stems\n    for(k = [0:3]) {\n        flower_angle = 90 * k;\n        translate([0, 0, plant_height - 10])\n        rotate([0, 0, flower_angle])\n        translate([8, 0, 0])\n        rotate([0, 30, 0]) {\n            // Flower stem\n            cylinder(h=12, r=0.5, $fn=8);\n            // Flower head\n            translate([0, 0, 12])\n            sphere(2, $fn=16);\n        }\n    }\n}\n\n// Module for the pot with drainage hole\nmodule plant_pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=pot_height, r=pot_diameter/2, $fn=64);\n        \n        // Inner hollow\n        translate([0, 0, pot_height/2])\n        cylinder(h=pot_height - 2, r=pot_diameter/2 - 2, $fn=64);\n        \n        // Drainage hole\n        translate([0, 0, 2])\n        cylinder(h=5, r=3, $fn=16);\n    }\n    \n    // Soil surface\n    translate([0, 0, pot_height - 2])\n    cylinder(h=2, r=pot_diameter/2 - 2, $fn=64);\n}\n\n// Main assembly\nunion() {\n    // Pot\n    plant_pot();\n    \n    // Main plant stems\n    translate([0, 0, pot_height - 2]) {\n        // Center stem\n        stem_with_rosette(plant_height - pot_height, stem_thickness, 4);\n        \n        // Side shoots\n        for(m = [0:2]) {\n            side_angle = 120 * m;\n            rotate([0, 0, side_angle])\n            translate([5, 0, 0])\n            rotate([0, 15, 0])\n            stem_with_rosette((plant_height - pot_height) * 0.7, stem_thickness * 0.8, 3);\n        }\n    }\n    \n    // Flower clusters on mature stems\n    flower_cluster();\n}",
    "renders": true
  },
  {
    "plant": "senecio",
    "openscad_code": "// Senecio Plant - Realistic Style, Medium Complexity\n// Size: ~120mm tall, 3D printable with 2mm walls\n\nmodule stem_segment(h, r, angle) {\n    // Single stem segment with slight taper\n    translate([0, 0, h/2])\n    rotate([0, angle, 0])\n    cylinder(h=h, r1=r, r2=r*0.8, $fn=8);\n}\n\nmodule leaf(length, width, thickness) {\n    // Senecio leaf - elongated oval shape\n    difference() {\n        // Main leaf body\n        scale([width, length, thickness])\n        sphere(r=1, $fn=16);\n        \n        // Leaf tip taper\n        translate([0, length*0.8, -thickness])\n        cube([width*2, length*0.4, thickness*2], center=true);\n    }\n}\n\nmodule foliage_cluster(x, y, z, count, scale_factor) {\n    // Cluster of leaves at a node\n    translate([x, y, z])\n    for(i = [0:count-1]) {\n        rotate([0, 0, i*(360/count) + rand(i)*15])\n        translate([0, 5*scale_factor, 0])\n        rotate([rand(i)*20 - 10, 0, 0])\n        scale(scale_factor)\n        leaf(15, 3, 1.5);\n    }\n}\n\nmodule main_stem() {\n    // Main vertical stem with segments\n    union() {\n        // Base segment (thickest)\n        stem_segment(20, 4, 0);\n        \n        // Middle segments\n        for(i = [1:4]) {\n            translate([0, 0, i*20])\n            stem_segment(20, 4-i*0.5, rand(i*10)*5);\n        }\n        \n        // Top segment\n        translate([0, 0, 100])\n        stem_segment(15, 2, 0);\n    }\n}\n\nmodule branching_stems() {\n    // Secondary stems branching from main\n    for(i = [1:3]) {\n        height = 30 + i*20;\n        angle = 30 + rand(i)*20;\n        \n        translate([0, 0, height])\n        rotate([0, angle, i*120])\n        union() {\n            stem_segment(25, 2.5, 0);\n            \n            // Tertiary branches\n            translate([0, 0, 15])\n            rotate([0, -20, 0])\n            stem_segment(15, 1.5, 0);\n        }\n    }\n}\n\nmodule roots() {\n    // Simple root system for stability\n    difference() {\n        // Root bulb\n        translate([0, 0, -15])\n        scale([1.5, 1.5, 1])\n        sphere(r=10, $fn=16);\n        \n        // Root indentations\n        for(i = [0:5]) {\n            rotate([0, 0, i*60])\n            translate([8, 0, -15])\n            rotate([90, 0, 0])\n            cylinder(h=15, r1=3, r2=1, $fn=6);\n        }\n    }\n}\n\nmodule rand(seed) {\n    // Pseudo-random function for natural variation\n    rands(0, 1, 1, seed)[0];\n}\n\n// Main plant assembly\nunion() {\n    // Roots and base\n    roots();\n    \n    // Main structure\n    main_stem();\n    branching_stems();\n    \n    // Foliage placement\n    foliage_cluster(0, 0, 110, 5, 1);\n    foliage_cluster(0, 0, 90, 4, 0.8);\n    foliage_cluster(0, 0, 70, 3, 0.7);\n    \n    // Branch foliage\n    for(i = [1:3]) {\n        height = 30 + i*20;\n        angle = 30 + rand(i)*20;\n        \n        // Primary branch leaves\n        translate([0, 0, height])\n        rotate([0, angle, i*120])\n        translate([0, 25, 0])\n        foliage_cluster(0, 0, 0, 3, 0.6);\n        \n        // Secondary branch leaves\n        translate([0, 0, height])\n        rotate([0, angle, i*120])\n        translate([0, 15, 0])\n        rotate([0, -20, 0])\n        translate([0, 7.5, 0])\n        foliage_cluster(0, 0, 0, 2, 0.4);\n    }\n}",
    "renders": true
  },
  {
    "plant": "burro",
    "openscad_code": "// Burro's Tail Plant (Sedum morganianum) - Realistic style, medium complexity\n// Overall height ~120mm, width ~80mm, suitable for 3D printing\n\n// Stem module with realistic tapering and joints\nmodule stem_segment(h, r_base, r_top, detail=true) {\n    difference() {\n        cylinder(h=h, r1=r_base, r2=r_top, $fn=20);\n        \n        // Add slight texture for realistic stem surface\n        if (detail) {\n            for (i = [0:5:360]) {\n                rotate([0, 0, i])\n                    translate([r_base*0.7, -0.5, 0])\n                        cube([r_base*0.3, 1, h]);\n            }\n        }\n    }\n}\n\n// Single leaf module - tear-drop shaped with slight curve\nmodule leaf(length=18, width=6, thickness=2.5) {\n    // Main leaf body\n    hull() {\n        sphere(d=width, $fn=12);\n        translate([0, 0, length*0.7]) \n            sphere(d=width*0.4, $fn=12);\n    }\n    \n    // Add slight bulge for realistic plumpness\n    translate([0, 0, length*0.3])\n        scale([1, 1, 0.6])\n            sphere(d=width*1.1, $fn=12);\n}\n\n// Branch with multiple leaves\nmodule branch(length=25, leaf_count=8, angle=45) {\n    union() {\n        // Main branch stem\n        stem_segment(length, 2.5, 1.5);\n        \n        // Leaves along branch with alternating pattern\n        for (i = [0:leaf_count-1]) {\n            rotate([0, 0, i*360/leaf_count + (i%2)*30]) \n                translate([0, 0, i*length/leaf_count])\n                    rotate([angle, 0, 0])\n                        leaf();\n        }\n    }\n}\n\n// Main hanging cluster\nmodule hanging_cluster(x_pos, y_pos, z_pos, count=5) {\n    translate([x_pos, y_pos, z_pos]) {\n        stem_segment(15, 3, 2);\n        \n        for (i = [0:count-1]) {\n            rotate([0, 0, i*72]) {\n                translate([0, 0, 12])\n                    rotate([80 + sin(i*30)*10, 0, 0])\n                        branch(20 + i*3, 6 + i);\n            }\n        }\n    }\n}\n\n// Pot with drainage details\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=25, r1=25, r2=20, $fn=32);\n        \n        // Inner cavity\n        translate([0, 0, -0.1])\n            cylinder(h=24, r1=22, r2=17, $fn=32);\n        \n        // Drainage holes\n        for (i = [0:3]) {\n            rotate([0, 0, i*90])\n                translate([16, 0, 2])\n                    cylinder(h=5, r=2, $fn=8);\n        }\n    }\n    \n    // Rim detail\n    translate([0, 0, 25])\n        cylinder(h=3, r1=27, r2=25, $fn=32);\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, 25.5])\n        cylinder(h=3, r1=22, r2=17, $fn=32);\n}\n\n// Main plant assembly\nunion() {\n    // Pot and soil\n    pot();\n    soil();\n    \n    // Main stems emerging from soil\n    translate([0, 0, 28]) {\n        // Central hanging cluster\n        hanging_cluster(0, 0, 0, 6);\n        \n        // Side clusters for fullness\n        hanging_cluster(10, 5, 5, 4);\n        hanging_cluster(-8, -6, 3, 3);\n        hanging_cluster(5, -10, 7, 4);\n    }\n    \n    // Smaller trailing stems\n    translate([0, 0, 28]) {\n        for (a = [0:60:359]) {\n            rotate([0, 0, a]) {\n                translate([12, 0, 0])\n                    rotate([70, 0, 0])\n                        branch(15, 4);\n            }\n        }\n    }\n}",
    "renders": true
  },
  {
    "plant": "hen",
    "openscad_code": "// Hen Plant - Realistic style, medium complexity\n// A succulent shaped like a hen with chicks, 3D printable\n\n$fn = 32;  // Smooth curves\n\n// Overall dimensions (mm)\nplant_height = 80;\nplant_width = 90;\nplant_depth = 80;\n\n// Wall thickness for 3D printing\nwall = 2;\n\n// Hen body (main rosette)\nmodule hen_body() {\n    difference() {\n        // Main body - slightly flattened sphere\n        scale([1, 0.8, 0.7]) sphere(d=plant_width);\n        \n        // Hollow out center\n        translate([0, 0, -wall*2])\n            scale([1, 0.8, 0.7]) sphere(d=plant_width-wall*2);\n        \n        // Flat bottom\n        translate([0, 0, -plant_height/2])\n            cube([plant_width*2, plant_width*2, plant_height], center=true);\n    }\n}\n\n// Leaf/scale detail\nmodule leaf(scale_factor=1, angle=0) {\n    translate([0, 0, -2])\n        rotate([0, 0, angle])\n            scale([scale_factor, scale_factor, scale_factor])\n                difference() {\n                    // Leaf shape\n                    scale([0.3, 1, 0.1]) sphere(d=20);\n                    \n                    // Taper the tip\n                    translate([0, 10, 0])\n                        rotate([0, 90, 0])\n                            cylinder(h=15, r1=8, r2=0, center=true);\n                }\n}\n\n// Generate rosette pattern\nmodule rosette() {\n    // Center leaves\n    for(i = [0:23]) {\n        rotate([0, 0, i*15]) {\n            translate([0, plant_width/4, -plant_height/4])\n                rotate([0, -20, 0])\n                    leaf(1.2, i*5);\n        }\n    }\n    \n    // Middle ring leaves\n    for(i = [0:17]) {\n        rotate([0, 0, i*20]) {\n            translate([0, plant_width/3, -plant_height/5])\n                rotate([0, -30, 0])\n                    leaf(0.9, i*3);\n        }\n    }\n    \n    // Outer leaves\n    for(i = [0:11]) {\n        rotate([0, 0, i*30]) {\n            translate([0, plant_width/2.5, -plant_height/6])\n                rotate([0, -40, 0])\n                    leaf(0.7, i*2);\n        }\n    }\n}\n\n// Hen comb detail\nmodule comb() {\n    translate([0, -plant_width/3, plant_height/8])\n        for(i = [0:3]) {\n            translate([i*4-6, 0, 0])\n                scale([0.5, 0.5, 1])\n                    cylinder(h=8, r1=4, r2=2);\n        }\n}\n\n// Beak detail\nmodule beak() {\n    translate([0, -plant_width/2.2, -plant_height/10])\n        rotate([0, 15, 0])\n            scale([1, 0.6, 0.6])\n                difference() {\n                    // Main beak\n                    cube([12, 8, 6], center=true);\n                    \n                    // Hollow\n                    translate([0, 0, -wall/2])\n                        cube([10, 6, 4], center=true);\n                }\n}\n\n// Eye detail\nmodule eye() {\n    translate([8, -plant_width/2.5, 0])\n        sphere(d=4);\n    translate([-8, -plant_width/2.5, 0])\n        sphere(d=4);\n}\n\n// Chicks (smaller offsets)\nmodule chick(pos, scale_factor) {\n    translate(pos)\n        scale(scale_factor)\n            union() {\n                hen_body();\n                rosette();\n            }\n}\n\n// Main assembly\nunion() {\n    // Main hen\n    hen_body();\n    rosette();\n    comb();\n    beak();\n    eye();\n    \n    // Three chicks\n    chick([plant_width/2, plant_width/4, -plant_height/3], 0.4);\n    chick([-plant_width/3, plant_width/3, -plant_height/4], 0.35);\n    chick([0, plant_width/2, -plant_height/3.5], 0.3);\n}",
    "renders": true
  },
  {
    "plant": "burrito",
    "openscad_code": "// Burrito Plant - Realistic Style with Medium Complexity\n// Size: ~100mm diameter, 90mm height\n\n// Main burrito body\nmodule burrito_body() {\n    // Tortilla wrap - main shell\n    difference() {\n        // Outer shell of burrito\n        rotate([90, 0, 0])\n            scale([1, 1.2, 0.8])\n            sphere(d = 90, $fn = 48);\n        \n        // Flatten bottom slightly for stability\n        translate([0, -50, -10])\n            cube([100, 100, 20], center = true);\n    }\n    \n    // Filling texture on surface\n    for(i = [0:30]) {\n        translate([\n            35 * cos(i * 12),\n            35 * sin(i * 12) * 1.2,\n            0\n        ]) {\n            rotate([0, 0, i * 12])\n                scale([1, 0.7, 0.3])\n                sphere(d = 8 + (i % 3) * 3, $fn = 12);\n        }\n    }\n}\n\n// Lettuce leaves\nmodule lettuce_leaves() {\n    for(i = [0:4]) {\n        rotate([0, 0, i * 72])\n        translate([0, -35, 15])\n        rotate([90, 0, 0])\n        scale([1.2, 0.8, 0.3])\n        cylinder(h = 25, d1 = 40, d2 = 20, $fn = 8);\n    }\n}\n\n// Tomato chunks\nmodule tomatoes() {\n    for(i = [0:5]) {\n        translate([\n            20 * cos(i * 60),\n            20 * sin(i * 60),\n            25\n        ])\n        sphere(d = 8, $fn = 12);\n    }\n}\n\n// Cheese strips\nmodule cheese() {\n    for(i = [0:8]) {\n        translate([\n            15 * cos(i * 45),\n            15 * sin(i * 45),\n            28\n        ])\n        rotate([90, 0, i * 45])\n        scale([0.2, 1, 0.1])\n        cube([3, 12, 3]);\n    }\n}\n\n// Plant pot as base\nmodule plant_pot() {\n    difference() {\n        // Main pot body\n        cylinder(h = 30, d1 = 60, d2 = 50, $fn = 32);\n        \n        // Hollow inside\n        translate([0, 0, 2])\n            cylinder(h = 28, d1 = 56, d2 = 46, $fn = 32);\n        \n        // Drainage hole\n        translate([0, 0, 0])\n            cylinder(h = 2, d = 8, $fn = 16);\n    }\n    \n    // Rim detail\n    translate([0, 0, 30])\n    cylinder(h = 5, d1 = 62, d2 = 60, $fn = 32);\n}\n\n// Soil surface\nmodule soil_surface() {\n    translate([0, 0, 32])\n    scale([1, 1, 0.3])\n    sphere(d = 54, $fn = 32);\n}\n\n// Main assembly\nunion() {\n    // Plant pot base\n    plant_pot();\n    \n    // Soil\n    soil_surface();\n    \n    // Burrito body\n    translate([0, 0, 35])\n    burrito_body();\n    \n    // Lettuce\n    translate([0, 0, 35])\n    lettuce_leaves();\n    \n    // Tomatoes\n    translate([0, 0, 35])\n    tomatoes();\n    \n    // Cheese\n    translate([0, 0, 35])\n    cheese();\n}",
    "renders": true
  },
  {
    "plant": "string",
    "openscad_code": "// String Plant (Hanging String of Pearls) - Realistic Style, Medium Complexity\n\n$fn = 32;  // Smooth curves for printing\n\n// Overall dimensions (mm)\nplant_width = 80;\nplant_height = 100;\npot_diameter = 40;\npot_height = 35;\n\nmodule pot() {\n    // Main pot body with wall thickness\n    difference() {\n        cylinder(h=pot_height, d=pot_diameter, center=false);\n        translate([0, 0, 2]) \n            cylinder(h=pot_height, d=pot_diameter-4, center=false);\n    }\n    \n    // Pot rim detail\n    translate([0, 0, pot_height-3])\n        cylinder(h=3, d=pot_diameter+2, center=false);\n    \n    // Drainage hole\n    translate([0, 0, 1])\n        cylinder(h=2, d=5, center=false);\n}\n\nmodule string_branch(length, angle, twist) {\n    // Main stem\n    rotate([0, 0, angle]) {\n        rotate([0, twist, 0]) {\n            translate([0, 0, -length/2])\n                cylinder(h=length, d=2, center=true);\n                \n            // Add pearls along the branch\n            for(i = [1:5:length-5]) {\n                translate([0, 0, -length/2 + i])\n                    sphere(d=4);\n            }\n            \n            // Secondary branches\n            if(length > 15) {\n                translate([0, 0, -length/2 + length/3])\n                    string_branch(length*0.6, 45, 30);\n                translate([0, 0, -length/2 + length/2])\n                    string_branch(length*0.5, -30, -20);\n            }\n        }\n    }\n}\n\nmodule soil_surface() {\n    // Soil at top of pot\n    translate([0, 0, pot_height-2])\n        cylinder(h=2, d=pot_diameter-2, center=false);\n}\n\nmodule root_ball() {\n    // Dense cluster at soil level\n    for(i = [0:30:330]) {\n        rotate([0, 0, i]) {\n            translate([8, 0, pot_height-5]) {\n                string_branch(15, 0, 0);\n            }\n        }\n    }\n}\n\nmodule hanging_strings() {\n    // Main hanging vines\n    for(i = [0:45:315]) {\n        rotate([0, 0, i]) {\n            translate([pot_diameter/2 - 5, 0, pot_height-5]) {\n                string_branch(60, 90, i);\n            }\n        }\n    }\n    \n    // Center hanging string\n    translate([0, 0, pot_height-5]) {\n        string_branch(70, 90, 0);\n    }\n}\n\n// Assembly\nunion() {\n    pot();\n    soil_surface();\n    \n    translate([0, 0, pot_height-2]) {\n        root_ball();\n    }\n    \n    hanging_strings();\n}",
    "renders": true
  },
  {
    "plant": "hoya",
    "openscad_code": "// Hoya Plant - Realistic Style, Medium Complexity\n// Designed for 3D printing with 2mm wall thickness\n\n// Main parameters\n$fn = 24;\nplant_height = 120;\npot_height = 40;\npot_diameter = 60;\nleaf_length = 35;\nleaf_width = 20;\nleaf_thickness = 2;\nstem_diameter = 3;\n\n// Pot module\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=pot_height, d=pot_diameter, center=false);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        cylinder(h=pot_height-4, d=pot_diameter-4, center=false);\n        \n        // Drainage hole\n        translate([0, 0, 2])\n        cylinder(h=5, d=8, center=false);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, pot_height-2])\n    cylinder(h=4, d=pot_diameter-2, center=false);\n}\n\n// Single leaf module with realistic shape\nmodule leaf() {\n    // Leaf body\n    scale([1, leaf_width/leaf_length, leaf_thickness/leaf_length])\n    sphere(d=leaf_length);\n    \n    // Leaf tip point\n    translate([leaf_length/2, 0, 0])\n    scale([0.3, 0.3, 0.3])\n    sphere(d=leaf_length/3);\n}\n\n// Leaf pair on stem\nmodule leaf_pair(angle) {\n    translate([0, 0, 0])\n    rotate([0, angle, 0])\n    translate([0, -leaf_length/3, 0])\n    leaf();\n    \n    translate([0, 0, 0])\n    rotate([0, angle, 180])\n    translate([0, -leaf_length/3, 0])\n    leaf();\n}\n\n// Stem segment with leaves\nmodule stem_segment(height, leaf_count) {\n    // Main stem\n    cylinder(h=height, d=stem_diameter, center=false);\n    \n    // Leaves along stem\n    for(i = [1:leaf_count]) {\n        translate([0, 0, height * i / (leaf_count + 1)])\n        rotate([0, 0, i * 137.5]) // Golden angle for natural spacing\n        leaf_pair(45);\n    }\n}\n\n// Main vine with branching\nmodule vine(length, segments) {\n    stem_length = length / segments;\n    \n    for(i = [0:segments-1]) {\n        translate([0, 0, i * stem_length])\n        rotate([0, 0, i * 30])\n        stem_segment(stem_length, 2);\n        \n        // Branch off at certain points\n        if(i % 2 == 1 && i < segments-2) {\n            translate([0, 0, i * stem_length + stem_length/2])\n            rotate([0, 45, 45])\n            scale([0.7, 0.7, 0.7])\n            vine(length * 0.6, 3);\n        }\n    }\n}\n\n// Hoya flower cluster (umbel)\nmodule flower_cluster() {\n    // Flower stems\n    for(i = [1:8]) {\n        rotate([0, 0, i * 45])\n        translate([8, 0, 0])\n        rotate([90, 0, 0])\n        cylinder(h=12, d=1.5, center=false);\n        \n        // Individual flowers (small spheres)\n        rotate([0, 0, i * 45])\n        translate([8, 0, 12])\n        sphere(d=3);\n        \n        // Star-shaped petals\n        for(j = [1:5]) {\n            rotate([0, 0, i * 45])\n            translate([8, 0, 12])\n            rotate([0, 0, j * 72])\n            translate([2, 0, 0])\n            scale([4, 1, 0.5])\n            sphere(d=1);\n        }\n    }\n    \n    // Central cluster stem\n    cylinder(h=8, d=2, center=false);\n}\n\n// Main plant assembly\nunion() {\n    // Pot and soil\n    translate([0, 0, 0])\n    pot();\n    \n    translate([0, 0, 0])\n    color([0.4, 0.3, 0.2])\n    soil();\n    \n    // Main vines emerging from soil\n    translate([0, 0, pot_height])\n    rotate([10, 0, 0])\n    vine(plant_height - pot_height - 20, 5);\n    \n    translate([-5, 5, pot_height])\n    rotate([15, 20, 10])\n    vine(plant_height - pot_height - 30, 4);\n    \n    translate([5, -5, pot_height])\n    rotate([20, -15, -20])\n    vine(plant_height - pot_height - 25, 4);\n    \n    // Flower clusters at vine tips\n    translate([0, 0, plant_height - 10])\n    rotate([0, 0, 0])\n    color([0.9, 0.8, 0.9])\n    flower_cluster();\n    \n    translate([15, 10, plant_height - 15])\n    rotate([0, 0, 45])\n    color([0.9, 0.8, 0.9])\n    scale([0.8, 0.8, 0.8])\n    flower_cluster();\n}",
    "renders": true
  },
  {
    "plant": "wax",
    "openscad_code": "// Wax Plant (Hoya carnosa) - Realistic Style\n// Medium complexity model with 2mm walls for 3D printing\n\n$fn = 30;  // Smooth curves\n\n// Main parameters\npot_diameter = 40;\npot_height = 35;\nstem_thickness = 3;\nleaf_length = 25;\nleaf_width = 15;\nleaf_thickness = 2;\n\n// Pot module\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = pot_height, d1 = pot_diameter, d2 = pot_diameter * 0.8, center = false);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = pot_height - 4, d1 = pot_diameter - 4, d2 = pot_diameter * 0.8 - 4, center = false);\n    }\n    \n    // Base ring\n    translate([0, 0, 0.5])\n        cylinder(h = 2, d = pot_diameter + 2, center = false);\n}\n\n// Soil surface\nmodule soil() {\n    color(\"saddlebrown\")\n    translate([0, 0, pot_height - 2])\n        cylinder(h = 3, d1 = pot_diameter - 4, d2 = pot_diameter * 0.8 - 4, center = false);\n}\n\n// Single leaf module\nmodule leaf(angle = 0, bend = 0) {\n    // Leaf blade\n    translate([0, 0, leaf_length / 2])\n    rotate([0, bend, angle])\n    scale([1, leaf_width / leaf_length, 1])\n    difference() {\n        sphere(d = leaf_length);\n        \n        // Remove bottom half\n        translate([0, 0, -leaf_length / 2])\n            cube([leaf_length * 2, leaf_width * 2, leaf_length], center = true);\n        \n        // Thicken edges\n        translate([0, 0, -leaf_thickness / 2])\n            cube([leaf_length * 0.9, leaf_width * 0.9, leaf_thickness], center = true);\n    }\n    \n    // Petiole (leaf stem)\n    translate([0, 0, 0])\n    rotate([0, bend, angle])\n        cylinder(h = 8, d1 = stem_thickness, d2 = stem_thickness * 0.7);\n}\n\n// Stem segment\nmodule stem_segment(length = 20, angle = 0) {\n    color(\"darkgreen\")\n    rotate([0, 0, angle])\n        cylinder(h = length, d = stem_thickness, center = false);\n}\n\n// Node with leaves\nmodule node(stem_angle = 0, leaf_pairs = 2) {\n    // Stem at this node\n    stem_segment(15, stem_angle);\n    \n    // Leaves\n    for (i = [0:leaf_pairs - 1]) {\n        rotate([0, 0, i * 180 / leaf_pairs])\n        translate([0, 0, 7])\n        union() {\n            leaf(45, 15);\n            leaf(-45, 15);\n        }\n    }\n}\n\n// Main plant structure\nmodule plant() {\n    color(\"darkgreen\")\n    translate([0, 0, pot_height])\n    union() {\n        // Central stem\n        for (i = [0:4]) {\n            translate([0, 0, i * 20])\n            rotate([0, 0, i * 30])\n            node(i * 30);\n        }\n        \n        // Branching stems\n        translate([0, 0, 20])\n        rotate([0, 0, 45])\n        for (j = [0:2]) {\n            translate([0, 0, j * 15])\n            rotate([0, 0, j * 25])\n            node(j * 25, 1);\n        }\n        \n        translate([0, 0, 40])\n        rotate([0, 0, -60])\n        for (k = [0:2]) {\n            translate([0, 0, k * 12])\n            rotate([0, 0, k * -30])\n            node(k * -30, 1);\n        }\n    }\n}\n\n// Assembly\npot();\nsoil();\nplant();",
    "renders": true
  },
  {
    "plant": "basket",
    "openscad_code": "// Basket Plant - Realistic Style, Medium Complexity\n// Overall dimensions: ~100mm tall x ~80mm diameter\n\n$fn = 50;  // Smooth curves for 3D printing\n\n// Main module\nmodule basket_plant() {\n    // Basket base structure\n    basket();\n    \n    // Soil inside basket\n    translate([0, 0, 30]) soil();\n    \n    // Plant components\n    translate([0, 0, 35]) plant_stem();\n    \n    // Generate multiple leaves\n    for(i = [0:5]) {\n        rotate([0, 0, i*60]) \n            translate([15, 0, 35]) \n                rotate([0, 30 + i*10, 0]) \n                    leaf(i*5);\n    }\n}\n\n// Basket module - woven style with 2mm walls\nmodule basket() {\n    difference() {\n        // Outer basket shell\n        cylinder(h = 35, d1 = 80, d2 = 70);\n        \n        // Hollow interior\n        cylinder(h = 33, d1 = 76, d2 = 66);\n    }\n    \n    // Basket rim\n    translate([0, 0, 33]) \n        difference() {\n            cylinder(h = 4, d = 82);\n            cylinder(h = 4, d = 78);\n        }\n    \n    // Woven texture rings\n    for(i = [5:5:30]) {\n        translate([0, 0, i]) \n            difference() {\n                cylinder(h = 1.5, d1 = 79 - i*0.2, d2 = 79 - i*0.2);\n                cylinder(h = 1.5, d1 = 77 - i*0.2, d2 = 77 - i*0.2);\n            }\n    }\n    \n    // Base reinforcement ring\n    translate([0, 0, 0.5]) \n        difference() {\n            cylinder(h = 2, d = 78);\n            cylinder(h = 2, d = 74);\n        }\n}\n\n// Soil module - slightly mounded\nmodule soil() {\n    scale([1, 1, 0.3]) \n        sphere(d = 70);\n}\n\n// Plant stem module\nmodule plant_stem() {\n    // Central stem\n    cylinder(h = 25, d = 5);\n    \n    // Branching structures\n    for(i = [0:2]) {\n        rotate([0, 0, i*120]) \n            translate([0, 0, 10 + i*5]) \n                rotate([30, 0, 0]) \n                    cylinder(h = 15, d1 = 3, d2 = 2);\n    }\n}\n\n// Leaf module - realistic shape with thickness\nmodule leaf(angle) {\n    // Leaf blade\n    scale([1, 0.3, 0.05]) \n        sphere(d = 40);\n    \n    // Leaf vein\n    translate([0, 0, 0.5]) \n        scale([0.9, 0.05, 0.05]) \n            sphere(d = 35);\n    \n    // Stem connection\n    translate([-20, 0, 0]) \n        rotate([0, 0, angle]) \n            cylinder(h = 5, d1 = 2, d2 = 1);\n}\n\n// Generate the complete model\nbasket_plant();",
    "renders": true
  },
  {
    "plant": "chain",
    "openscad_code": "// Chain Plant (Tradescantia) in realistic style - medium complexity\n// Overall dimensions: ~100mm length, ~60mm width\n\n$fn = 30;\n\nmodule leaf(length, width, thickness) {\n    // Single leaf with realistic tapered shape\n    translate([0, 0, thickness/2])\n    scale([1, 0.3, 0.1])\n    sphere(d = width);\n    \n    // Leaf tip extension\n    translate([width/2, 0, 0])\n    scale([1.5, 0.2, 0.08])\n    sphere(d = width/2);\n}\n\nmodule node() {\n    // Node where leaves connect - 4mm diameter\n    sphere(d = 4);\n}\n\nmodule segment(length) {\n    // Single segment between nodes\n    hull() {\n        translate([0, 0, 0]) sphere(d = 2);\n        translate([length, 0, 0]) sphere(d = 2);\n    }\n}\n\nmodule leaf_pair(angle, length, width, thickness) {\n    // Opposite leaf pair at node\n    rotate([0, 0, angle])\n    union() {\n        // Top leaf\n        translate([0, 2, 0])\n        rotate([0, 0, -30])\n        leaf(length, width, thickness);\n        \n        // Bottom leaf\n        translate([0, -2, 0])\n        rotate([0, 0, 30])\n        mirror([0, 1, 0])\n        leaf(length, width, thickness);\n    }\n}\n\nmodule chain_plant() {\n    // Main stem with alternating nodes and leaves\n    stem_length = 100;\n    segment_length = 8;\n    num_segments = stem_length / segment_length;\n    \n    for (i = [0:num_segments-1]) {\n        // Stem segment\n        translate([i * segment_length, 0, 0])\n        segment(segment_length);\n        \n        // Node at each segment\n        translate([i * segment_length, 0, 0])\n        node();\n        \n        // Leaves at every other node\n        if (i % 2 == 0) {\n            translate([i * segment_length, 0, 0])\n            leaf_pair(i * 45, 15, 8, 1);\n        }\n    }\n    \n    // Root system at base\n    translate([-5, 0, -2])\n    union() {\n        cylinder(h = 5, d1 = 3, d2 = 1);\n        for (angle = [0:45:315]) {\n            rotate([90, 0, angle])\n            translate([0, 0, 2.5])\n            cylinder(h = 8, d1 = 1, d2 = 0.5);\n        }\n    }\n}\n\n// Base pot with drainage\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 20, d = 40);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        cylinder(h = 18, d = 36);\n        \n        // Drainage holes\n        for (angle = [0:60:300]) {\n            rotate([0, 0, angle])\n            translate([15, 0, 1])\n            cylinder(h = 3, d = 3);\n        }\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, 2])\n    cylinder(h = 3, d = 36);\n}\n\n// Assembly\nunion() {\n    // Pot\n    translate([0, 0, 0])\n    pot();\n    \n    // Soil\n    translate([0, 0, 0])\n    soil();\n    \n    // Plant emerging from soil\n    translate([0, 0, 5])\n    rotate([0, -20, 0])\n    chain_plant();\n}",
    "renders": true
  },
  {
    "plant": "hearts",
    "openscad_code": "// Hearts Plant - Realistic Style - Medium Complexity\n// 3D printable with 2mm walls, ~100mm height\n\n// Parameters\nstem_d = 6;\nstem_h = 40;\nleaf_w = 20;\nleaf_h = 15;\nleaf_t = 2;\npot_r = 25;\npot_h = 25;\nsoil_h = 10;\nwall_t = 2;\n\nmodule stem() {\n    // Main stem\n    cylinder(d=stem_d, h=stem_h, $fn=20);\n    \n    // Secondary stem\n    translate([5, 0, stem_h-10])\n        rotate([0, 20, 0])\n        cylinder(d=stem_d*0.7, h=20, $fn=16);\n        \n    // Third stem\n    translate([-4, 3, stem_h-15])\n        rotate([0, -25, 30])\n        cylinder(d=stem_d*0.6, h=15, $fn=16);\n}\n\nmodule heart_leaf(x=0, y=0, z=0, rot=0, scale=1) {\n    translate([x, y, z])\n    rotate([0, 0, rot])\n    scale(scale)\n    difference() {\n        // Main heart shape\n        union() {\n            // Left lobe\n            translate([-leaf_w/2, 0, 0])\n                sphere(d=leaf_w, $fn=32);\n            // Right lobe\n            translate([leaf_w/2, 0, 0])\n                sphere(d=leaf_w, $fn=32);\n            // Point\n            translate([0, -leaf_h/2, 0])\n                cube([leaf_w*1.2, leaf_h, leaf_t*2], center=true);\n        }\n        \n        // Carve out center\n        scale([0.7, 0.7, 1])\n            translate([0, 0, -leaf_t])\n            cube([leaf_w*1.5, leaf_h*1.5, leaf_t*3], center=true);\n            \n        // Vein groove\n        translate([0, leaf_h/4, -leaf_t/2])\n            rotate([90, 0, 0])\n            cylinder(d=1, h=leaf_t*2, $fn=8);\n    }\n}\n\nmodule leaves() {\n    // Main leaves on stems\n    translate([0, 0, stem_h])\n        rotate([90, 0, 0])\n        heart_leaf(0, 0, 0, 0, 1.2);\n        \n    translate([5, 0, stem_h-5])\n        rotate([70, 20, 45])\n        heart_leaf(0, 0, 0, 0, 0.8);\n        \n    translate([-4, 3, stem_h-8])\n        rotate([80, -25, -30])\n        heart_leaf(0, 0, 0, 0, 0.7);\n        \n    // Lower leaves\n    translate([0, 0, stem_h/2])\n        rotate([60, 0, 180])\n        heart_leaf(0, 0, 0, 0, 0.6);\n}\n\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(r=pot_r, h=pot_h, $fn=60);\n        \n        // Inner cavity\n        translate([0, 0, wall_t])\n            cylinder(r=pot_r-wall_t, h=pot_h, $fn=60);\n            \n        // Drainage hole\n        translate([0, 0, -1])\n            cylinder(r=3, h=wall_t+2, $fn=16);\n    }\n    \n    // Soil surface\n    translate([0, 0, pot_h-soil_h])\n        cylinder(r=pot_r-wall_t, h=soil_h, $fn=60);\n}\n\nmodule plant() {\n    pot();\n    \n    translate([0, 0, pot_h-soil_h+wall_t]) {\n        stem();\n        leaves();\n    }\n}\n\n// Render the plant\nplant();",
    "renders": true
  },
  {
    "plant": "rosary",
    "openscad_code": "// Rosary Plant - 3D Printable Model\n// Medium complexity realistic style\n\n// Parameters\n$fn = 32;\nbead_diameter = 8;\nstem_thickness = 2;\nleaf_length = 35;\nleaf_width = 12;\nplant_height = 120;\npot_height = 25;\npot_diameter = 40;\n\nmodule bead(d=bead_diameter) {\n    sphere(d=d);\n}\n\nmodule stem_segment(length, angle=0) {\n    rotate([0, 0, angle])\n        cylinder(h=length, d=stem_thickness, center=true);\n}\n\nmodule leaf(length=leaf_length, width=leaf_width) {\n    // Main leaf blade\n    difference() {\n        scale([1, 0.5, 0.1])\n            sphere(d=width);\n        \n        // Leaf tip\n        translate([width/2, 0, 0])\n            sphere(d=width/2);\n    }\n    \n    // Leaf veins\n    for(i = [-0.3:0.2:0.3]) {\n        translate([i*width/2, -length/2, 0.5])\n            scale([0.1, 1, 0.1])\n            sphere(d=length);\n    }\n    \n    // Stem connection\n    translate([0, -length/2, 0])\n        cylinder(h=3, d=2);\n}\n\nmodule rosary_chain() {\n    // Main stem/trunk\n    color(\"darkgreen\")\n    difference() {\n        cylinder(h=plant_height-pot_height, d=6);\n        // Hollow center for printing\n        translate([0, 0, -1])\n            cylinder(h=plant_height-pot_height+2, d=2);\n    }\n    \n    // Bead decorations along stem\n    for(i = [1:5:plant_height-pot_height-10]) {\n        translate([0, 0, i])\n            color(\"gold\")\n            bead();\n    }\n    \n    // Side branches with leaves\n    for(i = [20:15:plant_height-pot_height-20]) {\n        translate([0, 0, i])\n        for(j = [0:60:300]) {\n            rotate([0, 0, j])\n            translate([3, 0, 0])\n            rotate([0, 90, 0])\n            stem_segment(15, 30);\n            \n            // Leaves at branch ends\n            translate([15*cos(30), 15*sin(30), 0])\n            rotate([0, 0, j-90])\n            rotate([45, 0, 0])\n            leaf();\n        }\n    }\n}\n\nmodule pot() {\n    color(\"brown\")\n    difference() {\n        cylinder(h=pot_height, d1=pot_diameter, d2=35);\n        // Hollow for printing\n        translate([0, 0, -1])\n            cylinder(h=pot_height+2, d1=pot_diameter-4, d2=33);\n        \n        // Drainage hole\n        translate([0, 0, pot_height/2])\n            cylinder(h=pot_height, d=4);\n    }\n    \n    // Decorative rim\n    translate([0, 0, pot_height])\n    color(\"tan\")\n    cylinder(h=3, d=pot_diameter+2);\n}\n\n// Assembly\ntranslate([0, 0, pot_height])\nrosary_chain();\n\ntranslate([0, 0, 0])\npot();\n\n// Soil surface\ntranslate([0, 0, pot_height-2])\ncolor(\"darkbrown\")\ncylinder(h=2, d=pot_diameter-2);",
    "renders": true
  },
  {
    "plant": "glory",
    "openscad_code": "// Morning Glory Plant - Realistic Style\n\n// Parameters\nflower_diameter = 35;\nstem_height = 100;\nleaf_length = 25;\nleaf_width = 20;\npot_diameter = 50;\npot_height = 40;\nwall_thickness = 2;\n\n// Main plant assembly\nmodule morning_glory_plant() {\n    union() {\n        // Pot\n        translate([0, 0, 0])\n            pot();\n        \n        // Stem\n        translate([0, 0, pot_height])\n            stem();\n        \n        // Leaves along stem\n        for(i = [1:4]) {\n            rotate([0, 0, i*90])\n                translate([8, 0, pot_height + i*20])\n                    leaf();\n        }\n        \n        // Flower at top\n        translate([0, 0, pot_height + stem_height])\n            flower();\n        \n        // Buds\n        translate([5, 5, pot_height + 70])\n            bud();\n        translate([-5, -5, pot_height + 50])\n            bud();\n    }\n}\n\n// Pot with drainage hole\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=pot_height, d=pot_diameter, $fn=32);\n        \n        // Inner cavity\n        translate([0, 0, wall_thickness])\n            cylinder(h=pot_height-wall_thickness, d=pot_diameter-2*wall_thickness, $fn=32);\n        \n        // Drainage hole\n        translate([0, 0, -1])\n            cylinder(h=wall_thickness+2, d=5, $fn=16);\n    }\n}\n\n// Main stem with slight taper\nmodule stem() {\n    for(i = [0:stem_height/5-1]) {\n        h = 5;\n        d1 = 6 - i*0.3;\n        d2 = 6 - (i+1)*0.3;\n        translate([0, 0, i*5])\n            cylinder(h1=h, h2=h, d1=d1, d2=d2, $fn=12);\n    }\n}\n\n// Morning glory flower with petals\nmodule flower() {\n    // Flower base\n    difference() {\n        sphere(d=flower_diameter, $fn=32);\n        translate([0, 0, -flower_diameter/2-1])\n            cube([flower_diameter+2, flower_diameter+2, flower_diameter], center=true);\n    }\n    \n    // Petals\n    for(i = [0:4]) {\n        rotate([0, 0, i*72])\n            translate([0, flower_diameter/2-5, 0])\n                petal();\n    }\n    \n    // Flower center\n    translate([0, 0, flower_diameter/2-3])\n        cylinder(h=5, d=8, $fn=20);\n}\n\n// Individual petal\nmodule petal() {\n    scale([0.8, 1.2, 0.3])\n        sphere(d=12, $fn=16);\n}\n\n// Heart-shaped leaf\nmodule leaf() {\n    translate([leaf_length/2, 0, 0])\n        rotate([90, 0, 90])\n            scale([leaf_length, leaf_width, wall_thickness])\n                difference() {\n                    // Basic leaf shape\n                    sphere(d=20, $fn=32);\n                    \n                    // Cut to heart shape\n                    translate([5, 0, 0])\n                        cube([20, 30, 20], center=true);\n                    \n                    // Leaf notch\n                    translate([10, 0, 0])\n                        rotate([0, 0, 45])\n                            cube([8, 8, 20], center=true);\n                    translate([10, 0, 0])\n                        rotate([0, 0, -45])\n                            cube([8, 8, 20], center=true);\n                }\n}\n\n// Small bud\nmodule bud() {\n    scale([0.5, 0.5, 0.7])\n        sphere(d=15, $fn=16);\n    translate([0, 0, 5])\n        cylinder(h=3, d=5, $fn=12);\n}\n\n// Render the plant\nmorning_glory_plant();",
    "renders": true
  },
  {
    "plant": "arrowhead",
    "openscad_code": "// Arrowhead Plant (Syngonium podophyllum) - Realistic Style, Medium Complexity\n\n// Overall dimensions: ~120mm tall, ~90mm wide\n\nmodule arrowhead_plant() {\n    union() {\n        // Pot\n        translate([0, 0, -15]) {\n            difference() {\n                cylinder(h = 25, r1 = 30, r2 = 25, $fn = 48);\n                translate([0, 0, 2]) {\n                    cylinder(h = 25, r1 = 28, r2 = 23, $fn = 48);\n                }\n            }\n        }\n        \n        // Main stem\n        translate([0, 0, 10]) {\n            rotate([80, 0, 0]) {\n                cylinder(h = 50, r = 3, $fn = 12);\n                \n                // First leaf pair\n                translate([0, 25, 0]) {\n                    rotate([0, 90, 0]) {\n                        arrowhead_leaf(35);\n                    }\n                    \n                    rotate([0, 90, 180]) {\n                        arrowhead_leaf(30);\n                    }\n                }\n                \n                // Second leaf pair\n                translate([0, 40, 0]) {\n                    rotate([0, 90, 30]) {\n                        arrowhead_leaf(40);\n                    }\n                    \n                    rotate([0, 90, 210]) {\n                        arrowhead_leaf(32);\n                    }\n                }\n            }\n            \n            // Side stem\n            translate([0, 0, 5]) {\n                rotate([70, 0, 45]) {\n                    cylinder(h = 35, r = 2.5, $fn = 12);\n                    \n                    translate([0, 20, 0]) {\n                        rotate([0, 90, 15]) {\n                            arrowhead_leaf(28);\n                        }\n                    }\n                    \n                    translate([0, 28, 0]) {\n                        rotate([0, 90, 195]) {\n                            arrowhead_leaf(25);\n                        }\n                    }\n                }\n            }\n            \n            // Small aerial roots\n            for(i = [0:2]) {\n                translate([0, 15 + i * 10, 0]) {\n                    rotate([90 + i * 10, 0, 0]) {\n                        cylinder(h = 8 + i * 3, r = 1.2, $fn = 8);\n                    }\n                }\n            }\n        }\n        \n        // Soil surface\n        translate([0, 0, 9]) {\n            difference() {\n                cylinder(h = 2, r = 28, $fn = 48);\n                translate([0, 0, -1]) {\n                    cylinder(h = 4, r = 26, $fn = 48);\n                }\n            }\n        }\n    }\n}\n\nmodule arrowhead_leaf(size) {\n    // Size parameter scales the leaf\n    \n    // Main leaf blade\n    scale([size/40, size/40, 1]) {\n        union() {\n            // Central lobe\n            translate([0, 0, 0]) {\n                rotate([90, 0, 0]) {\n                    linear_extrude(height = 2, convexity = 10) {\n                        polygon(points = [\n                            [0, 0],\n                            [15, 0],\n                            [25, 5],\n                            [30, 15],\n                            [28, 25],\n                            [20, 30],\n                            [10, 32],\n                            [0, 33],\n                            [-10, 32],\n                            [-20, 30],\n                            [-28, 25],\n                            [-30, 15],\n                            [-25, 5],\n                            [-15, 0]\n                        ]);\n                    }\n                }\n            }\n            \n            // Left lobe\n            translate([-15, 0, 0]) {\n                rotate([90, 0, -30]) {\n                    linear_extrude(height = 1.5, convexity = 10) {\n                        polygon(points = [\n                            [0, 0],\n                            [8, 0],\n                            [12, 3],\n                            [10, 8],\n                            [5, 10],\n                            [0, 10]\n                        ]);\n                    }\n                }\n            }\n            \n            // Right lobe\n            translate([15, 0, 0]) {\n                rotate([90, 0, 30]) {\n                    mirror([1, 0, 0]) {\n                        linear_extrude(height = 1.5, convexity = 10) {\n                            polygon(points = [\n                                [0, 0],\n                                [8, 0],\n                                [12, 3],\n                                [10, 8],\n                                [5, 10],\n                                [0, 10]\n                            ]);\n                        }\n                    }\n                }\n            }\n            \n            // Leaf stem (petiole)\n            translate([0, 0, -1]) {\n                rotate([90, 0, 0]) {\n                    cylinder(h = 15, r = 1.5, $fn = 8);\n                }\n            }\n            \n            // Veins\n            for(angle = [0:30:150]) {\n                translate([0, 0, 1.1]) {\n                    rotate([90, 0, angle]) {\n                        scale([0.3, 0.1, 1]) {\n                            cylinder(h = size * 0.8, r = 0.5, $fn = 4);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Render the plant\narrowhead_plant();",
    "renders": true
  },
  {
    "plant": "nerve",
    "openscad_code": "// Nerve Plant (Fittonia albivenis) - Realistic Style, Medium Complexity\n// Overall size: ~70mm wide x 60mm deep x 50mm tall\n\n// Main pot\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h = 25, d1 = 45, d2 = 40, $fn = 48);\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 23, d1 = 41, d2 = 36, $fn = 48);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, 24])\n        cylinder(h = 3, d = 39, $fn = 48);\n}\n\n// Stem structure\nmodule stem(h, angle, rot) {\n    translate([0, 0, 27])\n    rotate([0, angle, rot])\n    cylinder(h = h, d = 2.2, $fn = 12);\n}\n\n// Leaf with characteristic nerve pattern\nmodule leaf(size, angle, rot, tilt) {\n    translate([0, 0, 27])\n    rotate([tilt, angle, rot])\n    translate([0, 0, size * 0.8])\n    union() {\n        // Main leaf blade\n        scale([1, 1.7, 0.3])\n            sphere(d = size, $fn = 24);\n        \n        // Central vein\n        color(\"darkgreen\")\n        translate([0, 0, 0.4])\n        scale([0.1, 0.9, 0.1])\n            cube([size * 0.8, size * 1.5, size * 0.3], center = true);\n        \n        // Lateral veins (3 per side)\n        for (i = [1:3]) {\n            color(\"darkgreen\")\n            rotate([0, 0, i * 20])\n            translate([size * 0.3, 0, 0.4])\n            scale([0.05, 0.6, 0.05])\n                cube([size * 0.8, size * 1.2, size * 0.3], center = true);\n            \n            color(\"darkgreen\")\n            rotate([0, 0, -i * 20])\n            translate([size * 0.3, 0, 0.4])\n            scale([0.05, 0.6, 0.05])\n                cube([size * 0.8, size * 1.2, size * 0.3], center = true);\n        }\n    }\n}\n\n// Generate leaf cluster\nmodule leaf_cluster(x, y, base_angle) {\n    translate([x, y, 0])\n    for (i = [0:5]) {\n        leaf(12 + (i % 3) * 2, base_angle + i * 60, i * 40, 65 + (i % 2) * 10);\n    }\n}\n\n// Generate stems for leaf cluster\nmodule stem_cluster(x, y) {\n    translate([x, y, 0])\n    for (i = [0:5]) {\n        stem(8 + (i % 3) * 2, 65 + (i % 2) * 10, i * 40);\n    }\n}\n\n// Main assembly\nunion() {\n    // Brown pot\n    color(\"saddlebrown\")\n    pot();\n    \n    // Dark soil\n    color(\"#3a2a1a\")\n    soil();\n    \n    // Generate 3 clusters of leaves\n    stem_cluster(-8, 5);\n    leaf_cluster(-8, 5, 0);\n    \n    stem_cluster(8, -3);\n    leaf_cluster(8, -3, 30);\n    \n    stem_cluster(0, -8);\n    leaf_cluster(0, -8, 60);\n    \n    // Central larger leaves\n    stem(12, 90, 0);\n    leaf(16, 90, 0, 80);\n    stem(10, 85, 180);\n    leaf(14, 85, 180, 75);\n}",
    "renders": true
  },
  {
    "plant": "prayer",
    "openscad_code": "// Prayer Plant (Maranta leuconeura) - realistic medium-complexity model\n// Size: ~110 mm tall, for 3D printing\n\n// Parameters\nstem_d = 4;           // main stem diameter\nleaf_L = 35;          // leaf length\nleaf_W = 20;          // max leaf width\npot_H = 25;           // pot height\npot_R = 35;           // pot radius\nwall = 2;             // print-safe wall thickness\n$fn = 36;             // cylinder/curve resolution\n\n// Pot\nmodule pot() {\n    difference() {\n        cylinder(h = pot_H, r1 = pot_R, r2 = pot_R * 0.9, center = false);\n        translate([0, 0, wall])\n            cylinder(h = pot_H - wall, r1 = pot_R - wall, r2 = pot_R * 0.9 - wall);\n    }\n}\n\n// Soil surface\nmodule soil() {\n    translate([0, 0, pot_H * 0.9])\n        color(\"brown\")\n        cylinder(h = 4, r1 = pot_R - wall, r2 = (pot_R - wall) * 0.95);\n}\n\n// Central stem\nmodule stem(h = 60) {\n    color(\"darkgreen\")\n    cylinder(h = h, d = stem_d);\n}\n\n// Single leaf with realistic venation\nmodule leaf() {\n    // Main leaf blade\n    translate([0, 0, -1])\n        scale([leaf_L / 2, leaf_W / 2, 1])\n        sphere(d = 2);\n\n    // Vein ridges (raised)\n    color(\"green\")\n    for (v = [0.3 : 0.2 : 0.9]) {\n        translate([0, 0, 0.2])\n            rotate([0, 0, 15])\n            hull() {\n                translate([-leaf_L * v * 0.5, 0, 0])\n                    sphere(d = 0.8);\n                translate([leaf_L * v * 0.5, 0, 0])\n                    sphere(d = 0.8);\n            }\n    }\n    // Side veins\n    for (a = [-30 : 20 : 30]) {\n        translate([0, 0, 0.2])\n            rotate([0, 0, a])\n            hull() {\n                translate([0, 0, 0])\n                    sphere(d = 0.6);\n                translate([leaf_L * 0.4, 0, 0])\n                    sphere(d = 0.6);\n            }\n    }\n}\n\n// Petiole (leaf stalk)\nmodule petiole(len = 20) {\n    color(\"darkgreen\")\n    rotate([90, 0, 0])\n        cylinder(h = len, d = 1.5);\n}\n\n// Single leaf assembly\nmodule leaf_assembly(angle = 0, up = 0) {\n    translate([0, 0, up])\n        rotate([0, 0, angle])\n        translate([0, 0, 5])\n            union() {\n                petiole();\n                translate([0, 0, 20])\n                    rotate([20, 0, 0])\n                        leaf();\n            }\n}\n\n// Cluster of leaves around one node\nmodule leaf_cluster(height, count = 5) {\n    translate([0, 0, height])\n        for (i = [0 : count - 1])\n            rotate([0, 0, i * 360 / count])\n                translate([stem_d / 2, 0, 0])\n                    leaf_assembly(angle = i * 15);\n}\n\n// Main plant\nmodule prayer_plant() {\n    pot();\n    soil();\n    translate([0, 0, pot_H * 0.9])\n        union() {\n            stem(h = 55);\n            leaf_cluster(10, 3);\n            leaf_cluster(30, 5);\n            leaf_cluster(50, 4);\n        }\n}\n\n// Render\nprayer_plant();",
    "renders": true
  },
  {
    "plant": "zebra",
    "openscad_code": "// Zebra Plant (Aphelandra squarrosa) - Realistic Style, Medium Complexity\n// Overall height ~100mm, 3D-printable with 2mm walls\n\n// Parameters\nstem_h = 50;           // Main stem height\nstem_r = 3;            // Main stem radius\nleaf_w = 20;           // Leaf width\nleaf_l = 40;           // Leaf length\nleaf_t = 2;            // Leaf thickness\npot_h = 25;            // Pot height\npot_r = 25;            // Pot radius\nstripes = 8;           // Number of white stripes per leaf\n\n// Module for a single leaf with zebra stripes\nmodule striped_leaf() {\n    difference() {\n        // Main leaf body\n        scale([1, 0.3, 1])\n        rotate([0, 90, 0])\n        cylinder(h=leaf_l, r=leaf_w/2, $fn=50);\n        \n        // White stripes (cutouts)\n        for(i=[0:stripes-1]) {\n            translate([leaf_l/2 - (i+0.5)*leaf_l/stripes, 0, leaf_t/2])\n            rotate([90, 0, 0])\n            cube([leaf_l/stripes*0.6, leaf_w*0.8, leaf_t*2], center=true);\n        }\n    }\n}\n\n// Module for stem with visible segments\nmodule stem_segment(h, r) {\n    union() {\n        // Main cylinder\n        cylinder(h=h, r=r, $fn=20);\n        \n        // Segment rings\n        for(i=[0:h/5-1]) {\n            translate([0, 0, i*5])\n            cylinder(h=1, r=r*1.2, $fn=20);\n        }\n    }\n}\n\n// Module for pot with drainage hole\nmodule pot() {\n    difference() {\n        union() {\n            // Outer pot\n            cylinder(h=pot_h, r=pot_r, $fn=50);\n            \n            // Rim\n            translate([0, 0, pot_h])\n            cylinder(h=3, r=pot_r+2, $fn=50);\n        }\n        \n        // Hollow interior\n        translate([0, 0, -1])\n        cylinder(h=pot_h+2, r=pot_r-3, $fn=50);\n        \n        // Drainage hole\n        translate([pot_r/2, 0, -1])\n        cylinder(h=pot_h+2, r=2, $fn=20);\n    }\n}\n\n// Main assembly\nunion() {\n    // Pot\n    pot();\n    \n    // Main stem\n    translate([0, 0, pot_h])\n    stem_segment(stem_h, stem_r);\n    \n    // Leaves arranged spirally up the stem\n    for(i=[0:5]) {\n        angle = i*60;\n        height = 10 + i*8;\n        \n        translate([0, 0, pot_h + height])\n        rotate([0, 0, angle])\n        translate([stem_r+2, 0, 0])\n        rotate([0, -30-i*5, 0])\n        striped_leaf();\n    }\n    \n    // Top cluster of smaller leaves\n    for(i=[0:3]) {\n        a = i*120;\n        translate([0, 0, pot_h + stem_h - 5])\n        rotate([0, 0, a])\n        translate([stem_r+1, 0, 0])\n        rotate([0, -60, 0])\n        scale(0.7)\n        striped_leaf();\n    }\n}",
    "renders": true
  }
]