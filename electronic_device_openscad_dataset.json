[
  {
    "electronic_device": "computer",
    "openscad_code": "// OpenSCAD Laptop Model - Realistic Style, Medium Complexity\n// Overall size: ~90mm x 60mm x 12mm (closed)\n\n// Base dimensions\nlaptop_x = 90;\nlaptop_y = 60;\nlaptop_z = 6;\nscreen_thickness = 4;\n\n// Colors\n$fn = 50;\ncolor_base = [0.2, 0.2, 0.2];  // Dark gray\ncolor_screen = [0.05, 0.05, 0.05];  // Black\ncolor_keys = [0.1, 0.1, 0.1];  // Dark gray keys\ncolor_trackpad = [0.15, 0.15, 0.15];  // Slightly lighter\ncolor_ports = [0.3, 0.3, 0.3];  // Medium gray\ncolor_logo = [0.5, 0.5, 0.5];  // Light gray\n\n// Main laptop base\nmodule laptop_base() {\n    color(color_base)\n    difference() {\n        // Main body\n        cube([laptop_x, laptop_y, laptop_z], center = true);\n        \n        // Taper edges\n        translate([0, 0, laptop_z/2 - 0.5])\n        cube([laptop_x - 4, laptop_y - 4, 1], center = true);\n    }\n}\n\n// Keyboard keys\nmodule keyboard() {\n    key_width = 6;\n    key_height = 6;\n    key_depth = 0.5;\n    spacing = 1.5;\n    \n    // Keyboard area\n    translate([0, 10, laptop_z/2 + 0.1])\n    color(color_keys)\n    for (row = [0:4]) {\n        for (col = [0:11]) {\n            if (!(row == 4 && col > 6)) {  // Skip space where trackpad is\n                translate([\n                    -laptop_x/2 + 10 + col * (key_width + spacing),\n                    -laptop_y/2 + 15 + row * (key_height + spacing),\n                    0\n                ])\n                cube([key_width, key_height, key_depth], center = true);\n            }\n        }\n    }\n}\n\n// Trackpad\nmodule trackpad() {\n    translate([15, -laptop_y/2 + 10, laptop_z/2 + 0.1])\n    color(color_trackpad)\n    cube([25, 15, 0.5], center = true);\n}\n\n// USB ports\nmodule usb_ports() {\n    port_width = 7;\n    port_height = 3;\n    \n    translate([-laptop_x/2 - 0.1, 15, 0])\n    rotate([0, 90, 0])\n    color(color_ports)\n    for (i = [0:1]) {\n        translate([0, i * 8, 0])\n        cube([port_width, port_height, 2]);\n    }\n}\n\n// HDMI port\nmodule hdmi_port() {\n    translate([-laptop_x/2 - 0.1, -10, 0])\n    rotate([0, 90, 0])\n    color(color_ports)\n    cube([12, 5, 7]);\n}\n\n// Power connector\nmodule power_port() {\n    translate([-laptop_x/2 - 0.1, 0, 0])\n    rotate([0, 90, 0])\n    color(color_ports)\n    cylinder(h = 8, r1 = 3, r2 = 3);\n}\n\n// Screen bezel\nmodule screen_bezel() {\n    color(color_base)\n    difference() {\n        // Outer frame\n        translate([0, 0, laptop_z/2 + screen_thickness/2])\n        cube([laptop_x - 2, laptop_y - 2, screen_thickness], center = true);\n        \n        // Screen cutout\n        translate([0, 0, laptop_z/2 + screen_thickness/2 + 0.1])\n        cube([laptop_x - 10, laptop_y - 10, screen_thickness + 0.2], center = true);\n    }\n}\n\n// LCD panel\nmodule lcd_panel() {\n    color(color_screen)\n    translate([0, 0, laptop_z/2 + screen_thickness/2])\n    cube([laptop_x - 12, laptop_y - 12, 0.5], center = true);\n}\n\n// Hinge\nmodule hinge() {\n    color(color_base)\n    translate([0, laptop_y/2 - 3, 0])\n    cylinder(h = laptop_y - 6, r = 2, center = true);\n}\n\n// Logo\nmodule logo() {\n    color(color_logo)\n    translate([0, 0, laptop_z/2 + screen_thickness - 0.2])\n    cube([8, 12, 0.3], center = true);\n}\n\n// Status LEDs\nmodule status_leds() {\n    color([0, 1, 0])  // Green LED\n    translate([laptop_x/2 - 5, laptop_y/2 - 3, laptop_z/2 + 0.1])\n    cylinder(h = 0.5, r = 1);\n    \n    color([1, 1, 0])  // Yellow LED\n    translate([laptop_x/2 - 5, laptop_y/2 - 6, laptop_z/2 + 0.1])\n    cylinder(h = 0.5, r = 1);\n}\n\n// Assemble laptop\nunion() {\n    // Base\n    laptop_base();\n    \n    // Keyboard and trackpad\n    keyboard();\n    trackpad();\n    \n    // Ports\n    usb_ports();\n    hdmi_port();\n    power_port();\n    \n    // Status LEDs\n    status_leds();\n    \n    // Screen assembly\n    translate([0, 0, laptop_z])\n    rotate([30, 0, 0])  // Screen open at 30 degrees\n    union() {\n        screen_bezel();\n        lcd_panel();\n        logo();\n    }\n    \n    // Hinges\n    translate([laptop_x/2 - 8, 0, 0])\n    hinge();\n    translate([-laptop_x/2 + 8, 0, 0])\n    hinge();\n}",
    "renders": true
  },
  {
    "electronic_device": "laptop",
    "openscad_code": "// OpenSCAD Laptop Model\n// Realistic style, medium complexity\n\n// Overall dimensions (mm)\nlaptop_width = 80;\nlaptop_depth = 50;\nlaptop_closed_height = 8;\nlaptop_open_angle = 30;\n\n// Base thickness\nbase_thickness = 3;\nscreen_thickness = 2;\n\n// Wall thickness for 3D printing\nwall_thickness = 1.2;\n\n// Colors\ncolor_base = [0.2, 0.2, 0.2];\ncolor_screen = [0.05, 0.05, 0.05];\ncolor_keys = [0.3, 0.3, 0.3];\ncolor_trackpad = [0.25, 0.25, 0.25];\ncolor_ports = [0.4, 0.4, 0.4];\n\nmodule laptop_base() {\n    color(color_base)\n    difference() {\n        // Main base\n        cube([laptop_width, laptop_depth, base_thickness], center=true);\n        \n        // Hollow inside for weight reduction\n        translate([0, 0, -0.5])\n        cube([laptop_width - 2*wall_thickness, laptop_depth - 2*wall_thickness, base_thickness], center=true);\n    }\n}\n\nmodule keyboard() {\n    // Keyboard area\n    translate([0, 10, base_thickness/2 + 0.01])\n    color(color_keys)\n    cube([laptop_width - 10, 20, 0.3], center=true);\n    \n    // Individual keys\n    for (x = [-30:6:30]) {\n        for (y = [5:4:15]) {\n            translate([x, y, base_thickness/2 + 0.4])\n            color(color_keys)\n            cube([5, 3, 0.2], center=true);\n        }\n    }\n}\n\nmodule trackpad() {\n    translate([0, -10, base_thickness/2 + 0.01])\n    color(color_trackpad)\n    cube([20, 12, 0.2], center=true);\n}\n\nmodule ports() {\n    // USB ports on left side\n    for (i = [0:1]) {\n        translate([-laptop_width/2 - 0.01, -10 + i*8, 0])\n        rotate([0, 90, 0])\n        color(color_ports)\n        cube([4, 7, 2], center=true);\n    }\n    \n    // Power port on right side\n    translate([laptop_width/2 + 0.01, 0, 0])\n    rotate([0, -90, 0])\n    color(color_ports)\n    cylinder(h=5, r=2.5, center=true);\n}\n\nmodule screen_bezel() {\n    color(color_base)\n    difference() {\n        // Outer frame\n        cube([laptop_width, laptop_depth, screen_thickness], center=true);\n        \n        // Screen cutout\n        translate([0, 0, -0.5])\n        cube([laptop_width - 6, laptop_depth - 6, screen_thickness], center=true);\n    }\n}\n\nmodule screen_display() {\n    translate([0, 0, screen_thickness/2 - 0.1])\n    color(color_screen)\n    cube([laptop_width - 8, laptop_depth - 8, 0.2], center=true);\n}\n\nmodule webcam() {\n    translate([0, laptop_depth/2 - 3, screen_thickness/2 - 0.1])\n    color([0.1, 0.1, 0.1])\n    cylinder(h=0.5, r=1.5, center=true);\n}\n\nmodule ventilation_grills() {\n    // Bottom ventilation\n    for (x = [-20:5:20]) {\n        translate([x, 0, -base_thickness/2 - 0.01])\n        cube([3, laptop_depth - 10, 0.5], center=true);\n    }\n}\n\nmodule hinges() {\n    // Left hinge\n    translate([-laptop_width/2 + 5, laptop_depth/2, 0])\n    rotate([90, 0, 0])\n    cylinder(h=3, r=1.5, center=true);\n    \n    // Right hinge\n    translate([laptop_width/2 - 5, laptop_depth/2, 0])\n    rotate([90, 0, 0])\n    cylinder(h=3, r=1.5, center=true);\n}\n\nmodule laptop_screen() {\n    translate([0, laptop_depth/2, base_thickness/2])\n    rotate([laptop_open_angle, 0, 0])\n    translate([0, laptop_depth/2, screen_thickness/2])\n    union() {\n        screen_bezel();\n        screen_display();\n        webcam();\n    }\n}\n\nmodule status_leds() {\n    // Power LED\n    translate([-laptop_width/2 + 5, -laptop_depth/2 + 2, base_thickness/2 + 0.01])\n    color([0, 1, 0])\n    sphere(r=0.5);\n    \n    // Battery LED\n    translate([-laptop_width/2 + 10, -laptop_depth/2 + 2, base_thickness/2 + 0.01])\n    color([0, 0.5, 1])\n    sphere(r=0.5);\n}\n\n// Main assembly\nunion() {\n    laptop_base();\n    keyboard();\n    trackpad();\n    ports();\n    ventilation_grills();\n    hinges();\n    laptop_screen();\n    status_leds();\n}",
    "renders": true
  },
  {
    "electronic_device": "tablet",
    "openscad_code": "// Realistic Tablet Model - OpenSCAD\n// Dimensions in mm for 3D printing\n\n// Tablet dimensions\ntablet_length = 80;\ntablet_width = 120;\ntablet_thickness = 6;\nscreen_border = 4;\ncorner_radius = 5;\n\n// Colors\ncolor_body = \"silver\";\ncolor_screen = \"black\";\ncolor_button = \"darkgray\";\ncolor_cam = \"black\";\ncolor_port = \"darkgray\";\n\n// Main body with rounded corners\nmodule tablet_body() {\n    color(color_body)\n    difference() {\n        // Main rounded body\n        minkowski() {\n            cube([tablet_length - 2*corner_radius, tablet_width - 2*corner_radius, tablet_thickness], center = true);\n            sphere(r = corner_radius);\n        }\n        \n        // Screen cutout\n        translate([0, 0, tablet_thickness/2 - 0.5])\n            cube([tablet_length - 2*screen_border, tablet_width - 2*screen_border, tablet_thickness], center = true);\n    }\n}\n\n// Screen display\nmodule screen() {\n    color(color_screen)\n    translate([0, 0, tablet_thickness/2 - 0.4])\n        cube([tablet_length - 2*screen_border - 1, tablet_width - 2*screen_border - 1, 0.2], center = true);\n}\n\n// Home button\nmodule home_button() {\n    color(color_button)\n    translate([0, -tablet_width/2 + 8, tablet_thickness/2 - 0.5])\n        cylinder(h = 1, r = 4, $fn = 32);\n}\n\n// Volume buttons\nmodule volume_buttons() {\n    color(color_button)\n    // Volume up\n    translate([tablet_length/2 + 0.5, 15, tablet_thickness/4])\n        cube([1, 10, 3], center = true);\n    \n    // Volume down\n    translate([tablet_length/2 + 0.5, 0, tablet_thickness/4])\n        cube([1, 10, 3], center = true);\n}\n\n// Power button\nmodule power_button() {\n    color(color_button)\n    translate([tablet_length/2 + 0.5, tablet_width/2 - 15, tablet_thickness/4])\n        cube([1, 15, 3], center = true);\n}\n\n// Camera\nmodule camera() {\n    color(color_cam)\n    translate([0, tablet_width/2 - 8, tablet_thickness/2 - 0.5])\n        cylinder(h = 0.5, r = 2.5, $fn = 16);\n    \n    // Camera lens detail\n    translate([0, tablet_width/2 - 8, tablet_thickness/2 - 0.2])\n        cylinder(h = 0.2, r = 1.5, $fn = 16);\n}\n\n// Speaker holes\nmodule speakers() {\n    for (i = [-2:1:2]) {\n        color(color_body)\n        translate([i * 6, -tablet_width/2 + 2, tablet_thickness/2 - 0.5])\n            cylinder(h = 1, r = 0.8, $fn = 16);\n    }\n}\n\n// USB-C port\nmodule usb_port() {\n    color(color_port)\n    translate([0, -tablet_width/2 - 0.1, 0])\n        cube([6, 1, 3], center = true);\n}\n\n// LED indicator\nmodule led_indicator() {\n    color(\"red\")\n    translate([tablet_length/2 - 8, tablet_width/2 - 2, tablet_thickness/2 - 0.5])\n        cylinder(h = 0.5, r = 0.5, $fn = 8);\n}\n\n// Assemble the tablet\nunion() {\n    tablet_body();\n    screen();\n    home_button();\n    volume_buttons();\n    power_button();\n    camera();\n    speakers();\n    usb_port();\n    led_indicator();\n}",
    "renders": true
  },
  {
    "electronic_device": "desktop",
    "openscad_code": "// Realistic Desktop Bluetooth Speaker\n// Approx 85 mm tall, 85 mm wide, 80 mm deep\n\n// Main body parameters\nbody_w = 80;\nbody_d = 75;\nbody_h = 45;\nwall_t = 2.5;\n\n// Grille parameters\ngrille_h = 25;\ngrille_d = 68;\nbar_w = 1.5;\nbar_gap = 3;\n\n// Top control ring\nring_outer = 35;\nring_inner = 24;\nring_h = 8;\n\n// Ports\nusb_w = 8;\nusb_h = 3.5;\nusb_d = 5;\naux_w = 6;\naux_h = 3;\n\n// Feet\nfoot_r = 5;\nfoot_h = 4;\n\n// Colors\nbody_col = [0.1, 0.1, 0.1];\ngrille_col = [0.25, 0.25, 0.25];\naccent_col = [0.8, 0.1, 0.15];\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        color(body_col)\n        cube([body_w, body_d, body_h], center=true);\n        \n        // Hollow inside\n        translate([0,0,-wall_t/2])\n            cube([body_w-2*wall_t, body_d-2*wall_t, body_h], center=true);\n    }\n}\n\nmodule speaker_grille() {\n    translate([0, (body_d-grille_d)/2 - wall_t, body_h/2 - grille_h/2 - wall_t]) {\n        // Grille frame\n        color(grille_col)\n        difference() {\n            cube([body_w-2*wall_t, grille_d, grille_h], center=true);\n            translate([0,0,1])\n                cube([body_w-2*wall_t-2*wall_t, grille_d-2*wall_t, grille_h], center=true);\n        }\n        \n        // Grille bars\n        for(x = [-((body_w-2*wall_t)/2 - bar_w/2) : bar_gap : ((body_w-2*wall_t)/2 - bar_w/2)]) {\n            color(grille_col)\n            translate([x, 0, 0])\n                cube([bar_w, grille_d, grille_h], center=true);\n        }\n    }\n}\n\nmodule control_ring() {\n    translate([0, 0, body_h/2 + ring_h/2 - wall_t]) {\n        color(accent_col)\n        difference() {\n            cylinder(h=ring_h, r=ring_outer, center=true);\n            cylinder(h=ring_h+1, r=ring_inner, center=true);\n        }\n        \n        // Center button\n        color([0.9,0.9,0.9])\n        translate([0,0,ring_h/2+0.5])\n            cylinder(h=2, r=ring_inner/2, center=true);\n    }\n}\n\nmodule ports() {\n    // USB-C port\n    translate([body_w/2 - usb_w/2 - wall_t, 0, -body_h/2 + usb_h*2]) {\n        color([0,0,0])\n        rotate([0,90,0])\n            cube([usb_w, usb_h, usb_d], center=true);\n    }\n    \n    // 3.5mm aux port\n    translate([body_w/2 - aux_w/2 - wall_t, 15, -body_h/2 + usb_h*2]) {\n        color([0,0,0])\n        rotate([0,90,0])\n            cube([aux_w, aux_h, aux_h*2], center=true);\n    }\n}\n\nmodule indicator_led() {\n    translate([body_w/2 - 5, -body_d/2 + 5, body_h/2 - 3]) {\n        color([0,0.8,0])\n        sphere(r=1.5, center=true);\n    }\n}\n\nmodule rubber_feet() {\n    module foot() {\n        color([0.1,0.1,0.1])\n        cylinder(h=foot_h, r=foot_r, center=true);\n    }\n    \n    positions = [\n        [-body_w/2 + foot_r*1.5, -body_d/2 + foot_r*1.5, -body_h/2 - foot_h/2],\n        [ body_w/2 - foot_r*1.5, -body_d/2 + foot_r*1.5, -body_h/2 - foot_h/2],\n        [-body_w/2 + foot_r*1.5,  body_d/2 - foot_r*1.5, -body_h/2 - foot_h/2],\n        [ body_w/2 - foot_r*1.5,  body_d/2 - foot_r*1.5, -body_h/2 - foot_h/2]\n    ];\n    \n    for(pos = positions) {\n        translate(pos)\n            foot();\n    }\n}\n\n// Logo placeholder\nmodule logo() {\n    translate([0, 0, body_h/2 + ring_h + 1]) {\n        color([0.9,0.9,0.9])\n        linear_extrude(height=0.5)\n            text(\"BTX\", size=6, halign=\"center\", valign=\"center\");\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    speaker_grille();\n    control_ring();\n    ports();\n    indicator_led();\n    rubber_feet();\n    logo();\n}",
    "renders": true
  },
  {
    "electronic_device": "server",
    "openscad_code": "// Server 1U rack-mount case (realistic style, medium complexity)\n// 1U height = 44.45 mm, scaled to ~70 mm length for printing\n\n// Color definitions\ncolor_case = \"gray20\";\ncolor_front = \"gray10\";\ncolor_hdd = \"silver\";\ncolor_fan = \"gray30\";\ncolor_led = \"red\";\ncolor_usb = \"blue\";\ncolor_ethernet = \"yellow\";\n\n// Overall dimensions\ncase_w = 70;\ncase_h = 44;\ncase_d = 40;\n\n// Wall thickness\nwall = 2;\n\n// Main case body\nmodule server_case() {\n    difference() {\n        // Outer shell\n        color(color_case)\n            cube([case_w, case_h, case_d], center=false);\n\n        // Hollow interior\n        translate([wall, wall, wall])\n            cube([case_w-2*wall, case_h-2*wall, case_d-wall], center=false);\n    }\n}\n\n// Front bezel with vents and ports\nmodule front_bezel() {\n    difference() {\n        // Front plate\n        color(color_front)\n            translate([0, 0, case_d-2])\n            cube([case_w, case_h, 2]);\n\n        // Power button\n        translate([case_w*0.1, case_h*0.5, case_d-1.5])\n        cylinder(h=2, d=6);\n        \n        // LED holes\n        for(i=[0:2]) {\n            translate([case_w*0.2 + i*8, case_h*0.2, case_d-1])\n            cylinder(h=2, d=3);\n        }\n        \n        // USB ports\n        for(i=[0:1]) {\n            translate([case_w*0.7 + i*10, case_h*0.3, case_d-1])\n            cube([8, 12, 2]);\n        }\n        \n        // Ethernet ports\n        for(i=[0:1]) {\n            translate([case_w*0.7 + i*10, case_h*0.7, case_d-1])\n            cube([12, 8, 2]);\n        }\n        \n        // Ventilation slots\n        for(i=[0:4]) {\n            translate([case_w*0.15, case_h*0.1 + i*8, case_d-1])\n            cube([case_w*0.4, 2, 2]);\n        }\n    }\n}\n\n// Hard drive caddies\nmodule hdd_caddy(pos) {\n    translate([pos, case_h*0.3, case_d*0.7])\n    color(color_hdd)\n    difference() {\n        // Drive body\n        cube([35, 8, 25]);\n        \n        // Handle\n        translate([32, 4, 20])\n        cube([8, 1, 3]);\n        \n        // Screw holes\n        for(x=[5:15:25])\n            for(z=[5:15:15]) {\n                translate([x, 4, z])\n                cylinder(h=10, d=1, center=true);\n            }\n    }\n}\n\n// Cooling fan\nmodule fan() {\n    translate([case_w*0.7, case_h*0.5, case_d*0.3])\n    color(color_fan)\n    difference() {\n        // Fan frame\n        cylinder(h=10, d=30);\n        \n        // Center hub\n        translate([0, 0, -1])\n        cylinder(h=12, d=8);\n        \n        // Blades (7 blades)\n        for(i=[0:6]) {\n            rotate([0, 0, i*51.4])\n            translate([0, 6, 5])\n            cube([20, 2, 10], center=true);\n        }\n        \n        // Mounting holes\n        for(i=[0:3]) {\n            rotate([0, 0, i*90])\n            translate([10, 0, 5])\n            cylinder(h=10, d=3);\n        }\n    }\n}\n\n// Rear IO shield\nmodule rear_io() {\n    translate([0, 0, 0])\n    difference() {\n        // IO plate\n        color(color_front)\n        cube([case_w, case_h, 2]);\n        \n        // Power connector\n        translate([case_w*0.1, case_h*0.5, 1])\n        cube([15, 15, 2]);\n        \n        // VGA port\n        translate([case_w*0.4, case_h*0.7, 1])\n        cube([12, 10, 2]);\n        \n        // More ethernet ports\n        for(i=[0:3]) {\n            translate([case_w*0.6 + i*8, case_h*0.3, 1])\n            cube([6, 8, 2]);\n        }\n    }\n}\n\n// Status LEDs\nmodule status_leds() {\n    for(i=[0:2]) {\n        translate([case_w*0.2 + i*8, case_h*0.2, case_d-1])\n        color(color_led)\n        cylinder(h=1, d=3);\n    }\n    \n    translate([case_w*0.1, case_h*0.5, case_d-0.5])\n    color(\"green\")\n    cylinder(h=1, d=6);\n}\n\n// Assembly\nserver_case();\nfront_bezel();\nhdd_caddy(case_w*0.2);\nhdd_caddy(case_w*0.6);\nfan();\ntranslate([0, 0, -2])\nrear_io();\nstatus_leds();\n\n// USB port coloring\ntranslate([case_w*0.7, case_h*0.3, case_d-1])\ncolor(color_usb)\ncube([8, 12, 1]);\n\ntranslate([case_w*0.8, case_h*0.3, case_d-1])\ncolor(color_usb)\ncube([8, 12, 1]);\n\n// Ethernet port coloring\nfor(i=[0:3]) {\n    translate([case_w*0.6 + i*8, case_h*0.3, -1])\n    color(color_ethernet)\n    cube([6, 8, 1]);\n}",
    "renders": true
  }
]