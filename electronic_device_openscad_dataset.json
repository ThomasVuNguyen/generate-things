[
  {
    "electronic_device": "computer",
    "openscad_code": "// OpenSCAD Laptop Model - Realistic Style, Medium Complexity\n// Overall size: ~90mm x 60mm x 12mm (closed)\n\n// Base dimensions\nlaptop_x = 90;\nlaptop_y = 60;\nlaptop_z = 6;\nscreen_thickness = 4;\n\n// Colors\n$fn = 50;\ncolor_base = [0.2, 0.2, 0.2];  // Dark gray\ncolor_screen = [0.05, 0.05, 0.05];  // Black\ncolor_keys = [0.1, 0.1, 0.1];  // Dark gray keys\ncolor_trackpad = [0.15, 0.15, 0.15];  // Slightly lighter\ncolor_ports = [0.3, 0.3, 0.3];  // Medium gray\ncolor_logo = [0.5, 0.5, 0.5];  // Light gray\n\n// Main laptop base\nmodule laptop_base() {\n    color(color_base)\n    difference() {\n        // Main body\n        cube([laptop_x, laptop_y, laptop_z], center = true);\n        \n        // Taper edges\n        translate([0, 0, laptop_z/2 - 0.5])\n        cube([laptop_x - 4, laptop_y - 4, 1], center = true);\n    }\n}\n\n// Keyboard keys\nmodule keyboard() {\n    key_width = 6;\n    key_height = 6;\n    key_depth = 0.5;\n    spacing = 1.5;\n    \n    // Keyboard area\n    translate([0, 10, laptop_z/2 + 0.1])\n    color(color_keys)\n    for (row = [0:4]) {\n        for (col = [0:11]) {\n            if (!(row == 4 && col > 6)) {  // Skip space where trackpad is\n                translate([\n                    -laptop_x/2 + 10 + col * (key_width + spacing),\n                    -laptop_y/2 + 15 + row * (key_height + spacing),\n                    0\n                ])\n                cube([key_width, key_height, key_depth], center = true);\n            }\n        }\n    }\n}\n\n// Trackpad\nmodule trackpad() {\n    translate([15, -laptop_y/2 + 10, laptop_z/2 + 0.1])\n    color(color_trackpad)\n    cube([25, 15, 0.5], center = true);\n}\n\n// USB ports\nmodule usb_ports() {\n    port_width = 7;\n    port_height = 3;\n    \n    translate([-laptop_x/2 - 0.1, 15, 0])\n    rotate([0, 90, 0])\n    color(color_ports)\n    for (i = [0:1]) {\n        translate([0, i * 8, 0])\n        cube([port_width, port_height, 2]);\n    }\n}\n\n// HDMI port\nmodule hdmi_port() {\n    translate([-laptop_x/2 - 0.1, -10, 0])\n    rotate([0, 90, 0])\n    color(color_ports)\n    cube([12, 5, 7]);\n}\n\n// Power connector\nmodule power_port() {\n    translate([-laptop_x/2 - 0.1, 0, 0])\n    rotate([0, 90, 0])\n    color(color_ports)\n    cylinder(h = 8, r1 = 3, r2 = 3);\n}\n\n// Screen bezel\nmodule screen_bezel() {\n    color(color_base)\n    difference() {\n        // Outer frame\n        translate([0, 0, laptop_z/2 + screen_thickness/2])\n        cube([laptop_x - 2, laptop_y - 2, screen_thickness], center = true);\n        \n        // Screen cutout\n        translate([0, 0, laptop_z/2 + screen_thickness/2 + 0.1])\n        cube([laptop_x - 10, laptop_y - 10, screen_thickness + 0.2], center = true);\n    }\n}\n\n// LCD panel\nmodule lcd_panel() {\n    color(color_screen)\n    translate([0, 0, laptop_z/2 + screen_thickness/2])\n    cube([laptop_x - 12, laptop_y - 12, 0.5], center = true);\n}\n\n// Hinge\nmodule hinge() {\n    color(color_base)\n    translate([0, laptop_y/2 - 3, 0])\n    cylinder(h = laptop_y - 6, r = 2, center = true);\n}\n\n// Logo\nmodule logo() {\n    color(color_logo)\n    translate([0, 0, laptop_z/2 + screen_thickness - 0.2])\n    cube([8, 12, 0.3], center = true);\n}\n\n// Status LEDs\nmodule status_leds() {\n    color([0, 1, 0])  // Green LED\n    translate([laptop_x/2 - 5, laptop_y/2 - 3, laptop_z/2 + 0.1])\n    cylinder(h = 0.5, r = 1);\n    \n    color([1, 1, 0])  // Yellow LED\n    translate([laptop_x/2 - 5, laptop_y/2 - 6, laptop_z/2 + 0.1])\n    cylinder(h = 0.5, r = 1);\n}\n\n// Assemble laptop\nunion() {\n    // Base\n    laptop_base();\n    \n    // Keyboard and trackpad\n    keyboard();\n    trackpad();\n    \n    // Ports\n    usb_ports();\n    hdmi_port();\n    power_port();\n    \n    // Status LEDs\n    status_leds();\n    \n    // Screen assembly\n    translate([0, 0, laptop_z])\n    rotate([30, 0, 0])  // Screen open at 30 degrees\n    union() {\n        screen_bezel();\n        lcd_panel();\n        logo();\n    }\n    \n    // Hinges\n    translate([laptop_x/2 - 8, 0, 0])\n    hinge();\n    translate([-laptop_x/2 + 8, 0, 0])\n    hinge();\n}",
    "renders": true
  }
]