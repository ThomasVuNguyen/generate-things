[
  {
    "building": "house",
    "openscad_code": "// Medium-complexity realistic house – 3D-printable\n// Scale factor keeps the model around 75 mm in length\nscale_factor = 0.25;\n\nmodule house() {\n    // Wall thickness for 3D printing\n    wall = 2;\n\n    // Main box – outer shell\n    difference() {\n        cube([60, 40, 35], center = true);\n        translate([0, 0, 1])\n            cube([60 - wall*2, 40 - wall*2, 35 - wall], center = true);\n    }\n\n    // Roof – two sloped halves\n    translate([0, 0, 35/2 + 15/2])\n    rotate([0, 0, 0])\n    union() {\n        // Left half\n        translate([-30/2, 0, 0])\n            rotate([0, 45, 0])\n            cube([30*sqrt(2), 42, wall], center = true);\n        // Right half\n        translate([30/2, 0, 0])\n            rotate([0, -45, 0])\n            cube([30*sqrt(2), 42, wall], center = true);\n    }\n\n    // Chimney on roof\n    translate([15, 10, 35/2 + 15])\n    difference() {\n        cube([8, 8, 12], center = true);\n        translate([0, 0, 2])\n            cube([8 - wall, 8 - wall, 12 - wall], center = true);\n    }\n\n    // Door\n    translate([-15, 0, -35/2 + 0.5])\n    difference() {\n        translate([0, -20/2 + 5, 15/2])\n            cube([wall, 10, 15], center = true);\n        // Door opening\n        translate([0, -20/2 + 5, 15/2])\n            cube([wall + 0.1, 10 + 0.1, 15 + 0.1], center = true);\n    }\n\n    // Windows (four symmetric)\n    for (x = [-1, 1]) {\n        for (y = [-1, 1]) {\n            translate([x * 15, y * 10, 0])\n            difference() {\n                translate([0, -20/2 - 0.5, 5])\n                    cube([wall, 8, 8], center = true);\n                // Window opening\n                translate([0, -20/2 - 0.6, 5])\n                    cube([wall + 0.1, 8 + 0.1, 8 + 0.1], center = true);\n            }\n        }\n    }\n\n    // Window frames (thin boxes)\n    frame_thk = 1;\n    for (x = [-1, 1]) {\n        for (y = [-1, 1]) {\n            translate([x * 15, y * 10, 5])\n            union() {\n                // Top\n                translate([0, 0, 4])\n                    cube([wall + 0.1, 8 + frame_thk*2, frame_thk], center = true);\n                // Bottom\n                translate([0, 0, -4])\n                    cube([wall + 0.1, 8 + frame_thk*2, frame_thk], center = true);\n                // Left\n                translate([0, -4, 0])\n                    cube([wall + 0.1, frame_thk, 8 + frame_thk*2], center = true);\n                // Right\n                translate([0, 4, 0])\n                    cube([wall + 0.1, frame_thk, 8 + frame_thk*2], center = true);\n            }\n        }\n    }\n\n    // Simple foundation plinth\n    translate([0, 0, -35/2 - 2])\n    difference() {\n        cube([64, 44, 4], center = true);\n        translate([0, 0, 1])\n            cube([64 - wall, 44 - wall, 4], center = true);\n    }\n}\n\n// Apply global scale\nscale([scale_factor, scale_factor, scale_factor])\nhouse();",
    "renders": true
  },
  {
    "building": "mansion",
    "openscad_code": "// Mansion - Medium complexity realistic style\n// Designed for 3D printing (no overhangs, 2mm wall thickness)\n\nwall_thickness = 2;\nscale_factor = 0.5;\n\nmodule window(width, height, depth) {\n    difference() {\n        cube([width, height, depth]);\n        translate([wall_thickness/2, wall_thickness/2, -0.1])\n            cube([width-wall_thickness, height-wall_thickness, depth+0.2]);\n    }\n}\n\nmodule door(width, height, depth) {\n    difference() {\n        cube([width, height, depth]);\n        translate([wall_thickness/2, wall_thickness/2, -0.1])\n            cube([width-wall_thickness, height-wall_thickness, depth+0.2]);\n    }\n}\n\nmodule roof(width, depth, height) {\n    hull() {\n        translate([-wall_thickness, -wall_thickness, 0])\n            cylinder(h=wall_thickness, r=wall_thickness);\n        translate([width+wall_thickness, -wall_thickness, 0])\n            cylinder(h=wall_thickness, r=wall_thickness);\n        translate([-wall_thickness, depth+wall_thickness, 0])\n            cylinder(h=wall_thickness, r=wall_thickness);\n        translate([width+wall_thickness, depth+wall_thickness, 0])\n            cylinder(h=wall_thickness, r=wall_thickness);\n        translate([width/2, depth/2, height])\n            cylinder(h=wall_thickness, r=wall_thickness);\n    }\n}\n\nmodule chimney(x, y) {\n    translate([x, y, 0]) {\n        cube([8, 8, 20]);\n    }\n}\n\nmodule main_building() {\n    // Base foundation\n    translate([-40, -30, 0])\n        cube([80, 60, 5]);\n    \n    // Main walls\n    translate([-35, -25, 5])\n        cube([70, 50, 35]);\n    \n    // Windows front\n    for(x = [-20, -10, 0, 10, 20]) {\n        translate([x, -25+wall_thickness/2, 15])\n            rotate([0, 90, 0])\n                window(15, 10, wall_thickness);\n    }\n    \n    // Windows back\n    for(x = [-20, -10, 0, 10, 20]) {\n        translate([x, 25-wall_thickness/2, 15])\n            rotate([0, 90, 0])\n                window(15, 10, wall_thickness);\n    }\n    \n    // Windows sides\n    for(y = [-15, -5, 5, 15]) {\n        translate([-35+wall_thickness/2, y, 15])\n            window(15, 10, wall_thickness);\n        translate([35-wall_thickness/2, y, 15])\n            window(15, 10, wall_thickness);\n    }\n    \n    // Front door\n    translate([0, -25+wall_thickness/2, 5])\n        rotate([0, 90, 0])\n            door(12, 20, wall_thickness);\n    \n    // Main roof\n    translate([-40, -30, 40])\n        roof(80, 60, 15);\n    \n    // Chimneys\n    chimney(20, 10);\n    chimney(-15, -5);\n}\n\nmodule left_wing() {\n    translate([-70, -20, 5]) {\n        // Wing walls\n        cube([30, 40, 25]);\n        \n        // Windows\n        for(y = [-10, 0, 10]) {\n            translate([-70+wall_thickness/2, y, 15])\n                window(12, 8, wall_thickness);\n            translate([-45-wall_thickness/2, y, 15])\n                window(12, 8, wall_thickness);\n        }\n        \n        // Wing roof\n        translate([-72, -22, 30])\n            roof(34, 44, 12);\n    }\n}\n\nmodule right_wing() {\n    translate([40, -20, 5]) {\n        // Wing walls\n        cube([30, 40, 25]);\n        \n        // Windows\n        for(y = [-10, 0, 10]) {\n            translate([40+wall_thickness/2, y, 15])\n                window(12, 8, wall_thickness);\n            translate([70-wall_thickness/2, y, 15])\n                window(12, 8, wall_thickness);\n        }\n        \n        // Wing roof\n        translate([38, -22, 30])\n            roof(34, 44, 12);\n    }\n}\n\nmodule columns() {\n    // Front columns\n    for(x = [-30, -15, 15, 30]) {\n        translate([x, -25, 5]) {\n            cylinder(h=30, r=2);\n            translate([0, 0, 30])\n                sphere(r=3);\n        }\n    }\n}\n\n// Assemble mansion\nscale([scale_factor, scale_factor, scale_factor]) {\n    union() {\n        main_building();\n        left_wing();\n        right_wing();\n        columns();\n    }\n}",
    "renders": true
  },
  {
    "building": "cottage",
    "openscad_code": "// Realistic 3D-printable cottage – medium complexity\n// ~80 mm wide, printable without support\n\n$fn = 32;              // Smooth curves\nwall = 2;              // 3D-print-friendly shell thickness\n\nmodule sloped_roof(w, d, h) {          // h = peak height\n    linear_extrude(height = h, scale = [0, 0], center = false)\n        square([w, d]);\n}\n\nmodule chimney() {\n    translate([15, 0, 30]) {\n        difference() {\n            cube([8, 8, 16], center = true);          // main stack\n            translate([0, 0, 7]) cylinder(h = 10, d = 5);  // hollow\n        }\n    }\n}\n\nmodule window() {\n    difference() {\n        cube([10, wall, 8]);                // frame\n        translate([wall/2, 0, wall/2])\n            cube([10 - 2*wall, wall + 0.1, 8 - 2*wall]);\n    }\n}\n\nmodule door() {\n    difference() {\n        cube([12, wall, 20]);               // solid door\n        translate([wall/2, 0, wall])\n            cube([12 - 2*wall, wall + 0.1, 20 - 2*wall]);\n    }\n}\n\nmodule wall_with_openings() {\n    difference() {\n        cube([60, 40, 30], center = true);  // main walls\n        // front windows\n        translate([-20, 21, 5]) window();\n        translate([ 20, 21, 5]) window();\n        // front door\n        translate([0, 21, -5]) door();\n        // back window\n        translate([0, -21, 5]) rotate([0, 180, 0]) window();\n    }\n}\n\nmodule roof() {\n    difference() {\n        union() {\n            // main gabled roof\n            translate([0, 0, 30]) rotate([0, 90, 0])\n                sloped_roof(40, 65, 25);\n            translate([0, 0, 30]) mirror([0, 1, 0]) rotate([0, 90, 0])\n                sloped_roof(40, 65, 25);\n            // overhangs\n            translate([0, 0, 30]) rotate([0, 90, 0])\n                sloped_roof(45, 70, 27);\n            translate([0, 0, 30]) mirror([0, 1, 0]) rotate([0, 90, 0])\n                sloped_roof(45, 70, 27);\n        }\n        // cavity matching walls\n        translate([0, 0, 15]) cube([62, 42, 35], center = true);\n    }\n}\n\nmodule base() {\n    cube([70, 50, 2], center = true);\n}\n\n// Assembly\ndifference() {\n    union() {\n        base();\n        wall_with_openings();\n        roof();\n        chimney();\n    }\n    // hollow interior for printability & material saving\n    translate([0, 0, 1]) cube([56, 36, 28], center = true);\n}",
    "renders": true
  },
  {
    "building": "apartment",
    "openscad_code": "// Realistic Medium-Complexity Apartment Building\n// Overall size: 80 x 60 x 50 mm\n\n$fn = 32;\n\n// Main dimensions\nwall_thickness = 2;\nfloor_height = 10;\napartment_width = 40;\napartment_depth = 30;\napartment_height = 50;\n\nmodule apartment_building() {\n    // Base foundation\n    color(\"Gray\")\n    translate([0, 0, -2])\n    cube([apartment_width + 4, apartment_depth + 4, 2], center = true);\n\n    // Ground floor walls\n    difference() {\n        color(\"Beige\")\n        cube([apartment_width, apartment_depth, apartment_height], center = true);\n        \n        // Interior cavity\n        translate([0, 0, wall_thickness])\n        cube([apartment_width - 2*wall_thickness, apartment_depth - 2*wall_thickness, apartment_height - wall_thickness], center = true);\n    }\n    \n    // First floor slab\n    translate([0, 0, floor_height - wall_thickness/2])\n    color(\"Gray\")\n    cube([apartment_width, apartment_depth, wall_thickness], center = true);\n    \n    // Second floor slab\n    translate([0, 0, 2*floor_height - wall_thickness/2])\n    color(\"Gray\")\n    cube([apartment_width, apartment_depth, wall_thickness], center = true);\n    \n    // Roof\n    translate([0, 0, apartment_height/2 + 1])\n    color(\"Brown\")\n    cube([apartment_width + 2, apartment_depth + 2, 2], center = true);\n}\n\nmodule windows() {\n    // Window parameters\n    window_width = 8;\n    window_height = 10;\n    window_depth = 1;\n    \n    // Front windows - ground floor\n    for(x = [-15, 0, 15]) {\n        translate([x, apartment_depth/2 - wall_thickness/2, -10])\n        rotate([0, 90, 0])\n        color(\"LightBlue\")\n        cube([window_width, window_height, window_depth], center = true);\n    }\n    \n    // Front windows - first floor\n    for(x = [-15, 0, 15]) {\n        translate([x, apartment_depth/2 - wall_thickness/2, 0])\n        rotate([0, 90, 0])\n        color(\"LightBlue\")\n        cube([window_width, window_height, window_depth], center = true);\n    }\n    \n    // Side windows\n    for(z = [-10, 0]) {\n        translate([apartment_width/2 - wall_thickness/2, 0, z])\n        rotate([0, 0, 90])\n        color(\"LightBlue\")\n        cube([window_width, window_height, window_depth], center = true);\n    }\n}\n\nmodule door() {\n    // Front door\n    translate([0, apartment_depth/2 - wall_thickness/2, -20])\n    rotate([0, 90, 0])\n    color(\"Brown\")\n    cube([10, 18, wall_thickness], center = true);\n    \n    // Door knob\n    translate([2, apartment_depth/2 - wall_thickness, -20])\n    color(\"Gold\")\n    sphere(1);\n}\n\nmodule balcony() {\n    // First floor balcony\n    color(\"Gray\")\n    translate([0, apartment_depth/2 + 4, 0])\n    cube([20, 8, 1], center = true);\n    \n    // Balcony railing\n    color(\"White\")\n    for(x = [-8, -4, 0, 4, 8]) {\n        translate([x, apartment_depth/2 + 8, 0])\n        cube([1, 1, 8], center = true);\n    }\n    \n    // Balcony posts\n    for(x = [-8, 8]) {\n        translate([x, apartment_depth/2 + 8, 4])\n        cube([1, 1, 8], center = true);\n    }\n}\n\nmodule chimney() {\n    // Chimney on roof\n    color(\"Red\")\n    translate([15, 0, apartment_height/2 + 4])\n    cube([6, 6, 10], center = true);\n}\n\n// Assemble the apartment\nunion() {\n    apartment_building();\n    windows();\n    door();\n    balcony();\n    chimney();\n}",
    "renders": true
  },
  {
    "building": "condo",
    "openscad_code": "// Realistic Medium-Complexity 3D-Printable Condo\n// Overall footprint ~60 mm × 40 mm, height ~55 mm\n\nwall_thick = 2;\nfloor_gap  = 3;\n\nmodule slab(x, y, z)      cube([x, y, z], center = true);\nmodule column(r, h)       cylinder(r = r, h = h, $fn = 16);\n\n// Main building body\nmodule main_body() {\n    difference() {\n        // full block\n        translate([0, 0, 27.5])\n            slab(50, 35, 55);\n        \n        // carve out interior\n        translate([0, 0, 27.5])\n            slab(50 - 2*wall_thick, 35 - 2*wall_thick, 55 - wall_thick);\n    }\n}\n\n// Balcony on front\nmodule balcony() {\n    translate([0, 18.5, 15]) {\n        // floor\n        cube([20, 7, wall_thick], center = true);\n        // railing\n        for (x = [-8:4:8])\n            translate([x, 3.5, 5])\n                cube([1.5, 1, 10], center = true);\n    }\n}\n\n// Windows (recessed)\nmodule windows() {\n    for (y = [-8, 8])\n        translate([0, y, 25]) {\n            translate([23, 0, 0]) cube([wall_thick, 8, 6]);\n            translate([-23, 0, 0]) cube([wall_thick, 8, 6]);\n        }\n}\n\n// Entry door\nmodule door() {\n    translate([0, -17.5, 15])\n        cube([8, wall_thick, 15], center = true);\n}\n\n// Simple roof\nmodule roof() {\n    translate([0, 0, 55])\n        cube([54, 39, wall_thick], center = true);\n}\n\n// 4 corner columns for style\nmodule columns() {\n    for (x = [-22, 22])\n        for (y = [-15, 15])\n            translate([x, y, 27.5])\n                column(2, 55);\n}\n\n// HVAC box on roof\nmodule hvac() {\n    translate([15, 10, 57.5])\n        cube([8, 6, 5], center = true);\n}\n\n// Assembly\nunion() {\n    main_body();\n    balcony();\n    windows();\n    door();\n    roof();\n    columns();\n    hvac();\n}",
    "renders": true
  },
  {
    "building": "townhouse",
    "openscad_code": "// Realistic Townhouse - Medium Complexity\n// Designed for 3D printing - approximately 70mm width\n\nwall_thickness = 2;\nwindow_depth = 1;\ndoor_depth = 1;\nroof_overhang = 3;\n\n// Main colors\ncolor_body = [0.85, 0.8, 0.75];\ncolor_roof = [0.5, 0.3, 0.2];\ncolor_windows = [0.2, 0.3, 0.5];\ncolor_door = [0.4, 0.2, 0.1];\n\nmodule townhouse() {\n    // Main building body\n    translate([0, 0, 0])\n    color(color_body)\n    cube([40, 30, 35], center=true);\n    \n    // Roof\n    translate([0, 0, 35/2 + 12])\n    color(color_roof)\n    rotate([0, 0, 0])\n    scale([1.15, 1.1, 1])\n    cube([40 + 6, 30 + 6, 24], center=true);\n    \n    // Chimney\n    translate([15, -10, 35/2 + 20])\n    color(color_roof)\n    cube([6, 6, 15], center=true);\n    \n    // Door\n    translate([0, -15 + door_depth/2, -35/2 + 12])\n    color(color_door)\n    cube([8, door_depth, 16], center=true);\n    \n    // Door handle\n    translate([3, -15 + door_depth + 0.5, -35/2 + 8])\n    color([0.5, 0.5, 0.5])\n    sphere(1);\n    \n    // Windows\n    for(pos = [[-12, 10], [12, 10], [-12, -5], [12, -5]]) {\n        translate([pos[0], pos[1] + window_depth/2, 5])\n        color(color_windows)\n        cube([6, window_depth, 8], center=true);\n    }\n    \n    // Window frames\n    for(pos = [[-12, 10], [12, 10], [-12, -5], [12, -5]]) {\n        translate([pos[0], pos[1] + window_depth/2, 5])\n        color([0.7, 0.7, 0.7])\n        difference() {\n            cube([8, window_depth + 0.5, 10], center=true);\n            cube([7, window_depth + 1, 9], center=true);\n        }\n    }\n    \n    // Base/foundation\n    translate([0, 0, -35/2 - 2])\n    color([0.6, 0.6, 0.6])\n    cube([42, 32, 4], center=true);\n    \n    // Steps\n    translate([0, -15 - 2, -35/2 - 1])\n    color([0.7, 0.7, 0.7])\n    union() {\n        cube([12, 2, 1], center=true);\n        translate([0, -1, -1])\n        cube([10, 2, 1], center=true);\n        translate([0, -2, -2])\n        cube([8, 2, 1], center=true);\n    }\n    \n    // Gutter details\n    translate([0, -15 - roof_overhang, 35/2 + 10])\n    color([0.4, 0.4, 0.4])\n    cube([40 + 6, 2, 1], center=true);\n    \n    translate([0, 15 + roof_overhang, 35/2 + 10])\n    color([0.4, 0.4, 0.4])\n    cube([40 + 6, 2, 1], center=true);\n}\n\n// Render the townhouse\ntownhouse();",
    "renders": true
  },
  {
    "building": "villa",
    "openscad_code": "// Villa 3D printable model - medium complexity, realistic style\n// Overall dimensions: 80mm x 60mm x 40mm\n\n// Wall thickness for 3D printing\nwall = 1.5;\n\n// Main building\nmodule main_building() {\n    // Ground floor\n    difference() {\n        cube([60, 40, 20]);\n        translate([wall, wall, -1]) cube([60-wall*2, 40-wall*2, 22]);\n    }\n    \n    // First floor\n    translate([0, 0, 20]) {\n        difference() {\n            cube([50, 35, 15]);\n            translate([wall, wall, -1]) cube([50-wall*2, 35-wall*2, 17]);\n        }\n    }\n}\n\n// Roof tiles\nmodule roof() {\n    color(\"saddlebrown\") {\n        // Main roof\n        translate([-5, -5, 35]) rotate([0, 0, 0]) {\n            linear_extrude(height = 0.5) {\n                polygon(points=[[0,0], [65,0], [32.5, -20]]);\n            }\n        }\n        \n        // First floor roof\n        translate([5, 0, 20]) rotate([0, 0, 0]) {\n            linear_extrude(height = 0.5) {\n                polygon(points=[[0,0], [40,0], [20, -15]]);\n            }\n        }\n    }\n}\n\n// Windows\nmodule window(x, y, z, w, h) {\n    translate([x, y, z]) {\n        // Window frame\n        color(\"white\") cube([w+2, 0.5, h+2]);\n        \n        // Window pane\n        translate([1, -0.1, 1]) color(\"lightblue\") cube([w, 0.3, h]);\n    }\n}\n\n// Door\nmodule door() {\n    color(\"brown\") {\n        translate([25, -0.1, 0]) cube([10, 1, 18]);\n    }\n}\n\n// Chimney\nmodule chimney() {\n    color(\"darkred\") {\n        translate([45, 15, 35]) {\n            difference() {\n                cube([8, 8, 10]);\n                translate([1, 1, -1]) cube([6, 6, 12]);\n            }\n        }\n    }\n}\n\n// Columns for entrance\nmodule column(x) {\n    color(\"white\") {\n        translate([x, -1, 0]) {\n            difference() {\n                cylinder(h = 20, r = 2);\n                cylinder(h = 21, r = 1.5);\n            }\n        }\n    }\n}\n\n// Terrace\nmodule terrace() {\n    color(\"lightgray\") {\n        translate([5, 35, 10]) {\n            difference() {\n                cube([50, 5, 1]);\n                translate([wall, 0, -1]) cube([50-wall*2, 5, 3]);\n            }\n        }\n    }\n}\n\n// Generate villa\nmain_building();\n\n// Windows on ground floor\nfor(x = [5, 20, 35, 50]) {\n    window(x, -0.1, 8, 8, 10);\n}\n\n// Windows on first floor\nfor(x = [10, 30, 45]) {\n    window(x, -0.1, 28, 6, 8);\n}\n\n// Side windows\nwindow(-0.1, 20, 8, 10, 8);\nwindow(-0.1, 20, 28, 8, 6);\nwindow(60.1, 20, 8, 10, 8);\nwindow(60.1, 20, 28, 8, 6);\n\n// Door\ndoor();\n\n// Columns\ncolumn(22);\ncolumn(38);\n\n// Terrace\nterrace();\n\n// Chimney\nchimney();\n\n// Roof\nroof();",
    "renders": true
  },
  {
    "building": "cabin",
    "openscad_code": "// Realistic medium-complexity 3D-printable cabin\n// Designed for ~75 mm total length\n\n$fn=32;\n\n// Parameters\nwall=2;         // 3D-printable wall thickness\nfoundation=2;\nroof_angle=30;\nbase_w=50;\nbase_d=40;\nbase_h=35;\nroof_over=5;\nlog_d=3;\nwindow_s=8;\ndoor_w=8;\ndoor_h=15;\nchimney_w=6;\nchimney_d=6;\nchimney_h=22;\n\n// Main module\nmodule cabin() {\n    foundation_block();\n    translate([0,0,foundation]) {\n        walls();\n        roof();\n        chimney();\n    }\n}\n\n// Foundation block\nmodule foundation_block() {\n    color(\"SaddleBrown\")\n    cube([base_w+roof_over*2, base_d+roof_over*2, foundation], center=true);\n}\n\n// Log-style walls\nmodule walls() {\n    difference() {\n        // Front & back log layers\n        for(i=[0:1]) mirror([0,i*180,0]) {\n            for(y=[-base_d/2+log_d/2:log_d:base_d/2-log_d/2])\n                translate([0,y,base_h/2])\n                    rotate([90,0,0])\n                        cylinder(h=base_w, d=log_d, center=true);\n        }\n        \n        // Left & right log layers\n        for(i=[0:1]) mirror([i*180,0,0]) {\n            for(x=[-base_w/2+log_d/2:log_d:base_w/2-log_d/2])\n                translate([x,0,base_h/2])\n                    rotate([0,90,0])\n                        cylinder(h=base_d, d=log_d, center=true);\n        }\n        \n        // Door opening\n        translate([0,-base_d/2-wall/2,door_h/2])\n            cube([door_w+wall*2, wall*3, door_h+wall*2], center=true);\n        \n        // Window openings (two)\n        for(x=[-base_w/4,base_w/4])\n            translate([x,base_d/2-wall/2,base_h*2/3])\n                rotate([0,0,0])\n                    cube([window_s, wall*3, window_s], center=true);\n    }\n}\n\n// Pitched roof with shingles\nmodule roof() {\n    roof_w = base_w + roof_over*2;\n    roof_d = base_d + roof_over*2;\n    peak_h = roof_d/2 * tan(roof_angle);\n    \n    // Roof panels\n    for(side=[0,1]) mirror([0,side*180,0]) {\n        translate([0, -roof_d/2, base_h]) {\n            rotate([roof_angle,0,0])\n                translate([0,0,peak_h/2])\n                    cube([roof_w, roof_d, wall], center=true);\n        }\n    }\n    \n    // Ridge cap\n    translate([0,0,base_h+peak_h])\n        rotate([0,90,0])\n            cylinder(h=roof_d, d=wall*1.5, center=true);\n}\n\n// Brick chimney\nmodule chimney() {\n    translate([base_w/3, -base_d/4, base_h+3*wall]) {\n        // Main chimney\n        color(\"DarkRed\")\n        cube([chimney_w, chimney_d, chimney_h], center=true);\n        \n        // Chimney cap\n        translate([0,0,chimney_h/2+wall/2])\n            cube([chimney_w+2, chimney_d+2, wall], center=true);\n    }\n}\n\n// Render the cabin\ncabin();",
    "renders": true
  },
  {
    "building": "bungalow",
    "openscad_code": "// Realistic bungalow, medium complexity\n// Outside dimensions ~70 mm long × 45 mm wide × 35 mm high\n// Wall thickness 2 mm for 3D-print strength\n\nwall_t = 2;\nscale_factor = 0.7; // so 100 mm max dim → 70 mm footprint\n\nmodule bungalow() {\n    // ——— foundation slab ———\n    translate([0, 0, -1])\n        cube([70, 45, 2], center = true);\n\n    // ——— walls ———\n    difference() {\n        // outer shell\n        translate([0, 0, 10.5])\n            cube([70, 45, 21], center = true);\n\n        // hollow inside\n        translate([0, 0, 10.5])\n            cube([70 - 2*wall_t, 45 - 2*wall_t, 21], center = true);\n    }\n\n    // ——— pitched roof ———\n    difference() {\n        // main roof block\n        translate([0, 0, 32])\n            cube([74, 49, 6], center = true);\n\n        // slope front\n        translate([0, 22.5, 32])\n            rotate([0, 45, 0])\n                cube([74, 50, 6], center = true);\n\n        // slope back\n        translate([0, -22.5, 32])\n            rotate([0, -45, 0])\n                cube([74, 50, 6], center = true);\n    }\n\n    // ——— front door ———\n    translate([-35 + wall_t + 1, 0, 2])\n        cube([wall_t + 0.2, 12, 18]);\n\n    // ——— windows ———\n    for (x = [-20, 20]) {\n        translate([x, 22.5 - wall_t, 12])\n            cube([10, wall_t + 0.2, 10]);\n    }\n\n    // ——— chimney ———\n    translate([25, 0, 35])\n        cube([6, 6, 8], center = true);\n\n    // ——— porch roof pillars ———\n    pillar_pos = [[-20, 20], [20, 20], [-20, 10], [20, 10]];\n    for (p = pillar_pos) {\n        translate([p[0], 22.5 + 8, 10])\n            cylinder(h = 10, d = 3, $fn = 8);\n    }\n\n    // ——— porch roof ———\n    translate([0, 22.5 + 8, 15])\n        cube([50, 16, 1], center = true);\n}\n\n// scale to desired print size\nscale([scale_factor, scale_factor, scale_factor])\n    bungalow();",
    "renders": true
  }
]