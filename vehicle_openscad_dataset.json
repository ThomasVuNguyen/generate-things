[
  {
    "vehicle": "sedan",
    "openscad_code": "// Medium-complexity 3D-printable sedan\n// Overall scale: 90 mm long, 40 mm wide, 30 mm tall\nscale_factor = 1;\n\n// Body shell\nmodule body_shell() {\n    difference() {\n        // Main body block\n        hull() {\n            translate([-42, -18, 0]) cube([84, 36, 20]);\n            translate([-40, -16, 15]) cube([80, 32, 10]);\n            translate([35, -12, 22]) cube([10, 24, 8]);\n            translate([-45, -12, 22]) cube([10, 24, 8]);\n        }\n        // Cabin cutout\n        translate([-35, -14, 18]) cube([70, 28, 15]);\n        // Wheel arches\n        for (x = [-28, 28]) {\n            translate([x, -20, 0]) rotate([0, 0, 0]) cylinder(h = 20, r = 8, $fn = 16);\n            translate([x,  20, 0]) rotate([0, 0, 0]) cylinder(h = 20, r = 8, $fn = 16);\n        }\n    }\n}\n\n// Hood and trunk\nmodule hood_trunk() {\n    // Hood\n    translate([-41, -17, 10]) cube([30, 34, 8]);\n    // Trunk\n    translate([11, -17, 10]) cube([30, 34, 8]);\n}\n\n// Roof\nmodule roof() {\n    translate([-30, -14, 25]) cube([60, 28, 6]);\n}\n\n// Windows\nmodule windows() {\n    color(\"lightblue\") {\n        // Windshield\n        translate([-34, -13, 19]) cube([0.5, 26, 12]);\n        // Rear window\n        translate([33.5, -13, 19]) cube([0.5, 26, 12]);\n        // Side windows (front)\n        for (x = [-20, 20]) {\n            translate([x, -14.5, 19]) cube([14, 0.5, 10]);\n            translate([x,  14, 19]) cube([14, 0.5, 10]);\n        }\n    }\n}\n\n// Wheels\nmodule wheels() {\n    for (x = [-28, 28]) {\n        for (y = [-18, 18]) {\n            translate([x, y, -2]) {\n                difference() {\n                    cylinder(h = 6, r = 8, $fn = 32);\n                    cylinder(h = 7, r = 4, $fn = 32);\n                }\n            }\n        }\n    }\n}\n\n// Headlights\nmodule headlights() {\n    for (x = [-38, -30]) {\n        translate([x, -15, 12]) cube([4, 2, 2]);\n        translate([x, 13, 12]) cube([4, 2, 2]);\n    }\n}\n\n// Taillights\nmodule taillights() {\n    for (x = [30, 38]) {\n        translate([x, -15, 12]) cube([4, 2, 2]);\n        translate([x, 13, 12]) cube([4, 2, 2]);\n    }\n}\n\n// Side mirrors\nmodule mirrors() {\n    for (y = [-15, 15]) {\n        translate([-10, y, 22]) {\n            cube([3, 2, 1.5]);\n            translate([1.5, 0, 0]) rotate([0, y > 0 ? 30 : -30, 0]) cube([2, 1.5, 3]);\n        }\n    }\n}\n\n// License plates\nmodule plates() {\n    translate([-43, -6, 8]) cube([2, 12, 1]);\n    translate([41, -6, 8]) cube([2, 12, 1]);\n}\n\n// Exhaust pipe\nmodule exhaust() {\n    translate([42, 8, 4]) rotate([0, 90, 0]) cylinder(h = 10, r = 2, $fn = 16);\n}\n\n// Assemble the sedan\nscale([scale_factor, scale_factor, scale_factor]) {\n    union() {\n        body_shell();\n        hood_trunk();\n        roof();\n        windows();\n        headlights();\n        taillights();\n        mirrors();\n        plates();\n        exhaust();\n    }\n    wheels();\n}",
    "renders": true
  },
  {
    "vehicle": "coupe",
    "openscad_code": "// Realistic Medium-complexity 3D-printable coupe (â‰ˆ85 mm long)\n\n$fn = 36;               // Smooth curves for printing\n\nwheel_d = 18;\nwheel_w = 8;\nbody_l = 85;\nbody_w = 40;\nbody_h = 22;\n\n// Printable base plate\nmodule base_plate() {\n    difference() {\n        translate([0,0,-1])\n            cube([body_l+4,body_w+4,2], center=true);\n        translate([0,0,0.5])\n            cube([body_l,body_w,2], center=true);\n    }\n}\n\n// Wheel module (no overhangs)\nmodule wheel() {\n    rotate([0,90,0])\n    difference() {\n        cylinder(d=wheel_d, h=wheel_w, center=true);\n        translate([0,0,-wheel_w/2-0.5])\n            cylinder(d=wheel_d-6, h=wheel_w+1, center=true);\n    }\n}\n\n// Side mirrors (printable)\nmodule mirror() {\n    translate([0,-6,0])\n    rotate([0,20,0])\n    union() {\n        cube([3,2,3]);\n        translate([1.5,0,-1])\n            sphere(d=4);\n    }\n}\n\n// Main body\nmodule body() {\n    difference() {\n        // Basic hull\n        hull() {\n            translate([-body_l/2+8, 0, body_h/2])\n                cube([body_l-16, body_w-8, body_h], center=true);\n            translate([-body_l/2+15, 0, body_h/2+8])\n                cube([body_l-30, body_w-12, 8], center=true);\n        }\n        \n        // Cabin cavity\n        translate([-body_l/2+25, 0, body_h/2+10])\n            cube([body_l-50, body_w-20, 12], center=true);\n            \n        // Windows\n        translate([-body_l/2+30, 0, body_h/2+11])\n            cube([body_l-60, body_w-16, 8], center=true);\n    }\n}\n\n// Hood slope\nmodule hood() {\n    translate([-body_l/2+5, 0, body_h/2+2])\n        rotate([0,0,0])\n        linear_extrude(height=10, scale=0.5)\n        square([25, body_w-10], center=true);\n}\n\n// Lights\nmodule lights() {\n    for(x=[-1,1])\n        translate([x*body_l/2-4, 0, body_h/2])\n            sphere(d=6);\n}\n\n// Exhausts\nmodule exhaust() {\n    for(side=[-1,1])\n        translate([-body_l/2+3, side*(body_w/2-2), -2])\n            rotate([90,0,0])\n            cylinder(d1=4, d2=3, h=8);\n}\n\n// Roof\nmodule roof() {\n    translate([-5,0,body_h/2+16])\n        rotate([0,0,0])\n        hull() {\n            cube([30, body_w-16, 2], center=true);\n            translate([5,0,8])\n                cube([20, body_w-20, 2], center=true);\n        }\n}\n\n// Assemble the coupe\nunion() {\n    base_plate();\n    \n    // Wheels\n    for(x=[-1,1])\n        for(y=[-1,1])\n            translate([x*28, y*22, 0])\n                wheel();\n    \n    body();\n    roof();\n    hood();\n    lights();\n    exhaust();\n    \n    // Side mirrors\n    translate([body_l/2-20, body_w/2+1, body_h/2+8])\n        mirror();\n    translate([body_l/2-20, -body_w/2-1, body_h/2+8])\n        mirror();\n}",
    "renders": true
  },
  {
    "vehicle": "hatchback",
    "openscad_code": "// Realistic Medium-Complexity 3D-Printable Hatchback\n// Approx 70 mm long, 30 mm wide, 25 mm tall\n// Wall thickness 1.2 mm for reliable printing\n\n$fa = 2; $fs = 0.5;\n\nmodule body_shell() {\n    // Main body with slight wedge shape\n    hull() {\n        translate([0, 0, 5]) cube([40, 28, 10], center = true);\n        translate([8, 0, 8]) cube([42, 26, 12], center = true);\n    }\n}\n\nmodule roof() {\n    // Sloping roof\n    translate([3, 0, 14.5])\n    rotate([0, -4, 0])\n    cube([38, 26, 2.4], center = true);\n}\n\nmodule hood() {\n    // Curved hood by stacking cylinders\n    for (i = [-10:2:10])\n        translate([i, 0, 12 + 0.015 * i * i])\n        rotate([90, 0, 0])\n        cylinder(h = 1.2, r = 13 - 0.3 * abs(i), center = true);\n}\n\nmodule hatch() {\n    // Rear hatch with slight rake\n    translate([-17, 0, 10.5])\n    rotate([60, 0, 0])\n    cube([17, 25, 1.2], center = true);\n}\n\nmodule side_windows() {\n    // Front and rear side windows\n    translate([5, 14.1, 12])\n    cube([12, 0.1, 7], center = true);\n    translate([-9, 14.1, 11])\n    cube([14, 0.1, 6], center = true);\n}\n\nmodule windshield() {\n    // Front windshield\n    translate([13, 0, 13])\n    rotate([70, 0, 0])\n    cube([20, 27, 0.1], center = true);\n}\n\nmodule rear_windshield() {\n    // Rear windshield\n    translate([-14, 0, 12])\n    rotate([110, 0, 0])\n    cube([18, 25, 0.1], center = true);\n}\n\nmodule wheel(pos, angle = 0) {\n    // Wheel with tire and rim\n    translate(pos)\n    rotate([0, 0, angle])\n    difference() {\n        // Tire\n        cylinder(h = 4.8, r = 6, center = true);\n        // Rim cavity\n        translate([0, 0, -0.1])\n        cylinder(h = 5, r = 4, center = true);\n    }\n}\n\nmodule axles() {\n    // Simple axles connecting wheels\n    translate([10, 0, 3])\n    rotate([0, 90, 0])\n    cylinder(h = 34, r = 1.2, center = true);\n    translate([-10, 0, 3])\n    rotate([0, 90, 0])\n    cylinder(h = 34, r = 1.2, center = true);\n}\n\nmodule bumper(loc) {\n    // Front or rear bumper\n    translate(loc)\n    cube([1.2, 28, 4], center = true);\n}\n\nmodule headlights() {\n    // Headlight clusters\n    translate([20.5, 8, 8])\n    cube([1.2, 6, 4], center = true);\n    translate([20.5, -8, 8])\n    cube([1.2, 6, 4], center = true);\n}\n\nmodule taillights() {\n    // Taillight clusters\n    translate([-20.5, 8, 8])\n    cube([1.2, 5, 3], center = true);\n    translate([-20.5, -8, 8])\n    cube([1.2, 5, 3], center = true);\n}\n\nmodule exhaust_pipe() {\n    // Single exhaust tip\n    translate([-21, 10, 2])\n    rotate([90, 0, 0])\n    cylinder(h = 6, r = 1.2, center = true);\n}\n\n// Assembly\nunion() {\n    difference() {\n        // Main body union\n        union() {\n            body_shell();\n            roof();\n            hood();\n            hatch();\n            windshield();\n            rear_windshield();\n            side_windows();\n            bumper([21, 0, 2]);\n            bumper([-21, 0, 2]);\n        }\n        // Hollow interior\n        translate([0, 0, 5])\n        scale([0.8, 0.8, 0.8])\n        cube([45, 30, 18], center = true);\n    }\n\n    // External parts\n    wheel([10, 15, 3]);\n    wheel([10, -15, 3]);\n    wheel([-10, 15, 3]);\n    wheel([-10, -15, 3]);\n    axles();\n    headlights();\n    taillights();\n    exhaust_pipe();\n}",
    "renders": true
  },
  {
    "vehicle": "suv",
    "openscad_code": "// Realistic SUV - Medium Complexity\n// Designed for 3D printing (no overhangs, 2mm wall thickness)\n\nmodule suv_body() {\n    // Main body\n    difference() {\n        // Main hull\n        hull() {\n            translate([-15, -20, 0]) cube([30, 40, 30]);\n            translate([-10, -18, 30]) cube([20, 36, 25]);\n        }\n        \n        // Wheel wells\n        for(side = [-1, 1]) {\n            translate([side * 18, -15, 5]) rotate([0, 90, 0]) \n                cylinder(h=15, r=9, $fn=32);\n            translate([side * 18, 15, 5]) rotate([0, 90, 0]) \n                cylinder(h=15, r=9, $fn=32);\n        }\n    }\n}\n\nmodule suv_windows() {\n    // Windshield\n    translate([0, -16, 33]) rotate([30, 0, 0])\n        cube([14, 1, 15], center=true);\n    \n    // Rear window\n    translate([0, 16, 33]) rotate([-30, 0, 0])\n        cube([14, 1, 15], center=true);\n    \n    // Side windows\n    for(side = [-1, 1]) {\n        translate([side * 12, 0, 35]) rotate([0, 0, 30 * side])\n            cube([20, 1, 12], center=true);\n    }\n}\n\nmodule suv_wheels() {\n    module wheel() {\n        difference() {\n            // Tire\n            cylinder(h=8, r=9, $fn=32);\n            // Rim\n            translate([0, 0, -1]) cylinder(h=10, r=7, $fn=32);\n            // Spokes\n            for(i = [0:3]) {\n                rotate([0, 0, i * 90])\n                    translate([0, 5, 4]) cube([1, 2, 8], center=true);\n            }\n        }\n    }\n    \n    // Front wheels\n    translate([-18, -15, 0]) wheel();\n    translate([18, -15, 0]) mirror([1, 0, 0]) wheel();\n    \n    // Rear wheels\n    translate([-18, 15, 0]) wheel();\n    translate([18, 15, 0]) mirror([1, 0, 0]) wheel();\n}\n\nmodule suv_details() {\n    // Front grille\n    translate([0, -19.5, 20]) cube([12, 1, 8], center=true);\n    \n    // Headlights\n    for(side = [-1, 1]) {\n        translate([side * 10, -19.5, 22]) \n            cube([3, 1, 3], center=true);\n    }\n    \n    // Taillights\n    for(side = [-1, 1]) {\n        translate([side * 10, 19.5, 22]) \n            cube([3, 1, 3], center=true);\n    }\n    \n    // Roof rails\n    for(side = [-1, 1]) {\n        hull() {\n            translate([side * 12, -15, 55]) \n                cylinder(h=2, r=1, $fn=16);\n            translate([side * 12, 15, 55]) \n                cylinder(h=2, r=1, $fn=16);\n        }\n    }\n    \n    // Bumpers\n    translate([0, -20, 10]) cube([20, 2, 8], center=true);\n    translate([0, 20, 10]) cube([20, 2, 8], center=true);\n}\n\n// Assemble the SUV\nmodule suv() {\n    union() {\n        suv_body();\n        suv_windows();\n        suv_wheels();\n        suv_details();\n    }\n}\n\n// Scale to 80mm length\nscale(0.8) suv();",
    "renders": true
  },
  {
    "vehicle": "truck",
    "openscad_code": "// Realistic medium-complexity 3D-printable truck (approx. 85 mm long)\n\n$fn = 36; // Smoother curves for realism\nwall = 2;  // 3D-printable wall thickness\n\nmodule wheel(r=9, w=6) {\n    difference() {\n        cylinder(h=w, r=r, center=true);\n        cylinder(h=w+1, r=r-wall, center=true); // Hollow tire\n    }\n}\n\nmodule axle() {\n    cylinder(h=30, r=2, center=true);\n}\n\nmodule chassis() {\n    // Main frame\n    translate([0, 0, 8])\n    difference() {\n        cube([80, 30, 16], center=true);\n        translate([0, 0, -1])\n        cube([76, 26, 14], center=true); // Hollow out\n    }\n\n    // Front bumper\n    translate([39, 0, 8])\n    cube([4, 28, 12], center=true);\n\n    // Rear bumper\n    translate([-39, 0, 8])\n    cube([4, 28, 12], center=true);\n}\n\nmodule cab() {\n    translate([20, 0, 22])\n    difference() {\n        cube([30, 28, 28], center=true);\n        translate([0, 0, -1])\n        cube([26, 24, 26], center=true); // Hollow cab\n    }\n\n    // Windshield slope\n    translate([30, 0, 36])\n    rotate([0, 30, 0])\n    cube([20, 26, 2], center=true);\n\n    // Roof\n    translate([20, 0, 40])\n    cube([28, 24, 4], center=true);\n\n    // Side mirrors\n    for(side=[-1,1]) {\n        translate([32, side*15, 28])\n        cube([4, 2, 6], center=true);\n        translate([34, side*18, 28])\n        sphere(r=2);\n    }\n}\n\nmodule bed() {\n    translate([-25, 0, 20])\n    difference() {\n        cube([50, 32, 12], center=true);\n        translate([0, 0, -1])\n        cube([46, 28, 10], center=true); // Hollow bed\n    }\n\n    // Bed sides\n    translate([-25, 16, 28])\n    cube([50, 2, 8], center=true);\n    translate([-25, -16, 28])\n    cube([50, 2, 8], center=true);\n\n    // Tailgate (vertical)\n    translate([-49, 0, 26])\n    cube([2, 28, 20], center=true);\n}\n\nmodule headlights() {\n    for(side=[-1,1]) {\n        translate([40, side*10, 16])\n        sphere(r=3);\n        translate([40, side*10, 16])\n        sphere(r=2.5); // Inner lens\n    }\n}\n\nmodule exhaust() {\n    translate([-10, 18, 24])\n    cylinder(h=30, r=2);\n    translate([-10, 18, 54])\n    sphere(r=3);\n}\n\n// Assemble truck\nunion() {\n    chassis();\n    cab();\n    bed();\n    headlights();\n    exhaust();\n\n    // Wheels and axles\n    for(side=[-1,1]) {\n        // Front axle\n        translate([20, side*18, 8])\n        wheel();\n        translate([20, side*18, 8])\n        rotate([90,0,0])\n        axle();\n\n        // Rear axle\n        translate([-20, side*18, 8])\n        wheel();\n        translate([-20, side*18, 8])\n        rotate([90,0,0])\n        axle();\n    }\n}",
    "renders": true
  },
  {
    "vehicle": "van",
    "openscad_code": "// Medium-complexity realistic van\n// Overall size ~80 mm (L) Ã— 30 mm (W) Ã— 30 mm (H)\n\n$fn = 36;\n\nmodule wheel(r=5, w=3) {\n    // Tire + rim\n    difference() {\n        cylinder(h=w, r=r);          // tire\n        cylinder(h=w+0.1, r=r-1.5);  // rim cavity\n    }\n}\n\nmodule wheels() {\n    // Front left\n    translate([-25, 15, -5]) wheel();\n    // Front right\n    translate([-25, -15, -5]) wheel();\n    // Rear left\n    translate([25, 15, -5]) wheel();\n    // Rear right\n    translate([25, -15, -5]) wheel();\n}\n\nmodule body() {\n    // Main lower box\n    hull() {\n        translate([-30, 0, 0])\n            cube([60, 30, 15], center=true);\n        translate([-30, 0, 10])\n            cube([60, 30, 10], center=true);\n    }\n\n    // Cabin roof\n    hull() {\n        translate([-20, 0, 12])\n            cube([25, 28, 8], center=true);\n        translate([-5, 0, 15])\n            cube([20, 26, 6], center=true);\n    }\n}\n\nmodule windows() {\n    color(\"lightblue\") {\n        // Windshield\n        translate([-28, 0, 13])\n            cube([0.1, 22, 10], center=true);\n        // Side windows\n        for(y=[8,-8])\n            translate([-15, y, 13])\n                cube([20, 0.1, 8], center=true);\n    }\n}\n\nmodule doors() {\n    // Driver door seam\n    translate([-15, 15, 7.5])\n        cube([30, 0.2, 15], center=true);\n    // Sliding door seam\n    translate([5, 15, 7.5])\n        cube([20, 0.2, 15], center=true);\n}\n\nmodule headlights() {\n    // Headlights\n    translate([-30, 8, 5])\n        cube([1, 4, 3], center=true);\n    translate([-30, -8, 5])\n        cube([1, 4, 3], center=true);\n    // Taillights\n    translate([30, 8, 5])\n        cube([1, 4, 3], center=true);\n    translate([30, -8, 5])\n        cube([1, 4, 3], center=true);\n}\n\nmodule grille() {\n    // Front grille\n    translate([-30, 0, 3])\n        cube([0.5, 20, 6], center=true);\n    // Horizontal bars\n    for(z=[1:2:5])\n        translate([-30.2, 0, z])\n            cube([0.1, 18, 0.5], center=true);\n}\n\nmodule mirrors() {\n    // Side mirrors\n    translate([-25, 16, 10])\n        cube([2, 4, 2], center=true);\n    translate([-25, -16, 10])\n        cube([2, 4, 2], center=true);\n}\n\n// Assembly\nunion() {\n    body();\n    windows();\n    doors();\n    headlights();\n    grille();\n    mirrors();\n    wheels();\n}",
    "renders": true
  }
]