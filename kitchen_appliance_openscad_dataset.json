[
  {
    "kitchen_appliance": "blender",
    "openscad_code": "// Realistic Medium-Complexity Blender Kitchen Appliance\n// Designed for 3D printing: no overhangs, 2 mm walls, â‰ˆ120 mm tall\n\n$fn = 36;  // Smooth curves\nwall = 2;  // 3D-printable wall thickness\n\n// Main assembly\nmodule blender() {\n    difference() {\n        // Base housing\n        base();\n\n        // Motor shaft hole\n        translate([0, 0, 25])\n            cylinder(h = 30, d = 8);\n    }\n\n    // Buttons panel\n    translate([18, -25, 0])\n        buttons_panel();\n\n    // Jar assembly\n    translate([0, 0, 30])\n        jar();\n\n    // Lid\n    translate([0, 0, 30 + 55])\n        lid();\n}\n\n// Base housing\nmodule base() {\n    // Outer shell\n    difference() {\n        union() {\n            // Main body\n            cylinder(h = 30, d = 60);\n\n            // Back bump for cord\n            translate([0, 25, 10])\n                scale([1, 0.6, 0.5])\n                    sphere(d = 25);\n        }\n\n        // Hollow interior\n        cylinder(h = 28, d = 60 - 2 * wall);\n    }\n\n    // Feet\n    for (a = [0, 120, 240])\n        rotate([0, 0, a])\n            translate([23, 0, -2])\n                cylinder(h = 4, d = 8);\n}\n\n// Buttons and dial panel\nmodule buttons_panel() {\n    // Panel plate\n    cube([35, 15, 8], center = true);\n\n    // Three push buttons\n    for (i = [0, 1, 2])\n        translate([10 - i * 10, 0, 5])\n            cylinder(h = 6, d = 6);\n\n    // Speed dial\n    translate([10, 0, 8])\n        cylinder(h = 6, d = 12);\n\n    // Dial grip ridges\n    for (a = [0:30:330])\n        rotate([0, 0, a])\n            translate([5, 0, 8 + 3])\n                cube([2, 1, 4], center = true);\n}\n\n// Glass/plastic jar\nmodule jar() {\n    // Jar walls\n    difference() {\n        // Outer\n        cylinder(h = 55, d1 = 40, d2 = 45);\n\n        // Inner cavity\n        translate([0, 0, -1])\n            cylinder(h = 57, d1 = 40 - 2 * wall, d2 = 45 - 2 * wall);\n    }\n\n    // Handle\n    difference() {\n        // Handle grip\n        translate([25, 0, 25])\n            rotate([0, 90, 0])\n                torus(ri = 6, ro = 10);\n\n        // Cut hollow\n        translate([25, 0, 25])\n            rotate([0, 90, 0])\n                torus(ri = 3, ro = 8);\n    }\n\n    // Spout\n    translate([0, 22.5, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 8, d1 = 15, d2 = 5);\n}\n\n// Lid\nmodule lid() {\n    // Top\n    difference() {\n        // Outer lid\n        cylinder(h = 5, d = 47);\n\n        // Inner plug\n        cylinder(h = 7, d = 41);\n    }\n\n    // Center cap\n    translate([0, 0, 5])\n        cylinder(h = 8, d = 20);\n\n    // Cap grip\n    for (a = [0:45:315])\n        rotate([0, 0, a])\n            translate([10, 0, 9])\n                cube([8, 2, 4], center = true);\n}\n\n// Torus helper for handle\nmodule torus(ri, ro) {\n    rotate_extrude()\n        translate([ro, 0, 0])\n            circle(r = ri);\n}\n\n// Render\nblender();",
    "renders": true
  },
  {
    "kitchen_appliance": "toaster",
    "openscad_code": "// Realistic 2-slice toaster, medium complexity\n// Dimensions in mm, printable with 2 mm walls\n\n$fn = 50;\n\n// Overall size\ntoaster_w = 110;\ntoaster_d = 80;\ntoaster_h = 70;\n\n// Wall thickness\nwall = 2;\n\nmodule toaster_body() {\n    difference() {\n        // Outer shell\n        union() {\n            // Main block\n            translate([0, 0, toaster_h/2])\n                rounded_box(toaster_w, toaster_d, toaster_h, 5);\n            // Feet\n            for(x=[-1,1])\n            for(y=[-1,1])\n                translate([x*(toaster_w/2 - 10), y*(toaster_d/2 - 10), 3])\n                    cylinder(h=6, r=5);\n        }\n        // Slot openings\n        slot_w = 30;\n        slot_d = toaster_d - 20;\n        slot_h = 5;\n        for(x=[-1,1])\n            translate([x*toaster_w/4, 0, toaster_h - slot_h/2])\n                cube([slot_w, slot_d, slot_h + 1], center=true);\n        // Inner cavity\n        translate([0, 0, toaster_h/2])\n            rounded_box(toaster_w - 2*wall, toaster_d - 2*wall, toaster_h - wall, 3);\n    }\n}\n\nmodule rounded_box(w, d, h, r) {\n    hull() {\n        for(x=[-1,1])\n        for(y=[-1,1])\n        for(z=[-1,1])\n            translate([x*(w/2 - r), y*(d/2 - r), z*(h/2 - r)])\n                sphere(r=r);\n    }\n}\n\nmodule control_panel() {\n    // Front face plate\n    translate([toaster_w/2, 0, 25])\n        rotate([0, 90, 0])\n        difference() {\n            rounded_box(45, 20, 4, 4);\n            // Knob hole\n            translate([0, 0, 0])\n                cylinder(h=5, r=6);\n        }\n    // Knob\n    translate([toaster_w/2 + 2, 0, 25])\n        rotate([0, 90, 0])\n        cylinder(h=8, r=5);\n    // Lever\n    translate([toaster_w/2 - 5, 0, 15])\n        rotate([0, 0, 90])\n        union() {\n            cube([30, 5, 5]);\n            translate([15, 0, 2.5])\n                sphere(r=4);\n        }\n    // Buttons\n    for(i=[0,1]) {\n        translate([toaster_w/2 - 10, 15 - i*30, 35])\n            difference() {\n                cube([8, 8, 2], center=true);\n                translate([0, 0, 1])\n                    sphere(r=3);\n            }\n    }\n}\n\nmodule crumb_tray() {\n    // Tray slot\n    translate([0, toaster_d/2 - 1, 8])\n        rotate([90, 0, 0])\n        difference() {\n            cube([toaster_w - 30, 10, 2], center=true);\n            translate([0, 0, -0.5])\n                cube([toaster_w - 34, 6, 3], center=true);\n        }\n    // Handle\n    translate([0, toaster_d/2 + 4, 8])\n        cube([10, 8, 3], center=true);\n}\n\n// Assembly\ntoaster_body();\ncontrol_panel();\ncrumb_tray();",
    "renders": true
  },
  {
    "kitchen_appliance": "microwave",
    "openscad_code": "// Medium complexity realistic microwave\n// Overall dimensions: 100mm(W) x 75mm(D) x 60mm(H)\n\n$fn = 32;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        cube([100, 75, 60], center = false);\n        \n        // Hollow interior - 2mm walls\n        translate([2, 2, 2])\n            cube([96, 71, 56], center = false);\n    }\n}\n\n// Door\nmodule door() {\n    // Door frame\n    translate([-0.5, 10, 5])\n        cube([2, 55, 50]);\n    \n    // Door window\n    translate([0, 12, 7])\n        difference() {\n            cube([1, 51, 46]);\n            translate([0.5, 3, 3])\n                cube([2, 45, 40]);\n        }\n    \n    // Door handle\n    translate([-2, 50, 30])\n        rotate([0, 90, 0])\n            cylinder(h = 25, d1 = 5, d2 = 5);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel backing\n    translate([100, 20, 45])\n        cube([5, 35, 15]);\n    \n    // Display\n    translate([105, 25, 55])\n        cube([1, 20, 5]);\n    \n    // Buttons\n    for(y = [0:6:24]) {\n        translate([105, 22 + y, 48])\n            cylinder(h = 3, d = 5);\n    }\n    \n    // Dial\n    translate([105, 45, 52])\n        rotate([90, 0, 0])\n            cylinder(h = 3, d = 8);\n}\n\n// Feet\nmodule feet() {\n    // Four feet at corners\n    positions = [[5, 5], [5, 70], [95, 5], [95, 70]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], -3])\n            cylinder(h = 3, d = 5);\n    }\n}\n\n// Ventilation grilles\nmodule vents() {\n    // Side vents\n    translate([50, 75, 30])\n        rotate([0, 90, 0])\n            for(i = [0:4:20]) {\n                translate([i, 0, 0])\n                    cube([2, 2, 75]);\n            }\n    \n    // Back vents\n    translate([100, 50, 30])\n        rotate([0, 0, 90])\n            for(i = [0:4:20]) {\n                translate([i, 0, 0])\n                    cube([2, 2, 50]);\n            }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([50, 75, 10])\n        rotate([90, 0, 0])\n            cylinder(h = 30, d = 3);\n}\n\n// Assembly\nunion() {\n    body_shell();\n    door();\n    control_panel();\n    feet();\n    vents();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coffee_maker",
    "openscad_code": "// Coffee Maker 3D Model - Realistic Style, Medium Complexity\n// Overall dimensions: 100mm(W) x 120mm(D) x 140mm(H)\n\n$fn = 32;\nwall_thickness = 2;\n\nmodule main_body() {\n    // Main housing\n    difference() {\n        // Outer shell\n        cube([90, 110, 100], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cube([86, 106, 96], center=true);\n    }\n}\n\nmodule water_tank() {\n    // Transparent water tank on back\n    translate([0, -55, 30]) {\n        difference() {\n            // Tank body\n            cube([40, 15, 60], center=true);\n            \n            // Hollow interior\n            translate([0, 0, wall_thickness])\n                cube([36, 11, 56], center=true);\n        }\n        \n        // Tank handle\n        translate([25, 0, 0])\n            rotate([90, 0, 0])\n                cylinder(h=30, r1=3, r2=3);\n    }\n}\n\nmodule filter_basket() {\n    // Drip filter basket\n    translate([0, 20, -30]) {\n        difference() {\n            // Basket cone\n            cylinder(h=25, r1=20, r2=15);\n            \n            // Hollow interior\n            translate([0, 0, wall_thickness])\n                cylinder(h=23, r1=18, r2=13);\n        }\n        \n        // Basket handle\n        translate([22, 0, 12])\n            rotate([0, 90, 0])\n                cylinder(h=15, r1=2, r2=2);\n    }\n}\n\nmodule carafe() {\n    // Glass carafe\n    translate([0, 20, -70]) {\n        difference() {\n            // Carafe body\n            cylinder(h=35, r1=18, r2=20);\n            \n            // Interior space\n            translate([0, 0, wall_thickness])\n                cylinder(h=33, r1=16, r2=18);\n        }\n        \n        // Handle\n        translate([20, 0, 17])\n            rotate([0, 90, 0])\n                cylinder(h=35, r1=3, r2=3);\n        \n        // Spout\n        translate([0, -20, 30])\n            rotate([0, 0, 0])\n                cube([30, 5, 5], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, 55, 20]) {\n        // Panel base\n        cube([60, 5, 30], center=true);\n        \n        // Power button\n        translate([-20, 3, 0])\n            cylinder(h=3, r1=5, r2=5);\n        \n        // Brew strength dial\n        translate([0, 3, 0])\n            cylinder(h=3, r1=7, r2=7);\n        \n        // Timer button\n        translate([20, 3, 0])\n            cylinder(h=3, r1=5, r2=5);\n    }\n}\n\nmodule heating_plate() {\n    // Hot plate for carafe\n    translate([0, 20, -50]) {\n        difference() {\n            cylinder(h=3, r1=25, r2=25);\n            cylinder(h=3, r1=23, r2=23);\n        }\n    }\n}\n\nmodule base_feet() {\n    // Four rubber feet\n    for(x = [-35, 35])\n        for(y = [-45, 45])\n            translate([x, y, -52])\n                cylinder(h=3, r1=4, r2=4);\n}\n\nmodule display_screen() {\n    // LED display\n    translate([0, 55, 35]) {\n        difference() {\n            cube([40, 2, 15], center=true);\n            translate([0, 1, 0])\n                cube([36, 2, 11], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    water_tank();\n    filter_basket();\n    carafe();\n    control_panel();\n    heating_plate();\n    base_feet();\n    display_screen();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixer",
    "openscad_code": "// Realistic medium-complexity kitchen mixer\n// Overall size â‰ˆ 110 mm tall, 80 mm wide, 100 mm deep\n\n$fn = 32;              // smooth curves\nwall = 2;              // 3D-print friendly wall thickness\n\n// ----- Base housing -------------------------------------------------\nmodule base() {\n    difference() {\n        // main body\n        translate([0,0,10])\n            cube([70,80,20], center=true);\n\n        // front sloped face\n        translate([0,-41,20])\n            rotate([45,0,0])\n                cube([68,30,30], center=true);\n\n        // rear sloped face\n        translate([0,41,20])\n            rotate([-45,0,0])\n                cube([68,30,30], center=true);\n\n        // hollow inside\n        translate([0,0,10])\n            cube([66-wall*2,76-wall*2,18], center=true);\n    }\n\n    // rubber feet\n    for(x=[-25,25])\n        for(y=[-25,25])\n            translate([x,y,0])\n                cylinder(h=2, d1=6, d2=5);\n}\n\n// ----- Motor tower --------------------------------------------------\nmodule tower() {\n    union() {\n        // vertical column\n        cylinder(h=55, d1=30, d2=25);\n        translate([0,0,55])\n            cylinder(h=15, d1=25, d2=30);\n\n        // control panel\n        translate([0,-15,35])\n            cube([40,10,20], center=true);\n    }\n}\n\n// ----- Speed dial ---------------------------------------------------\nmodule dial() {\n    rotate([90,0,0])\n        cylinder(h=8, d1=12, d2=10);\n    for(i=[0:5:355])\n        rotate([0,0,i])\n            translate([5.5,0,-1])\n                cube([1,1,10], center=true);\n}\n\n// ----- Mixer head & gearbox -----------------------------------------\nmodule head() {\n    difference() {\n        union() {\n            // gearbox box\n            translate([0,0,70])\n                cube([55,40,30], center=true);\n\n            // curved transition\n            translate([0,0,55])\n                cylinder(h=15, d1=25, d2=50);\n        }\n\n        // hollow cavity\n        translate([0,0,70])\n            cube([51-wall*2,36-wall*2,26], center=true);\n    }\n}\n\n// ----- Beaters ------------------------------------------------------\nmodule beaters() {\n    for(side=[-1,1])\n        translate([side*18,0,85]) {\n            // shaft\n            cylinder(h=35, d=5);\n\n            // wire loops\n            for(z=[5,15,25]) {\n                rotate([0,0,45])\n                    translate([0,0,z])\n                        scale([1,0.2,1])\n                            rotate_extrude()\n                                translate([5,0,0])\n                                    circle(d=1.5);\n            }\n        }\n}\n\n// ----- Bowl ---------------------------------------------------------\nmodule bowl() {\n    difference() {\n        // outer bowl\n        translate([0,0,48])\n            cylinder(h=40, d1=70, d2=75);\n\n        // inner cavity\n        translate([0,0,50])\n            cylinder(h=38, d1=66, d2=71);\n    }\n\n    // handle\n    translate([35,0,68])\n        rotate([0,90,0])\n            cylinder(h=35, d=8);\n    translate([35,0,68])\n        rotate([0,90,0])\n            cylinder(h=30, d=4);\n}\n\n// ----- Buttons ------------------------------------------------------\nmodule buttons() {\n    // on/off button\n    translate([0,-15,45])\n        cube([10,5,5], center=true);\n\n    // turbo button\n    translate([0,-15,40])\n        cube([8,5,5], center=true);\n}\n\n// ------------------- Assembly ---------------------------------------\nbase();\ntranslate([0,0,20]) tower();\ntranslate([0,-15,35]) dial();\nhead();\nbeaters();\nbowl();\nbuttons();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettle",
    "openscad_code": "// Electric Kettle - Realistic medium-complexity model\n// Overall height ~110 mm, fits most FDM printers\n\n// Parameters\nwall = 2;           // wall thickness for 3D printability\nbase_r = 30;        // kettle body radius\nbody_h = 60;        // kettle body height\nneck_r = 20;        // neck radius\nspout_len = 25;     // spout protrusion\nhandle_clear = 15;  // finger clearance inside handle\nbutton_w = 8;       // power button width\n\n// Kettle body â€“ swept cylinder with rounded top\nmodule kettle_body() {\n    difference() {\n        union() {\n            // Main cylinder\n            cylinder(h = body_h, r1 = base_r, r2 = base_r, $fn = 64);\n            // Rounded top\n            translate([0, 0, body_h])\n                scale([1, 1, 0.6])\n                    sphere(r = base_r, $fn = 64);\n        }\n        // Hollow inside\n        translate([0, 0, -1])\n            cylinder(h = body_h + 2, r1 = base_r - wall, r2 = base_r - wall, $fn = 64);\n        translate([0, 0, body_h])\n            scale([1, 1, 0.6])\n                sphere(r = base_r - wall, $fn = 64);\n    }\n}\n\n// Spout\nmodule spout() {\n    difference() {\n        union() {\n            // Spout tube\n            translate([0, base_r - 5, body_h - 10])\n                rotate([90, 0, 0])\n                    cylinder(h = spout_len, r1 = 6, r2 = 4);\n            // Spout base blend\n            translate([0, base_r - 5, body_h - 15])\n                sphere(r = 7);\n        }\n        // Hollow spout\n        translate([0, base_r - 5, body_h - 10])\n            rotate([90, 0, 0])\n                cylinder(h = spout_len + 2, r1 = 4, r2 = 2);\n    }\n}\n\n// Handle\nmodule handle() {\n    difference() {\n        // Outer handle loop\n        translate([-base_r - 8, 0, body_h / 2])\n            rotate([90, 0, 0])\n                rotate([0, 90, 0])\n                    cylinder(h = 50, r1 = 5, r2 = 5);\n        // Inner clearance\n        translate([-base_r - 8, 0, body_h / 2])\n            rotate([90, 0, 0])\n                rotate([0, 90, 0])\n                    cylinder(h = 50, r1 = 5 - wall, r2 = 5 - wall);\n        // Top and bottom caps\n        translate([-base_r - 8, 0, body_h / 2 + 25])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r1 = 5, r2 = 5);\n        translate([-base_r - 8, 0, body_h / 2 - 25])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r1 = 5, r2 = 5);\n    }\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        union() {\n            // Lid disk\n            cylinder(h = 3, r = neck_r, $fn = 64);\n            // Lid knob\n            translate([0, 0, 3])\n                cylinder(h = 8, r1 = 6, r2 = 4);\n        }\n        // Hollow knob\n        translate([0, 0, 3])\n            cylinder(h = 9, r1 = 3, r2 = 2);\n    }\n}\n\n// Power button\nmodule power_button() {\n    translate([base_r - 2, 0, body_h / 2])\n        cube([button_w, 6, 4], center = true);\n}\n\n// Base plate with feet\nmodule base() {\n    difference() {\n        // Base disc\n        cylinder(h = wall, r = base_r + 4, $fn = 64);\n        // Cable notch\n        translate([base_r + 2, 0, -1])\n            cube([6, 10, wall + 2], center = true);\n    }\n    // Feet\n    for (a = [0:120:359])\n        rotate([0, 0, a])\n            translate([base_r - 8, 0, -2])\n                cylinder(h = 2, r = 3);\n}\n\n// Assembly\nbase();\ntranslate([0, 0, wall])\n    kettle_body();\ntranslate([0, 0, body_h + wall - 3])\n    lid();\nspout();\nhandle();\npower_button();",
    "renders": true
  },
  {
    "kitchen_appliance": "can_opener",
    "openscad_code": "// Manual can-opener, medium-complexity, 3D-printable\n// Overall length â‰ˆ 110 mm, all walls â‰¥ 2 mm\n\n// ---- Parameters ----\nhandle_len  = 65;   // main gripping handle\nhandle_d    = 14;\ncrank_len   = 45;   // turning lever\ncrank_d     = 10;\nhead_w      = 30;   // opener head block\nhead_h      = 22;\nhead_t      = 12;\nblade_h     = 8;\ngear_teeth  = 12;\ngear_h      = 6;\naxle_d      = 4;\nwasher_t    = 1.5;\n$fn = 36;\n\n// ---- Helper module for rounded ends ----\nmodule round_cylinder(h, d)\n{\n    cylinder(h=h-2*2, d=d);\n    translate([0,0,h-2]) sphere(d=d);\n    translate([0,0,0])   mirror([0,0,1]) sphere(d=d);\n}\n\n// ---- Main handle ----\nmodule main_handle()\n{\n    translate([0,0,-handle_d/2])\n        rotate([90,0,0])\n            round_cylinder(handle_len, handle_d);\n    // grip rings\n    for(i=[1:4])\n        translate([-handle_len/2 + i*13,0,0])\n            scale([1,1.1,1])\n                cylinder(h=2.5, d=handle_d+0.5, center=true);\n}\n\n// ---- Crank lever ----\nmodule crank()\n{\n    translate([handle_len/2+crank_len/2,0,0])\n        rotate([90,0,0])\n            round_cylinder(crank_len, crank_d);\n    // knob\n    translate([handle_len/2+crank_len+crank_d/2,0,0])\n        sphere(d=crank_d*1.3);\n}\n\n// ---- Rotating feed gear ----\nmodule feed_gear()\n{\n    difference()\n    {\n        cylinder(h=gear_h, d=20);\n        for(i=[0:gear_teeth-1])\n            rotate([0,0,i*360/gear_teeth])\n                translate([10-1.5,0,-1])\n                    cube([3,2,gear_h+2], center=true);\n    }\n}\n\n// ---- Cutting wheel ----\nmodule cutting_wheel()\n{\n    difference()\n    {\n        union()\n        {\n            cylinder(h=blade_h, d=22);\n            cylinder(h=blade_h*0.8, d=4); // axle stub\n        }\n        // sharp edge\n        translate([0,0,blade_h/2])\n            rotate([0,90,0])\n                cylinder(h=24, d=1.2, $fn=6);\n    }\n}\n\n// ---- Head block ----\nmodule opener_head()\n{\n    difference()\n    {\n        // main solid block\n        cube([head_w,head_t,head_h], center=true);\n        // axle holes\n        translate([head_w/2-8,0,head_h/2-gear_h/2])\n            rotate([0,90,0])\n                cylinder(h=head_t+2, d=axle_d+0.5, center=true);\n        translate([head_w/2-8,0,-head_h/2+blade_h/2])\n            rotate([0,90,0])\n                cylinder(h=head_t+2, d=axle_d+0.5, center=true);\n    }\n    // add parts\n    translate([head_w/2-8,0,head_h/2-gear_h/2])\n        feed_gear();\n    translate([head_w/2-8,0,-head_h/2+blade_h/2])\n        cutting_wheel();\n    // washers\n    translate([head_w/2-8,head_t/2+washer_t/2,head_h/2-gear_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n    translate([head_w/2-8,-head_t/2-washer_t/2,head_h/2-gear_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n    translate([head_w/2-8,head_t/2+washer_t/2,-head_h/2+blade_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n    translate([head_w/2-8,-head_t/2-washer_t/2,-head_h/2+blade_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n}\n\n// ---- Assembly ----\nunion()\n{\n    main_handle();\n    crank();\n    translate([-handle_len/2-head_w/2,0,handle_d/2-head_h/2])\n        opener_head();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "food_processor",
    "openscad_code": "// Food Processor - Medium complexity realistic style\n\n$fn = 24;\n\n// Overall scale\nscale_factor = 0.35;\n\n// Main dimensions (mm)\nbase_width = 120 * scale_factor;\nbase_depth = 100 * scale_factor;\nbase_height = 45 * scale_factor;\n\nmotor_housing_width = 80 * scale_factor;\nmotor_housing_depth = 80 * scale_factor;\nmotor_housing_height = 90 * scale_factor;\n\nbowl_diameter = 110 * scale_factor;\nbowl_height = 80 * scale_factor;\nbowl_wall = 2 * scale_factor;\n\nlid_diameter = bowl_diameter;\nlid_height = 15 * scale_factor;\nfeed_tube_diameter = 30 * scale_factor;\nfeed_tube_height = 40 * scale_factor;\n\n// Base module\nmodule base() {\n    difference() {\n        // Main base body\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Bottom recess\n        translate([0, 0, -2])\n            cube([base_width - 4, base_depth - 4, base_height - 2], center=true);\n        \n        // Vent slots on sides\n        for (i = [-1, 1]) {\n            translate([i * (base_width/2 - 3), 0, base_height/2 - 5])\n                cube([2, base_depth - 20, 10], center=true);\n        }\n    }\n    \n    // Rubber feet\n    for (x = [-1, 1])\n        for (y = [-1, 1])\n            translate([x * (base_width/2 - 10), y * (base_depth/2 - 10), 0])\n                cylinder(h=2, r=4, center=false);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([base_width/2 - 15, 0, base_height + 5])\n        difference() {\n            cube([30, 60, 10], center=true);\n            \n            // Buttons\n            for (i = [-1, 0, 1]) {\n                translate([0, i * 15, 3])\n                    cylinder(h=2, r=5, center=true);\n            }\n        }\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0, 0, base_height + motor_housing_height/2])\n        difference() {\n            cube([motor_housing_width, motor_housing_depth, motor_housing_height], center=true);\n            \n            // Top recess for bowl\n            translate([0, 0, motor_housing_height/2 - 3])\n                cylinder(h=6, r=(bowl_diameter/2) - 5, center=true);\n            \n            // Drive shaft\n            translate([0, 0, motor_housing_height/2])\n                cylinder(h=10, r=6, center=true);\n        }\n}\n\n// Bowl\nmodule bowl() {\n    difference() {\n        // Outer bowl\n        translate([0, 0, base_height + motor_housing_height + bowl_height/2])\n            cylinder(h=bowl_height, r=bowl_diameter/2, center=true);\n        \n        // Inner cavity\n        translate([0, 0, base_height + motor_housing_height + bowl_wall])\n            cylinder(h=bowl_height - bowl_wall*2, r=bowl_diameter/2 - bowl_wall, center=true);\n        \n        // Handle hole\n        translate([bowl_diameter/2 - 5, 0, base_height + motor_housing_height + bowl_height/2])\n            rotate([0, 90, 0])\n                cylinder(h=20, r=8, center=true);\n    }\n    \n    // Handle\n    translate([bowl_diameter/2 + 15, 0, base_height + motor_housing_height + bowl_height/2])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=30, r=10, center=true);\n                translate([0, 0, 5])\n                    cylinder(h=30, r=6, center=true);\n            }\n}\n\n// Lid with feed tube\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, base_height + motor_housing_height + bowl_height + lid_height/2])\n            cylinder(h=lid_height, r=lid_diameter/2, center=true);\n        \n        // Inner recess\n        translate([0, 0, base_height + motor_housing_height + bowl_height + lid_height/2 - 2])\n            cylinder(h=lid_height, r=lid_diameter/2 - 5, center=true);\n        \n        // Feed tube hole\n        translate([0, lid_diameter/4, base_height + motor_housing_height + bowl_height + lid_height + feed_tube_height/2])\n            cylinder(h=feed_tube_height, r=feed_tube_diameter/2 - 3, center=true);\n    }\n    \n    // Feed tube\n    translate([0, lid_diameter/4, base_height + motor_housing_height + bowl_height + lid_height + feed_tube_height/2])\n        difference() {\n            cylinder(h=feed_tube_height, r=feed_tube_diameter/2, center=true);\n            cylinder(h=feed_tube_height + 2, r=feed_tube_diameter/2 - 3, center=true);\n        }\n    \n    // Lid handle\n    translate([0, -lid_diameter/4, base_height + motor_housing_height + bowl_height + lid_height + 5])\n        cube([40, 10, 10], center=true);\n}\n\n// Assembly\nunion() {\n    base();\n    control_panel();\n    motor_housing();\n    bowl();\n    lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicer",
    "openscad_code": "// Medium-complexity realistic juicer (citrus press style)\n// ~100 mm tall, 3D-printable with 2 mm walls and no severe overhangs\n\n$fn = 36;\n\n// Overall scale factor; change to resize entire model\nscale_factor = 1;\n\nmodule juicer_assembly() {\n    // Main vertical column\n    translate([0, 0, 0])\n        column();\n\n    // Horizontal pressing arm\n    translate([0, 0, 85])\n        rotate([0, 0, 0])\n            arm();\n\n    // Reamer cone\n    translate([0, 0, 25])\n        reamer();\n\n    // Juice collector bowl\n    translate([0, 0, 8])\n        bowl();\n\n    // Base with feet\n    translate([0, 0, 0])\n        base();\n}\n\n// Central column (hollow for wiring or weight savings)\nmodule column() {\n    difference() {\n        // Outer shell\n        cylinder(h = 90, d = 22);\n        // Inner hollow\n        translate([0, 0, -1])\n            cylinder(h = 92, d = 18);\n    }\n}\n\n// Pressing arm with lever handle\nmodule arm() {\n    // Main arm beam\n    difference() {\n        // Solid beam\n        translate([-10, 0, 0])\n            cube([60, 20, 10], center = true);\n        // Cable channel\n        translate([15, 0, 0])\n            cube([30, 8, 6], center = true);\n    }\n\n    // Pivot joint\n    translate([-25, 0, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 20, d = 12);\n\n    // Handle grip\n    translate([35, 0, 0])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 30, d = 14);\n                translate([0, 0, -1])\n                    cylinder(h = 32, d = 10);\n            }\n}\n\n// Reamer cone with ridged surface\nmodule reamer() {\n    difference() {\n        // Main cone\n        cylinder(h1 = 20, h2 = 0, r1 = 20, r2 = 0, center = true);\n\n        // Vertical ridges (use loop to create 8 ribs)\n        for (i = [0 : 7]) {\n            rotate([0, 0, i * 45])\n                translate([7, 0, 0])\n                    cube([14, 2, 22], center = true);\n        }\n        // Central hole for juice flow\n        translate([0, 0, -11])\n            cylinder(h = 22, d = 6);\n    }\n}\n\n// Collector bowl with spout\nmodule bowl() {\n    difference() {\n        // Outer bowl\n        cylinder(h = 22, r1 = 35, r2 = 30);\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 20, r1 = 33, r2 = 28);\n        // Pouring spout\n        translate([33, 0, 10])\n            rotate([0, 90, 0])\n                cylinder(h = 8, r1 = 8, r2 = 0);\n    }\n}\n\n// Stable base with four feet\nmodule base() {\n    // Bottom disc\n    cylinder(h = 8, d = 80);\n\n    // Four feet (simple cylinders)\n    for (a = [0, 90, 180, 270]) {\n        rotate([0, 0, a])\n            translate([30, 0, -2])\n                cylinder(h = 4, d = 12);\n    }\n}\n\n// Generate the complete juicer scaled to print\nscale([scale_factor, scale_factor, scale_factor])\n    juicer_assembly();",
    "renders": true
  },
  {
    "kitchen_appliance": "rice_cooker",
    "openscad_code": "// Rice Cooker - Realistic Style\n// Medium complexity (~100 lines)\n\n$fn = 50;\n\n// Main dimensions\nbase_d = 80;\nbase_h = 40;\nbody_d = 75;\nbody_h = 45;\nlid_d = 78;\nlid_h = 15;\nhandle_l = 30;\nhandle_h = 15;\nbutton_w = 8;\nbutton_h = 4;\nfeet_d = 5;\nfeet_h = 3;\n\nmodule rice_cooker() {\n    // Feet - 4 small cylinders at corners\n    for (x=[-1,1])\n    for (y=[-1,1]) {\n        translate([x*30, y*30, 0])\n            cylinder(d=feet_d, h=feet_h);\n    }\n    \n    // Base body\n    difference() {\n        cylinder(d=base_d, h=base_h);\n        translate([0, 0, -1])\n            cylinder(d=base_d-4, h=base_h+2);\n    }\n    \n    // Cooking pot\n    translate([0, 0, base_h])\n        difference() {\n            cylinder(d=body_d, h=body_h);\n            translate([0, 0, 2])\n                cylinder(d=body_d-4, h=body_h);\n        }\n    \n    // Control panel\n    translate([base_d/2-5, 0, base_h-10])\n        cube([10, 25, 8], center=true);\n    \n    // Buttons on panel\n    for (i=[-1, 0, 1]) {\n        translate([base_d/2, i*6, base_h-6])\n            cube([button_w, button_h, 2]);\n    }\n    \n    // Lid\n    translate([0, 0, base_h+body_h])\n        difference() {\n            cylinder(d=lid_d, h=lid_h);\n            translate([0, 0, 2])\n                cylinder(d=lid_d-4, h=lid_h);\n        }\n    \n    // Lid handle\n    translate([0, 0, base_h+body_h+lid_h])\n        difference() {\n            // Main handle grip\n            rotate([90, 0, 0])\n                cylinder(d=8, h=handle_l);\n            \n            // Mounting base\n            cylinder(d=12, h=3);\n            \n            // Grip hole\n            translate([0, 0, 2])\n                rotate([90, 0, 0])\n                    cylinder(d=4, h=handle_l+2);\n        }\n    \n    // Steam vent\n    translate([0, lid_d/2-5, base_h+body_h+lid_h-5])\n        cylinder(d=5, h=3);\n    \n    // Side handles\n    for (angle=[0, 180]) {\n        rotate([0, 0, angle])\n            translate([body_d/2+5, 0, base_h+body_h/2])\n                difference() {\n                    cube([10, 15, 6], center=true);\n                    translate([2, 0, 0])\n                        cube([6, 11, 8], center=true);\n                }\n    }\n    \n    // Power cord exit\n    rotate([90, 0, 0])\n        translate([0, base_d/2+3, feet_h])\n            cylinder(d=4, h=10);\n}\n\n// Display the model\nrice_cooker();",
    "renders": true
  },
  {
    "kitchen_appliance": "slow_cooker",
    "openscad_code": "// Slow Cooker OpenSCAD Model\n// Overall size ~120mm wide x 90mm deep x 100mm tall\n\n$fn = 50;\n\n// Main assembly\nmodule slow_cooker() {\n    // Base housing\n    base();\n    \n    // Control panel\n    translate([0, -45, 0]) control_panel();\n    \n    // Main pot\n    translate([0, 0, 10]) pot();\n    \n    // Glass lid\n    translate([0, 0, 65]) lid();\n    \n    // Handles\n    translate([-65, 0, 25]) handle();\n    translate([65, 0, 25]) mirror([1,0,0]) handle();\n}\n\n// Main base housing\nmodule base() {\n    difference() {\n        // Main body\n        cube([120, 90, 40], center=true);\n        \n        // Hollow cavity for electronics\n        translate([0, 0, 10]) cube([110, 80, 20], center=true);\n        \n        // Ventilation slots\n        for(i = [-40:20:40]) {\n            translate([i, 45, 0]) cube([15, 2, 15], center=true);\n            translate([i, -45, 0]) cube([15, 2, 15], center=true);\n        }\n    }\n    \n    // Feet\n    for(x = [-50, 50])\n        for(y = [-35, 35])\n            translate([x, y, -22]) cylinder(h=4, r=5);\n}\n\n// Control panel with buttons and display\nmodule control_panel() {\n    difference() {\n        // Panel base\n        translate([0, 0, 20]) cube([70, 10, 20], center=true);\n        \n        // Display cutout\n        translate([0, 0, 30]) cube([40, 8, 5], center=true);\n        \n        // Button holes\n        for(i = [-20, 0, 20])\n            translate([i, 0, 30]) cylinder(h=5, r=3);\n    }\n    \n    // LCD display\n    translate([0, -5, 30]) cube([38, 8, 2], center=true);\n    \n    // Buttons\n    for(i = [-20, 0, 20])\n        translate([i, -5, 35]) cylinder(h=2, r=2.5);\n}\n\n// Ceramic pot\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=55, r1=50, r2=45);\n        \n        // Inner cavity\n        translate([0, 0, 5]) cylinder(h=50, r1=46, r2=41);\n    }\n    \n    // Rim flange\n    translate([0, 0, 55]) cylinder(h=3, r1=55, r2=45);\n}\n\n// Glass lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 5]) cylinder(h=5, r1=53, r2=48);\n        translate([0, 0, 5]) cylinder(h=5, r1=47, r2=47);\n        \n        // Inner groove\n        translate([0, 0, 7]) cylinder(h=5, r1=45, r2=45);\n    }\n    \n    // Handle\n    translate([0, 0, 15]) cylinder(h=20, r=8);\n    translate([0, 0, 35]) sphere(r=12);\n}\n\n// Side handles\nmodule handle() {\n    difference() {\n        // Main handle\n        rotate([0, 90, 0]) cylinder(h=15, r=5);\n        \n        // Mounting hole\n        rotate([0, 90, 0]) cylinder(h=16, r=2);\n    }\n    \n    // Handle grip\n    translate([-7.5, 0, 0]) rotate([90, 0, 0]) cylinder(h=15, r=5);\n}\n\nslow_cooker();",
    "renders": true
  },
  {
    "kitchen_appliance": "pressure_cooker",
    "openscad_code": "// Pressure Cooker - Realistic Style, Medium Complexity\n// Outer dimensions ~120mm wide x 100mm deep x 120mm tall\n\n// Main parameters\nwall = 2;           // 2 mm wall thickness for 3D printing\npot_r = 48;         // Inner pot radius\npot_h = 60;         // Inner pot height\nbase_gap = 4;       // Gap for lid fit\n\n// Base pot body\nmodule pot_body() {\n    difference() {\n        // Outer shell\n        cylinder(h = pot_h + wall, r = pot_r + wall, $fn = 64);\n        // Inner cavity\n        translate([0, 0, wall])\n            cylinder(h = pot_h, r = pot_r, $fn = 64);\n    }\n}\n\n// Reinforced base ring\nmodule base_ring() {\n    difference() {\n        cylinder(h = wall*2, r1 = pot_r + wall + 4, r2 = pot_r + wall + 6, $fn = 64);\n        cylinder(h = wall*2, r = pot_r + wall, $fn = 64);\n    }\n}\n\n// Handles on sides\nmodule side_handles() {\n    // Left handle\n    translate([-(pot_r + wall + 15), 0, pot_h/2])\n        rotate([0, 90, 0])\n            handle_shape();\n    // Right handle\n    translate([(pot_r + wall + 15), 0, pot_h/2])\n        rotate([0, 90, 0])\n            mirror([1,0,0])\n                handle_shape();\n}\n\nmodule handle_shape() {\n    difference() {\n        // Main grip\n        translate([0, 0, 0])\n            scale([1, 1.2, 1])\n                cylinder(h = 25, r = 6, $fn = 16);\n        // Grip hole\n        cylinder(h = 30, r = 3, $fn = 16);\n    }\n}\n\n// Lid assembly\nmodule lid_assembly() {\n    translate([0, 0, pot_h + wall + base_gap])\n        union() {\n            // Lid disk\n            cylinder(h = wall*2, r = pot_r + wall, $fn = 64);\n            // Lid rim\n            difference() {\n                cylinder(h = wall, r = pot_r + wall - 1, $fn = 64);\n                cylinder(h = wall + 1, r = pot_r, $fn = 64);\n            }\n            // Handle on top\n            translate([0, 0, wall*2 + 5])\n                lid_handle();\n            // Steam release valve\n            translate([pot_r/2, 0, wall*2])\n                steam_valve();\n            // Locking tabs (4 tabs)\n            for (i = [0:3]) {\n                rotate([0, 0, i*90])\n                    translate([pot_r + wall - 3, 0, wall])\n                        cube([6, 8, wall], center = true);\n            }\n        }\n}\n\nmodule lid_handle() {\n    difference() {\n        cylinder(h = 15, r = 8, $fn = 20);\n        cylinder(h = 16, r = 4, $fn = 20);\n    }\n}\n\nmodule steam_valve() {\n    union() {\n        cylinder(h = 8, r = 3, $fn = 12);\n        translate([0, 0, 8])\n            sphere(r = 3, $fn = 12);\n    }\n}\n\n// Control panel on front\nmodule control_panel() {\n    translate([0, pot_r + wall - 2, pot_h/2 + wall])\n        rotate([90, 0, 0])\n            union() {\n                // Panel base\n                cube([30, 15, wall], center = true);\n                // Display screen\n                translate([0, 0, wall + 0.1])\n                    color(\"black\")\n                        cube([20, 8, 0.5], center = true);\n                // Buttons\n                for (i = [-1:1]) {\n                    translate([i*8, -5, wall + 0.5])\n                        cylinder(h = 1, r = 2, $fn = 16);\n                }\n            }\n}\n\n// Assemble the pressure cooker\nunion() {\n    // Base pot with ring\n    union() {\n        pot_body();\n        translate([0, 0, 0])\n            base_ring();\n    }\n    // Handles\n    side_handles();\n    // Lid\n    lid_assembly();\n    // Control panel\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_kettle",
    "openscad_code": "// Electric Kettle - Realistic, Medium Complexity\n\n// Overall dimensions\nkettle_height = 120;\nkettle_width = 90;\nkettle_depth = 120;\n\n// Wall thickness\nwall = 2;\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, kettle_height/2])\n            scale([1, 1.2, 1])\n                cylinder(h=kettle_height, d1=kettle_width, d2=kettle_width*0.8, $fn=100);\n        \n        // Inner cavity\n        translate([0, 0, wall])\n            scale([1, 1.2, 1])\n                cylinder(h=kettle_height-wall*2, d1=kettle_width-wall*2, d2=kettle_width*0.8-wall*2, $fn=100);\n    }\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, kettle_height-2])\n        difference() {\n            // Lid top\n            cylinder(h=8, d=kettle_width*0.8+4, $fn=100);\n            \n            // Handle recess\n            translate([0, -kettle_width*0.3, 4])\n                cube([kettle_width*0.4, 20, 8], center=true);\n        }\n}\n\n// Lid handle\nmodule lid_handle() {\n    translate([0, -kettle_width*0.3, kettle_height+8])\n        difference() {\n            // Handle base\n            cube([kettle_width*0.4, 20, 6], center=true);\n            \n            // Finger grip\n            translate([0, 0, 3])\n                cube([kettle_width*0.3, 16, 4], center=true);\n        }\n}\n\n// Spout\nmodule spout() {\n    translate([0, kettle_width*0.6, kettle_height*0.7])\n        rotate([0, 45, 0])\n            difference() {\n                // Outer spout\n                cylinder(h=40, d1=20, d2=12, $fn=50);\n                \n                // Inner spout\n                translate([0, 0, wall])\n                    cylinder(h=40-wall, d1=20-wall*2, d2=12-wall*2, $fn=50);\n            }\n}\n\n// Handle\nmodule handle() {\n    translate([-kettle_width/2-10, 0, kettle_height/2])\n        difference() {\n            union() {\n                // Main handle grip\n                rotate([0, 90, 0])\n                    cylinder(h=60, d=12, $fn=30);\n                \n                // Top connection\n                translate([0, 0, 30])\n                    cube([12, 15, 12], center=true);\n                \n                // Bottom connection\n                translate([0, 0, -30])\n                    cube([12, 15, 12], center=true);\n            }\n            \n            // Inner grip hollow\n            rotate([0, 90, 0])\n                translate([0, 0, 0])\n                    cylinder(h=62, d=8, $fn=30);\n        }\n}\n\n// Base\nmodule base() {\n    translate([0, 0, 0])\n        difference() {\n            // Base plate\n            cylinder(h=8, d=kettle_width+10, $fn=100);\n            \n            // Center recess\n            translate([0, 0, 2])\n                cylinder(h=6, d=kettle_width-10, $fn=100);\n        }\n}\n\n// Power button\nmodule power_button() {\n    translate([kettle_width/2+5, -kettle_width*0.3, kettle_height*0.6])\n        union() {\n            // Button housing\n            cube([8, 12, 6], center=true);\n            \n            // Button\n            translate([2, 0, 3])\n                color(\"red\")\n                    cube([2, 8, 3], center=true);\n        }\n}\n\n// Water level indicator\nmodule water_indicator() {\n    for(i=[-1, 1]) {\n        translate([kettle_width/2*0.7, i*kettle_width*0.3, kettle_height*0.3])\n            cube([wall, 2, 30]);\n    }\n}\n\n// Assembly\nbase();\nkettle_body();\nspout();\nhandle();\nlid();\nlid_handle();\npower_button();\nwater_indicator();",
    "renders": true
  },
  {
    "kitchen_appliance": "waffle_maker",
    "openscad_code": "// Waffle Maker - Realistic Style, Medium Complexity\n// Dimensions: 100mm x 180mm x 80mm (closed)\n\n// Main parameters\nbase_width = 100;\nbase_depth = 180;\nbase_height = 40;\nwall_thickness = 2;\nhandle_length = 40;\nhandle_radius = 5;\n\n// Main body base\nmodule waffle_base() {\n    difference() {\n        // Outer shell\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height/2 + wall_thickness])\n            cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, base_height], center=true);\n    }\n}\n\n// Top lid\nmodule waffle_lid() {\n    difference() {\n        // Outer shell\n        translate([0, 0, base_height + base_height/2 - 2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height + base_height/2 + wall_thickness - 2])\n            cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, base_height], center=true);\n    }\n}\n\n// Hinge mechanism\nmodule hinge() {\n    for(side = [-1, 1]) {\n        translate([side * (base_width/2 - 5), -base_depth/2, base_height])\n            cylinder(h=10, r=3, center=true);\n    }\n}\n\n// Handle assembly\nmodule handle() {\n    // Handle base\n    translate([0, base_depth/2 + 5, base_height*2 - 5])\n        rotate([90, 0, 0])\n            cylinder(h=handle_length, r=handle_radius, center=true);\n    \n    // Handle grips\n    for(i = [0:2]) {\n        translate([0, base_depth/2 + 15 + i*10, base_height*2 - 5])\n            rotate([90, 0, 0])\n                cylinder(h=5, r=handle_radius+2, center=true);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel base\n    translate([base_width/2 - 15, 0, base_height/2])\n        cube([20, 40, 5], center=true);\n    \n    // Power button\n    translate([base_width/2 - 10, -10, base_height/2 + 3])\n        cylinder(h=3, r=5);\n    \n    // Temperature dial\n    translate([base_width/2 - 10, 10, base_height/2 + 3])\n        cylinder(h=5, r=7);\n    \n    // Indicator light\n    translate([base_width/2 - 10, 0, base_height/2 + 3])\n        sphere(r=2);\n}\n\n// Feet for stability\nmodule feet() {\n    for(x = [-base_width/2 + 10, base_width/2 - 10]) {\n        for(y = [-base_depth/2 + 20, base_depth/2 - 20]) {\n            translate([x, y, 0])\n                cylinder(h=5, r=3);\n        }\n    }\n}\n\n// Waffle grid pattern on cooking surface\nmodule waffle_grid() {\n    grid_size = 3;\n    spacing = 8;\n    \n    for(i = [-2:2]) {\n        for(j = [-3:3]) {\n            translate([i*spacing, j*spacing, base_height - 1])\n                cube([grid_size, grid_size, 2], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main body\n    waffle_base();\n    waffle_lid();\n    \n    // Structural elements\n    hinge();\n    handle();\n    feet();\n    \n    // Controls\n    control_panel();\n    \n    // Cooking surfaces\n    waffle_grid();\n    translate([0, 0, base_height*2 - 3])\n        waffle_grid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "panini_press",
    "openscad_code": "// Panini Press - Realistic Medium Complexity\n// Dimensions in mm, 3D-printable, wall thickness 2 mm\n\n// Overall dimensions\nbody_w = 120;\nbody_d = 95;\nbody_h = 45;\n\n// Hinge and lid\nhinge_r = 4;\nhinge_len = 85;\nlid_h = 20;\nlid_clear = 2; // clearance inside\n\n// Handle\nhandle_w = 60;\nhandle_d = 10;\nhandle_h = 12;\n\n// Plates\nplate_w = 90;\nplate_d = 75;\nplate_h = 8;\nrib_h = 1.5;\nrib_pitch = 6;\n\n// Controls\ndial_r = 8;\ndial_h = 6;\nled_r = 3;\n\n// Feet\nfoot_r = 4;\nfoot_h = 3;\n\n// Module for ribs on plates\nmodule ribs(dir = 1) {\n    for (i = [-plate_w/2+rib_pitch/2:rib_pitch:plate_w/2-rib_pitch/2]) {\n        translate([i, 0, (dir*plate_h/2)+(dir*rib_h/2)])\n            cube([2, plate_d, rib_h+0.01], center = true);\n    }\n}\n\n// Lower body\nmodule lower_body() {\n    difference() {\n        union() {\n            // Main shell\n            translate([0, 0, body_h/2])\n                cube([body_w, body_d, body_h], center = true);\n            // Front slope\n            translate([0, body_d/2-10, body_h-10])\n                cube([body_w, 20, 20], center = true);\n            // Feet\n            for (x = [-body_w/2+15, body_w/2-15])\n                for (y = [-body_d/2+15, body_d/2-15])\n                    translate([x, y, -foot_h/2])\n                        cylinder(r = foot_r, h = foot_h, $fn = 16);\n        }\n        // Inner cavity\n        translate([0, 0, body_h/2+2])\n            cube([body_w-4, body_d-4, body_h-2], center = true);\n        // Plate cavity\n        translate([0, 0, body_h-plate_h/2])\n            cube([plate_w+4, plate_d+4, plate_h+2], center = true);\n    }\n}\n\n// Heating plate\nmodule plate() {\n    difference() {\n        cube([plate_w, plate_d, plate_h], center = true);\n        // Hollow\n        translate([0, 0, 0])\n            cube([plate_w-4, plate_d-4, plate_h-2], center = true);\n    }\n    ribs();\n}\n\n// Lid assembly\nmodule lid() {\n    difference() {\n        union() {\n            // Outer shell\n            translate([0, 0, lid_h/2])\n                cube([body_w, body_d, lid_h], center = true);\n            // Handle\n            translate([0, -body_d/2-handle_d/2+5, lid_h-handle_h/2-5])\n                cube([handle_w, handle_d, handle_h], center = true);\n        }\n        // Inner clearance\n        translate([0, 0, lid_h/2])\n            cube([body_w-4, body_d-4, lid_h], center = true);\n        // Plate cavity\n        translate([0, 0, lid_clear+plate_h/2])\n            cube([plate_w+4, plate_d+4, plate_h+2], center = true);\n    }\n    // Upper plate\n    translate([0, 0, lid_clear+plate_h/2])\n        plate();\n}\n\n// Controls\nmodule controls() {\n    // Dial\n    translate([body_w/2-dial_r-10, body_d/2-dial_r-10, body_h+dial_h/2])\n        cylinder(r = dial_r, h = dial_h, $fn = 32);\n    // Indicator LED\n    translate([body_w/2-led_r-10, body_d/2-led_r-30, body_h+led_r/2+0.5])\n        sphere(r = led_r);\n}\n\n// Hinge\nmodule hinge() {\n    rotate([90, 0, 0])\n        translate([0, body_d/2, body_h/2])\n            cylinder(r = hinge_r, h = hinge_len, center = true, $fn = 32);\n}\n\n// Assembly\nlower_body();\ntranslate([0, 0, body_h-plate_h/2])\n    plate();\n\ncontrols();\n\nhinge();\ntranslate([0, 0, body_h])\n    rotate([110, 0, 0])\n        lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "sandwich_maker",
    "openscad_code": "// Sandwich maker kitchen appliance - realistic style, medium complexity\n// Overall dimensions: ~120mm x 80mm x 45mm\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([-30, -40, 0])\n            cube([60, 80, 25], center=false);\n        \n        // Cavity for heating plates\n        translate([-28, -38, 2])\n            cube([56, 76, 21], center=false);\n    }\n}\n\n// Bottom heating plate\nmodule bottom_plate() {\n    translate([-26, -36, 2])\n        cube([52, 72, 3]);\n}\n\n// Top heating plate (with sandwich pattern)\nmodule top_plate() {\n    difference() {\n        translate([-26, -36, 20])\n            cube([52, 72, 3]);\n        \n        // Triangle pattern for sandwich halves\n        for (y = [-30:15:30]) {\n            translate([0, y, 20.5])\n                cube([50, 10, 2]);\n        }\n    }\n}\n\n// Handle\nmodule handle() {\n    // Handle base\n    translate([31, -15, 22])\n        cube([8, 30, 8]);\n    \n    // Handle grip\n    translate([39, -10, 24])\n        rotate([0, 90, 0])\n            cylinder(h=20, r=5, center=true);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([-25, -45, 25])\n        cube([50, 8, 12]);\n    \n    // Indicator light\n    translate([-15, -43, 28])\n        cylinder(h=2, r=3);\n    \n    // Power button\n    translate([0, -43, 26.5])\n        cylinder(h=4, r=4);\n    \n    // Temperature dial\n    translate([15, -43, 26])\n        cylinder(h=5, r=6);\n    \n    // Dial knob\n    translate([15, -43, 31])\n        cylinder(h=3, r=3);\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-30, 0, 12])\n        rotate([90, 0, 0])\n            cylinder(h=15, r=2);\n    \n    translate([-30, 0, 12])\n        sphere(r=2.5);\n}\n\n// Hinge mechanism\nmodule hinges() {\n    // Left hinge\n    translate([-28, -35, 25])\n        cylinder(h=10, r=3);\n    \n    // Right hinge\n    translate([-28, 35, 25])\n        cylinder(h=10, r=3);\n    \n    // Hinge pins\n    translate([-28, -35, 30])\n        cylinder(h=2, r=2);\n    \n    translate([-28, 35, 30])\n        cylinder(h=2, r=2);\n}\n\n// Feet\nmodule feet() {\n    // Four rubber feet\n    translate([-25, -30, 0])\n        cylinder(h=2, r=3);\n    translate([25, -30, 0])\n        cylinder(h=2, r=3);\n    translate([-25, 30, 0])\n        cylinder(h=2, r=3);\n    translate([25, 30, 0])\n        cylinder(h=2, r=3);\n}\n\n// Assembly\nunion() {\n    body();\n    bottom_plate();\n    top_plate();\n    handle();\n    control_panel();\n    power_cord();\n    hinges();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "ice_cream_maker",
    "openscad_code": "// Ice Cream Maker - Medium complexity realistic style\n// Overall size: ~120mm tall, ~80mm wide, ~100mm deep\n\n$fn = 50;\n\n// Main body dimensions\nbody_width = 80;\nbody_depth = 100;\nbody_height = 60;\n\n// Ice cream bowl dimensions\nbowl_diameter = 60;\nbowl_height = 40;\nwall_thickness = 2;\n\nmodule ice_cream_maker() {\n    union() {\n        // Main body base\n        difference() {\n            // Outer shell\n            translate([0, 0, body_height/2])\n                cube([body_width, body_depth, body_height], center=true);\n            \n            // Hollow inside\n            translate([0, 0, body_height/2])\n                cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness], center=true);\n        }\n        \n        // Top rim\n        translate([0, 0, body_height])\n            cube([body_width+4, body_depth+4, 4], center=true);\n        \n        // Ice cream bowl\n        difference() {\n            // Outer bowl\n            translate([0, 0, bowl_height/2 + body_height + 4])\n                cylinder(h=bowl_height, d=bowl_diameter);\n            \n            // Inner bowl (hollow)\n            translate([0, 0, bowl_height/2 + body_height + 4])\n                cylinder(h=bowl_height-wall_thickness, d=bowl_diameter-wall_thickness*2);\n            \n            // Flat bottom of bowl\n            translate([0, 0, body_height + 4])\n                cylinder(h=wall_thickness, d=bowl_diameter-wall_thickness*2);\n        }\n        \n        // Motor housing dome\n        translate([0, 0, body_height/2])\n            sphere(d=body_width-10);\n        \n        // Control panel\n        translate([body_width/2-2, 0, body_height-15])\n            cube([4, 30, 15], center=true);\n        \n        // Power button\n        translate([body_width/2+2, -10, body_height-10])\n            cylinder(h=4, d=8);\n        \n        // Speed dial\n        translate([body_width/2+2, 10, body_height-10])\n            cylinder(h=6, d=12);\n        \n        // Front display panel\n        translate([0, body_depth/2-1, body_height-10])\n            cube([40, 2, 10], center=true);\n        \n        // Feet\n        for(x = [-body_width/2+10, body_width/2-10])\n            for(y = [-body_depth/2+10, body_depth/2-10])\n                translate([x, y, 0])\n                    cylinder(h=5, d=8);\n        \n        // Handle on top\n        translate([0, body_depth/2+5, body_height+20])\n            difference() {\n                // Handle grip\n                cube([50, 10, 8], center=true);\n                \n                // Grip hole\n                translate([0, 0, -1])\n                    cube([40, 6, 10], center=true);\n            }\n        \n        // Ventilation slots on sides\n        for(i = [-3:3]) {\n            translate([body_width/2, i*10, body_height/2])\n                rotate([0, 90, 0])\n                    cube([2, 20, 5]);\n            translate([-body_width/2, i*10, body_height/2])\n                rotate([0, 90, 0])\n                    cube([2, 20, 5]);\n        }\n        \n        // Power cord exit\n        translate([-body_width/2-5, -body_depth/2+10, 15])\n            rotate([0, 90, 0])\n                cylinder(h=15, d=6);\n    }\n}\n\n// Render the ice cream maker\nice_cream_maker();",
    "renders": true
  },
  {
    "kitchen_appliance": "popcorn_maker",
    "openscad_code": "// Popcorn Maker - Realistic Style, Medium Complexity\n// Dimensions: 120mm (W) x 90mm (D) x 160mm (H)\n\n// Base unit\nmodule base() {\n    difference() {\n        // Main body\n        cube([110, 80, 70], center=true);\n        \n        // Bottom cavity for electronics\n        translate([0, 0, -30])\n            cube([100, 70, 30], center=true);\n            \n        // Ventilation slots\n        for (i = [-40:20:40]) {\n            translate([i, 40, 0])\n                cube([8, 2, 50], center=true);\n            translate([i, -40, 0])\n                cube([8, 2, 50], center=true);\n        }\n    }\n}\n\n// Heating chamber\nmodule chamber() {\n    difference() {\n        // Main cylinder\n        cylinder(h=80, r1=45, r2=50, center=true);\n        \n        // Inner cavity\n        cylinder(h=82, r1=40, r2=45, center=true);\n        \n        // Top rim\n        translate([0, 0, 45])\n            cylinder(h=5, r1=50, r2=52, center=true);\n    }\n}\n\n// Control panel\nmodule controls() {\n    translate([0, 40, 35]) {\n        // Panel base\n        cube([50, 8, 20], center=true);\n        \n        // On/off button\n        translate([-15, 5, 0])\n            cylinder(h=2, r=6, center=true);\n            \n        // Indicator light\n        translate([15, 5, 0])\n            cylinder(h=2, r=3, center=true);\n            \n        // Temperature dial\n        translate([0, 5, 10])\n            rotate([90, 0, 0])\n                cylinder(h=5, r=8, center=true);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 85])\n            cylinder(h=10, r1=55, r2=50, center=true);\n            \n        // Handle cavity\n        translate([0, 0, 90])\n            cube([10, 5, 20], center=true);\n    }\n    \n    // Handle\n    translate([0, 30, 100])\n        rotate([90, 0, 0])\n            cylinder(h=30, r1=5, r2=3, center=true);\n}\n\n// Feet\nmodule feet() {\n    for (x = [-40:80:80])\n        for (y = [-30:60:60])\n            translate([x, y, -37])\n                cylinder(h=4, r=5, center=true);\n}\n\n// Power cord\nmodule cord() {\n    translate([-55, 0, -35])\n        rotate([90, 0, 0])\n            cylinder(h=40, r=3, center=true);\n}\n\n// Assembly\nunion() {\n    // Main components\n    base();\n    translate([0, 0, 35])\n        chamber();\n    lid();\n    \n    // Details\n    controls();\n    feet();\n    cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "air_fryer",
    "openscad_code": "// Air Fryer Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions approx 100x80x110 mm\n\n$fn = 32;\n\nmodule rounded_cube(size, r) {\n    hull() {\n        for(dx = [0, 1], dy = [0, 1], dz = [0, 1])\n            translate([dx*(size[0]-2*r), dy*(size[1]-2*r), dz*(size[2]-2*r)])\n                sphere(r);\n    }\n}\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        rounded_cube([70, 60, 90], 5);\n        // Inner cavity\n        translate([2, 2, 10])\n            rounded_cube([66, 56, 78], 3);\n    }\n}\n\nmodule control_panel() {\n    // Panel base\n    translate([0, 65, 60])\n        cube([70, 8, 25], center = true);\n    \n    // Display screen\n    translate([0, 70, 70])\n        color(\"white\")\n            cube([40, 1, 15], center = true);\n    \n    // Buttons\n    for(i = [-1, 0, 1]) {\n        translate([i * 12, 70, 55])\n            cylinder(h = 2, r = 4);\n    }\n    \n    // Knob\n    translate([25, 70, 65])\n        rotate([90, 0, 0])\n            cylinder(h = 8, r1 = 6, r2 = 4);\n}\n\nmodule handle() {\n    difference() {\n        translate([0, -35, 40])\n            cube([50, 8, 20], center = true);\n        translate([0, -39, 40])\n            cube([40, 10, 15], center = true);\n    }\n}\n\nmodule air_inlet() {\n    // Top vents\n    for(i = [-3:3]) {\n        translate([i * 10, 0, 90])\n            cube([6, 60, 2]);\n    }\n}\n\nmodule feet() {\n    for(x = [-25, 25], y = [-20, 20]) {\n        translate([x, y, -5])\n            cylinder(h = 5, r = 3);\n    }\n}\n\nmodule basket() {\n    difference() {\n        translate([0, 0, 30])\n            rounded_cube([60, 50, 50], 3);\n        // Inner basket\n        translate([0, 0, 35])\n            rounded_cube([54, 44, 45], 2);\n        // Holes pattern\n        for(i = [-4:4], j = [-3:3]) {\n            translate([i * 6, j * 6, 30])\n                cylinder(h = 50, r = 1.5, center = true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    control_panel();\n    handle();\n    air_inlet();\n    feet();\n    \n    // Basket partially pulled out\n    translate([0, 0, 0])\n        basket();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "deep_fryer",
    "openscad_code": "// Deep Fryer - Medium Complexity, Realistic Style\n// Dimensions: ~110 mm wide x ~90 mm deep x ~95 mm tall\n// Wall thickness: 2 mm\n\n$fn = 64;\n\nmodule fryer_body() {\n    difference() {\n        // Main body shell\n        cube([110, 90, 95], center = true);\n        \n        // Hollow cavity\n        translate([0, 0, 2])\n        cube([106, 86, 91], center = true);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, 50, 20])\n    difference() {\n        cube([60, 8, 30], center = true);\n        // Indicator light hole\n        translate([-20, 5, 10])\n        cylinder(h = 3, r = 3);\n        translate([0, 5, 10])\n        cylinder(h = 3, r = 3);\n        translate([20, 5, 10])\n        cylinder(h = 3, r = 3);\n    }\n    \n    // Control knob\n    translate([30, 55, 20])\n    rotate([90, 0, 0])\n    cylinder(h = 5, r1 = 6, r2 = 4);\n}\n\nmodule oil_tank() {\n    // Inner oil tank\n    translate([0, 0, -25])\n    difference() {\n        cube([100, 80, 35], center = true);\n        // Hollow for oil\n        translate([0, 0, 2])\n        cube([96, 76, 31], center = true);\n    }\n}\n\nmodule basket() {\n    // Basket handle\n    translate([0, 0, 35])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h = 30, r = 2);\n        // Handle grip\n        translate([0, 0, -2])\n        cylinder(h = 34, r = 1.5);\n    }\n    \n    // Basket body\n    translate([0, 0, 15])\n    difference() {\n        cube([80, 60, 30], center = true);\n        // Hollow\n        translate([0, 0, 2])\n        cube([76, 56, 26], center = true);\n    }\n    \n    // Basket perforations\n    for (i = [-3:1:3]) {\n        for (j = [-2:1:2]) {\n            translate([i * 10, j * 10, 15])\n            cylinder(h = 30, r = 1.5);\n        }\n    }\n}\n\nmodule lid() {\n    // Lid with handle\n    translate([0, -55, 45])\n    rotate([100, 0, 0])\n    difference() {\n        cube([100, 80, 5], center = true);\n        // Inner cavity\n        translate([0, 0, 2])\n        cube([96, 76, 5], center = true);\n    }\n    \n    // Lid handle\n    translate([0, -55, 70])\n    rotate([100, 0, 0])\n    cylinder(h = 20, r = 4);\n}\n\nmodule feet() {\n    // Four support feet\n    for (x = [-45, 45]) {\n        for (y = [-35, 35]) {\n            translate([x, y, -50])\n            cylinder(h = 5, r = 5);\n        }\n    }\n}\n\nmodule power_cord() {\n    // Power cord exit\n    translate([50, 0, -35])\n    rotate([0, 90, 0])\n    cylinder(h = 15, r = 3);\n}\n\n// Assembly\nunion() {\n    fryer_body();\n    control_panel();\n    oil_tank();\n    basket();\n    lid();\n    feet();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "oven",
    "openscad_code": "// Realistic Medium-Complexity 3D-Printable Kitchen Oven\n// All dimensions in mm, wall thickness 2 mm\n\n$fn = 32;\n\n// Overall outer size\nwidth  = 80;\nheight = 60;\ndepth  = 70;\n\n// Wall thickness\nwall = 2;\n\n// Door parameters\ndoor_h = 42;\ndoor_w = 60;\ndoor_d = 4;\n\n// Knob parameters\nknob_r = 3;\nknob_h = 4;\n\n// Window parameters\nwin_margin = 4;\nwin_thick = 1;\n\n// Handle parameters\nhandle_r = 2;\nhandle_l = 40;\n\n// Feet\nfeet_h = 6;\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([width, depth, height], center=false);\n        // Hollow inside\n        translate([wall, wall, wall])\n            cube([width-2*wall, depth-wall, height-2*wall], center=false);\n    }\n}\n\nmodule door() {\n    translate([0, depth-door_d, (height-door_h)/2])\n        rotate([0, 0, 0]) // Could animate for opening\n        union() {\n            // Door panel\n            cube([door_w, door_d, door_h], center=false);\n            \n            // Window cutout\n            translate([win_margin, -0.5, win_margin])\n                cube([door_w-2*win_margin, door_d+1, door_h-2*win_margin], center=false);\n            \n            // Window glass insert (thinner)\n            translate([win_margin, -0.5, win_margin])\n                cube([door_w-2*win_margin, win_thick, door_h-2*win_margin], center=false);\n            \n            // Handle\n            translate([(door_w-handle_l)/2, door_d, door_h/2])\n                rotate([90,0,0])\n                    cylinder(h=handle_l, r=handle_r, center=true);\n        }\n}\n\nmodule knobs_row() {\n    // Three control knobs\n    for(i=[0:2]) {\n        translate([width-15, depth-5, height-25-i*8])\n            cylinder(h=knob_h, r=knob_r);\n    }\n}\n\nmodule vent_slits() {\n    // Rear top ventilation slits\n    for(i=[0:4]) {\n        translate([10+i*15, depth-wall, height-wall-1])\n            cube([5, wall, 2]);\n    }\n}\n\nmodule feet() {\n    // Four feet\n    positions = [[8,8], [width-8,8], [8,depth-8], [width-8,depth-8]];\n    for(p = positions) {\n        translate([p[0], p[1], 0])\n            cylinder(h=feet_h, r=3);\n    }\n}\n\n// Assemble the oven\nunion() {\n    main_body();\n    door();\n    knobs_row();\n    vent_slits();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "stove",
    "openscad_code": "// Realistic Stove Kitchen Appliance\n// Medium complexity OpenSCAD model\n\n$fn = 50;\n\n// Overall dimensions\nstove_width = 80;\nstove_depth = 60;\nstove_height = 40;\n\n// Wall thickness\nwall = 2;\n\n// Main stove body\nmodule stove_body() {\n    difference() {\n        // Main box\n        cube([stove_width, stove_depth, stove_height]);\n        \n        // Hollow interior\n        translate([wall, wall, wall])\n            cube([stove_width-wall*2, stove_depth-wall*2, stove_height-wall]);\n    }\n}\n\n// Cooktop surface\nmodule cooktop() {\n    color([0.1, 0.1, 0.1])\n    translate([0, 0, stove_height])\n        cube([stove_width, stove_depth, wall]);\n}\n\n// Burner grates\nmodule burner_grate(x, y) {\n    color([0.3, 0.3, 0.3])\n    translate([x, y, stove_height + wall])\n        for(i = [-15:5:15]) {\n            translate([i, -15, 0])\n                cube([1, 30, 1]);\n            translate([-15, i, 0])\n                cube([30, 1, 1]);\n        }\n}\n\n// Burner caps\nmodule burner_cap(x, y) {\n    color([0.2, 0.2, 0.2])\n    translate([x, y, stove_height + wall + 0.5])\n        cylinder(h=2, r=8);\n    \n    // Inner ring\n    color([0.1, 0.1, 0.1])\n    translate([x, y, stove_height + wall + 1.5])\n        cylinder(h=1, r=5);\n}\n\n// Control panel\nmodule control_panel() {\n    color([0.2, 0.2, 0.2])\n    translate([stove_width-wall*3, -wall, stove_height*0.7])\n        cube([wall*3, stove_depth+wall*2, stove_height*0.3]);\n    \n    // Control knobs\n    for(i = [0:3]) {\n        color([0.1, 0.1, 0.1])\n        translate([stove_width-wall*1.5, 10 + i*15, stove_height*0.7 + 5])\n            rotate([90, 0, 0])\n                cylinder(h=3, r=4);\n        \n        color([0.4, 0.4, 0.4])\n        translate([stove_width-wall*1.5, 10 + i*15, stove_height*0.7 + 8])\n            sphere(r=3);\n    }\n}\n\n// Door handle\nmodule door_handle() {\n    color([0.3, 0.3, 0.3])\n    translate([stove_width/2 - 20, stove_depth, 15])\n        rotate([90, 0, 0])\n            cylinder(h=40, r=2);\n}\n\n// Oven door\nmodule oven_door() {\n    color([0.15, 0.15, 0.15])\n    translate([wall, stove_depth-wall, 5])\n        cube([stove_width-wall*2, wall, stove_height*0.6]);\n    \n    // Window\n    color([0.5, 0.5, 0.5, 0.7])\n    translate([wall*3, stove_depth-wall+0.1, 7])\n        cube([stove_width-wall*6, wall, stove_height*0.6-4]);\n    \n    door_handle();\n}\n\n// Legs\nmodule legs() {\n    for(x = [10, stove_width-10])\n        for(y = [10, stove_depth-10]) {\n            color([0.2, 0.2, 0.2])\n            translate([x, y, -5])\n                cylinder(h=5, r=3);\n        }\n}\n\n// Assemble stove\nstove_body();\ncooktop();\n\n// Four burners\nburner_cap(20, 15);\nburner_cap(60, 15);\nburner_cap(20, 45);\nburner_cap(60, 45);\n\nburner_grate(20, 15);\nburner_grate(60, 15);\nburner_grate(20, 45);\nburner_grate(60, 45);\n\ncontrol_panel();\noven_door();\nlegs();",
    "renders": true
  },
  {
    "kitchen_appliance": "burner",
    "openscad_code": "// Realistic medium-complexity kitchen burner appliance\n// Overall footprint ~120 x 120 x 70 mm\n\n// --- PARAMETERS --------------------------------\nwall = 2;                // printable wall thickness [mm]\ndia = 110;               // burner top diameter [mm]\nh_base = 20;             // base height [mm]\nh_body = 30;             // burner body height [mm]\nh_bracket = 8;           // pot-support bracket height [mm]\nn_brackets = 4;          // number of pot supports\nbracket_len = 35;        // pot support length [mm]\nbracket_w = 10;          // pot support width [mm]\nknob_d = 20;             // control knob diameter [mm]\nknob_h = 15;             // control knob height [mm]\nigniter_d = 8;           // igniter pin diameter [mm]\nigniter_h = 10;          // igniter pin height [mm]\n\n// --- BASE --------------------------------------\nmodule base() {\n    difference() {\n        // main cylindrical base\n        cylinder(h=h_base, d=dia+6, $fn=64);\n        // lightening cavity\n        translate([0,0,wall])\n            cylinder(h=h_base-wall+1, d=dia+6-wall*2, $fn=64);\n    }\n}\n\n// --- BODY / RING -------------------------------\nmodule body() {\n    translate([0,0,h_base]) {\n        difference() {\n            // outer cylinder\n            cylinder(h=h_body, d=dia, $fn=64);\n            // inner cavity\n            translate([0,0,wall])\n                cylinder(h=h_body+1, d=dia-wall*2, $fn=64);\n        }\n    }\n}\n\n// --- POT-SUPPORT BRACKETS ----------------------\nmodule bracket() {\n    difference() {\n        // main bracket\n        cube([bracket_len, bracket_w, h_bracket], center=true);\n        // chamfer underside for printability\n        translate([0,0,-h_bracket/2])\n            cube([bracket_len-wall, bracket_w+1, wall], center=true);\n    }\n}\n\nmodule brackets() {\n    for(i=[0:n_brackets-1])\n        rotate([0,0,i*360/n_brackets])\n            translate([dia/2-bracket_len/2-1, 0, h_base+h_body])\n                bracket();\n}\n\n// --- BURNER TOP DISK ---------------------------\nmodule burner_disk() {\n    translate([0,0,h_base+h_body]) {\n        difference() {\n            cylinder(h=2, d=dia-4, $fn=64);\n            // central hole for gas nozzle\n            cylinder(h=3, d=6, $fn=32);\n        }\n    }\n}\n\n// --- CONTROL KNOB ------------------------------\nmodule knob() {\n    translate([dia/2+knob_d/2+5, 0, h_base/2]) {\n        difference() {\n            // outer knob\n            rotate([90,0,0])\n                cylinder(h=knob_h, d=knob_d, $fn=32);\n            // indicator line\n            translate([0,0,knob_h/2])\n                cube([1, 0.5, knob_d-4], center=true);\n        }\n    }\n}\n\n// --- IGNITER PIN -------------------------------\nmodule igniter() {\n    translate([dia/2-15, dia/2-15, h_base+h_body+2]) {\n        cylinder(h=igniter_h, d=igniter_d, $fn=16);\n    }\n}\n\n// --- ASSEMBLY ----------------------------------\nunion() {\n    base();\n    body();\n    brackets();\n    burner_disk();\n    knob();\n    igniter();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_skillet",
    "openscad_code": "// Electric Skillet - Medium Complexity\n// Approx 120mm x 80mm x 60mm\n\n$fn = 32;\n\n// Main body\nmodule skillet_base() {\n    difference() {\n        // Main base\n        translate([0, 0, 10])\n            cube([120, 80, 20], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 12])\n            cube([116, 76, 18], center=true);\n    }\n}\n\n// Cooking surface\nmodule cooking_pan() {\n    difference() {\n        // Pan\n        translate([0, 0, 30])\n            cube([100, 70, 15], center=true);\n        \n        // Cooking surface depression\n        translate([0, 0, 30])\n            cube([96, 66, 8], center=true);\n    }\n}\n\n// Handles\nmodule handle(x_pos) {\n    translate([x_pos, 0, 22])\n        rotate([0, 90, 0])\n            cylinder(h=15, d1=8, d2=6);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([-60, 0, 20])\n        cube([15, 30, 10], center=true);\n    \n    // Temperature dial\n    translate([-60, 10, 26])\n        cylinder(h=3, r=5);\n    \n    // Power indicator\n    translate([-60, -10, 26])\n        cylinder(h=2, r=3);\n}\n\n// Feet\nmodule feet() {\n    for(x = [-50, 50]) {\n        for(y = [-30, 30]) {\n            translate([x, y, 0])\n                cylinder(h=5, r=3);\n        }\n    }\n}\n\n// Lid handle\nmodule lid_handle() {\n    translate([0, 0, 55])\n        cylinder(h=15, r=5);\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 47.5])\n            cube([104, 74, 5], center=true);\n        \n        // Inner lip\n        translate([0, 0, 45])\n            cube([98, 68, 10], center=true);\n    }\n    \n    // Handle\n    lid_handle();\n}\n\n// Assembly\nunion() {\n    // Base structure\n    skillet_base();\n    \n    // Cooking pan\n    cooking_pan();\n    \n    // Handles\n    handle(60);\n    handle(-60);\n    \n    // Control panel\n    control_panel();\n    \n    // Feet\n    feet();\n    \n    // Lid (positioned slightly offset for visibility)\n    translate([0, 0, 5])\n        lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "wok",
    "openscad_code": "// Realistic 3D-printable wok kitchen appliance\n// Outer diameter â‰ˆ 110 mm, total height â‰ˆ 60 mm, wall thickness 2 mm\n\n// Parameters\nwall = 2;           // wall thickness for 3D printing\nbase_r = 55;        // outer radius of wok body\nbase_h = 30;        // height of wok bowl\nhandle_len = 45;    // handle length\nhandle_d = 12;      // handle diameter\nknob_r = 6;         // lid knob radius\nknob_h = 8;         // lid knob height\n\n// Helper module for rounded edges\nmodule rounded_cylinder(h, r1, r2, fn=32){\n    cylinder(h=h, r1=r1, r2=r2, $fn=fn);\n}\n\n// Wok body â€“ bowl with tapered walls and thick rim\nmodule wok_body(){\n    difference(){\n        union(){\n            // outer bowl\n            rounded_cylinder(base_h, base_r, base_r*0.35);\n            // rim lip\n            translate([0, 0, base_h])\n                cylinder(h=wall*1.5, r1=base_r+wall, r2=base_r+wall, $fn=64);\n        }\n        // hollow inside\n        translate([0, 0, -0.1])\n            rounded_cylinder(base_h+0.2, base_r-wall, base_r*0.35-wall);\n    }\n}\n\n// Handle\nmodule handle(){\n    translate([base_r-wall*0.5, 0, base_h*0.6])\n        rotate([0, 90, 0])\n            difference(){\n                // main grip\n                cylinder(h=handle_len, r=handle_d/2, $fn=32);\n                // finger groove hole\n                for(i=[-1,1])\n                    translate([i*handle_len/4, 0, 0])\n                        rotate([0, 90, 0])\n                            cylinder(h=handle_d*0.8, r=handle_d*0.3, $fn=24);\n            }\n}\n\n// Lid with steam vent and knob\nmodule lid(){\n    difference(){\n        union(){\n            // lid dome\n            translate([0, 0, base_h+wall*1.5])\n                scale([1, 1, 0.5])\n                    sphere(r=base_r, $fn=64);\n            // knob\n            translate([0, 0, base_h+wall*1.5+base_r*0.45])\n                cylinder(h=knob_h, r=knob_r, $fn=32);\n        }\n        // inner hollow\n        translate([0, 0, base_h+wall*1.5+base_r*0.45])\n            scale([1, 1, 0.5])\n                sphere(r=base_r-wall, $fn=64);\n        // steam vent\n        translate([base_r*0.6, 0, base_h+wall*1.5+base_r*0.45])\n            cylinder(h=base_r, r=knob_r*0.4, $fn=24);\n    }\n}\n\n// Base support ring for stability\nmodule base_ring(){\n    difference(){\n        cylinder(h=wall*2, r1=base_r+wall, r2=base_r+wall*0.8, $fn=64);\n        cylinder(h=wall*2+0.2, r1=base_r-2, r2=base_r-2, $fn=64);\n    }\n}\n\n// Assembly\nunion(){\n    base_ring();\n    wok_body();\n    handle();\n    // Uncomment next line to include lid\n    // lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "waffle_iron",
    "openscad_code": "// Waffle Iron - Realistic Medium Complexity\n// Dimensions: 120x80x40mm closed\n\nwall = 2;\nhinge_r = 4;\nhandle_r = 6;\n\n// Main body split\nmodule body() {\n    difference() {\n        union() {\n            // Lower base\n            translate([0,0,wall])\n                cube([120,80,wall], center=true);\n            \n            // Cooking plates\n            for(i=[-1,1])\n                translate([i*40,0,wall*2])\n                    cube([35,70,wall], center=true);\n            \n            // Front panel\n            translate([0,-40,wall*2])\n                cube([100,wall,10], center=true);\n        }\n        \n        // Grid pattern on plates\n        for(i=[-1,1]) {\n            for(x=[-10:10:10])\n                for(y=[-25:10:25])\n                    translate([i*40+x,y,wall*2+1])\n                        cube([1.5,1.5,wall+1], center=true);\n        }\n    }\n}\n\n// Upper lid\nmodule lid() {\n    difference() {\n        union() {\n            // Top cover\n            translate([0,0,wall])\n                cube([120,80,wall], center=true);\n            \n            // Upper cooking plate\n            translate([0,0,wall*2+8])\n                cube([35,70,wall], center=true);\n            \n            // Handle mount\n            translate([0,40,wall*2])\n                cylinder(h=15, r1=handle_r, r2=handle_r, center=true);\n        }\n        \n        // Grid pattern on upper plate\n        for(x=[-10:10:10])\n            for(y=[-25:10:25])\n                translate([x,y,wall*2+8+1])\n                    cube([1.5,1.5,wall+1], center=true);\n    }\n}\n\n// Hinge assembly\nmodule hinge() {\n    for(i=[-1,1]) {\n        translate([i*50,0,wall*2])\n            rotate([90,0,0])\n                cylinder(h=20, r=hinge_r, center=true);\n    }\n}\n\n// Controls\nmodule controls() {\n    // Temperature dial\n    translate([45,-40,wall*2+5])\n        rotate([90,0,0])\n            cylinder(h=wall, r1=8, r2=10, center=true);\n    \n    // Indicator lights\n    for(i=[-1,1]) {\n        translate([i*25,-40,wall*2+5])\n            sphere(r=3);\n    }\n    \n    // Power switch\n    translate([0,-40,wall*2+8])\n        cube([15,wall,5], center=true);\n}\n\n// Assemble waffle iron (open position)\ntranslate([0,0,20]) {\n    // Lower body\n    body();\n    \n    // Upper lid\n    translate([0,0,wall*2])\n        rotate([60,0,0])\n            lid();\n}\n\n// Hinges\nhinge();\n\n// Controls on front\ncontrols();",
    "renders": true
  },
  {
    "kitchen_appliance": "crepe_maker",
    "openscad_code": "// Crepe maker - realistic style, medium complexity\n// Dimensions roughly 180 x 120 x 70 mm (fits on most printers)\n\n$fn = 60;\n\nmodule base() {\n    // Main body housing\n    difference() {\n        // Outer shell\n        translate([-40, -30, 0])\n            cube([180, 120, 40]);\n        \n        // Hollow interior\n        translate([-38, -28, 2])\n            cube([176, 116, 38]);\n        \n        // Ventilation slots\n        for (i = [0:3]) {\n            translate([10 + i*40, -31, 20])\n                cube([15, 2, 10]);\n            translate([10 + i*40, 119, 20])\n                cube([15, 2, 10]);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front panel with controls\n    translate([-45, -35, 42])\n        cube([190, 10, 30]);\n    \n    // Power button\n    translate([-30, -32, 50])\n        cylinder(h=8, d=12);\n    \n    // Temperature dial\n    translate([0, -32, 50])\n        cylinder(h=8, d=15);\n    \n    // Indicator light\n    translate([30, -32, 55])\n        sphere(d=8);\n    \n    // Timer dial\n    translate([60, -32, 50])\n        cylinder(h=8, d=15);\n}\n\nmodule heating_plate() {\n    // Main cooking surface\n    cylinder(h=8, d=150);\n    \n    // Non-stick surface texture (raised rings)\n    for (r = [20:20:60]) {\n        color(\"gray\")\n        translate([0, 0, 8.1])\n            cylinder(h=0.5, d=r*2);\n    }\n}\n\nmodule handle() {\n    // Side handle for tilting\n    translate([95, 0, 20])\n        rotate([0, 90, 0])\n            difference() {\n                // Handle grip\n                cylinder(h=80, d=20);\n                \n                // Hollow grip\n                translate([0, 0, 2])\n                    cylinder(h=76, d=16);\n            }\n    \n    // Handle supports\n    translate([75, -10, 15])\n        cube([20, 20, 10]);\n    translate([75, -10, 25])\n        cube([20, 20, 10]);\n}\n\nmodule feet() {\n    // Four rubber feet\n    for (x = [-25, 95]) {\n        for (y = [-20, 80]) {\n            translate([x, y, -5])\n                cylinder(h=5, d=12);\n        }\n    }\n}\n\nmodule cord_wrap() {\n    // Rear cord storage posts\n    translate([110, 40, 20])\n        cylinder(h=30, d=8);\n    translate([110, 70, 20])\n        cylinder(h=30, d=8);\n}\n\n// Assembly\nunion() {\n    // Main components\n    base();\n    control_panel();\n    \n    translate([50, 30, 40])\n        heating_plate();\n    \n    handle();\n    feet();\n    cord_wrap();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "pizza_oven",
    "openscad_code": "// Realistic Pizza Oven â€“ 3D printable, medium complexity\n// Overall footprint: 100 x 70 x 90 mm\n// Wall thickness: 2 mm for printability\n\n// Main body\nmodule oven_body() {\n    difference() {\n        // Outer shell\n        cube([100, 70, 90], center = true);\n        // Hollow interior\n        translate([0, 0, 5])\n            cube([96, 66, 86], center = true);\n    }\n}\n\n// Front faÃ§ade with arched opening\nmodule front_face() {\n    difference() {\n        // Front plate\n        translate([-50, 0, 0])\n            cube([2, 70, 90], center = true);\n        // Arch opening for oven door\n        translate([-49, 0, 0])\n            rotate([0, 90, 0])\n            cylinder(h = 70, r = 25, $fn = 50);\n        // Air vent above arch\n        translate([-49, 0, 40])\n            cube([2, 30, 5], center = true);\n    }\n}\n\n// Oven door with handle\nmodule oven_door() {\n    translate([-48, 0, 0])\n        difference() {\n            cube([2, 50, 40], center = true);\n            translate([0, 0, 0])\n                cube([2.5, 46, 36], center = true);\n        }\n    // Door handle\n    translate([-47, 0, -25])\n        rotate([90, 0, 0])\n            cylinder(h = 30, r = 3, $fn = 20);\n}\n\n// Control panel with knobs\nmodule control_panel() {\n    translate([-50, 0, 50])\n        cube([2, 30, 10], center = true);\n    // Three knobs\n    for (i = [-10:10:10])\n        translate([-49, i, 55])\n            rotate([90, 0, 0])\n                cylinder(h = 5, r = 4, $fn = 20);\n}\n\n// Chimney\nmodule chimney() {\n    translate([0, 0, 45])\n        difference() {\n            cylinder(h = 30, r = 8, $fn = 20);\n            cylinder(h = 30, r = 6, $fn = 20);\n        }\n}\n\n// Legs\nmodule legs() {\n    for (x = [-40, 40])\n        for (y = [-25, 25])\n            translate([x, y, -50])\n                cylinder(h = 10, r = 4, $fn = 20);\n}\n\n// Assembly\nunion() {\n    oven_body();\n    front_face();\n    oven_door();\n    control_panel();\n    chimney();\n    legs();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "bread_maker",
    "openscad_code": "// Realistic-style 3D-printable bread maker (medium complexity)\n// Outer dimensions ~100 x 150 x 120 mm\n\n$fn = 40;\n\nmodule roundedCube(size, radius, center = false) {\n    // Helper for rounded-edge cubes\n    translate([0, 0, radius]) {\n        hull() {\n            for(x = [-(size.x/2 - radius), (size.x/2 - radius)])\n                for(y = [-(size.y/2 - radius), (size.y/2 - radius)])\n                    translate([x, y, 0])\n                        cylinder(r = radius, h = size.z - 2*radius, center = center);\n        }\n    }\n}\n\n// Main body shell\nmodule body() {\n    difference() {\n        roundedCube([100, 150, 100], 8); // 2mm wall thickness preserved by hollowing\n        translate([0, 0, 2])\n            roundedCube([96, 146, 98], 6);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        translate([0, -5, 100])\n            roundedCube([98, 70, 20], 6);\n        translate([0, -5, 102])\n            roundedCube([94, 66, 20], 4);\n    }\n    // Handle bar on lid\n    translate([0, -5, 125])\n        rotate([90, 0, 0])\n            cylinder(h = 40, r = 4, center = true);\n}\n\n// Control panel with buttons\nmodule controls() {\n    translate([0, 80, 50]) {\n        // Panel face\n        cube([60, 5, 40], center = true);\n        // Screen\n        translate([0, 3, 10])\n            color(\"black\")\n                cube([40, 1, 15], center = true);\n        // Buttons\n        for(i = [-1:1])\n            translate([i*15, 3, -5])\n                cylinder(h = 2, r = 4);\n        // Dial\n        translate([25, 3, 0])\n            rotate([90, 0, 0])\n                cylinder(h = 3, r = 6);\n    }\n}\n\n// Air vents (side slits)\nmodule vents() {\n    for(i = [0:5]) {\n        translate([-50, 30 + i*15, 50])\n            rotate([0, 90, 0])\n                cube([30, 2, 5]);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-40, 40])\n        for(y = [-65, 65])\n            translate([x, y, -3])\n                cylinder(h = 6, r = 5);\n}\n\n// Bread pan (removable insert)\nmodule bread_pan() {\n    difference() {\n        translate([0, 0, 30])\n            roundedCube([70, 90, 60], 4);\n        translate([0, 0, 34])\n            roundedCube([66, 86, 58], 2);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    lid();\n    controls();\n    vents();\n    feet();\n    // Show pan slightly pulled out for visual clarity\n    translate([0, -10, 0])\n        bread_pan();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "toaster_oven",
    "openscad_code": "// Toaster Oven - Realistic Style, Medium Complexity\n// Dimensions: ~70mm wide x 45mm deep x 40mm high\n\n$fn = 50;\n\n// Main body dimensions\nbody_w = 70;\nbody_d = 45;\nbody_h = 40;\nwall_t = 2;\n\n// Door dimensions\ndoor_w = body_w - 4;\ndoor_h = 30;\n\n// Feet parameters\nfoot_r = 2;\nfoot_h = 3;\n\nmodule toaster_oven() {\n    // Main body shell\n    difference() {\n        // Outer shell\n        cube([body_w, body_d, body_h], center=false);\n        \n        // Hollow interior\n        translate([wall_t, wall_t, wall_t])\n            cube([body_w-2*wall_t, body_d-2*wall_t, body_h-wall_t], center=false);\n        \n        // Front opening for door\n        translate([wall_t, 0, wall_t])\n            cube([body_w-2*wall_t, wall_t, door_h-wall_t], center=false);\n    }\n    \n    // Front door with handle\n    translate([-1, 0, wall_t])\n        door_assembly();\n    \n    // Top vent slots\n    for(i=[1:3]) {\n        translate([15*i, body_d/2, body_h-2])\n            cube([3, body_d-10, 1]);\n    }\n    \n    // Side ventilation holes\n    for(i=[1:2]) {\n        translate([body_w-wall_t-1, 10*i, 20])\n            rotate([0, 90, 0])\n                cylinder(h=wall_t, r=2);\n    }\n    \n    // Control panel\n    translate([wall_t, body_d-wall_t, body_h-15])\n        control_panel();\n    \n    // Feet\n    feet();\n}\n\nmodule door_assembly() {\n    // Door panel\n    color(\"silver\")\n    difference() {\n        translate([0, 0, 0])\n            cube([wall_t, door_w, door_h]);\n        \n        // Door window\n        translate([wall_t-0.5, 5, 5])\n            cube([wall_t, door_w-10, door_h-10]);\n    }\n    \n    // Door handle\n    translate([-wall_t-2, door_w/2-10, door_h/2])\n        rotate([0, 90, 0])\n            cylinder(h=20, r=2);\n}\n\nmodule control_panel() {\n    // Panel base\n    cube([body_w-2*wall_t, wall_t, 12]);\n    \n    // Temperature knob\n    translate([10, wall_t, 6])\n        rotate([90, 0, 0])\n            cylinder(h=3, r=4);\n    \n    // Timer knob\n    translate([25, wall_t, 6])\n        rotate([90, 0, 0])\n            cylinder(h=3, r=4);\n    \n    // Function selector knob\n    translate([40, wall_t, 6])\n        rotate([90, 0, 0])\n            cylinder(h=3, r=4);\n    \n    // Indicator light\n    translate([55, wall_t, 9])\n        sphere(r=1.5);\n}\n\nmodule feet() {\n    // Front left\n    translate([5, 5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n    \n    // Front right\n    translate([body_w-5, 5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n    \n    // Back left\n    translate([5, body_d-5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n    \n    // Back right\n    translate([body_w-5, body_d-5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n}\n\n// Main assembly\ntoaster_oven();",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_grill",
    "openscad_code": "// Electric Grill - Realistic Medium Complexity\n// Overall size: 120x80x40mm (LxWxH)\n\n// Main body module\nmodule grill_body() {\n    // Base housing\n    difference() {\n        // Main box with rounded edges\n        minkowski() {\n            cube([120, 80, 35], center=true);\n            sphere(r=2);\n        }\n        \n        // Hollow interior\n        translate([0, 0, -2])\n        cube([116, 76, 31], center=true);\n    }\n}\n\n// Grill top plate with ridges\nmodule grill_plate() {\n    // Base plate\n    translate([0, 0, 18])\n    difference() {\n        cube([110, 70, 4], center=true);\n        \n        // Drain holes\n        for(x=[-40:20:40]) {\n            translate([x, 25, 0])\n            cylinder(h=5, r=3, center=true);\n        }\n    }\n    \n    // Grill ridges\n    for(y=[-25:5:25]) {\n        translate([0, y, 20.5])\n        cube([108, 2, 1.5], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel face\n    translate([-61, 0, 5])\n    rotate([0, 90, 0])\n    difference() {\n        cube([30, 60, 8], center=true);\n        \n        // Power button hole\n        translate([0, 20, 0])\n        cylinder(h=10, r=6, center=true);\n        \n        // Temperature dial hole\n        translate([0, -20, 0])\n        cylinder(h=10, r=8, center=true);\n    }\n    \n    // Power button\n    translate([-66, 20, 5])\n    rotate([0, 90, 0])\n    cylinder(h=4, r=5, center=true);\n    \n    // Temperature dial\n    translate([-66, -20, 5])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h=6, r=7, center=true);\n        translate([-3, 0, 0])\n        cube([6, 2, 7], center=true);\n    }\n}\n\n// Support feet\nmodule feet() {\n    positions = [[-50, -30], [50, -30], [-50, 30], [50, 30]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], -20])\n        cylinder(h=5, r=4, center=true);\n    }\n}\n\n// Handles\nmodule handles() {\n    // Left handle\n    translate([-60, 0, 0])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=20, r=5, center=true);\n        translate([0, 0, -10])\n        cylinder(h=20, r=3, center=true);\n    }\n    \n    // Right handle\n    translate([60, 0, 0])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=20, r=5, center=true);\n        translate([0, 0, -10])\n        cylinder(h=20, r=3, center=true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([0, -45, -15])\n    rotate([90, 0, 0])\n    cylinder(h=20, r=3, center=true);\n    \n    translate([0, -55, -15])\n    rotate([90, 0, 0])\n    cylinder(h=20, r=2, center=true);\n}\n\n// Assembly\ngrill_body();\ngrill_plate();\ncontrol_panel();\nfeet();\nhandles();\npower_cord();",
    "renders": true
  },
  {
    "kitchen_appliance": "indoor_grill",
    "openscad_code": "// Indoor Electric Grill â€“ OpenSCAD  (medium complexity, realistic, 3-D-printable)\n\n// Overall envelope 140 mm Ã— 100 mm Ã— 70 mm\n$fn = 36;\n\nmodule roundedBox(w,l,h,r){\n    hull(){\n        translate([ r, r, 0]) cylinder(r=r,h=h);\n        translate([w-r, r, 0]) cylinder(r=r,h=h);\n        translate([w-r,l-r, 0]) cylinder(r=r,h=h);\n        translate([ r,l-r, 0]) cylinder(r=r,h=h);\n    }\n}\n\n// Main body shell\nmodule bodyShell(){\n    difference(){\n        roundedBox(140,100,70,6);\n        // hollow inside\n        translate([2,2,2]) roundedBox(136,96,68,4);\n    }\n}\n\n// Top grill plate\nmodule topPlate(){\n    difference(){\n        translate([0,0,70]) roundedBox(140,100,5,6);\n        // cooking grid\n        for(x=[10:130])\n            translate([x,5,75]) cube([1,90,1]);\n        for(y=[5:95])\n            translate([5,y,75]) cube([130,1,1]);\n        // drainage channel\n        translate([65,95,70]) cube([10,5,5]);\n    }\n}\n\n// Front control panel\nmodule controlPanel(){\n    translate([0,100,20])\n    difference(){\n        cube([140,4,30]);\n        // screen\n        translate([20,1,15]) cube([40,2,8]);\n        // two dials\n        translate([80,2,12]) rotate([90,0,0]) cylinder(h=2,r=6);\n        translate([105,2,12]) rotate([90,0,0]) cylinder(h=2,r=6);\n    }\n}\n\n// Feet\nmodule foot(){\n    difference(){\n        cylinder(h=4,r=6);\n        translate([0,0,-1]) cylinder(h=6,r=4);\n    }\n}\n\nmodule feet(){\n    for(x=[10,130]) for(y=[10,90])\n        translate([x,y,0]) foot();\n}\n\n// Handle\nmodule handle(){\n    translate([70,-6,45]) rotate([0,90,0]){\n        difference(){\n            cylinder(h=130,r=3);\n            translate([0,0,2]) cylinder(h=126,r=1);\n        }\n    }\n}\n\n// Power cord stub\nmodule powerCord(){\n    translate([-2,30,25]) rotate([0,90,0]) cylinder(h=10,r=4);\n}\n\nunion(){\n    bodyShell();\n    topPlate();\n    controlPanel();\n    feet();\n    handle();\n    powerCord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "vegetable_steamer",
    "openscad_code": "// Vegetable Steamer - Realistic Style, Medium Complexity\n\n// Overall dimensions (mm)\nsteamer_height = 100;\nbase_height = 25;\nlid_height = 20;\nbody_diameter = 80;\nwall_thickness = 2;\n\n// Base module with water reservoir and heating element\nmodule base() {\n    difference() {\n        // Main base cylinder\n        cylinder(h=base_height, d=body_diameter+6, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cylinder(h=base_height-wall_thickness, d=body_diameter+2, $fn=64);\n        \n        // Water fill port\n        translate([body_diameter/2 - 8, 0, base_height-10])\n            rotate([90, 0, 0])\n                cylinder(h=15, d=12, $fn=32);\n    }\n    \n    // Control panel\n    translate([body_diameter/2 - 15, 0, base_height-5])\n        cube([25, 40, 5]);\n    \n    // Control knobs\n    for(i=[-1:1]) {\n        translate([body_diameter/2 - 2.5, i*12, base_height-2])\n            cylinder(h=8, d=6, $fn=16);\n    }\n    \n    // Power indicator light\n    translate([body_diameter/2 - 15, 20, base_height-3])\n        sphere(d=4, $fn=16);\n}\n\n// Steaming basket with holes\nmodule basket() {\n    difference() {\n        // Main basket cylinder\n        cylinder(h=steamer_height-base_height-lid_height-wall_thickness, \n                d=body_diameter, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cylinder(h=steamer_height-base_height-lid_height-wall_thickness*2, \n                    d=body_diameter-wall_thickness*2, $fn=64);\n        \n        // Steam holes pattern\n        for(i=[-2:2]) {\n            for(j=[-2:2]) {\n                if(i*i + j*j < 2.5) {\n                    translate([i*15, j*15, steamer_height/2-base_height])\n                        cylinder(h=wall_thickness+1, d=3, $fn=8);\n                }\n            }\n        }\n    }\n    \n    // Rim/lip for stacking\n    translate([0, 0, steamer_height-base_height-lid_height-wall_thickness])\n        cylinder(h=wall_thickness, d=body_diameter+4, $fn=64);\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid dome\n        translate([0, 0, lid_height-5])\n            sphere(d=body_diameter+4, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, lid_height-3])\n            sphere(d=body_diameter, $fn=64);\n        \n        // Trim bottom half\n        translate([0, 0, lid_height/2-5])\n            cube([body_diameter+10, body_diameter+10, lid_height], center=true);\n    }\n    \n    // Central handle\n    translate([0, 0, lid_height-2])\n        cylinder(h=15, d=12, $fn=32);\n    \n    // Handle grip indent\n    translate([0, 0, lid_height+5])\n        cylinder(h=10, d=8, $fn=32);\n    \n    // Steam vent hole\n    translate([0, body_diameter/4, lid_height-2])\n        cylinder(h=10, d=4, $fn=8);\n}\n\n// Assembly\nbase();\ntranslate([0, 0, base_height])\n    basket();\ntranslate([0, 0, steamer_height-lid_height+5])\n    lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_steamer",
    "openscad_code": "// Electric Steamer - Medium complexity realistic style\n// Approx 120mm width, 120mm depth, 150mm height\n\n// Main parameters\nbase_width = 120;\nbase_depth = 120;\nbase_height = 25;\nwall_thickness = 2;\n\n// Module for rounded cube\nmodule rounded_cube(size, radius) {\n    translate([radius, radius, 0])\n    minkowski() {\n        cube([size.x - 2*radius, size.y - 2*radius, size.z]);\n        cylinder(r=radius, h=0.01);\n    }\n}\n\n// Base unit\nmodule steamer_base() {\n    difference() {\n        // Main base body\n        rounded_cube([base_width, base_depth, base_height], 5);\n        \n        // Recessed top\n        translate([wall_thickness, wall_thickness, base_height - 2])\n        cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, 5]);\n        \n        // Ventilation holes - front\n        for(i = [1:5]) {\n            translate([20*i, wall_thickness, base_height/2])\n            rotate([0, 90, 0])\n            cylinder(h=wall_thickness*2, r=3);\n        }\n        \n        // Ventilation holes - back\n        for(i = [1:5]) {\n            translate([20*i, base_depth - wall_thickness*3, base_height/2])\n            rotate([0, 90, 0])\n            cylinder(h=wall_thickness*2, r=3);\n        }\n    }\n    \n    // Control panel\n    translate([base_width - 35, base_depth - 20, base_height])\n    difference() {\n        cube([30, 15, 8]);\n        // LED display window\n        translate([5, 5, 7.9])\n        cube([20, 5, 0.2]);\n    }\n    \n    // Control buttons\n    for(i = [0:2]) {\n        translate([base_width - 30 + i*8, base_depth - 10, base_height + 9])\n        cylinder(h=3, r=3);\n    }\n}\n\n// Water reservoir\nmodule water_reservoir() {\n    translate([wall_thickness*2, wall_thickness*2, base_height])\n    difference() {\n        rounded_cube([base_width - wall_thickness*4, base_depth - wall_thickness*4, 25], 3);\n        // Hollow inside\n        translate([wall_thickness, wall_thickness, wall_thickness])\n        rounded_cube([base_width - wall_thickness*6, base_depth - wall_thickness*6, 23], 2);\n    }\n    \n    // Water level indicator\n    translate([wall_thickness*2 - 1, wall_thickness*2 + 5, base_height + 10])\n    cube([1, 15, 1]);\n}\n\n// Steaming baskets\nmodule steaming_basket(height_offset) {\n    translate([0, 0, height_offset])\n    difference() {\n        // Outer basket\n        cylinder(h=30, r=55, $fn=64);\n        // Inner hollow\n        cylinder(h=30, r=53, $fn=64);\n        \n        // Drainage holes in bottom\n        for(i = [0:11]) {\n            rotate([0, 0, i*30])\n            translate([40, 0, 0])\n            cylinder(h=30, r=2);\n        }\n    }\n    \n    // Handles\n    for(side = [0, 1]) {\n        translate([side ? 50 : -50, 0, height_offset + 15])\n        rotate([0, 90, 0])\n        cylinder(h=10, r=3);\n    }\n}\n\n// Lid\nmodule steamer_lid() {\n    translate([0, 0, base_height + 25 + 30 + 30 + 5])\n    difference() {\n        // Main lid dome\n        scale([1, 1, 0.5])\n        sphere(r=60, $fn=64);\n        \n        // Hollow inside\n        translate([0, 0, -5])\n        scale([0.9, 0.9, 0.5])\n        sphere(r=60, $fn=64);\n        \n        // Handle hole\n        translate([0, 0, -10])\n        cylinder(h=20, r=5);\n    }\n    \n    // Lid handle\n    translate([0, 0, base_height + 25 + 30 + 30 + 25])\n    cylinder(h=20, r=8);\n    \n    // Steam vent\n    translate([0, 30, base_height + 25 + 30 + 30 + 5])\n    cylinder(h=10, r=3);\n}\n\n// Assembly\nsteamer_base();\nwater_reservoir();\nsteaming_basket(base_height + 25);\nsteaming_basket(base_height + 25 + 30);\nsteamer_lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "hot_plate",
    "openscad_code": "// Hot Plate Kitchen Appliance â€“ Realistic / Medium detail\n// -------------------------------------------------------\n// Overall size: 110 mm (W) x 80 mm (D) x 35 mm (H)\n// Designed for 3D printing: 2 mm walls, no steep overhangs\n\n$fn = 36;               // Smooth curves\n\nwall_th = 2;            // Consistent wall thickness\nplate_d = 90;           // Hot-plate diameter\nbase_w  = 110;          // Body width\nbase_d  = 80;           // Body depth\nbase_h  = 25;           // Body height\nknob_r  = 7;            // Control knob radius\nknob_h  = 10;           // Knob height\nfoot_r  = 4;            // Rubber foot radius\nfoot_h  = 3;            // Foot height\n\n// ---------- Rubber feet ----------\nmodule foot() {\n    cylinder(h = foot_h, r1 = foot_r, r2 = foot_r * 0.8);\n}\n\n// ---------- Heat plate (cast metal look) ----------\nmodule heat_plate() {\n    difference() {\n        // Main disc\n        cylinder(h = 4, r = plate_d/2);\n        // Chamfered top edge\n        translate([0,0,3.9])\n            cylinder(h = 1, r1 = plate_d/2 - 2, r2 = plate_d/2);\n    }\n}\n\n// ---------- Housing ----------\nmodule body() {\n    difference() {\n        // Main box\n        translate([-base_w/2, -base_d/2, 0])\n            cube([base_w, base_d, base_h]);\n\n        // Hollow interior\n        translate([-base_w/2 + wall_th,\n                   -base_d/2 + wall_th,\n                   wall_th])\n            cube([base_w - 2*wall_th,\n                  base_d - 2*wall_th,\n                  base_h]);\n\n        // Top circular opening for plate\n        translate([0,0,base_h-1])\n            cylinder(h = 5, r = plate_d/2 + 2);\n    }\n}\n\n// ---------- Control knob with indicator line ----------\nmodule knob() {\n    translate([0,0,knob_h/2])\n        rotate([90,0,0])\n            difference() {\n                cylinder(h = knob_h, r = knob_r);\n                // Side flat for grip\n                translate([0,-knob_r,0])\n                    cube([20, knob_r*2, knob_h], center=true);\n                // Indicator groove\n                translate([0,0,knob_h-2])\n                    cylinder(h = 3, r = knob_r-2);\n            }\n}\n\n// ---------- Assembly ----------\nunion() {\n    // Housing\n    body();\n\n    // Heat plate on top\n    translate([0,0,base_h-1])\n        heat_plate();\n\n    // Control knob on front-right corner\n    translate([base_w/2 - knob_r - 5,\n               -base_d/2 + knob_r + 5,\n               base_h - 2])\n        knob();\n\n    // Four rubber feet\n    foot_pos = [[-base_w/2 + foot_r + 4, -base_d/2 + foot_r + 4],\n                [ base_w/2 - foot_r - 4, -base_d/2 + foot_r + 4],\n                [ base_w/2 - foot_r - 4,  base_d/2 - foot_r - 4],\n                [-base_w/2 + foot_r + 4,  base_d/2 - foot_r - 4]];\n    for(p = foot_pos)\n        translate([p.x, p.y, 0])\n            foot();\n}",
    "renders": true
  }
]