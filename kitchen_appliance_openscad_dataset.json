[
  {
    "kitchen_appliance": "blender",
    "openscad_code": "// Realistic Medium-Complexity Blender Kitchen Appliance\n// Designed for 3D printing: no overhangs, 2 mm walls, â‰ˆ120 mm tall\n\n$fn = 36;  // Smooth curves\nwall = 2;  // 3D-printable wall thickness\n\n// Main assembly\nmodule blender() {\n    difference() {\n        // Base housing\n        base();\n\n        // Motor shaft hole\n        translate([0, 0, 25])\n            cylinder(h = 30, d = 8);\n    }\n\n    // Buttons panel\n    translate([18, -25, 0])\n        buttons_panel();\n\n    // Jar assembly\n    translate([0, 0, 30])\n        jar();\n\n    // Lid\n    translate([0, 0, 30 + 55])\n        lid();\n}\n\n// Base housing\nmodule base() {\n    // Outer shell\n    difference() {\n        union() {\n            // Main body\n            cylinder(h = 30, d = 60);\n\n            // Back bump for cord\n            translate([0, 25, 10])\n                scale([1, 0.6, 0.5])\n                    sphere(d = 25);\n        }\n\n        // Hollow interior\n        cylinder(h = 28, d = 60 - 2 * wall);\n    }\n\n    // Feet\n    for (a = [0, 120, 240])\n        rotate([0, 0, a])\n            translate([23, 0, -2])\n                cylinder(h = 4, d = 8);\n}\n\n// Buttons and dial panel\nmodule buttons_panel() {\n    // Panel plate\n    cube([35, 15, 8], center = true);\n\n    // Three push buttons\n    for (i = [0, 1, 2])\n        translate([10 - i * 10, 0, 5])\n            cylinder(h = 6, d = 6);\n\n    // Speed dial\n    translate([10, 0, 8])\n        cylinder(h = 6, d = 12);\n\n    // Dial grip ridges\n    for (a = [0:30:330])\n        rotate([0, 0, a])\n            translate([5, 0, 8 + 3])\n                cube([2, 1, 4], center = true);\n}\n\n// Glass/plastic jar\nmodule jar() {\n    // Jar walls\n    difference() {\n        // Outer\n        cylinder(h = 55, d1 = 40, d2 = 45);\n\n        // Inner cavity\n        translate([0, 0, -1])\n            cylinder(h = 57, d1 = 40 - 2 * wall, d2 = 45 - 2 * wall);\n    }\n\n    // Handle\n    difference() {\n        // Handle grip\n        translate([25, 0, 25])\n            rotate([0, 90, 0])\n                torus(ri = 6, ro = 10);\n\n        // Cut hollow\n        translate([25, 0, 25])\n            rotate([0, 90, 0])\n                torus(ri = 3, ro = 8);\n    }\n\n    // Spout\n    translate([0, 22.5, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 8, d1 = 15, d2 = 5);\n}\n\n// Lid\nmodule lid() {\n    // Top\n    difference() {\n        // Outer lid\n        cylinder(h = 5, d = 47);\n\n        // Inner plug\n        cylinder(h = 7, d = 41);\n    }\n\n    // Center cap\n    translate([0, 0, 5])\n        cylinder(h = 8, d = 20);\n\n    // Cap grip\n    for (a = [0:45:315])\n        rotate([0, 0, a])\n            translate([10, 0, 9])\n                cube([8, 2, 4], center = true);\n}\n\n// Torus helper for handle\nmodule torus(ri, ro) {\n    rotate_extrude()\n        translate([ro, 0, 0])\n            circle(r = ri);\n}\n\n// Render\nblender();",
    "renders": true
  },
  {
    "kitchen_appliance": "toaster",
    "openscad_code": "// Realistic 2-slice toaster, medium complexity\n// Dimensions in mm, printable with 2 mm walls\n\n$fn = 50;\n\n// Overall size\ntoaster_w = 110;\ntoaster_d = 80;\ntoaster_h = 70;\n\n// Wall thickness\nwall = 2;\n\nmodule toaster_body() {\n    difference() {\n        // Outer shell\n        union() {\n            // Main block\n            translate([0, 0, toaster_h/2])\n                rounded_box(toaster_w, toaster_d, toaster_h, 5);\n            // Feet\n            for(x=[-1,1])\n            for(y=[-1,1])\n                translate([x*(toaster_w/2 - 10), y*(toaster_d/2 - 10), 3])\n                    cylinder(h=6, r=5);\n        }\n        // Slot openings\n        slot_w = 30;\n        slot_d = toaster_d - 20;\n        slot_h = 5;\n        for(x=[-1,1])\n            translate([x*toaster_w/4, 0, toaster_h - slot_h/2])\n                cube([slot_w, slot_d, slot_h + 1], center=true);\n        // Inner cavity\n        translate([0, 0, toaster_h/2])\n            rounded_box(toaster_w - 2*wall, toaster_d - 2*wall, toaster_h - wall, 3);\n    }\n}\n\nmodule rounded_box(w, d, h, r) {\n    hull() {\n        for(x=[-1,1])\n        for(y=[-1,1])\n        for(z=[-1,1])\n            translate([x*(w/2 - r), y*(d/2 - r), z*(h/2 - r)])\n                sphere(r=r);\n    }\n}\n\nmodule control_panel() {\n    // Front face plate\n    translate([toaster_w/2, 0, 25])\n        rotate([0, 90, 0])\n        difference() {\n            rounded_box(45, 20, 4, 4);\n            // Knob hole\n            translate([0, 0, 0])\n                cylinder(h=5, r=6);\n        }\n    // Knob\n    translate([toaster_w/2 + 2, 0, 25])\n        rotate([0, 90, 0])\n        cylinder(h=8, r=5);\n    // Lever\n    translate([toaster_w/2 - 5, 0, 15])\n        rotate([0, 0, 90])\n        union() {\n            cube([30, 5, 5]);\n            translate([15, 0, 2.5])\n                sphere(r=4);\n        }\n    // Buttons\n    for(i=[0,1]) {\n        translate([toaster_w/2 - 10, 15 - i*30, 35])\n            difference() {\n                cube([8, 8, 2], center=true);\n                translate([0, 0, 1])\n                    sphere(r=3);\n            }\n    }\n}\n\nmodule crumb_tray() {\n    // Tray slot\n    translate([0, toaster_d/2 - 1, 8])\n        rotate([90, 0, 0])\n        difference() {\n            cube([toaster_w - 30, 10, 2], center=true);\n            translate([0, 0, -0.5])\n                cube([toaster_w - 34, 6, 3], center=true);\n        }\n    // Handle\n    translate([0, toaster_d/2 + 4, 8])\n        cube([10, 8, 3], center=true);\n}\n\n// Assembly\ntoaster_body();\ncontrol_panel();\ncrumb_tray();",
    "renders": true
  },
  {
    "kitchen_appliance": "microwave",
    "openscad_code": "// Medium complexity realistic microwave\n// Overall dimensions: 100mm(W) x 75mm(D) x 60mm(H)\n\n$fn = 32;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        cube([100, 75, 60], center = false);\n        \n        // Hollow interior - 2mm walls\n        translate([2, 2, 2])\n            cube([96, 71, 56], center = false);\n    }\n}\n\n// Door\nmodule door() {\n    // Door frame\n    translate([-0.5, 10, 5])\n        cube([2, 55, 50]);\n    \n    // Door window\n    translate([0, 12, 7])\n        difference() {\n            cube([1, 51, 46]);\n            translate([0.5, 3, 3])\n                cube([2, 45, 40]);\n        }\n    \n    // Door handle\n    translate([-2, 50, 30])\n        rotate([0, 90, 0])\n            cylinder(h = 25, d1 = 5, d2 = 5);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel backing\n    translate([100, 20, 45])\n        cube([5, 35, 15]);\n    \n    // Display\n    translate([105, 25, 55])\n        cube([1, 20, 5]);\n    \n    // Buttons\n    for(y = [0:6:24]) {\n        translate([105, 22 + y, 48])\n            cylinder(h = 3, d = 5);\n    }\n    \n    // Dial\n    translate([105, 45, 52])\n        rotate([90, 0, 0])\n            cylinder(h = 3, d = 8);\n}\n\n// Feet\nmodule feet() {\n    // Four feet at corners\n    positions = [[5, 5], [5, 70], [95, 5], [95, 70]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], -3])\n            cylinder(h = 3, d = 5);\n    }\n}\n\n// Ventilation grilles\nmodule vents() {\n    // Side vents\n    translate([50, 75, 30])\n        rotate([0, 90, 0])\n            for(i = [0:4:20]) {\n                translate([i, 0, 0])\n                    cube([2, 2, 75]);\n            }\n    \n    // Back vents\n    translate([100, 50, 30])\n        rotate([0, 0, 90])\n            for(i = [0:4:20]) {\n                translate([i, 0, 0])\n                    cube([2, 2, 50]);\n            }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([50, 75, 10])\n        rotate([90, 0, 0])\n            cylinder(h = 30, d = 3);\n}\n\n// Assembly\nunion() {\n    body_shell();\n    door();\n    control_panel();\n    feet();\n    vents();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coffee_maker",
    "openscad_code": "// Coffee Maker 3D Model - Realistic Style, Medium Complexity\n// Overall dimensions: 100mm(W) x 120mm(D) x 140mm(H)\n\n$fn = 32;\nwall_thickness = 2;\n\nmodule main_body() {\n    // Main housing\n    difference() {\n        // Outer shell\n        cube([90, 110, 100], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cube([86, 106, 96], center=true);\n    }\n}\n\nmodule water_tank() {\n    // Transparent water tank on back\n    translate([0, -55, 30]) {\n        difference() {\n            // Tank body\n            cube([40, 15, 60], center=true);\n            \n            // Hollow interior\n            translate([0, 0, wall_thickness])\n                cube([36, 11, 56], center=true);\n        }\n        \n        // Tank handle\n        translate([25, 0, 0])\n            rotate([90, 0, 0])\n                cylinder(h=30, r1=3, r2=3);\n    }\n}\n\nmodule filter_basket() {\n    // Drip filter basket\n    translate([0, 20, -30]) {\n        difference() {\n            // Basket cone\n            cylinder(h=25, r1=20, r2=15);\n            \n            // Hollow interior\n            translate([0, 0, wall_thickness])\n                cylinder(h=23, r1=18, r2=13);\n        }\n        \n        // Basket handle\n        translate([22, 0, 12])\n            rotate([0, 90, 0])\n                cylinder(h=15, r1=2, r2=2);\n    }\n}\n\nmodule carafe() {\n    // Glass carafe\n    translate([0, 20, -70]) {\n        difference() {\n            // Carafe body\n            cylinder(h=35, r1=18, r2=20);\n            \n            // Interior space\n            translate([0, 0, wall_thickness])\n                cylinder(h=33, r1=16, r2=18);\n        }\n        \n        // Handle\n        translate([20, 0, 17])\n            rotate([0, 90, 0])\n                cylinder(h=35, r1=3, r2=3);\n        \n        // Spout\n        translate([0, -20, 30])\n            rotate([0, 0, 0])\n                cube([30, 5, 5], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, 55, 20]) {\n        // Panel base\n        cube([60, 5, 30], center=true);\n        \n        // Power button\n        translate([-20, 3, 0])\n            cylinder(h=3, r1=5, r2=5);\n        \n        // Brew strength dial\n        translate([0, 3, 0])\n            cylinder(h=3, r1=7, r2=7);\n        \n        // Timer button\n        translate([20, 3, 0])\n            cylinder(h=3, r1=5, r2=5);\n    }\n}\n\nmodule heating_plate() {\n    // Hot plate for carafe\n    translate([0, 20, -50]) {\n        difference() {\n            cylinder(h=3, r1=25, r2=25);\n            cylinder(h=3, r1=23, r2=23);\n        }\n    }\n}\n\nmodule base_feet() {\n    // Four rubber feet\n    for(x = [-35, 35])\n        for(y = [-45, 45])\n            translate([x, y, -52])\n                cylinder(h=3, r1=4, r2=4);\n}\n\nmodule display_screen() {\n    // LED display\n    translate([0, 55, 35]) {\n        difference() {\n            cube([40, 2, 15], center=true);\n            translate([0, 1, 0])\n                cube([36, 2, 11], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    water_tank();\n    filter_basket();\n    carafe();\n    control_panel();\n    heating_plate();\n    base_feet();\n    display_screen();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixer",
    "openscad_code": "// Realistic medium-complexity kitchen mixer\n// Overall size â‰ˆ 110 mm tall, 80 mm wide, 100 mm deep\n\n$fn = 32;              // smooth curves\nwall = 2;              // 3D-print friendly wall thickness\n\n// ----- Base housing -------------------------------------------------\nmodule base() {\n    difference() {\n        // main body\n        translate([0,0,10])\n            cube([70,80,20], center=true);\n\n        // front sloped face\n        translate([0,-41,20])\n            rotate([45,0,0])\n                cube([68,30,30], center=true);\n\n        // rear sloped face\n        translate([0,41,20])\n            rotate([-45,0,0])\n                cube([68,30,30], center=true);\n\n        // hollow inside\n        translate([0,0,10])\n            cube([66-wall*2,76-wall*2,18], center=true);\n    }\n\n    // rubber feet\n    for(x=[-25,25])\n        for(y=[-25,25])\n            translate([x,y,0])\n                cylinder(h=2, d1=6, d2=5);\n}\n\n// ----- Motor tower --------------------------------------------------\nmodule tower() {\n    union() {\n        // vertical column\n        cylinder(h=55, d1=30, d2=25);\n        translate([0,0,55])\n            cylinder(h=15, d1=25, d2=30);\n\n        // control panel\n        translate([0,-15,35])\n            cube([40,10,20], center=true);\n    }\n}\n\n// ----- Speed dial ---------------------------------------------------\nmodule dial() {\n    rotate([90,0,0])\n        cylinder(h=8, d1=12, d2=10);\n    for(i=[0:5:355])\n        rotate([0,0,i])\n            translate([5.5,0,-1])\n                cube([1,1,10], center=true);\n}\n\n// ----- Mixer head & gearbox -----------------------------------------\nmodule head() {\n    difference() {\n        union() {\n            // gearbox box\n            translate([0,0,70])\n                cube([55,40,30], center=true);\n\n            // curved transition\n            translate([0,0,55])\n                cylinder(h=15, d1=25, d2=50);\n        }\n\n        // hollow cavity\n        translate([0,0,70])\n            cube([51-wall*2,36-wall*2,26], center=true);\n    }\n}\n\n// ----- Beaters ------------------------------------------------------\nmodule beaters() {\n    for(side=[-1,1])\n        translate([side*18,0,85]) {\n            // shaft\n            cylinder(h=35, d=5);\n\n            // wire loops\n            for(z=[5,15,25]) {\n                rotate([0,0,45])\n                    translate([0,0,z])\n                        scale([1,0.2,1])\n                            rotate_extrude()\n                                translate([5,0,0])\n                                    circle(d=1.5);\n            }\n        }\n}\n\n// ----- Bowl ---------------------------------------------------------\nmodule bowl() {\n    difference() {\n        // outer bowl\n        translate([0,0,48])\n            cylinder(h=40, d1=70, d2=75);\n\n        // inner cavity\n        translate([0,0,50])\n            cylinder(h=38, d1=66, d2=71);\n    }\n\n    // handle\n    translate([35,0,68])\n        rotate([0,90,0])\n            cylinder(h=35, d=8);\n    translate([35,0,68])\n        rotate([0,90,0])\n            cylinder(h=30, d=4);\n}\n\n// ----- Buttons ------------------------------------------------------\nmodule buttons() {\n    // on/off button\n    translate([0,-15,45])\n        cube([10,5,5], center=true);\n\n    // turbo button\n    translate([0,-15,40])\n        cube([8,5,5], center=true);\n}\n\n// ------------------- Assembly ---------------------------------------\nbase();\ntranslate([0,0,20]) tower();\ntranslate([0,-15,35]) dial();\nhead();\nbeaters();\nbowl();\nbuttons();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettle",
    "openscad_code": "// Electric Kettle - Realistic medium-complexity model\n// Overall height ~110 mm, fits most FDM printers\n\n// Parameters\nwall = 2;           // wall thickness for 3D printability\nbase_r = 30;        // kettle body radius\nbody_h = 60;        // kettle body height\nneck_r = 20;        // neck radius\nspout_len = 25;     // spout protrusion\nhandle_clear = 15;  // finger clearance inside handle\nbutton_w = 8;       // power button width\n\n// Kettle body â€“ swept cylinder with rounded top\nmodule kettle_body() {\n    difference() {\n        union() {\n            // Main cylinder\n            cylinder(h = body_h, r1 = base_r, r2 = base_r, $fn = 64);\n            // Rounded top\n            translate([0, 0, body_h])\n                scale([1, 1, 0.6])\n                    sphere(r = base_r, $fn = 64);\n        }\n        // Hollow inside\n        translate([0, 0, -1])\n            cylinder(h = body_h + 2, r1 = base_r - wall, r2 = base_r - wall, $fn = 64);\n        translate([0, 0, body_h])\n            scale([1, 1, 0.6])\n                sphere(r = base_r - wall, $fn = 64);\n    }\n}\n\n// Spout\nmodule spout() {\n    difference() {\n        union() {\n            // Spout tube\n            translate([0, base_r - 5, body_h - 10])\n                rotate([90, 0, 0])\n                    cylinder(h = spout_len, r1 = 6, r2 = 4);\n            // Spout base blend\n            translate([0, base_r - 5, body_h - 15])\n                sphere(r = 7);\n        }\n        // Hollow spout\n        translate([0, base_r - 5, body_h - 10])\n            rotate([90, 0, 0])\n                cylinder(h = spout_len + 2, r1 = 4, r2 = 2);\n    }\n}\n\n// Handle\nmodule handle() {\n    difference() {\n        // Outer handle loop\n        translate([-base_r - 8, 0, body_h / 2])\n            rotate([90, 0, 0])\n                rotate([0, 90, 0])\n                    cylinder(h = 50, r1 = 5, r2 = 5);\n        // Inner clearance\n        translate([-base_r - 8, 0, body_h / 2])\n            rotate([90, 0, 0])\n                rotate([0, 90, 0])\n                    cylinder(h = 50, r1 = 5 - wall, r2 = 5 - wall);\n        // Top and bottom caps\n        translate([-base_r - 8, 0, body_h / 2 + 25])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r1 = 5, r2 = 5);\n        translate([-base_r - 8, 0, body_h / 2 - 25])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r1 = 5, r2 = 5);\n    }\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        union() {\n            // Lid disk\n            cylinder(h = 3, r = neck_r, $fn = 64);\n            // Lid knob\n            translate([0, 0, 3])\n                cylinder(h = 8, r1 = 6, r2 = 4);\n        }\n        // Hollow knob\n        translate([0, 0, 3])\n            cylinder(h = 9, r1 = 3, r2 = 2);\n    }\n}\n\n// Power button\nmodule power_button() {\n    translate([base_r - 2, 0, body_h / 2])\n        cube([button_w, 6, 4], center = true);\n}\n\n// Base plate with feet\nmodule base() {\n    difference() {\n        // Base disc\n        cylinder(h = wall, r = base_r + 4, $fn = 64);\n        // Cable notch\n        translate([base_r + 2, 0, -1])\n            cube([6, 10, wall + 2], center = true);\n    }\n    // Feet\n    for (a = [0:120:359])\n        rotate([0, 0, a])\n            translate([base_r - 8, 0, -2])\n                cylinder(h = 2, r = 3);\n}\n\n// Assembly\nbase();\ntranslate([0, 0, wall])\n    kettle_body();\ntranslate([0, 0, body_h + wall - 3])\n    lid();\nspout();\nhandle();\npower_button();",
    "renders": true
  },
  {
    "kitchen_appliance": "can_opener",
    "openscad_code": "// Manual can-opener, medium-complexity, 3D-printable\n// Overall length â‰ˆ 110 mm, all walls â‰¥ 2 mm\n\n// ---- Parameters ----\nhandle_len  = 65;   // main gripping handle\nhandle_d    = 14;\ncrank_len   = 45;   // turning lever\ncrank_d     = 10;\nhead_w      = 30;   // opener head block\nhead_h      = 22;\nhead_t      = 12;\nblade_h     = 8;\ngear_teeth  = 12;\ngear_h      = 6;\naxle_d      = 4;\nwasher_t    = 1.5;\n$fn = 36;\n\n// ---- Helper module for rounded ends ----\nmodule round_cylinder(h, d)\n{\n    cylinder(h=h-2*2, d=d);\n    translate([0,0,h-2]) sphere(d=d);\n    translate([0,0,0])   mirror([0,0,1]) sphere(d=d);\n}\n\n// ---- Main handle ----\nmodule main_handle()\n{\n    translate([0,0,-handle_d/2])\n        rotate([90,0,0])\n            round_cylinder(handle_len, handle_d);\n    // grip rings\n    for(i=[1:4])\n        translate([-handle_len/2 + i*13,0,0])\n            scale([1,1.1,1])\n                cylinder(h=2.5, d=handle_d+0.5, center=true);\n}\n\n// ---- Crank lever ----\nmodule crank()\n{\n    translate([handle_len/2+crank_len/2,0,0])\n        rotate([90,0,0])\n            round_cylinder(crank_len, crank_d);\n    // knob\n    translate([handle_len/2+crank_len+crank_d/2,0,0])\n        sphere(d=crank_d*1.3);\n}\n\n// ---- Rotating feed gear ----\nmodule feed_gear()\n{\n    difference()\n    {\n        cylinder(h=gear_h, d=20);\n        for(i=[0:gear_teeth-1])\n            rotate([0,0,i*360/gear_teeth])\n                translate([10-1.5,0,-1])\n                    cube([3,2,gear_h+2], center=true);\n    }\n}\n\n// ---- Cutting wheel ----\nmodule cutting_wheel()\n{\n    difference()\n    {\n        union()\n        {\n            cylinder(h=blade_h, d=22);\n            cylinder(h=blade_h*0.8, d=4); // axle stub\n        }\n        // sharp edge\n        translate([0,0,blade_h/2])\n            rotate([0,90,0])\n                cylinder(h=24, d=1.2, $fn=6);\n    }\n}\n\n// ---- Head block ----\nmodule opener_head()\n{\n    difference()\n    {\n        // main solid block\n        cube([head_w,head_t,head_h], center=true);\n        // axle holes\n        translate([head_w/2-8,0,head_h/2-gear_h/2])\n            rotate([0,90,0])\n                cylinder(h=head_t+2, d=axle_d+0.5, center=true);\n        translate([head_w/2-8,0,-head_h/2+blade_h/2])\n            rotate([0,90,0])\n                cylinder(h=head_t+2, d=axle_d+0.5, center=true);\n    }\n    // add parts\n    translate([head_w/2-8,0,head_h/2-gear_h/2])\n        feed_gear();\n    translate([head_w/2-8,0,-head_h/2+blade_h/2])\n        cutting_wheel();\n    // washers\n    translate([head_w/2-8,head_t/2+washer_t/2,head_h/2-gear_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n    translate([head_w/2-8,-head_t/2-washer_t/2,head_h/2-gear_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n    translate([head_w/2-8,head_t/2+washer_t/2,-head_h/2+blade_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n    translate([head_w/2-8,-head_t/2-washer_t/2,-head_h/2+blade_h/2])\n        cylinder(h=washer_t, d=axle_d+3);\n}\n\n// ---- Assembly ----\nunion()\n{\n    main_handle();\n    crank();\n    translate([-handle_len/2-head_w/2,0,handle_d/2-head_h/2])\n        opener_head();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "food_processor",
    "openscad_code": "// Food Processor - Medium complexity realistic style\n\n$fn = 24;\n\n// Overall scale\nscale_factor = 0.35;\n\n// Main dimensions (mm)\nbase_width = 120 * scale_factor;\nbase_depth = 100 * scale_factor;\nbase_height = 45 * scale_factor;\n\nmotor_housing_width = 80 * scale_factor;\nmotor_housing_depth = 80 * scale_factor;\nmotor_housing_height = 90 * scale_factor;\n\nbowl_diameter = 110 * scale_factor;\nbowl_height = 80 * scale_factor;\nbowl_wall = 2 * scale_factor;\n\nlid_diameter = bowl_diameter;\nlid_height = 15 * scale_factor;\nfeed_tube_diameter = 30 * scale_factor;\nfeed_tube_height = 40 * scale_factor;\n\n// Base module\nmodule base() {\n    difference() {\n        // Main base body\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Bottom recess\n        translate([0, 0, -2])\n            cube([base_width - 4, base_depth - 4, base_height - 2], center=true);\n        \n        // Vent slots on sides\n        for (i = [-1, 1]) {\n            translate([i * (base_width/2 - 3), 0, base_height/2 - 5])\n                cube([2, base_depth - 20, 10], center=true);\n        }\n    }\n    \n    // Rubber feet\n    for (x = [-1, 1])\n        for (y = [-1, 1])\n            translate([x * (base_width/2 - 10), y * (base_depth/2 - 10), 0])\n                cylinder(h=2, r=4, center=false);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([base_width/2 - 15, 0, base_height + 5])\n        difference() {\n            cube([30, 60, 10], center=true);\n            \n            // Buttons\n            for (i = [-1, 0, 1]) {\n                translate([0, i * 15, 3])\n                    cylinder(h=2, r=5, center=true);\n            }\n        }\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0, 0, base_height + motor_housing_height/2])\n        difference() {\n            cube([motor_housing_width, motor_housing_depth, motor_housing_height], center=true);\n            \n            // Top recess for bowl\n            translate([0, 0, motor_housing_height/2 - 3])\n                cylinder(h=6, r=(bowl_diameter/2) - 5, center=true);\n            \n            // Drive shaft\n            translate([0, 0, motor_housing_height/2])\n                cylinder(h=10, r=6, center=true);\n        }\n}\n\n// Bowl\nmodule bowl() {\n    difference() {\n        // Outer bowl\n        translate([0, 0, base_height + motor_housing_height + bowl_height/2])\n            cylinder(h=bowl_height, r=bowl_diameter/2, center=true);\n        \n        // Inner cavity\n        translate([0, 0, base_height + motor_housing_height + bowl_wall])\n            cylinder(h=bowl_height - bowl_wall*2, r=bowl_diameter/2 - bowl_wall, center=true);\n        \n        // Handle hole\n        translate([bowl_diameter/2 - 5, 0, base_height + motor_housing_height + bowl_height/2])\n            rotate([0, 90, 0])\n                cylinder(h=20, r=8, center=true);\n    }\n    \n    // Handle\n    translate([bowl_diameter/2 + 15, 0, base_height + motor_housing_height + bowl_height/2])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=30, r=10, center=true);\n                translate([0, 0, 5])\n                    cylinder(h=30, r=6, center=true);\n            }\n}\n\n// Lid with feed tube\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, base_height + motor_housing_height + bowl_height + lid_height/2])\n            cylinder(h=lid_height, r=lid_diameter/2, center=true);\n        \n        // Inner recess\n        translate([0, 0, base_height + motor_housing_height + bowl_height + lid_height/2 - 2])\n            cylinder(h=lid_height, r=lid_diameter/2 - 5, center=true);\n        \n        // Feed tube hole\n        translate([0, lid_diameter/4, base_height + motor_housing_height + bowl_height + lid_height + feed_tube_height/2])\n            cylinder(h=feed_tube_height, r=feed_tube_diameter/2 - 3, center=true);\n    }\n    \n    // Feed tube\n    translate([0, lid_diameter/4, base_height + motor_housing_height + bowl_height + lid_height + feed_tube_height/2])\n        difference() {\n            cylinder(h=feed_tube_height, r=feed_tube_diameter/2, center=true);\n            cylinder(h=feed_tube_height + 2, r=feed_tube_diameter/2 - 3, center=true);\n        }\n    \n    // Lid handle\n    translate([0, -lid_diameter/4, base_height + motor_housing_height + bowl_height + lid_height + 5])\n        cube([40, 10, 10], center=true);\n}\n\n// Assembly\nunion() {\n    base();\n    control_panel();\n    motor_housing();\n    bowl();\n    lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicer",
    "openscad_code": "// Medium-complexity realistic juicer (citrus press style)\n// ~100 mm tall, 3D-printable with 2 mm walls and no severe overhangs\n\n$fn = 36;\n\n// Overall scale factor; change to resize entire model\nscale_factor = 1;\n\nmodule juicer_assembly() {\n    // Main vertical column\n    translate([0, 0, 0])\n        column();\n\n    // Horizontal pressing arm\n    translate([0, 0, 85])\n        rotate([0, 0, 0])\n            arm();\n\n    // Reamer cone\n    translate([0, 0, 25])\n        reamer();\n\n    // Juice collector bowl\n    translate([0, 0, 8])\n        bowl();\n\n    // Base with feet\n    translate([0, 0, 0])\n        base();\n}\n\n// Central column (hollow for wiring or weight savings)\nmodule column() {\n    difference() {\n        // Outer shell\n        cylinder(h = 90, d = 22);\n        // Inner hollow\n        translate([0, 0, -1])\n            cylinder(h = 92, d = 18);\n    }\n}\n\n// Pressing arm with lever handle\nmodule arm() {\n    // Main arm beam\n    difference() {\n        // Solid beam\n        translate([-10, 0, 0])\n            cube([60, 20, 10], center = true);\n        // Cable channel\n        translate([15, 0, 0])\n            cube([30, 8, 6], center = true);\n    }\n\n    // Pivot joint\n    translate([-25, 0, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 20, d = 12);\n\n    // Handle grip\n    translate([35, 0, 0])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 30, d = 14);\n                translate([0, 0, -1])\n                    cylinder(h = 32, d = 10);\n            }\n}\n\n// Reamer cone with ridged surface\nmodule reamer() {\n    difference() {\n        // Main cone\n        cylinder(h1 = 20, h2 = 0, r1 = 20, r2 = 0, center = true);\n\n        // Vertical ridges (use loop to create 8 ribs)\n        for (i = [0 : 7]) {\n            rotate([0, 0, i * 45])\n                translate([7, 0, 0])\n                    cube([14, 2, 22], center = true);\n        }\n        // Central hole for juice flow\n        translate([0, 0, -11])\n            cylinder(h = 22, d = 6);\n    }\n}\n\n// Collector bowl with spout\nmodule bowl() {\n    difference() {\n        // Outer bowl\n        cylinder(h = 22, r1 = 35, r2 = 30);\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 20, r1 = 33, r2 = 28);\n        // Pouring spout\n        translate([33, 0, 10])\n            rotate([0, 90, 0])\n                cylinder(h = 8, r1 = 8, r2 = 0);\n    }\n}\n\n// Stable base with four feet\nmodule base() {\n    // Bottom disc\n    cylinder(h = 8, d = 80);\n\n    // Four feet (simple cylinders)\n    for (a = [0, 90, 180, 270]) {\n        rotate([0, 0, a])\n            translate([30, 0, -2])\n                cylinder(h = 4, d = 12);\n    }\n}\n\n// Generate the complete juicer scaled to print\nscale([scale_factor, scale_factor, scale_factor])\n    juicer_assembly();",
    "renders": true
  },
  {
    "kitchen_appliance": "rice_cooker",
    "openscad_code": "// Rice Cooker - Realistic Style\n// Medium complexity (~100 lines)\n\n$fn = 50;\n\n// Main dimensions\nbase_d = 80;\nbase_h = 40;\nbody_d = 75;\nbody_h = 45;\nlid_d = 78;\nlid_h = 15;\nhandle_l = 30;\nhandle_h = 15;\nbutton_w = 8;\nbutton_h = 4;\nfeet_d = 5;\nfeet_h = 3;\n\nmodule rice_cooker() {\n    // Feet - 4 small cylinders at corners\n    for (x=[-1,1])\n    for (y=[-1,1]) {\n        translate([x*30, y*30, 0])\n            cylinder(d=feet_d, h=feet_h);\n    }\n    \n    // Base body\n    difference() {\n        cylinder(d=base_d, h=base_h);\n        translate([0, 0, -1])\n            cylinder(d=base_d-4, h=base_h+2);\n    }\n    \n    // Cooking pot\n    translate([0, 0, base_h])\n        difference() {\n            cylinder(d=body_d, h=body_h);\n            translate([0, 0, 2])\n                cylinder(d=body_d-4, h=body_h);\n        }\n    \n    // Control panel\n    translate([base_d/2-5, 0, base_h-10])\n        cube([10, 25, 8], center=true);\n    \n    // Buttons on panel\n    for (i=[-1, 0, 1]) {\n        translate([base_d/2, i*6, base_h-6])\n            cube([button_w, button_h, 2]);\n    }\n    \n    // Lid\n    translate([0, 0, base_h+body_h])\n        difference() {\n            cylinder(d=lid_d, h=lid_h);\n            translate([0, 0, 2])\n                cylinder(d=lid_d-4, h=lid_h);\n        }\n    \n    // Lid handle\n    translate([0, 0, base_h+body_h+lid_h])\n        difference() {\n            // Main handle grip\n            rotate([90, 0, 0])\n                cylinder(d=8, h=handle_l);\n            \n            // Mounting base\n            cylinder(d=12, h=3);\n            \n            // Grip hole\n            translate([0, 0, 2])\n                rotate([90, 0, 0])\n                    cylinder(d=4, h=handle_l+2);\n        }\n    \n    // Steam vent\n    translate([0, lid_d/2-5, base_h+body_h+lid_h-5])\n        cylinder(d=5, h=3);\n    \n    // Side handles\n    for (angle=[0, 180]) {\n        rotate([0, 0, angle])\n            translate([body_d/2+5, 0, base_h+body_h/2])\n                difference() {\n                    cube([10, 15, 6], center=true);\n                    translate([2, 0, 0])\n                        cube([6, 11, 8], center=true);\n                }\n    }\n    \n    // Power cord exit\n    rotate([90, 0, 0])\n        translate([0, base_d/2+3, feet_h])\n            cylinder(d=4, h=10);\n}\n\n// Display the model\nrice_cooker();",
    "renders": true
  },
  {
    "kitchen_appliance": "slow_cooker",
    "openscad_code": "// Slow Cooker OpenSCAD Model\n// Overall size ~120mm wide x 90mm deep x 100mm tall\n\n$fn = 50;\n\n// Main assembly\nmodule slow_cooker() {\n    // Base housing\n    base();\n    \n    // Control panel\n    translate([0, -45, 0]) control_panel();\n    \n    // Main pot\n    translate([0, 0, 10]) pot();\n    \n    // Glass lid\n    translate([0, 0, 65]) lid();\n    \n    // Handles\n    translate([-65, 0, 25]) handle();\n    translate([65, 0, 25]) mirror([1,0,0]) handle();\n}\n\n// Main base housing\nmodule base() {\n    difference() {\n        // Main body\n        cube([120, 90, 40], center=true);\n        \n        // Hollow cavity for electronics\n        translate([0, 0, 10]) cube([110, 80, 20], center=true);\n        \n        // Ventilation slots\n        for(i = [-40:20:40]) {\n            translate([i, 45, 0]) cube([15, 2, 15], center=true);\n            translate([i, -45, 0]) cube([15, 2, 15], center=true);\n        }\n    }\n    \n    // Feet\n    for(x = [-50, 50])\n        for(y = [-35, 35])\n            translate([x, y, -22]) cylinder(h=4, r=5);\n}\n\n// Control panel with buttons and display\nmodule control_panel() {\n    difference() {\n        // Panel base\n        translate([0, 0, 20]) cube([70, 10, 20], center=true);\n        \n        // Display cutout\n        translate([0, 0, 30]) cube([40, 8, 5], center=true);\n        \n        // Button holes\n        for(i = [-20, 0, 20])\n            translate([i, 0, 30]) cylinder(h=5, r=3);\n    }\n    \n    // LCD display\n    translate([0, -5, 30]) cube([38, 8, 2], center=true);\n    \n    // Buttons\n    for(i = [-20, 0, 20])\n        translate([i, -5, 35]) cylinder(h=2, r=2.5);\n}\n\n// Ceramic pot\nmodule pot() {\n    difference() {\n        // Outer pot\n        cylinder(h=55, r1=50, r2=45);\n        \n        // Inner cavity\n        translate([0, 0, 5]) cylinder(h=50, r1=46, r2=41);\n    }\n    \n    // Rim flange\n    translate([0, 0, 55]) cylinder(h=3, r1=55, r2=45);\n}\n\n// Glass lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 5]) cylinder(h=5, r1=53, r2=48);\n        translate([0, 0, 5]) cylinder(h=5, r1=47, r2=47);\n        \n        // Inner groove\n        translate([0, 0, 7]) cylinder(h=5, r1=45, r2=45);\n    }\n    \n    // Handle\n    translate([0, 0, 15]) cylinder(h=20, r=8);\n    translate([0, 0, 35]) sphere(r=12);\n}\n\n// Side handles\nmodule handle() {\n    difference() {\n        // Main handle\n        rotate([0, 90, 0]) cylinder(h=15, r=5);\n        \n        // Mounting hole\n        rotate([0, 90, 0]) cylinder(h=16, r=2);\n    }\n    \n    // Handle grip\n    translate([-7.5, 0, 0]) rotate([90, 0, 0]) cylinder(h=15, r=5);\n}\n\nslow_cooker();",
    "renders": true
  },
  {
    "kitchen_appliance": "pressure_cooker",
    "openscad_code": "// Pressure Cooker - Realistic Style, Medium Complexity\n// Outer dimensions ~120mm wide x 100mm deep x 120mm tall\n\n// Main parameters\nwall = 2;           // 2 mm wall thickness for 3D printing\npot_r = 48;         // Inner pot radius\npot_h = 60;         // Inner pot height\nbase_gap = 4;       // Gap for lid fit\n\n// Base pot body\nmodule pot_body() {\n    difference() {\n        // Outer shell\n        cylinder(h = pot_h + wall, r = pot_r + wall, $fn = 64);\n        // Inner cavity\n        translate([0, 0, wall])\n            cylinder(h = pot_h, r = pot_r, $fn = 64);\n    }\n}\n\n// Reinforced base ring\nmodule base_ring() {\n    difference() {\n        cylinder(h = wall*2, r1 = pot_r + wall + 4, r2 = pot_r + wall + 6, $fn = 64);\n        cylinder(h = wall*2, r = pot_r + wall, $fn = 64);\n    }\n}\n\n// Handles on sides\nmodule side_handles() {\n    // Left handle\n    translate([-(pot_r + wall + 15), 0, pot_h/2])\n        rotate([0, 90, 0])\n            handle_shape();\n    // Right handle\n    translate([(pot_r + wall + 15), 0, pot_h/2])\n        rotate([0, 90, 0])\n            mirror([1,0,0])\n                handle_shape();\n}\n\nmodule handle_shape() {\n    difference() {\n        // Main grip\n        translate([0, 0, 0])\n            scale([1, 1.2, 1])\n                cylinder(h = 25, r = 6, $fn = 16);\n        // Grip hole\n        cylinder(h = 30, r = 3, $fn = 16);\n    }\n}\n\n// Lid assembly\nmodule lid_assembly() {\n    translate([0, 0, pot_h + wall + base_gap])\n        union() {\n            // Lid disk\n            cylinder(h = wall*2, r = pot_r + wall, $fn = 64);\n            // Lid rim\n            difference() {\n                cylinder(h = wall, r = pot_r + wall - 1, $fn = 64);\n                cylinder(h = wall + 1, r = pot_r, $fn = 64);\n            }\n            // Handle on top\n            translate([0, 0, wall*2 + 5])\n                lid_handle();\n            // Steam release valve\n            translate([pot_r/2, 0, wall*2])\n                steam_valve();\n            // Locking tabs (4 tabs)\n            for (i = [0:3]) {\n                rotate([0, 0, i*90])\n                    translate([pot_r + wall - 3, 0, wall])\n                        cube([6, 8, wall], center = true);\n            }\n        }\n}\n\nmodule lid_handle() {\n    difference() {\n        cylinder(h = 15, r = 8, $fn = 20);\n        cylinder(h = 16, r = 4, $fn = 20);\n    }\n}\n\nmodule steam_valve() {\n    union() {\n        cylinder(h = 8, r = 3, $fn = 12);\n        translate([0, 0, 8])\n            sphere(r = 3, $fn = 12);\n    }\n}\n\n// Control panel on front\nmodule control_panel() {\n    translate([0, pot_r + wall - 2, pot_h/2 + wall])\n        rotate([90, 0, 0])\n            union() {\n                // Panel base\n                cube([30, 15, wall], center = true);\n                // Display screen\n                translate([0, 0, wall + 0.1])\n                    color(\"black\")\n                        cube([20, 8, 0.5], center = true);\n                // Buttons\n                for (i = [-1:1]) {\n                    translate([i*8, -5, wall + 0.5])\n                        cylinder(h = 1, r = 2, $fn = 16);\n                }\n            }\n}\n\n// Assemble the pressure cooker\nunion() {\n    // Base pot with ring\n    union() {\n        pot_body();\n        translate([0, 0, 0])\n            base_ring();\n    }\n    // Handles\n    side_handles();\n    // Lid\n    lid_assembly();\n    // Control panel\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_kettle",
    "openscad_code": "// Electric Kettle - Realistic, Medium Complexity\n\n// Overall dimensions\nkettle_height = 120;\nkettle_width = 90;\nkettle_depth = 120;\n\n// Wall thickness\nwall = 2;\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, kettle_height/2])\n            scale([1, 1.2, 1])\n                cylinder(h=kettle_height, d1=kettle_width, d2=kettle_width*0.8, $fn=100);\n        \n        // Inner cavity\n        translate([0, 0, wall])\n            scale([1, 1.2, 1])\n                cylinder(h=kettle_height-wall*2, d1=kettle_width-wall*2, d2=kettle_width*0.8-wall*2, $fn=100);\n    }\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, kettle_height-2])\n        difference() {\n            // Lid top\n            cylinder(h=8, d=kettle_width*0.8+4, $fn=100);\n            \n            // Handle recess\n            translate([0, -kettle_width*0.3, 4])\n                cube([kettle_width*0.4, 20, 8], center=true);\n        }\n}\n\n// Lid handle\nmodule lid_handle() {\n    translate([0, -kettle_width*0.3, kettle_height+8])\n        difference() {\n            // Handle base\n            cube([kettle_width*0.4, 20, 6], center=true);\n            \n            // Finger grip\n            translate([0, 0, 3])\n                cube([kettle_width*0.3, 16, 4], center=true);\n        }\n}\n\n// Spout\nmodule spout() {\n    translate([0, kettle_width*0.6, kettle_height*0.7])\n        rotate([0, 45, 0])\n            difference() {\n                // Outer spout\n                cylinder(h=40, d1=20, d2=12, $fn=50);\n                \n                // Inner spout\n                translate([0, 0, wall])\n                    cylinder(h=40-wall, d1=20-wall*2, d2=12-wall*2, $fn=50);\n            }\n}\n\n// Handle\nmodule handle() {\n    translate([-kettle_width/2-10, 0, kettle_height/2])\n        difference() {\n            union() {\n                // Main handle grip\n                rotate([0, 90, 0])\n                    cylinder(h=60, d=12, $fn=30);\n                \n                // Top connection\n                translate([0, 0, 30])\n                    cube([12, 15, 12], center=true);\n                \n                // Bottom connection\n                translate([0, 0, -30])\n                    cube([12, 15, 12], center=true);\n            }\n            \n            // Inner grip hollow\n            rotate([0, 90, 0])\n                translate([0, 0, 0])\n                    cylinder(h=62, d=8, $fn=30);\n        }\n}\n\n// Base\nmodule base() {\n    translate([0, 0, 0])\n        difference() {\n            // Base plate\n            cylinder(h=8, d=kettle_width+10, $fn=100);\n            \n            // Center recess\n            translate([0, 0, 2])\n                cylinder(h=6, d=kettle_width-10, $fn=100);\n        }\n}\n\n// Power button\nmodule power_button() {\n    translate([kettle_width/2+5, -kettle_width*0.3, kettle_height*0.6])\n        union() {\n            // Button housing\n            cube([8, 12, 6], center=true);\n            \n            // Button\n            translate([2, 0, 3])\n                color(\"red\")\n                    cube([2, 8, 3], center=true);\n        }\n}\n\n// Water level indicator\nmodule water_indicator() {\n    for(i=[-1, 1]) {\n        translate([kettle_width/2*0.7, i*kettle_width*0.3, kettle_height*0.3])\n            cube([wall, 2, 30]);\n    }\n}\n\n// Assembly\nbase();\nkettle_body();\nspout();\nhandle();\nlid();\nlid_handle();\npower_button();\nwater_indicator();",
    "renders": true
  },
  {
    "kitchen_appliance": "waffle_maker",
    "openscad_code": "// Waffle Maker - Realistic Style, Medium Complexity\n// Dimensions: 100mm x 180mm x 80mm (closed)\n\n// Main parameters\nbase_width = 100;\nbase_depth = 180;\nbase_height = 40;\nwall_thickness = 2;\nhandle_length = 40;\nhandle_radius = 5;\n\n// Main body base\nmodule waffle_base() {\n    difference() {\n        // Outer shell\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height/2 + wall_thickness])\n            cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, base_height], center=true);\n    }\n}\n\n// Top lid\nmodule waffle_lid() {\n    difference() {\n        // Outer shell\n        translate([0, 0, base_height + base_height/2 - 2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height + base_height/2 + wall_thickness - 2])\n            cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, base_height], center=true);\n    }\n}\n\n// Hinge mechanism\nmodule hinge() {\n    for(side = [-1, 1]) {\n        translate([side * (base_width/2 - 5), -base_depth/2, base_height])\n            cylinder(h=10, r=3, center=true);\n    }\n}\n\n// Handle assembly\nmodule handle() {\n    // Handle base\n    translate([0, base_depth/2 + 5, base_height*2 - 5])\n        rotate([90, 0, 0])\n            cylinder(h=handle_length, r=handle_radius, center=true);\n    \n    // Handle grips\n    for(i = [0:2]) {\n        translate([0, base_depth/2 + 15 + i*10, base_height*2 - 5])\n            rotate([90, 0, 0])\n                cylinder(h=5, r=handle_radius+2, center=true);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel base\n    translate([base_width/2 - 15, 0, base_height/2])\n        cube([20, 40, 5], center=true);\n    \n    // Power button\n    translate([base_width/2 - 10, -10, base_height/2 + 3])\n        cylinder(h=3, r=5);\n    \n    // Temperature dial\n    translate([base_width/2 - 10, 10, base_height/2 + 3])\n        cylinder(h=5, r=7);\n    \n    // Indicator light\n    translate([base_width/2 - 10, 0, base_height/2 + 3])\n        sphere(r=2);\n}\n\n// Feet for stability\nmodule feet() {\n    for(x = [-base_width/2 + 10, base_width/2 - 10]) {\n        for(y = [-base_depth/2 + 20, base_depth/2 - 20]) {\n            translate([x, y, 0])\n                cylinder(h=5, r=3);\n        }\n    }\n}\n\n// Waffle grid pattern on cooking surface\nmodule waffle_grid() {\n    grid_size = 3;\n    spacing = 8;\n    \n    for(i = [-2:2]) {\n        for(j = [-3:3]) {\n            translate([i*spacing, j*spacing, base_height - 1])\n                cube([grid_size, grid_size, 2], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main body\n    waffle_base();\n    waffle_lid();\n    \n    // Structural elements\n    hinge();\n    handle();\n    feet();\n    \n    // Controls\n    control_panel();\n    \n    // Cooking surfaces\n    waffle_grid();\n    translate([0, 0, base_height*2 - 3])\n        waffle_grid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "panini_press",
    "openscad_code": "// Panini Press - Realistic Medium Complexity\n// Dimensions in mm, 3D-printable, wall thickness 2 mm\n\n// Overall dimensions\nbody_w = 120;\nbody_d = 95;\nbody_h = 45;\n\n// Hinge and lid\nhinge_r = 4;\nhinge_len = 85;\nlid_h = 20;\nlid_clear = 2; // clearance inside\n\n// Handle\nhandle_w = 60;\nhandle_d = 10;\nhandle_h = 12;\n\n// Plates\nplate_w = 90;\nplate_d = 75;\nplate_h = 8;\nrib_h = 1.5;\nrib_pitch = 6;\n\n// Controls\ndial_r = 8;\ndial_h = 6;\nled_r = 3;\n\n// Feet\nfoot_r = 4;\nfoot_h = 3;\n\n// Module for ribs on plates\nmodule ribs(dir = 1) {\n    for (i = [-plate_w/2+rib_pitch/2:rib_pitch:plate_w/2-rib_pitch/2]) {\n        translate([i, 0, (dir*plate_h/2)+(dir*rib_h/2)])\n            cube([2, plate_d, rib_h+0.01], center = true);\n    }\n}\n\n// Lower body\nmodule lower_body() {\n    difference() {\n        union() {\n            // Main shell\n            translate([0, 0, body_h/2])\n                cube([body_w, body_d, body_h], center = true);\n            // Front slope\n            translate([0, body_d/2-10, body_h-10])\n                cube([body_w, 20, 20], center = true);\n            // Feet\n            for (x = [-body_w/2+15, body_w/2-15])\n                for (y = [-body_d/2+15, body_d/2-15])\n                    translate([x, y, -foot_h/2])\n                        cylinder(r = foot_r, h = foot_h, $fn = 16);\n        }\n        // Inner cavity\n        translate([0, 0, body_h/2+2])\n            cube([body_w-4, body_d-4, body_h-2], center = true);\n        // Plate cavity\n        translate([0, 0, body_h-plate_h/2])\n            cube([plate_w+4, plate_d+4, plate_h+2], center = true);\n    }\n}\n\n// Heating plate\nmodule plate() {\n    difference() {\n        cube([plate_w, plate_d, plate_h], center = true);\n        // Hollow\n        translate([0, 0, 0])\n            cube([plate_w-4, plate_d-4, plate_h-2], center = true);\n    }\n    ribs();\n}\n\n// Lid assembly\nmodule lid() {\n    difference() {\n        union() {\n            // Outer shell\n            translate([0, 0, lid_h/2])\n                cube([body_w, body_d, lid_h], center = true);\n            // Handle\n            translate([0, -body_d/2-handle_d/2+5, lid_h-handle_h/2-5])\n                cube([handle_w, handle_d, handle_h], center = true);\n        }\n        // Inner clearance\n        translate([0, 0, lid_h/2])\n            cube([body_w-4, body_d-4, lid_h], center = true);\n        // Plate cavity\n        translate([0, 0, lid_clear+plate_h/2])\n            cube([plate_w+4, plate_d+4, plate_h+2], center = true);\n    }\n    // Upper plate\n    translate([0, 0, lid_clear+plate_h/2])\n        plate();\n}\n\n// Controls\nmodule controls() {\n    // Dial\n    translate([body_w/2-dial_r-10, body_d/2-dial_r-10, body_h+dial_h/2])\n        cylinder(r = dial_r, h = dial_h, $fn = 32);\n    // Indicator LED\n    translate([body_w/2-led_r-10, body_d/2-led_r-30, body_h+led_r/2+0.5])\n        sphere(r = led_r);\n}\n\n// Hinge\nmodule hinge() {\n    rotate([90, 0, 0])\n        translate([0, body_d/2, body_h/2])\n            cylinder(r = hinge_r, h = hinge_len, center = true, $fn = 32);\n}\n\n// Assembly\nlower_body();\ntranslate([0, 0, body_h-plate_h/2])\n    plate();\n\ncontrols();\n\nhinge();\ntranslate([0, 0, body_h])\n    rotate([110, 0, 0])\n        lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "sandwich_maker",
    "openscad_code": "// Sandwich maker kitchen appliance - realistic style, medium complexity\n// Overall dimensions: ~120mm x 80mm x 45mm\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([-30, -40, 0])\n            cube([60, 80, 25], center=false);\n        \n        // Cavity for heating plates\n        translate([-28, -38, 2])\n            cube([56, 76, 21], center=false);\n    }\n}\n\n// Bottom heating plate\nmodule bottom_plate() {\n    translate([-26, -36, 2])\n        cube([52, 72, 3]);\n}\n\n// Top heating plate (with sandwich pattern)\nmodule top_plate() {\n    difference() {\n        translate([-26, -36, 20])\n            cube([52, 72, 3]);\n        \n        // Triangle pattern for sandwich halves\n        for (y = [-30:15:30]) {\n            translate([0, y, 20.5])\n                cube([50, 10, 2]);\n        }\n    }\n}\n\n// Handle\nmodule handle() {\n    // Handle base\n    translate([31, -15, 22])\n        cube([8, 30, 8]);\n    \n    // Handle grip\n    translate([39, -10, 24])\n        rotate([0, 90, 0])\n            cylinder(h=20, r=5, center=true);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([-25, -45, 25])\n        cube([50, 8, 12]);\n    \n    // Indicator light\n    translate([-15, -43, 28])\n        cylinder(h=2, r=3);\n    \n    // Power button\n    translate([0, -43, 26.5])\n        cylinder(h=4, r=4);\n    \n    // Temperature dial\n    translate([15, -43, 26])\n        cylinder(h=5, r=6);\n    \n    // Dial knob\n    translate([15, -43, 31])\n        cylinder(h=3, r=3);\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-30, 0, 12])\n        rotate([90, 0, 0])\n            cylinder(h=15, r=2);\n    \n    translate([-30, 0, 12])\n        sphere(r=2.5);\n}\n\n// Hinge mechanism\nmodule hinges() {\n    // Left hinge\n    translate([-28, -35, 25])\n        cylinder(h=10, r=3);\n    \n    // Right hinge\n    translate([-28, 35, 25])\n        cylinder(h=10, r=3);\n    \n    // Hinge pins\n    translate([-28, -35, 30])\n        cylinder(h=2, r=2);\n    \n    translate([-28, 35, 30])\n        cylinder(h=2, r=2);\n}\n\n// Feet\nmodule feet() {\n    // Four rubber feet\n    translate([-25, -30, 0])\n        cylinder(h=2, r=3);\n    translate([25, -30, 0])\n        cylinder(h=2, r=3);\n    translate([-25, 30, 0])\n        cylinder(h=2, r=3);\n    translate([25, 30, 0])\n        cylinder(h=2, r=3);\n}\n\n// Assembly\nunion() {\n    body();\n    bottom_plate();\n    top_plate();\n    handle();\n    control_panel();\n    power_cord();\n    hinges();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "ice_cream_maker",
    "openscad_code": "// Ice Cream Maker - Medium complexity realistic style\n// Overall size: ~120mm tall, ~80mm wide, ~100mm deep\n\n$fn = 50;\n\n// Main body dimensions\nbody_width = 80;\nbody_depth = 100;\nbody_height = 60;\n\n// Ice cream bowl dimensions\nbowl_diameter = 60;\nbowl_height = 40;\nwall_thickness = 2;\n\nmodule ice_cream_maker() {\n    union() {\n        // Main body base\n        difference() {\n            // Outer shell\n            translate([0, 0, body_height/2])\n                cube([body_width, body_depth, body_height], center=true);\n            \n            // Hollow inside\n            translate([0, 0, body_height/2])\n                cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness], center=true);\n        }\n        \n        // Top rim\n        translate([0, 0, body_height])\n            cube([body_width+4, body_depth+4, 4], center=true);\n        \n        // Ice cream bowl\n        difference() {\n            // Outer bowl\n            translate([0, 0, bowl_height/2 + body_height + 4])\n                cylinder(h=bowl_height, d=bowl_diameter);\n            \n            // Inner bowl (hollow)\n            translate([0, 0, bowl_height/2 + body_height + 4])\n                cylinder(h=bowl_height-wall_thickness, d=bowl_diameter-wall_thickness*2);\n            \n            // Flat bottom of bowl\n            translate([0, 0, body_height + 4])\n                cylinder(h=wall_thickness, d=bowl_diameter-wall_thickness*2);\n        }\n        \n        // Motor housing dome\n        translate([0, 0, body_height/2])\n            sphere(d=body_width-10);\n        \n        // Control panel\n        translate([body_width/2-2, 0, body_height-15])\n            cube([4, 30, 15], center=true);\n        \n        // Power button\n        translate([body_width/2+2, -10, body_height-10])\n            cylinder(h=4, d=8);\n        \n        // Speed dial\n        translate([body_width/2+2, 10, body_height-10])\n            cylinder(h=6, d=12);\n        \n        // Front display panel\n        translate([0, body_depth/2-1, body_height-10])\n            cube([40, 2, 10], center=true);\n        \n        // Feet\n        for(x = [-body_width/2+10, body_width/2-10])\n            for(y = [-body_depth/2+10, body_depth/2-10])\n                translate([x, y, 0])\n                    cylinder(h=5, d=8);\n        \n        // Handle on top\n        translate([0, body_depth/2+5, body_height+20])\n            difference() {\n                // Handle grip\n                cube([50, 10, 8], center=true);\n                \n                // Grip hole\n                translate([0, 0, -1])\n                    cube([40, 6, 10], center=true);\n            }\n        \n        // Ventilation slots on sides\n        for(i = [-3:3]) {\n            translate([body_width/2, i*10, body_height/2])\n                rotate([0, 90, 0])\n                    cube([2, 20, 5]);\n            translate([-body_width/2, i*10, body_height/2])\n                rotate([0, 90, 0])\n                    cube([2, 20, 5]);\n        }\n        \n        // Power cord exit\n        translate([-body_width/2-5, -body_depth/2+10, 15])\n            rotate([0, 90, 0])\n                cylinder(h=15, d=6);\n    }\n}\n\n// Render the ice cream maker\nice_cream_maker();",
    "renders": true
  },
  {
    "kitchen_appliance": "popcorn_maker",
    "openscad_code": "// Popcorn Maker - Realistic Style, Medium Complexity\n// Dimensions: 120mm (W) x 90mm (D) x 160mm (H)\n\n// Base unit\nmodule base() {\n    difference() {\n        // Main body\n        cube([110, 80, 70], center=true);\n        \n        // Bottom cavity for electronics\n        translate([0, 0, -30])\n            cube([100, 70, 30], center=true);\n            \n        // Ventilation slots\n        for (i = [-40:20:40]) {\n            translate([i, 40, 0])\n                cube([8, 2, 50], center=true);\n            translate([i, -40, 0])\n                cube([8, 2, 50], center=true);\n        }\n    }\n}\n\n// Heating chamber\nmodule chamber() {\n    difference() {\n        // Main cylinder\n        cylinder(h=80, r1=45, r2=50, center=true);\n        \n        // Inner cavity\n        cylinder(h=82, r1=40, r2=45, center=true);\n        \n        // Top rim\n        translate([0, 0, 45])\n            cylinder(h=5, r1=50, r2=52, center=true);\n    }\n}\n\n// Control panel\nmodule controls() {\n    translate([0, 40, 35]) {\n        // Panel base\n        cube([50, 8, 20], center=true);\n        \n        // On/off button\n        translate([-15, 5, 0])\n            cylinder(h=2, r=6, center=true);\n            \n        // Indicator light\n        translate([15, 5, 0])\n            cylinder(h=2, r=3, center=true);\n            \n        // Temperature dial\n        translate([0, 5, 10])\n            rotate([90, 0, 0])\n                cylinder(h=5, r=8, center=true);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 85])\n            cylinder(h=10, r1=55, r2=50, center=true);\n            \n        // Handle cavity\n        translate([0, 0, 90])\n            cube([10, 5, 20], center=true);\n    }\n    \n    // Handle\n    translate([0, 30, 100])\n        rotate([90, 0, 0])\n            cylinder(h=30, r1=5, r2=3, center=true);\n}\n\n// Feet\nmodule feet() {\n    for (x = [-40:80:80])\n        for (y = [-30:60:60])\n            translate([x, y, -37])\n                cylinder(h=4, r=5, center=true);\n}\n\n// Power cord\nmodule cord() {\n    translate([-55, 0, -35])\n        rotate([90, 0, 0])\n            cylinder(h=40, r=3, center=true);\n}\n\n// Assembly\nunion() {\n    // Main components\n    base();\n    translate([0, 0, 35])\n        chamber();\n    lid();\n    \n    // Details\n    controls();\n    feet();\n    cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "air_fryer",
    "openscad_code": "// Air Fryer Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions approx 100x80x110 mm\n\n$fn = 32;\n\nmodule rounded_cube(size, r) {\n    hull() {\n        for(dx = [0, 1], dy = [0, 1], dz = [0, 1])\n            translate([dx*(size[0]-2*r), dy*(size[1]-2*r), dz*(size[2]-2*r)])\n                sphere(r);\n    }\n}\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        rounded_cube([70, 60, 90], 5);\n        // Inner cavity\n        translate([2, 2, 10])\n            rounded_cube([66, 56, 78], 3);\n    }\n}\n\nmodule control_panel() {\n    // Panel base\n    translate([0, 65, 60])\n        cube([70, 8, 25], center = true);\n    \n    // Display screen\n    translate([0, 70, 70])\n        color(\"white\")\n            cube([40, 1, 15], center = true);\n    \n    // Buttons\n    for(i = [-1, 0, 1]) {\n        translate([i * 12, 70, 55])\n            cylinder(h = 2, r = 4);\n    }\n    \n    // Knob\n    translate([25, 70, 65])\n        rotate([90, 0, 0])\n            cylinder(h = 8, r1 = 6, r2 = 4);\n}\n\nmodule handle() {\n    difference() {\n        translate([0, -35, 40])\n            cube([50, 8, 20], center = true);\n        translate([0, -39, 40])\n            cube([40, 10, 15], center = true);\n    }\n}\n\nmodule air_inlet() {\n    // Top vents\n    for(i = [-3:3]) {\n        translate([i * 10, 0, 90])\n            cube([6, 60, 2]);\n    }\n}\n\nmodule feet() {\n    for(x = [-25, 25], y = [-20, 20]) {\n        translate([x, y, -5])\n            cylinder(h = 5, r = 3);\n    }\n}\n\nmodule basket() {\n    difference() {\n        translate([0, 0, 30])\n            rounded_cube([60, 50, 50], 3);\n        // Inner basket\n        translate([0, 0, 35])\n            rounded_cube([54, 44, 45], 2);\n        // Holes pattern\n        for(i = [-4:4], j = [-3:3]) {\n            translate([i * 6, j * 6, 30])\n                cylinder(h = 50, r = 1.5, center = true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    control_panel();\n    handle();\n    air_inlet();\n    feet();\n    \n    // Basket partially pulled out\n    translate([0, 0, 0])\n        basket();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "deep_fryer",
    "openscad_code": "// Deep Fryer - Medium Complexity, Realistic Style\n// Dimensions: ~110 mm wide x ~90 mm deep x ~95 mm tall\n// Wall thickness: 2 mm\n\n$fn = 64;\n\nmodule fryer_body() {\n    difference() {\n        // Main body shell\n        cube([110, 90, 95], center = true);\n        \n        // Hollow cavity\n        translate([0, 0, 2])\n        cube([106, 86, 91], center = true);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, 50, 20])\n    difference() {\n        cube([60, 8, 30], center = true);\n        // Indicator light hole\n        translate([-20, 5, 10])\n        cylinder(h = 3, r = 3);\n        translate([0, 5, 10])\n        cylinder(h = 3, r = 3);\n        translate([20, 5, 10])\n        cylinder(h = 3, r = 3);\n    }\n    \n    // Control knob\n    translate([30, 55, 20])\n    rotate([90, 0, 0])\n    cylinder(h = 5, r1 = 6, r2 = 4);\n}\n\nmodule oil_tank() {\n    // Inner oil tank\n    translate([0, 0, -25])\n    difference() {\n        cube([100, 80, 35], center = true);\n        // Hollow for oil\n        translate([0, 0, 2])\n        cube([96, 76, 31], center = true);\n    }\n}\n\nmodule basket() {\n    // Basket handle\n    translate([0, 0, 35])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h = 30, r = 2);\n        // Handle grip\n        translate([0, 0, -2])\n        cylinder(h = 34, r = 1.5);\n    }\n    \n    // Basket body\n    translate([0, 0, 15])\n    difference() {\n        cube([80, 60, 30], center = true);\n        // Hollow\n        translate([0, 0, 2])\n        cube([76, 56, 26], center = true);\n    }\n    \n    // Basket perforations\n    for (i = [-3:1:3]) {\n        for (j = [-2:1:2]) {\n            translate([i * 10, j * 10, 15])\n            cylinder(h = 30, r = 1.5);\n        }\n    }\n}\n\nmodule lid() {\n    // Lid with handle\n    translate([0, -55, 45])\n    rotate([100, 0, 0])\n    difference() {\n        cube([100, 80, 5], center = true);\n        // Inner cavity\n        translate([0, 0, 2])\n        cube([96, 76, 5], center = true);\n    }\n    \n    // Lid handle\n    translate([0, -55, 70])\n    rotate([100, 0, 0])\n    cylinder(h = 20, r = 4);\n}\n\nmodule feet() {\n    // Four support feet\n    for (x = [-45, 45]) {\n        for (y = [-35, 35]) {\n            translate([x, y, -50])\n            cylinder(h = 5, r = 5);\n        }\n    }\n}\n\nmodule power_cord() {\n    // Power cord exit\n    translate([50, 0, -35])\n    rotate([0, 90, 0])\n    cylinder(h = 15, r = 3);\n}\n\n// Assembly\nunion() {\n    fryer_body();\n    control_panel();\n    oil_tank();\n    basket();\n    lid();\n    feet();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "oven",
    "openscad_code": "// Realistic Medium-Complexity 3D-Printable Kitchen Oven\n// All dimensions in mm, wall thickness 2 mm\n\n$fn = 32;\n\n// Overall outer size\nwidth  = 80;\nheight = 60;\ndepth  = 70;\n\n// Wall thickness\nwall = 2;\n\n// Door parameters\ndoor_h = 42;\ndoor_w = 60;\ndoor_d = 4;\n\n// Knob parameters\nknob_r = 3;\nknob_h = 4;\n\n// Window parameters\nwin_margin = 4;\nwin_thick = 1;\n\n// Handle parameters\nhandle_r = 2;\nhandle_l = 40;\n\n// Feet\nfeet_h = 6;\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([width, depth, height], center=false);\n        // Hollow inside\n        translate([wall, wall, wall])\n            cube([width-2*wall, depth-wall, height-2*wall], center=false);\n    }\n}\n\nmodule door() {\n    translate([0, depth-door_d, (height-door_h)/2])\n        rotate([0, 0, 0]) // Could animate for opening\n        union() {\n            // Door panel\n            cube([door_w, door_d, door_h], center=false);\n            \n            // Window cutout\n            translate([win_margin, -0.5, win_margin])\n                cube([door_w-2*win_margin, door_d+1, door_h-2*win_margin], center=false);\n            \n            // Window glass insert (thinner)\n            translate([win_margin, -0.5, win_margin])\n                cube([door_w-2*win_margin, win_thick, door_h-2*win_margin], center=false);\n            \n            // Handle\n            translate([(door_w-handle_l)/2, door_d, door_h/2])\n                rotate([90,0,0])\n                    cylinder(h=handle_l, r=handle_r, center=true);\n        }\n}\n\nmodule knobs_row() {\n    // Three control knobs\n    for(i=[0:2]) {\n        translate([width-15, depth-5, height-25-i*8])\n            cylinder(h=knob_h, r=knob_r);\n    }\n}\n\nmodule vent_slits() {\n    // Rear top ventilation slits\n    for(i=[0:4]) {\n        translate([10+i*15, depth-wall, height-wall-1])\n            cube([5, wall, 2]);\n    }\n}\n\nmodule feet() {\n    // Four feet\n    positions = [[8,8], [width-8,8], [8,depth-8], [width-8,depth-8]];\n    for(p = positions) {\n        translate([p[0], p[1], 0])\n            cylinder(h=feet_h, r=3);\n    }\n}\n\n// Assemble the oven\nunion() {\n    main_body();\n    door();\n    knobs_row();\n    vent_slits();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "stove",
    "openscad_code": "// Realistic Stove Kitchen Appliance\n// Medium complexity OpenSCAD model\n\n$fn = 50;\n\n// Overall dimensions\nstove_width = 80;\nstove_depth = 60;\nstove_height = 40;\n\n// Wall thickness\nwall = 2;\n\n// Main stove body\nmodule stove_body() {\n    difference() {\n        // Main box\n        cube([stove_width, stove_depth, stove_height]);\n        \n        // Hollow interior\n        translate([wall, wall, wall])\n            cube([stove_width-wall*2, stove_depth-wall*2, stove_height-wall]);\n    }\n}\n\n// Cooktop surface\nmodule cooktop() {\n    color([0.1, 0.1, 0.1])\n    translate([0, 0, stove_height])\n        cube([stove_width, stove_depth, wall]);\n}\n\n// Burner grates\nmodule burner_grate(x, y) {\n    color([0.3, 0.3, 0.3])\n    translate([x, y, stove_height + wall])\n        for(i = [-15:5:15]) {\n            translate([i, -15, 0])\n                cube([1, 30, 1]);\n            translate([-15, i, 0])\n                cube([30, 1, 1]);\n        }\n}\n\n// Burner caps\nmodule burner_cap(x, y) {\n    color([0.2, 0.2, 0.2])\n    translate([x, y, stove_height + wall + 0.5])\n        cylinder(h=2, r=8);\n    \n    // Inner ring\n    color([0.1, 0.1, 0.1])\n    translate([x, y, stove_height + wall + 1.5])\n        cylinder(h=1, r=5);\n}\n\n// Control panel\nmodule control_panel() {\n    color([0.2, 0.2, 0.2])\n    translate([stove_width-wall*3, -wall, stove_height*0.7])\n        cube([wall*3, stove_depth+wall*2, stove_height*0.3]);\n    \n    // Control knobs\n    for(i = [0:3]) {\n        color([0.1, 0.1, 0.1])\n        translate([stove_width-wall*1.5, 10 + i*15, stove_height*0.7 + 5])\n            rotate([90, 0, 0])\n                cylinder(h=3, r=4);\n        \n        color([0.4, 0.4, 0.4])\n        translate([stove_width-wall*1.5, 10 + i*15, stove_height*0.7 + 8])\n            sphere(r=3);\n    }\n}\n\n// Door handle\nmodule door_handle() {\n    color([0.3, 0.3, 0.3])\n    translate([stove_width/2 - 20, stove_depth, 15])\n        rotate([90, 0, 0])\n            cylinder(h=40, r=2);\n}\n\n// Oven door\nmodule oven_door() {\n    color([0.15, 0.15, 0.15])\n    translate([wall, stove_depth-wall, 5])\n        cube([stove_width-wall*2, wall, stove_height*0.6]);\n    \n    // Window\n    color([0.5, 0.5, 0.5, 0.7])\n    translate([wall*3, stove_depth-wall+0.1, 7])\n        cube([stove_width-wall*6, wall, stove_height*0.6-4]);\n    \n    door_handle();\n}\n\n// Legs\nmodule legs() {\n    for(x = [10, stove_width-10])\n        for(y = [10, stove_depth-10]) {\n            color([0.2, 0.2, 0.2])\n            translate([x, y, -5])\n                cylinder(h=5, r=3);\n        }\n}\n\n// Assemble stove\nstove_body();\ncooktop();\n\n// Four burners\nburner_cap(20, 15);\nburner_cap(60, 15);\nburner_cap(20, 45);\nburner_cap(60, 45);\n\nburner_grate(20, 15);\nburner_grate(60, 15);\nburner_grate(20, 45);\nburner_grate(60, 45);\n\ncontrol_panel();\noven_door();\nlegs();",
    "renders": true
  },
  {
    "kitchen_appliance": "burner",
    "openscad_code": "// Realistic medium-complexity kitchen burner appliance\n// Overall footprint ~120 x 120 x 70 mm\n\n// --- PARAMETERS --------------------------------\nwall = 2;                // printable wall thickness [mm]\ndia = 110;               // burner top diameter [mm]\nh_base = 20;             // base height [mm]\nh_body = 30;             // burner body height [mm]\nh_bracket = 8;           // pot-support bracket height [mm]\nn_brackets = 4;          // number of pot supports\nbracket_len = 35;        // pot support length [mm]\nbracket_w = 10;          // pot support width [mm]\nknob_d = 20;             // control knob diameter [mm]\nknob_h = 15;             // control knob height [mm]\nigniter_d = 8;           // igniter pin diameter [mm]\nigniter_h = 10;          // igniter pin height [mm]\n\n// --- BASE --------------------------------------\nmodule base() {\n    difference() {\n        // main cylindrical base\n        cylinder(h=h_base, d=dia+6, $fn=64);\n        // lightening cavity\n        translate([0,0,wall])\n            cylinder(h=h_base-wall+1, d=dia+6-wall*2, $fn=64);\n    }\n}\n\n// --- BODY / RING -------------------------------\nmodule body() {\n    translate([0,0,h_base]) {\n        difference() {\n            // outer cylinder\n            cylinder(h=h_body, d=dia, $fn=64);\n            // inner cavity\n            translate([0,0,wall])\n                cylinder(h=h_body+1, d=dia-wall*2, $fn=64);\n        }\n    }\n}\n\n// --- POT-SUPPORT BRACKETS ----------------------\nmodule bracket() {\n    difference() {\n        // main bracket\n        cube([bracket_len, bracket_w, h_bracket], center=true);\n        // chamfer underside for printability\n        translate([0,0,-h_bracket/2])\n            cube([bracket_len-wall, bracket_w+1, wall], center=true);\n    }\n}\n\nmodule brackets() {\n    for(i=[0:n_brackets-1])\n        rotate([0,0,i*360/n_brackets])\n            translate([dia/2-bracket_len/2-1, 0, h_base+h_body])\n                bracket();\n}\n\n// --- BURNER TOP DISK ---------------------------\nmodule burner_disk() {\n    translate([0,0,h_base+h_body]) {\n        difference() {\n            cylinder(h=2, d=dia-4, $fn=64);\n            // central hole for gas nozzle\n            cylinder(h=3, d=6, $fn=32);\n        }\n    }\n}\n\n// --- CONTROL KNOB ------------------------------\nmodule knob() {\n    translate([dia/2+knob_d/2+5, 0, h_base/2]) {\n        difference() {\n            // outer knob\n            rotate([90,0,0])\n                cylinder(h=knob_h, d=knob_d, $fn=32);\n            // indicator line\n            translate([0,0,knob_h/2])\n                cube([1, 0.5, knob_d-4], center=true);\n        }\n    }\n}\n\n// --- IGNITER PIN -------------------------------\nmodule igniter() {\n    translate([dia/2-15, dia/2-15, h_base+h_body+2]) {\n        cylinder(h=igniter_h, d=igniter_d, $fn=16);\n    }\n}\n\n// --- ASSEMBLY ----------------------------------\nunion() {\n    base();\n    body();\n    brackets();\n    burner_disk();\n    knob();\n    igniter();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_skillet",
    "openscad_code": "// Electric Skillet - Medium Complexity\n// Approx 120mm x 80mm x 60mm\n\n$fn = 32;\n\n// Main body\nmodule skillet_base() {\n    difference() {\n        // Main base\n        translate([0, 0, 10])\n            cube([120, 80, 20], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 12])\n            cube([116, 76, 18], center=true);\n    }\n}\n\n// Cooking surface\nmodule cooking_pan() {\n    difference() {\n        // Pan\n        translate([0, 0, 30])\n            cube([100, 70, 15], center=true);\n        \n        // Cooking surface depression\n        translate([0, 0, 30])\n            cube([96, 66, 8], center=true);\n    }\n}\n\n// Handles\nmodule handle(x_pos) {\n    translate([x_pos, 0, 22])\n        rotate([0, 90, 0])\n            cylinder(h=15, d1=8, d2=6);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([-60, 0, 20])\n        cube([15, 30, 10], center=true);\n    \n    // Temperature dial\n    translate([-60, 10, 26])\n        cylinder(h=3, r=5);\n    \n    // Power indicator\n    translate([-60, -10, 26])\n        cylinder(h=2, r=3);\n}\n\n// Feet\nmodule feet() {\n    for(x = [-50, 50]) {\n        for(y = [-30, 30]) {\n            translate([x, y, 0])\n                cylinder(h=5, r=3);\n        }\n    }\n}\n\n// Lid handle\nmodule lid_handle() {\n    translate([0, 0, 55])\n        cylinder(h=15, r=5);\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 47.5])\n            cube([104, 74, 5], center=true);\n        \n        // Inner lip\n        translate([0, 0, 45])\n            cube([98, 68, 10], center=true);\n    }\n    \n    // Handle\n    lid_handle();\n}\n\n// Assembly\nunion() {\n    // Base structure\n    skillet_base();\n    \n    // Cooking pan\n    cooking_pan();\n    \n    // Handles\n    handle(60);\n    handle(-60);\n    \n    // Control panel\n    control_panel();\n    \n    // Feet\n    feet();\n    \n    // Lid (positioned slightly offset for visibility)\n    translate([0, 0, 5])\n        lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "wok",
    "openscad_code": "// Realistic 3D-printable wok kitchen appliance\n// Outer diameter â‰ˆ 110 mm, total height â‰ˆ 60 mm, wall thickness 2 mm\n\n// Parameters\nwall = 2;           // wall thickness for 3D printing\nbase_r = 55;        // outer radius of wok body\nbase_h = 30;        // height of wok bowl\nhandle_len = 45;    // handle length\nhandle_d = 12;      // handle diameter\nknob_r = 6;         // lid knob radius\nknob_h = 8;         // lid knob height\n\n// Helper module for rounded edges\nmodule rounded_cylinder(h, r1, r2, fn=32){\n    cylinder(h=h, r1=r1, r2=r2, $fn=fn);\n}\n\n// Wok body â€“ bowl with tapered walls and thick rim\nmodule wok_body(){\n    difference(){\n        union(){\n            // outer bowl\n            rounded_cylinder(base_h, base_r, base_r*0.35);\n            // rim lip\n            translate([0, 0, base_h])\n                cylinder(h=wall*1.5, r1=base_r+wall, r2=base_r+wall, $fn=64);\n        }\n        // hollow inside\n        translate([0, 0, -0.1])\n            rounded_cylinder(base_h+0.2, base_r-wall, base_r*0.35-wall);\n    }\n}\n\n// Handle\nmodule handle(){\n    translate([base_r-wall*0.5, 0, base_h*0.6])\n        rotate([0, 90, 0])\n            difference(){\n                // main grip\n                cylinder(h=handle_len, r=handle_d/2, $fn=32);\n                // finger groove hole\n                for(i=[-1,1])\n                    translate([i*handle_len/4, 0, 0])\n                        rotate([0, 90, 0])\n                            cylinder(h=handle_d*0.8, r=handle_d*0.3, $fn=24);\n            }\n}\n\n// Lid with steam vent and knob\nmodule lid(){\n    difference(){\n        union(){\n            // lid dome\n            translate([0, 0, base_h+wall*1.5])\n                scale([1, 1, 0.5])\n                    sphere(r=base_r, $fn=64);\n            // knob\n            translate([0, 0, base_h+wall*1.5+base_r*0.45])\n                cylinder(h=knob_h, r=knob_r, $fn=32);\n        }\n        // inner hollow\n        translate([0, 0, base_h+wall*1.5+base_r*0.45])\n            scale([1, 1, 0.5])\n                sphere(r=base_r-wall, $fn=64);\n        // steam vent\n        translate([base_r*0.6, 0, base_h+wall*1.5+base_r*0.45])\n            cylinder(h=base_r, r=knob_r*0.4, $fn=24);\n    }\n}\n\n// Base support ring for stability\nmodule base_ring(){\n    difference(){\n        cylinder(h=wall*2, r1=base_r+wall, r2=base_r+wall*0.8, $fn=64);\n        cylinder(h=wall*2+0.2, r1=base_r-2, r2=base_r-2, $fn=64);\n    }\n}\n\n// Assembly\nunion(){\n    base_ring();\n    wok_body();\n    handle();\n    // Uncomment next line to include lid\n    // lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "waffle_iron",
    "openscad_code": "// Waffle Iron - Realistic Medium Complexity\n// Dimensions: 120x80x40mm closed\n\nwall = 2;\nhinge_r = 4;\nhandle_r = 6;\n\n// Main body split\nmodule body() {\n    difference() {\n        union() {\n            // Lower base\n            translate([0,0,wall])\n                cube([120,80,wall], center=true);\n            \n            // Cooking plates\n            for(i=[-1,1])\n                translate([i*40,0,wall*2])\n                    cube([35,70,wall], center=true);\n            \n            // Front panel\n            translate([0,-40,wall*2])\n                cube([100,wall,10], center=true);\n        }\n        \n        // Grid pattern on plates\n        for(i=[-1,1]) {\n            for(x=[-10:10:10])\n                for(y=[-25:10:25])\n                    translate([i*40+x,y,wall*2+1])\n                        cube([1.5,1.5,wall+1], center=true);\n        }\n    }\n}\n\n// Upper lid\nmodule lid() {\n    difference() {\n        union() {\n            // Top cover\n            translate([0,0,wall])\n                cube([120,80,wall], center=true);\n            \n            // Upper cooking plate\n            translate([0,0,wall*2+8])\n                cube([35,70,wall], center=true);\n            \n            // Handle mount\n            translate([0,40,wall*2])\n                cylinder(h=15, r1=handle_r, r2=handle_r, center=true);\n        }\n        \n        // Grid pattern on upper plate\n        for(x=[-10:10:10])\n            for(y=[-25:10:25])\n                translate([x,y,wall*2+8+1])\n                    cube([1.5,1.5,wall+1], center=true);\n    }\n}\n\n// Hinge assembly\nmodule hinge() {\n    for(i=[-1,1]) {\n        translate([i*50,0,wall*2])\n            rotate([90,0,0])\n                cylinder(h=20, r=hinge_r, center=true);\n    }\n}\n\n// Controls\nmodule controls() {\n    // Temperature dial\n    translate([45,-40,wall*2+5])\n        rotate([90,0,0])\n            cylinder(h=wall, r1=8, r2=10, center=true);\n    \n    // Indicator lights\n    for(i=[-1,1]) {\n        translate([i*25,-40,wall*2+5])\n            sphere(r=3);\n    }\n    \n    // Power switch\n    translate([0,-40,wall*2+8])\n        cube([15,wall,5], center=true);\n}\n\n// Assemble waffle iron (open position)\ntranslate([0,0,20]) {\n    // Lower body\n    body();\n    \n    // Upper lid\n    translate([0,0,wall*2])\n        rotate([60,0,0])\n            lid();\n}\n\n// Hinges\nhinge();\n\n// Controls on front\ncontrols();",
    "renders": true
  },
  {
    "kitchen_appliance": "crepe_maker",
    "openscad_code": "// Crepe maker - realistic style, medium complexity\n// Dimensions roughly 180 x 120 x 70 mm (fits on most printers)\n\n$fn = 60;\n\nmodule base() {\n    // Main body housing\n    difference() {\n        // Outer shell\n        translate([-40, -30, 0])\n            cube([180, 120, 40]);\n        \n        // Hollow interior\n        translate([-38, -28, 2])\n            cube([176, 116, 38]);\n        \n        // Ventilation slots\n        for (i = [0:3]) {\n            translate([10 + i*40, -31, 20])\n                cube([15, 2, 10]);\n            translate([10 + i*40, 119, 20])\n                cube([15, 2, 10]);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front panel with controls\n    translate([-45, -35, 42])\n        cube([190, 10, 30]);\n    \n    // Power button\n    translate([-30, -32, 50])\n        cylinder(h=8, d=12);\n    \n    // Temperature dial\n    translate([0, -32, 50])\n        cylinder(h=8, d=15);\n    \n    // Indicator light\n    translate([30, -32, 55])\n        sphere(d=8);\n    \n    // Timer dial\n    translate([60, -32, 50])\n        cylinder(h=8, d=15);\n}\n\nmodule heating_plate() {\n    // Main cooking surface\n    cylinder(h=8, d=150);\n    \n    // Non-stick surface texture (raised rings)\n    for (r = [20:20:60]) {\n        color(\"gray\")\n        translate([0, 0, 8.1])\n            cylinder(h=0.5, d=r*2);\n    }\n}\n\nmodule handle() {\n    // Side handle for tilting\n    translate([95, 0, 20])\n        rotate([0, 90, 0])\n            difference() {\n                // Handle grip\n                cylinder(h=80, d=20);\n                \n                // Hollow grip\n                translate([0, 0, 2])\n                    cylinder(h=76, d=16);\n            }\n    \n    // Handle supports\n    translate([75, -10, 15])\n        cube([20, 20, 10]);\n    translate([75, -10, 25])\n        cube([20, 20, 10]);\n}\n\nmodule feet() {\n    // Four rubber feet\n    for (x = [-25, 95]) {\n        for (y = [-20, 80]) {\n            translate([x, y, -5])\n                cylinder(h=5, d=12);\n        }\n    }\n}\n\nmodule cord_wrap() {\n    // Rear cord storage posts\n    translate([110, 40, 20])\n        cylinder(h=30, d=8);\n    translate([110, 70, 20])\n        cylinder(h=30, d=8);\n}\n\n// Assembly\nunion() {\n    // Main components\n    base();\n    control_panel();\n    \n    translate([50, 30, 40])\n        heating_plate();\n    \n    handle();\n    feet();\n    cord_wrap();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "pizza_oven",
    "openscad_code": "// Realistic Pizza Oven â€“ 3D printable, medium complexity\n// Overall footprint: 100 x 70 x 90 mm\n// Wall thickness: 2 mm for printability\n\n// Main body\nmodule oven_body() {\n    difference() {\n        // Outer shell\n        cube([100, 70, 90], center = true);\n        // Hollow interior\n        translate([0, 0, 5])\n            cube([96, 66, 86], center = true);\n    }\n}\n\n// Front faÃ§ade with arched opening\nmodule front_face() {\n    difference() {\n        // Front plate\n        translate([-50, 0, 0])\n            cube([2, 70, 90], center = true);\n        // Arch opening for oven door\n        translate([-49, 0, 0])\n            rotate([0, 90, 0])\n            cylinder(h = 70, r = 25, $fn = 50);\n        // Air vent above arch\n        translate([-49, 0, 40])\n            cube([2, 30, 5], center = true);\n    }\n}\n\n// Oven door with handle\nmodule oven_door() {\n    translate([-48, 0, 0])\n        difference() {\n            cube([2, 50, 40], center = true);\n            translate([0, 0, 0])\n                cube([2.5, 46, 36], center = true);\n        }\n    // Door handle\n    translate([-47, 0, -25])\n        rotate([90, 0, 0])\n            cylinder(h = 30, r = 3, $fn = 20);\n}\n\n// Control panel with knobs\nmodule control_panel() {\n    translate([-50, 0, 50])\n        cube([2, 30, 10], center = true);\n    // Three knobs\n    for (i = [-10:10:10])\n        translate([-49, i, 55])\n            rotate([90, 0, 0])\n                cylinder(h = 5, r = 4, $fn = 20);\n}\n\n// Chimney\nmodule chimney() {\n    translate([0, 0, 45])\n        difference() {\n            cylinder(h = 30, r = 8, $fn = 20);\n            cylinder(h = 30, r = 6, $fn = 20);\n        }\n}\n\n// Legs\nmodule legs() {\n    for (x = [-40, 40])\n        for (y = [-25, 25])\n            translate([x, y, -50])\n                cylinder(h = 10, r = 4, $fn = 20);\n}\n\n// Assembly\nunion() {\n    oven_body();\n    front_face();\n    oven_door();\n    control_panel();\n    chimney();\n    legs();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "bread_maker",
    "openscad_code": "// Realistic-style 3D-printable bread maker (medium complexity)\n// Outer dimensions ~100 x 150 x 120 mm\n\n$fn = 40;\n\nmodule roundedCube(size, radius, center = false) {\n    // Helper for rounded-edge cubes\n    translate([0, 0, radius]) {\n        hull() {\n            for(x = [-(size.x/2 - radius), (size.x/2 - radius)])\n                for(y = [-(size.y/2 - radius), (size.y/2 - radius)])\n                    translate([x, y, 0])\n                        cylinder(r = radius, h = size.z - 2*radius, center = center);\n        }\n    }\n}\n\n// Main body shell\nmodule body() {\n    difference() {\n        roundedCube([100, 150, 100], 8); // 2mm wall thickness preserved by hollowing\n        translate([0, 0, 2])\n            roundedCube([96, 146, 98], 6);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        translate([0, -5, 100])\n            roundedCube([98, 70, 20], 6);\n        translate([0, -5, 102])\n            roundedCube([94, 66, 20], 4);\n    }\n    // Handle bar on lid\n    translate([0, -5, 125])\n        rotate([90, 0, 0])\n            cylinder(h = 40, r = 4, center = true);\n}\n\n// Control panel with buttons\nmodule controls() {\n    translate([0, 80, 50]) {\n        // Panel face\n        cube([60, 5, 40], center = true);\n        // Screen\n        translate([0, 3, 10])\n            color(\"black\")\n                cube([40, 1, 15], center = true);\n        // Buttons\n        for(i = [-1:1])\n            translate([i*15, 3, -5])\n                cylinder(h = 2, r = 4);\n        // Dial\n        translate([25, 3, 0])\n            rotate([90, 0, 0])\n                cylinder(h = 3, r = 6);\n    }\n}\n\n// Air vents (side slits)\nmodule vents() {\n    for(i = [0:5]) {\n        translate([-50, 30 + i*15, 50])\n            rotate([0, 90, 0])\n                cube([30, 2, 5]);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-40, 40])\n        for(y = [-65, 65])\n            translate([x, y, -3])\n                cylinder(h = 6, r = 5);\n}\n\n// Bread pan (removable insert)\nmodule bread_pan() {\n    difference() {\n        translate([0, 0, 30])\n            roundedCube([70, 90, 60], 4);\n        translate([0, 0, 34])\n            roundedCube([66, 86, 58], 2);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    lid();\n    controls();\n    vents();\n    feet();\n    // Show pan slightly pulled out for visual clarity\n    translate([0, -10, 0])\n        bread_pan();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "toaster_oven",
    "openscad_code": "// Toaster Oven - Realistic Style, Medium Complexity\n// Dimensions: ~70mm wide x 45mm deep x 40mm high\n\n$fn = 50;\n\n// Main body dimensions\nbody_w = 70;\nbody_d = 45;\nbody_h = 40;\nwall_t = 2;\n\n// Door dimensions\ndoor_w = body_w - 4;\ndoor_h = 30;\n\n// Feet parameters\nfoot_r = 2;\nfoot_h = 3;\n\nmodule toaster_oven() {\n    // Main body shell\n    difference() {\n        // Outer shell\n        cube([body_w, body_d, body_h], center=false);\n        \n        // Hollow interior\n        translate([wall_t, wall_t, wall_t])\n            cube([body_w-2*wall_t, body_d-2*wall_t, body_h-wall_t], center=false);\n        \n        // Front opening for door\n        translate([wall_t, 0, wall_t])\n            cube([body_w-2*wall_t, wall_t, door_h-wall_t], center=false);\n    }\n    \n    // Front door with handle\n    translate([-1, 0, wall_t])\n        door_assembly();\n    \n    // Top vent slots\n    for(i=[1:3]) {\n        translate([15*i, body_d/2, body_h-2])\n            cube([3, body_d-10, 1]);\n    }\n    \n    // Side ventilation holes\n    for(i=[1:2]) {\n        translate([body_w-wall_t-1, 10*i, 20])\n            rotate([0, 90, 0])\n                cylinder(h=wall_t, r=2);\n    }\n    \n    // Control panel\n    translate([wall_t, body_d-wall_t, body_h-15])\n        control_panel();\n    \n    // Feet\n    feet();\n}\n\nmodule door_assembly() {\n    // Door panel\n    color(\"silver\")\n    difference() {\n        translate([0, 0, 0])\n            cube([wall_t, door_w, door_h]);\n        \n        // Door window\n        translate([wall_t-0.5, 5, 5])\n            cube([wall_t, door_w-10, door_h-10]);\n    }\n    \n    // Door handle\n    translate([-wall_t-2, door_w/2-10, door_h/2])\n        rotate([0, 90, 0])\n            cylinder(h=20, r=2);\n}\n\nmodule control_panel() {\n    // Panel base\n    cube([body_w-2*wall_t, wall_t, 12]);\n    \n    // Temperature knob\n    translate([10, wall_t, 6])\n        rotate([90, 0, 0])\n            cylinder(h=3, r=4);\n    \n    // Timer knob\n    translate([25, wall_t, 6])\n        rotate([90, 0, 0])\n            cylinder(h=3, r=4);\n    \n    // Function selector knob\n    translate([40, wall_t, 6])\n        rotate([90, 0, 0])\n            cylinder(h=3, r=4);\n    \n    // Indicator light\n    translate([55, wall_t, 9])\n        sphere(r=1.5);\n}\n\nmodule feet() {\n    // Front left\n    translate([5, 5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n    \n    // Front right\n    translate([body_w-5, 5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n    \n    // Back left\n    translate([5, body_d-5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n    \n    // Back right\n    translate([body_w-5, body_d-5, -foot_h])\n        cylinder(h=foot_h, r=foot_r);\n}\n\n// Main assembly\ntoaster_oven();",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_grill",
    "openscad_code": "// Electric Grill - Realistic Medium Complexity\n// Overall size: 120x80x40mm (LxWxH)\n\n// Main body module\nmodule grill_body() {\n    // Base housing\n    difference() {\n        // Main box with rounded edges\n        minkowski() {\n            cube([120, 80, 35], center=true);\n            sphere(r=2);\n        }\n        \n        // Hollow interior\n        translate([0, 0, -2])\n        cube([116, 76, 31], center=true);\n    }\n}\n\n// Grill top plate with ridges\nmodule grill_plate() {\n    // Base plate\n    translate([0, 0, 18])\n    difference() {\n        cube([110, 70, 4], center=true);\n        \n        // Drain holes\n        for(x=[-40:20:40]) {\n            translate([x, 25, 0])\n            cylinder(h=5, r=3, center=true);\n        }\n    }\n    \n    // Grill ridges\n    for(y=[-25:5:25]) {\n        translate([0, y, 20.5])\n        cube([108, 2, 1.5], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel face\n    translate([-61, 0, 5])\n    rotate([0, 90, 0])\n    difference() {\n        cube([30, 60, 8], center=true);\n        \n        // Power button hole\n        translate([0, 20, 0])\n        cylinder(h=10, r=6, center=true);\n        \n        // Temperature dial hole\n        translate([0, -20, 0])\n        cylinder(h=10, r=8, center=true);\n    }\n    \n    // Power button\n    translate([-66, 20, 5])\n    rotate([0, 90, 0])\n    cylinder(h=4, r=5, center=true);\n    \n    // Temperature dial\n    translate([-66, -20, 5])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h=6, r=7, center=true);\n        translate([-3, 0, 0])\n        cube([6, 2, 7], center=true);\n    }\n}\n\n// Support feet\nmodule feet() {\n    positions = [[-50, -30], [50, -30], [-50, 30], [50, 30]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], -20])\n        cylinder(h=5, r=4, center=true);\n    }\n}\n\n// Handles\nmodule handles() {\n    // Left handle\n    translate([-60, 0, 0])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=20, r=5, center=true);\n        translate([0, 0, -10])\n        cylinder(h=20, r=3, center=true);\n    }\n    \n    // Right handle\n    translate([60, 0, 0])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=20, r=5, center=true);\n        translate([0, 0, -10])\n        cylinder(h=20, r=3, center=true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([0, -45, -15])\n    rotate([90, 0, 0])\n    cylinder(h=20, r=3, center=true);\n    \n    translate([0, -55, -15])\n    rotate([90, 0, 0])\n    cylinder(h=20, r=2, center=true);\n}\n\n// Assembly\ngrill_body();\ngrill_plate();\ncontrol_panel();\nfeet();\nhandles();\npower_cord();",
    "renders": true
  },
  {
    "kitchen_appliance": "indoor_grill",
    "openscad_code": "// Indoor Electric Grill â€“ OpenSCAD  (medium complexity, realistic, 3-D-printable)\n\n// Overall envelope 140 mm Ã— 100 mm Ã— 70 mm\n$fn = 36;\n\nmodule roundedBox(w,l,h,r){\n    hull(){\n        translate([ r, r, 0]) cylinder(r=r,h=h);\n        translate([w-r, r, 0]) cylinder(r=r,h=h);\n        translate([w-r,l-r, 0]) cylinder(r=r,h=h);\n        translate([ r,l-r, 0]) cylinder(r=r,h=h);\n    }\n}\n\n// Main body shell\nmodule bodyShell(){\n    difference(){\n        roundedBox(140,100,70,6);\n        // hollow inside\n        translate([2,2,2]) roundedBox(136,96,68,4);\n    }\n}\n\n// Top grill plate\nmodule topPlate(){\n    difference(){\n        translate([0,0,70]) roundedBox(140,100,5,6);\n        // cooking grid\n        for(x=[10:130])\n            translate([x,5,75]) cube([1,90,1]);\n        for(y=[5:95])\n            translate([5,y,75]) cube([130,1,1]);\n        // drainage channel\n        translate([65,95,70]) cube([10,5,5]);\n    }\n}\n\n// Front control panel\nmodule controlPanel(){\n    translate([0,100,20])\n    difference(){\n        cube([140,4,30]);\n        // screen\n        translate([20,1,15]) cube([40,2,8]);\n        // two dials\n        translate([80,2,12]) rotate([90,0,0]) cylinder(h=2,r=6);\n        translate([105,2,12]) rotate([90,0,0]) cylinder(h=2,r=6);\n    }\n}\n\n// Feet\nmodule foot(){\n    difference(){\n        cylinder(h=4,r=6);\n        translate([0,0,-1]) cylinder(h=6,r=4);\n    }\n}\n\nmodule feet(){\n    for(x=[10,130]) for(y=[10,90])\n        translate([x,y,0]) foot();\n}\n\n// Handle\nmodule handle(){\n    translate([70,-6,45]) rotate([0,90,0]){\n        difference(){\n            cylinder(h=130,r=3);\n            translate([0,0,2]) cylinder(h=126,r=1);\n        }\n    }\n}\n\n// Power cord stub\nmodule powerCord(){\n    translate([-2,30,25]) rotate([0,90,0]) cylinder(h=10,r=4);\n}\n\nunion(){\n    bodyShell();\n    topPlate();\n    controlPanel();\n    feet();\n    handle();\n    powerCord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "vegetable_steamer",
    "openscad_code": "// Vegetable Steamer - Realistic Style, Medium Complexity\n\n// Overall dimensions (mm)\nsteamer_height = 100;\nbase_height = 25;\nlid_height = 20;\nbody_diameter = 80;\nwall_thickness = 2;\n\n// Base module with water reservoir and heating element\nmodule base() {\n    difference() {\n        // Main base cylinder\n        cylinder(h=base_height, d=body_diameter+6, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cylinder(h=base_height-wall_thickness, d=body_diameter+2, $fn=64);\n        \n        // Water fill port\n        translate([body_diameter/2 - 8, 0, base_height-10])\n            rotate([90, 0, 0])\n                cylinder(h=15, d=12, $fn=32);\n    }\n    \n    // Control panel\n    translate([body_diameter/2 - 15, 0, base_height-5])\n        cube([25, 40, 5]);\n    \n    // Control knobs\n    for(i=[-1:1]) {\n        translate([body_diameter/2 - 2.5, i*12, base_height-2])\n            cylinder(h=8, d=6, $fn=16);\n    }\n    \n    // Power indicator light\n    translate([body_diameter/2 - 15, 20, base_height-3])\n        sphere(d=4, $fn=16);\n}\n\n// Steaming basket with holes\nmodule basket() {\n    difference() {\n        // Main basket cylinder\n        cylinder(h=steamer_height-base_height-lid_height-wall_thickness, \n                d=body_diameter, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cylinder(h=steamer_height-base_height-lid_height-wall_thickness*2, \n                    d=body_diameter-wall_thickness*2, $fn=64);\n        \n        // Steam holes pattern\n        for(i=[-2:2]) {\n            for(j=[-2:2]) {\n                if(i*i + j*j < 2.5) {\n                    translate([i*15, j*15, steamer_height/2-base_height])\n                        cylinder(h=wall_thickness+1, d=3, $fn=8);\n                }\n            }\n        }\n    }\n    \n    // Rim/lip for stacking\n    translate([0, 0, steamer_height-base_height-lid_height-wall_thickness])\n        cylinder(h=wall_thickness, d=body_diameter+4, $fn=64);\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid dome\n        translate([0, 0, lid_height-5])\n            sphere(d=body_diameter+4, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, lid_height-3])\n            sphere(d=body_diameter, $fn=64);\n        \n        // Trim bottom half\n        translate([0, 0, lid_height/2-5])\n            cube([body_diameter+10, body_diameter+10, lid_height], center=true);\n    }\n    \n    // Central handle\n    translate([0, 0, lid_height-2])\n        cylinder(h=15, d=12, $fn=32);\n    \n    // Handle grip indent\n    translate([0, 0, lid_height+5])\n        cylinder(h=10, d=8, $fn=32);\n    \n    // Steam vent hole\n    translate([0, body_diameter/4, lid_height-2])\n        cylinder(h=10, d=4, $fn=8);\n}\n\n// Assembly\nbase();\ntranslate([0, 0, base_height])\n    basket();\ntranslate([0, 0, steamer_height-lid_height+5])\n    lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_steamer",
    "openscad_code": "// Electric Steamer - Medium complexity realistic style\n// Approx 120mm width, 120mm depth, 150mm height\n\n// Main parameters\nbase_width = 120;\nbase_depth = 120;\nbase_height = 25;\nwall_thickness = 2;\n\n// Module for rounded cube\nmodule rounded_cube(size, radius) {\n    translate([radius, radius, 0])\n    minkowski() {\n        cube([size.x - 2*radius, size.y - 2*radius, size.z]);\n        cylinder(r=radius, h=0.01);\n    }\n}\n\n// Base unit\nmodule steamer_base() {\n    difference() {\n        // Main base body\n        rounded_cube([base_width, base_depth, base_height], 5);\n        \n        // Recessed top\n        translate([wall_thickness, wall_thickness, base_height - 2])\n        cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, 5]);\n        \n        // Ventilation holes - front\n        for(i = [1:5]) {\n            translate([20*i, wall_thickness, base_height/2])\n            rotate([0, 90, 0])\n            cylinder(h=wall_thickness*2, r=3);\n        }\n        \n        // Ventilation holes - back\n        for(i = [1:5]) {\n            translate([20*i, base_depth - wall_thickness*3, base_height/2])\n            rotate([0, 90, 0])\n            cylinder(h=wall_thickness*2, r=3);\n        }\n    }\n    \n    // Control panel\n    translate([base_width - 35, base_depth - 20, base_height])\n    difference() {\n        cube([30, 15, 8]);\n        // LED display window\n        translate([5, 5, 7.9])\n        cube([20, 5, 0.2]);\n    }\n    \n    // Control buttons\n    for(i = [0:2]) {\n        translate([base_width - 30 + i*8, base_depth - 10, base_height + 9])\n        cylinder(h=3, r=3);\n    }\n}\n\n// Water reservoir\nmodule water_reservoir() {\n    translate([wall_thickness*2, wall_thickness*2, base_height])\n    difference() {\n        rounded_cube([base_width - wall_thickness*4, base_depth - wall_thickness*4, 25], 3);\n        // Hollow inside\n        translate([wall_thickness, wall_thickness, wall_thickness])\n        rounded_cube([base_width - wall_thickness*6, base_depth - wall_thickness*6, 23], 2);\n    }\n    \n    // Water level indicator\n    translate([wall_thickness*2 - 1, wall_thickness*2 + 5, base_height + 10])\n    cube([1, 15, 1]);\n}\n\n// Steaming baskets\nmodule steaming_basket(height_offset) {\n    translate([0, 0, height_offset])\n    difference() {\n        // Outer basket\n        cylinder(h=30, r=55, $fn=64);\n        // Inner hollow\n        cylinder(h=30, r=53, $fn=64);\n        \n        // Drainage holes in bottom\n        for(i = [0:11]) {\n            rotate([0, 0, i*30])\n            translate([40, 0, 0])\n            cylinder(h=30, r=2);\n        }\n    }\n    \n    // Handles\n    for(side = [0, 1]) {\n        translate([side ? 50 : -50, 0, height_offset + 15])\n        rotate([0, 90, 0])\n        cylinder(h=10, r=3);\n    }\n}\n\n// Lid\nmodule steamer_lid() {\n    translate([0, 0, base_height + 25 + 30 + 30 + 5])\n    difference() {\n        // Main lid dome\n        scale([1, 1, 0.5])\n        sphere(r=60, $fn=64);\n        \n        // Hollow inside\n        translate([0, 0, -5])\n        scale([0.9, 0.9, 0.5])\n        sphere(r=60, $fn=64);\n        \n        // Handle hole\n        translate([0, 0, -10])\n        cylinder(h=20, r=5);\n    }\n    \n    // Lid handle\n    translate([0, 0, base_height + 25 + 30 + 30 + 25])\n    cylinder(h=20, r=8);\n    \n    // Steam vent\n    translate([0, 30, base_height + 25 + 30 + 30 + 5])\n    cylinder(h=10, r=3);\n}\n\n// Assembly\nsteamer_base();\nwater_reservoir();\nsteaming_basket(base_height + 25);\nsteaming_basket(base_height + 25 + 30);\nsteamer_lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "hot_plate",
    "openscad_code": "// Hot Plate Kitchen Appliance â€“ Realistic / Medium detail\n// -------------------------------------------------------\n// Overall size: 110 mm (W) x 80 mm (D) x 35 mm (H)\n// Designed for 3D printing: 2 mm walls, no steep overhangs\n\n$fn = 36;               // Smooth curves\n\nwall_th = 2;            // Consistent wall thickness\nplate_d = 90;           // Hot-plate diameter\nbase_w  = 110;          // Body width\nbase_d  = 80;           // Body depth\nbase_h  = 25;           // Body height\nknob_r  = 7;            // Control knob radius\nknob_h  = 10;           // Knob height\nfoot_r  = 4;            // Rubber foot radius\nfoot_h  = 3;            // Foot height\n\n// ---------- Rubber feet ----------\nmodule foot() {\n    cylinder(h = foot_h, r1 = foot_r, r2 = foot_r * 0.8);\n}\n\n// ---------- Heat plate (cast metal look) ----------\nmodule heat_plate() {\n    difference() {\n        // Main disc\n        cylinder(h = 4, r = plate_d/2);\n        // Chamfered top edge\n        translate([0,0,3.9])\n            cylinder(h = 1, r1 = plate_d/2 - 2, r2 = plate_d/2);\n    }\n}\n\n// ---------- Housing ----------\nmodule body() {\n    difference() {\n        // Main box\n        translate([-base_w/2, -base_d/2, 0])\n            cube([base_w, base_d, base_h]);\n\n        // Hollow interior\n        translate([-base_w/2 + wall_th,\n                   -base_d/2 + wall_th,\n                   wall_th])\n            cube([base_w - 2*wall_th,\n                  base_d - 2*wall_th,\n                  base_h]);\n\n        // Top circular opening for plate\n        translate([0,0,base_h-1])\n            cylinder(h = 5, r = plate_d/2 + 2);\n    }\n}\n\n// ---------- Control knob with indicator line ----------\nmodule knob() {\n    translate([0,0,knob_h/2])\n        rotate([90,0,0])\n            difference() {\n                cylinder(h = knob_h, r = knob_r);\n                // Side flat for grip\n                translate([0,-knob_r,0])\n                    cube([20, knob_r*2, knob_h], center=true);\n                // Indicator groove\n                translate([0,0,knob_h-2])\n                    cylinder(h = 3, r = knob_r-2);\n            }\n}\n\n// ---------- Assembly ----------\nunion() {\n    // Housing\n    body();\n\n    // Heat plate on top\n    translate([0,0,base_h-1])\n        heat_plate();\n\n    // Control knob on front-right corner\n    translate([base_w/2 - knob_r - 5,\n               -base_d/2 + knob_r + 5,\n               base_h - 2])\n        knob();\n\n    // Four rubber feet\n    foot_pos = [[-base_w/2 + foot_r + 4, -base_d/2 + foot_r + 4],\n                [ base_w/2 - foot_r - 4, -base_d/2 + foot_r + 4],\n                [ base_w/2 - foot_r - 4,  base_d/2 - foot_r - 4],\n                [-base_w/2 + foot_r + 4,  base_d/2 - foot_r - 4]];\n    for(p = foot_pos)\n        translate([p.x, p.y, 0])\n            foot();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "warming_tray",
    "openscad_code": "// Warming Tray Kitchen Appliance\n// Dimensions: 130x80x25 mm\n\n// Main body shell\nmodule warming_tray_body() {\n    difference() {\n        // Outer shell\n        cube([130, 80, 25], center=true);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        cube([126, 76, 23], center=true);\n    }\n}\n\n// Heating surface plate\nmodule heating_plate() {\n    translate([0, 0, 12])\n    cube([120, 70, 2], center=true);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([-60, 0, 13])\n    cube([8, 40, 6], center=true);\n}\n\n// Control knob\nmodule control_knob() {\n    translate([-60, -15, 17])\n    cylinder(h=8, r=5, center=true, $fn=20);\n}\n\n// Indicator light\nmodule indicator_light() {\n    translate([-60, 15, 17])\n    sphere(r=3, $fn=16);\n}\n\n// Rubber feet\nmodule foot() {\n    cylinder(h=3, r=3, $fn=12);\n}\n\nmodule feet() {\n    positions = [[-60, -35], [60, -35], [60, 35], [-60, 35]];\n    for (pos = positions) {\n        translate([pos[0], pos[1], -14])\n        foot();\n    }\n}\n\n// Ventilation slots on sides\nmodule ventilation_slots() {\n    for (i = [-2:2]) {\n        translate([65, i*15, 0])\n        rotate([0, 90, 0])\n        cylinder(h=2, r=2, center=true);\n    }\n}\n\n// Power cord entry point\nmodule power_cord_entry() {\n    translate([65, 0, -5])\n    rotate([0, 90, 0])\n    cylinder(h=2, r=4, center=true);\n}\n\n// Assembly\nunion() {\n    warming_tray_body();\n    heating_plate();\n    control_panel();\n    control_knob();\n    indicator_light();\n    feet();\n    \n    // Ventilation slots on both sides\n    ventilation_slots();\n    mirror([1, 0, 0])\n    ventilation_slots();\n    \n    power_cord_entry();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "food_dehydrator",
    "openscad_code": "// Food Dehydrator - Realistic Style, Medium Complexity\n// Approx. 120 mm wide x 150 mm tall x 90 mm deep\n\n$fn = 30;  // Smooth curves for printing\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 75]) cube([110, 85, 150], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 75]) cube([106, 81, 146], center=true);\n    }\n}\n\n// Front door with window\nmodule door() {\n    difference() {\n        // Door panel\n        translate([0, 44, 75]) cube([108, 4, 148], center=true);\n        \n        // Window cutout\n        translate([0, 46, 75]) cube([80, 2, 100], center=true);\n        \n        // Door handle hole\n        translate([45, 42, 110]) rotate([0, 90, 0]) cylinder(h=10, r=3);\n    }\n    \n    // Window insert\n    color([0.8,0.8,1]) translate([0, 45, 75]) cube([78, 1, 98], center=true);\n    \n    // Door handle\n    translate([45, 48, 110]) rotate([90, 0, 0]) cylinder(h=15, r=4);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([0, 0, 140]) cube([110, 85, 15], center=true);\n    \n    // Display screen\n    translate([-25, 38, 148]) cube([40, 2, 12], center=true);\n    \n    // Control buttons\n    for (x = [-40, -20, 0, 20, 40]) {\n        translate([x, 38, 142]) cylinder(h=3, r=4);\n    }\n    \n    // Power button\n    translate([40, 38, 148]) cylinder(h=5, r=6);\n}\n\n// Drying trays\nmodule trays() {\n    for (z = [30, 60, 90, 120]) {\n        // Tray frame\n        translate([0, 0, z]) cube([100, 75, 4], center=true);\n        \n        // Tray mesh (simplified as slats)\n        for (y = [-30:10:30]) {\n            translate([0, y, z+2]) cube([96, 2, 1], center=true);\n        }\n    }\n}\n\n// Vent holes on top and back\nmodule vents() {\n    // Top vents\n    for (x = [-40:20:40]) {\n        for (y = [-25:10:25]) {\n            translate([x, y, 149]) cube([8, 2, 2], center=true);\n        }\n    }\n    \n    // Back vents\n    for (z = [30:20:130]) {\n        for (x = [-40:20:40]) {\n            translate([x, -42, z]) cube([8, 2, 8], center=true);\n        }\n    }\n}\n\n// Feet for stability\nmodule feet() {\n    for (x = [-45, 45]) {\n        for (y = [-35, 35]) {\n            translate([x, y, 0]) cylinder(h=5, r=5);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    body();\n    door();\n    control_panel();\n    trays();\n    vents();\n    feet();\n    \n    // Structural reinforcements\n    translate([0, 0, 2]) cube([114, 89, 2], center=true);  // Base reinforcement\n    translate([0, 0, 148]) cube([114, 89, 2], center=true);  // Top reinforcement\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "grill_pan",
    "openscad_code": "// Grill Pan - Realistic Style, Medium Complexity\n// Overall dimensions: ~120mm x 90mm x 30mm\n\n// Parameters\npan_length = 120;\npan_width = 90;\npan_height = 25;\nwall_thickness = 2;\nhandle_length = 60;\nhandle_diameter = 18;\nhandle_gap = 8;\n\n// Main pan body\nmodule pan_body() {\n    difference() {\n        // Outer shell\n        cube([pan_length, pan_width, pan_height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, wall_thickness/2])\n        cube([pan_length-wall_thickness*2, pan_width-wall_thickness*2, pan_height], center=true);\n        \n        // Drain spout cut\n        translate([pan_length/2 - 3, 0, -pan_height/2])\n        cube([6, 12, wall_thickness]);\n    }\n}\n\n// Grill ridges pattern\nmodule grill_ridges() {\n    ridge_height = 2;\n    ridge_width = 2;\n    ridge_spacing = 6;\n    num_ridges = floor((pan_width - wall_thickness*2) / ridge_spacing);\n    \n    for(i = [0:num_ridges-1]) {\n        translate([\n            0, \n            -pan_width/2 + wall_thickness + ridge_spacing/2 + i*ridge_spacing, \n            pan_height/2 - ridge_height - 1\n        ])\n        cube([pan_length - wall_thickness*2 - 10, ridge_width, ridge_height], center=true);\n    }\n}\n\n// Handle connection block\nmodule handle_block() {\n    translate([-pan_length/2 - 10, 0, 0])\n    cube([20, 30, 15], center=true);\n}\n\n// Main handle\nmodule handle() {\n    translate([-pan_length/2 - handle_length/2 - 10, 0, 0])\n    rotate([0, 90, 0])\n    difference() {\n        // Handle grip\n        cylinder(h=handle_length, d=handle_diameter, center=true);\n        \n        // Grip hole\n        cylinder(h=handle_length+2, d=handle_diameter-handle_gap, center=true);\n    }\n}\n\n// Handle support ribs\nmodule handle_ribs() {\n    rib_width = 3;\n    rib_height = 8;\n    \n    for(i = [-1:1]) {\n        translate([\n            -pan_length/2 - 20 - i*15, \n            0, \n            -pan_height/2 + rib_height/2 + 2\n        ])\n        rotate([0, 90, 0])\n        cube([rib_width, 25, rib_height], center=true);\n    }\n}\n\n// Pour spouts\nmodule pour_spouts() {\n    spout_height = 4;\n    \n    // Left spout\n    translate([pan_length/2 - 3, pan_width/2 - 5, pan_height/2 - spout_height/2])\n    cube([6, 10, spout_height]);\n    \n    // Right spout\n    translate([pan_length/2 - 3, -pan_width/2 + 5, pan_height/2 - spout_height/2])\n    cube([6, 10, spout_height]);\n}\n\n// Base ring for stability\nmodule base_ring() {\n    translate([0, 0, -pan_height/2 + 1])\n    difference() {\n        cube([pan_length - 5, pan_width - 5, 2], center=true);\n        cube([pan_length - 15, pan_width - 15, 3], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    pan_body();\n    grill_ridges();\n    handle_block();\n    handle();\n    handle_ribs();\n    pour_spouts();\n    base_ring();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cast_iron_pan",
    "openscad_code": "// Cast Iron Pan - Realistic Style, Medium Complexity\n// Pan diameter: 150mm, height: 45mm, wall thickness: 2mm\n\nmodule cast_iron_pan() {\n    // Pan body - main cooking surface\n    difference() {\n        // Outer pan body\n        cylinder(h=25, d=150, $fn=64);\n        \n        // Inner cavity for cooking surface\n        translate([0, 0, 2])\n            cylinder(h=23, d=146, $fn=64);\n    }\n    \n    // Pan bottom - thick base for heat retention\n    translate([0, 0, -10])\n        cylinder(h=10, d=150, $fn=64);\n    \n    // Handle socket - where handle connects to pan\n    translate([75, 0, 12.5])\n        rotate([0, 90, 0])\n            cylinder(h=20, d=25, $fn=32);\n    \n    // Handle - cast iron handle with grip pattern\n    translate([95, 0, 12.5])\n        rotate([0, 90, 0])\n            difference() {\n                // Main handle body\n                cylinder(h=80, d=15, $fn=32);\n                \n                // Handle grip grooves\n                for(i = [1:8]) {\n                    translate([i*10, 0, 0])\n                        rotate([0, 90, 0])\n                            cube([1, 15, 15], center=true);\n                }\n            }\n    \n    // Handle end hole for hanging\n    translate([175, 0, 12.5])\n        rotate([0, 90, 0])\n            cylinder(h=20, d=8, $fn=32);\n    \n    // Pouring spouts (2x)\n    for(angle = [30, -30]) {\n        rotate([0, 0, angle])\n            translate([75, 0, 12.5])\n                rotate([0, 90, angle])\n                    difference() {\n                        // Spout body\n                        cube([15, 25, 4], center=true);\n                        \n                        // Spout inner curve\n                        translate([0, -12.5, 0])\n                            sphere(d=25, $fn=32);\n                    }\n    }\n    \n    // Reinforcement ring under rim\n    translate([0, 0, 23])\n        cylinder(h=3, d=154, $fn=64);\n    \n    // Manufacturing marks/text on bottom\n    translate([0, 0, -9.5])\n        linear_extrude(height=0.5)\n            text(\"8\\\"\", size=15, halign=\"center\", valign=\"center\");\n    \n    // Heat ring on bottom for stove contact\n    translate([0, 0, -10])\n        difference() {\n            cylinder(h=1, d=150, $fn=64);\n            cylinder(h=1, d=130, $fn=64);\n        }\n    \n    // Additional heat distribution rings\n    for(d = [140, 130, 120, 110]) {\n        translate([0, 0, -9])\n            difference() {\n                cylinder(h=0.5, d=d, $fn=64);\n                cylinder(h=0.5, d=d-5, $fn=64);\n            }\n    }\n}\n\n// Render the complete pan\ncast_iron_pan();",
    "renders": true
  },
  {
    "kitchen_appliance": "non_stick_pan",
    "openscad_code": "// Non-stick frying pan (Ã˜120 mm)\n// Wall thickness = 2 mm, printable without supports\n\n// Overall scale\npan_scale = 1;\n\n// Pan body dimensions\npan_d = 120 * pan_scale;          // outer diameter\nwall_t = 2 * pan_scale;           // wall thickness\npan_h_body = 30 * pan_scale;      // body height\nbase_d = 80 * pan_scale;          // bottom disk Ã˜\nfillet_r = 4 * pan_scale;         // inside bottom fillet\n\n// Handle\nhandle_l = 100 * pan_scale;       // handle length\nhandle_w = 25 * pan_scale;        // handle width\nhandle_h = 18 * pan_scale;        // handle height\nhandle_mount_l = 20 * pan_scale;  // mounting block length\nhandle_mount_h = 22 * pan_scale;\n\n// Rivets for handle mount\nrivet_r = 3 * pan_scale;\nrivet_h = 2 * pan_scale;\nrivet_offset = 8 * pan_scale;\n\n// Helper module for rounded pan body\nmodule pan_body() {\n    // Main hollow cylinder\n    difference() {\n        cylinder(h = pan_h_body, d = pan_d, $fn = 90);\n        translate([0, 0, -1])\n            cylinder(h = pan_h_body + 2, d = pan_d - 2 * wall_t, $fn = 90);\n    }\n    \n    // Flat bottom disk\n    translate([0, 0, 0])\n        cylinder(h = wall_t, d = base_d, $fn = 90);\n    \n    // Inside bottom fillet\n    translate([0, 0, wall_t])\n        difference() {\n            cylinder(h = fillet_r, d = base_d - 2 * wall_t, $fn = 90);\n            sphere(d = base_d - 2 * wall_t, $fn = 90);\n        }\n}\n\n// Handle with ergonomic bulge\nmodule handle() {\n    // Mounting block on pan\n    translate([-pan_d/2 - handle_mount_l/2, 0, pan_h_body/2])\n        cube([handle_mount_l, handle_w, handle_mount_h], center = true);\n    \n    // Main handle bar\n    translate([-pan_d/2 - handle_mount_l - handle_l/2, 0, pan_h_body/2])\n        cube([handle_l, handle_w * 0.8, handle_h * 0.7], center = true);\n    \n    // Top ergonomic ridge\n    translate([-pan_d/2 - handle_mount_l - handle_l/2, 0, pan_h_body/2 + handle_h/2])\n        cube([handle_l, handle_w * 0.5, handle_h * 0.3], center = true);\n}\n\n// Rivets securing handle\nmodule rivets() {\n    for (y = [-rivet_offset, rivet_offset])\n        translate([-pan_d/2 - rivet_h/2, y, pan_h_body/2])\n            rotate([0, 90, 0])\n                cylinder(h = rivet_h, d = rivet_r, $fn = 20);\n}\n\n// Assemble the pan\nunion() {\n    pan_body();\n    handle();\n    rivets();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "saucepan",
    "openscad_code": "$fn = 36;\n\n// overall scale factor for easy resizing\nscale_factor = 1;\n\n// saucepan parameters\nbody_d = 90 * scale_factor;\nbody_h = 45 * scale_factor;\nwall_t = 2 * scale_factor;\nbottom_t = 3 * scale_factor;\n\n// handle parameters\nhandle_l = 80 * scale_factor;\nhandle_base_w = 12 * scale_factor;\nhandle_base_h = 8 * scale_factor;\nhandle_mid_w = 6 * scale_factor;\nhandle_end_w = 10 * scale_factor;\nhandle_curve_r = 10 * scale_factor;\nhandle_clearance = 3 * scale_factor;\n\n// lid parameters\nlid_top_d = body_d + 2 * wall_t;\nlid_flange_h = 5 * scale_factor;\nlid_knob_h = 12 * scale_factor;\nlid_knob_d = 14 * scale_factor;\n\n// rim lip\nlip_h = 4 * scale_factor;\n\n// saucepan body module\nmodule saucepan_body() {\n    difference() {\n        // outer shell\n        cylinder(h = body_h + lip_h, d = body_d, center = false);\n        \n        // inner cavity\n        translate([0, 0, bottom_t])\n            cylinder(h = body_h - bottom_t, d = body_d - 2 * wall_t, center = false);\n        \n        // remove inside bottom\n        translate([0, 0, 0])\n            cylinder(h = bottom_t, d = body_d - 2 * wall_t, center = false);\n    }\n    \n    // add bottom thickness\n    translate([0, 0, 0])\n        cylinder(h = bottom_t, d = body_d, center = false);\n    \n    // add rim lip outside\n    translate([0, 0, body_h])\n        cylinder(h = lip_h, d = body_d + 2 * wall_t, center = false);\n    \n    // add rim lip inside\n    translate([0, 0, body_h])\n        cylinder(h = lip_h, d = body_d, center = false);\n}\n\n// handle module\nmodule handle() {\n    // base block\n    translate([body_d / 2 - wall_t - handle_base_w / 2, 0, (body_h + lip_h) / 2])\n        cube([handle_base_w, handle_base_h, handle_base_h], center = true);\n    \n    // curved middle section using hull of cylinders\n    hull() {\n        translate([body_d / 2 + handle_clearance, 0, (body_h + lip_h) / 2])\n            rotate([0, 90, 0])\n                cylinder(h = handle_base_h, d = handle_base_w, center = true);\n        \n        translate([body_d / 2 + handle_l / 2, 0, (body_h + lip_h) / 2 + handle_curve_r])\n            rotate([0, 90, 0])\n                cylinder(h = handle_mid_w, d = handle_mid_w, center = true);\n        \n        translate([body_d / 2 + handle_l, 0, (body_h + lip_h) / 2])\n            rotate([0, 90, 0])\n                cylinder(h = handle_end_w, d = handle_end_w, center = true);\n    }\n}\n\n// lid module\nmodule lid() {\n    // main lid disc\n    cylinder(h = lid_flange_h, d = lid_top_d, center = false);\n    \n    // inner flange\n    translate([0, 0, lid_flange_h])\n        cylinder(h = 2 * wall_t, d = body_d - 0.5, center = false);\n    \n    // knob\n    translate([0, 0, lid_flange_h + 2 * wall_t])\n        cylinder(h = lid_knob_h, d = lid_knob_d, center = false);\n    \n    // knob sphere top\n    translate([0, 0, lid_flange_h + 2 * wall_t + lid_knob_h])\n        sphere(d = lid_knob_d, center = true);\n}\n\n// assemble saucepan\ntranslate([0, 0, 0])\n    saucepan_body();\n\ntranslate([0, 0, 0])\n    handle();\n\n// position lid to the side for printing\ntranslate([0, body_d + 30, 0])\n    lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "stockpot",
    "openscad_code": "// Stockpot Kitchen Appliance - Realistic Style\n// Medium complexity stockpot with lid and handles\n\n// Parameters\npot_height = 80;\npot_radius = 50;\nwall_thickness = 2;\nbase_thickness = 4;\nhandle_width = 8;\nhandle_height = 12;\nhandle_length = 25;\nlid_height = 15;\nlid_knob_height = 12;\nlid_knob_radius = 6;\n\n// Main pot body module\nmodule stockpot_body() {\n    difference() {\n        // Outer body\n        cylinder(h=pot_height, r=pot_radius, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, -1])\n            cylinder(h=pot_height+2, r=pot_radius-wall_thickness, $fn=64);\n        \n        // Flat base inside\n        translate([0, 0, base_thickness])\n            cylinder(h=pot_height-base_thickness, r=pot_radius-wall_thickness, $fn=64);\n    }\n    \n    // Reinforced base ring\n    translate([0, 0, -1])\n        cylinder(h=base_thickness+1, r=pot_radius+1, $fn=64);\n}\n\n// Handle module\nmodule pot_handle(side) {\n    translate([side * (pot_radius+handle_length/2), 0, pot_height/2]) {\n        rotate([0, 90, 0]) {\n            // Handle grip\n            hull() {\n                translate([-handle_length/2, 0, -handle_width/2])\n                    sphere(r=handle_width/2, $fn=16);\n                translate([handle_length/2, 0, -handle_width/2])\n                    sphere(r=handle_width/2, $fn=16);\n                translate([-handle_length/2, 0, handle_width/2])\n                    sphere(r=handle_width/2, $fn=16);\n                translate([handle_length/2, 0, handle_width/2])\n                    sphere(r=handle_width/2, $fn=16);\n            }\n            \n            // Handle brackets (2 per handle)\n            for(pos=[-handle_length/3, handle_length/3]) {\n                translate([pos, 0, -handle_width/2-2])\n                    cube([wall_thickness*2, handle_height, wall_thickness*2], center=true);\n            }\n        }\n    }\n}\n\n// Lid module\nmodule stockpot_lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, pot_height+2])\n            cylinder(h=lid_height, r=pot_radius-wall_thickness/2, $fn=64);\n        \n        // Inner lip\n        translate([0, 0, pot_height+2])\n            cylinder(h=lid_height/2, r=pot_radius-wall_thickness*2, $fn=64);\n        \n        // Steam vent hole\n        translate([0, 0, pot_height+2+lid_height])\n            cylinder(h=5, r=2, $fn=16);\n    }\n    \n    // Lid knob\n    translate([0, 0, pot_height+2+lid_height])\n        cylinder(h=lid_knob_height, r=lid_knob_radius, $fn=32);\n    \n    // Knob grip ring\n    translate([0, 0, pot_height+2+lid_height+lid_knob_height/2])\n        difference() {\n            cylinder(h=lid_knob_height/2, r=lid_knob_radius*1.5, $fn=32);\n            cylinder(h=lid_knob_height/2+1, r=lid_knob_radius*1.1, $fn=32);\n        }\n}\n\n// Rim reinforcement\nmodule rim_reinforcement() {\n    translate([0, 0, pot_height-3])\n        cylinder(h=5, r=pot_radius+1, $fn=64);\n    \n    difference() {\n        translate([0, 0, pot_height-3])\n            cylinder(h=5, r=pot_radius+2, $fn=64);\n        translate([0, 0, pot_height-5])\n            cylinder(h=10, r=pot_radius+1, $fn=64);\n    }\n}\n\n// Assembly\nunion() {\n    // Main pot\n    stockpot_body();\n    \n    // Rim details\n    rim_reinforcement();\n    \n    // Side handles\n    pot_handle(1);\n    pot_handle(-1);\n    \n    // Lid (can be printed separately)\n    stockpot_lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "double_boiler",
    "openscad_code": "// Double boiler kitchen appliance\n// Medium complexity, realistic style\n// All dimensions in mm, printable scale ~100mm tall\n\n$fn=50;\n\n// Main body dimensions\nbottom_pot_od = 80;\nbottom_pot_h = 60;\nbottom_pot_wall = 2;\n\ntop_pot_od = 76;\ntop_pot_h = 50;\ntop_pot_wall = 2;\n\n// Handles\nhandle_w = 20;\nhandle_h = 15;\nhandle_d = 8;\nhandle_clearance = 5;\n\n// Rim details\nrim_h = 4;\nrim_t = 1.5;\n\n// Lid\nlid_od = 82;\nlid_h = 8;\nknob_h = 12;\nknob_r = 8;\n\nmodule bottom_pot() {\n    difference() {\n        // Outer shell\n        cylinder(h=bottom_pot_h, d=bottom_pot_od);\n        \n        // Inner cavity\n        translate([0,0,bottom_pot_wall])\n            cylinder(h=bottom_pot_h-bottom_pot_wall, d=bottom_pot_od-2*bottom_pot_wall);\n        \n        // Rim recess for top pot\n        translate([0,0,bottom_pot_h-rim_h])\n            cylinder(h=rim_h, d=bottom_pot_od-2*rim_t);\n    }\n    \n    // Bottom rim for stability\n    translate([0,0,0])\n        cylinder(h=rim_h, d=bottom_pot_od+2*rim_t);\n    \n    // Side handles (2x)\n    for (i=[0:1]) {\n        rotate([0,0,i*180])\n            translate([bottom_pot_od/2+handle_clearance, 0, bottom_pot_h/2])\n                handle();\n    }\n}\n\nmodule top_pot() {\n    difference() {\n        // Outer shell\n        cylinder(h=top_pot_h, d=top_pot_od);\n        \n        // Inner cavity\n        translate([0,0,top_pot_wall])\n            cylinder(h=top_pot_h-top_pot_wall, d=top_pot_od-2*top_pot_wall);\n        \n        // Bottom opening (double boiler feature)\n        translate([0,0,0])\n            cylinder(h=top_pot_wall*2, d=top_pot_od-4*top_pot_wall);\n    }\n    \n    // Top rim\n    translate([0,0,top_pot_h])\n        cylinder(h=rim_h, d=top_pot_od+2*rim_t);\n    \n    // Pour spouts (2x)\n    for (i=[0:1]) {\n        rotate([0,0,45+i*90])\n            translate([top_pot_od/2, 0, top_pot_h-rim_h/2])\n                rotate([90,0,0])\n                    cylinder(h=15, r1=8, r2=5);\n    }\n    \n    // Side handles (2x)\n    for (i=[0:1]) {\n        rotate([0,0,i*180])\n            translate([top_pot_od/2+handle_clearance, 0, top_pot_h/2])\n                handle();\n    }\n}\n\nmodule handle() {\n    difference() {\n        union() {\n            // Main grip\n            translate([handle_d/2, 0, 0])\n                cube([handle_d, handle_w, handle_h], center=true);\n            \n            // Connection to pot\n            translate([0, 0, 0])\n                cube([handle_d, handle_w/2, handle_h/2], center=true);\n        }\n        \n        // Grip hole\n        translate([handle_d, 0, 0])\n            cylinder(h=handle_w+2, d=8, center=true);\n    }\n}\n\nmodule lid() {\n    difference() {\n        union() {\n            // Main lid body\n            translate([0,0,lid_h/2])\n                cylinder(h=lid_h, d=lid_od);\n            \n            // Knob\n            translate([0,0,lid_h+knob_h/2])\n                cylinder(h=knob_h, r=knob_r);\n        }\n        \n        // Inner cavity\n        translate([0,0,lid_h])\n            cylinder(h=lid_h, d=lid_od-2*bottom_pot_wall);\n    }\n    \n    // Steam vent\n    translate([0,0,lid_h+knob_h])\n        cylinder(h=5, r=2);\n}\n\n// Assemble the double boiler\ntranslate([0,0,bottom_pot_wall])\n    bottom_pot();\n\ntranslate([0,0,bottom_pot_h+bottom_pot_wall])\n    top_pot();\n\n// Lid offset to show assembly\ntranslate([0,100,bottom_pot_h+top_pot_h+bottom_pot_wall+rim_h/2])\n    lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "dutch_oven",
    "openscad_code": "// Dutch Oven - Realistic Style, Medium Complexity\n// Overall height ~80mm, diameter ~100mm, wall thickness 2mm\n\n$fn = 60;  // Smooth curves\n\nmodule dutch_oven()\n{\n    // Main pot body\n    difference()\n    {\n        union()\n        {\n            // Outer pot shell\n            cylinder(h = 50, d1 = 100, d2 = 95, center = false);\n            \n            // Bottom base ring\n            translate([0, 0, -5])\n                cylinder(h = 5, d = 90, center = false);\n        }\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 46, d = 96, center = false);\n    }\n    \n    // Pot rim/lip\n    translate([0, 0, 50])\n        difference()\n        {\n            cylinder(h = 5, d = 102, center = false);\n            cylinder(h = 5, d = 96, center = false);\n        }\n    \n    // Lid\n    translate([0, 0, 58])\n    {\n        difference()\n        {\n            // Lid body\n            cylinder(h = 15, d = 102, center = false);\n            \n            // Inner lid cavity\n            translate([0, 0, 5])\n                cylinder(h = 10, d = 98, center = false);\n            \n            // Steam vent hole\n            translate([30, 0, 7.5])\n                rotate([90, 0, 0])\n                    cylinder(h = 20, d = 3, center = false);\n        }\n        \n        // Lid handle\n        translate([0, 0, 15])\n        {\n            // Handle base\n            cylinder(h = 3, d = 25, center = false);\n            \n            // Handle grip\n            translate([0, 0, 3])\n                difference()\n                {\n                    cylinder(h = 8, d = 20, center = false);\n                    translate([0, 0, 2])\n                        cylinder(h = 6, d = 12, center = false);\n                }\n        }\n    }\n    \n    // Side handles\n    for(side = [-1, 1])\n    {\n        translate([side * 55, 0, 25])\n            rotate([90, 0, 0])\n            {\n                // Handle arch\n                difference()\n                {\n                    // Main arch\n                    translate([0, 0, -10])\n                        cube([10, 20, 5], center = true);\n                    \n                    // Inner cutout\n                    translate([0, 0, -10])\n                        cube([6, 18, 6], center = true);\n                }\n                \n                // Handle supports\n                translate([0, -8, -10])\n                    cube([10, 4, 5], center = true);\n                translate([0, 8, -10])\n                    cube([10, 4, 5], center = true);\n            }\n    }\n    \n    // Three small feet on base\n    for(angle = [0, 120, 240])\n    {\n        rotate([0, 0, angle])\n            translate([35, 0, 0])\n            {\n                // Foot base\n                cylinder(h = 3, d = 8, center = false);\n                \n                // Foot pad\n                translate([0, 0, -2])\n                    cylinder(h = 2, d = 10, center = false);\n            }\n    }\n}\n\n// Render the dutch oven\ndutch_oven();",
    "renders": true
  },
  {
    "kitchen_appliance": "crock_pot",
    "openscad_code": "// Crock Pot - Realistic Medium Complexity\n// Overall dimensions: 110mm x 85mm x 70mm\n\n// Main body\nmodule crock_pot_body() {\n    difference() {\n        // Outer shell\n        translate([-55, -42.5, 0])\n            cube([110, 85, 70], center=false);\n        \n        // Inner cavity\n        translate([-52, -39.5, 3])\n            cube([104, 79, 67], center=false);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([-55, -42.5, 70])\n        cube([110, 85, 8]);\n    \n    // Panel recess\n    difference() {\n        translate([-50, -37.5, 78])\n            cube([100, 75, 4]);\n        translate([-48, -35.5, 80])\n            cube([96, 71, 4]);\n    }\n}\n\n// Control knobs\nmodule knobs() {\n    for(i = [0:1]) {\n        translate([-35 + i*30, -20, 82])\n            cylinder(h=6, r=6, $fn=20);\n        translate([-35 + i*30, -20, 88])\n            cylinder(h=2, r=4, $fn=20);\n    }\n}\n\n// LED indicator\nmodule led_indicator() {\n    translate([25, 0, 82])\n        cylinder(h=2, r=3, $fn=20);\n}\n\n// Handles\nmodule handles() {\n    // Left handle\n    difference() {\n        translate([-62, -15, 30])\n            cube([12, 30, 15]);\n        translate([-59, -12, 33])\n            cube([9, 24, 12]);\n    }\n    \n    // Right handle\n    mirror([1, 0, 0])\n        difference() {\n            translate([-62, -15, 30])\n                cube([12, 30, 15]);\n            translate([-59, -12, 33])\n                cube([9, 24, 12]);\n        }\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([-53, -40.5, 70])\n            cube([106, 81, 4]);\n        \n        // Inner lip\n        translate([-51, -38.5, 70])\n            cube([102, 77, 4]);\n    }\n    \n    // Handle on lid\n    translate([0, 0, 74])\n        cylinder(h=10, r=6, $fn=20);\n    translate([0, 0, 84])\n        cylinder(h=2, r=8, $fn=20);\n}\n\n// Feet\nmodule feet() {\n    for(x = [-40, 40]) {\n        for(y = [-25, 25]) {\n            translate([x, y, -3])\n                cylinder(h=3, r=4, $fn=20);\n        }\n    }\n}\n\n// Power cord entry\nmodule power_cord() {\n    translate([55, 0, 20])\n        rotate([0, 90, 0])\n            cylinder(h=10, r=5, $fn=20);\n}\n\n// Assemble the crock pot\nunion() {\n    crock_pot_body();\n    control_panel();\n    knobs();\n    led_indicator();\n    handles();\n    feet();\n    power_cord();\n}\n\n// Add lid separately (can be printed separately)\ntranslate([0, 100, 0])\n    lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "pressure_canner",
    "openscad_code": "// Pressure Canner - medium complexity 3D printable model\n// Overall dimensions: ~100mm diameter, ~120mm height\n\n// Main body with 2mm wall thickness\nmodule body() {\n    difference() {\n        // Outer cylinder\n        cylinder(h=80, r=50, $fn=100);\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h=78, r=48, $fn=100);\n    }\n}\n\n// Base with feet\nmodule base() {\n    // Main base ring\n    difference() {\n        cylinder(h=10, r=52, $fn=100);\n        translate([0, 0, 2])\n            cylinder(h=10, r=50, $fn=100);\n    }\n    \n    // Feet\n    for(i=[0:3]) {\n        rotate([0, 0, i*90])\n            translate([45, 0, 0])\n                cube([15, 8, 5], center=true);\n    }\n}\n\n// Handles on sides\nmodule handles() {\n    // Left handle\n    translate([-55, 0, 45])\n        rotate([0, 90, 0])\n            cylinder(h=15, r=8, $fn=30);\n    \n    // Right handle\n    translate([55, 0, 45])\n        rotate([0, 90, 0])\n            cylinder(h=15, r=8, $fn=30);\n}\n\n// Lid with locking mechanism\nmodule lid() {\n    // Main lid disc\n    difference() {\n        cylinder(h=8, r=54, $fn=100);\n        translate([0, 0, 2])\n            cylinder(h=8, r=52, $fn=100);\n    }\n    \n    // Locking tabs\n    for(i=[0:1]) {\n        rotate([0, 0, i*180])\n            translate([0, 54, 4])\n                cube([20, 8, 6], center=true);\n    }\n    \n    // Central handle\n    translate([0, 0, 8])\n        cylinder(h=15, r=10, $fn=30);\n}\n\n// Pressure gauge\nmodule gauge() {\n    translate([30, 0, 90])\n        union() {\n            cylinder(h=10, r=8, $fn=30);\n            translate([0, 0, 10])\n                sphere(r=8, $fn=30);\n        }\n}\n\n// Control panel with buttons\nmodule control_panel() {\n    translate([-40, -45, 85])\n        union() {\n            // Panel base\n            cube([30, 10, 5], center=true);\n            \n            // Buttons\n            for(i=[0:2]) {\n                translate([-10 + i*10, 0, 3])\n                    cylinder(h=3, r=3, $fn=20);\n            }\n        }\n}\n\n// Vent pipe\nmodule vent_pipe() {\n    translate([0, 40, 90])\n        cylinder(h=20, r=4, $fn=20);\n}\n\n// Rim reinforcement\nmodule rim() {\n    difference() {\n        cylinder(h=5, r=54, $fn=100);\n        cylinder(h=5, r=50, $fn=100);\n    }\n}\n\n// Assembly\nunion() {\n    // Base and body\n    base();\n    translate([0, 0, 10])\n        body();\n    \n    // Rim\n    translate([0, 0, 90])\n        rim();\n    \n    // Handles\n    handles();\n    \n    // Lid (positioned above)\n    translate([0, 0, 95])\n        lid();\n    \n    // Accessories\n    gauge();\n    control_panel();\n    vent_pipe();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "immersion_blender",
    "openscad_code": "$fa = 2;\n$fs = 0.5;\n\n// Overall dimensions\nhandle_len = 120;\nhandle_dia = 30;\nmotor_housing_len = 50;\nmotor_housing_dia = 38;\nshaft_len = 80;\nshaft_dia = 16;\nblade_housing_len = 35;\nblade_housing_dia = 28;\n\n// Wall thickness\nwall = 2;\n\n// Main body module\nmodule immersion_blender() {\n    // Handle grip with ergonomic curvature\n    difference() {\n        union() {\n            // Main handle tube\n            cylinder(h = handle_len, d = handle_dia, center = false);\n            // Grip bulge\n            translate([0, 0, handle_len * 0.3])\n                cylinder(h = 25, d1 = handle_dia, d2 = handle_dia * 1.1, center = false);\n        }\n        // Hollow center\n        translate([0, 0, -1])\n            cylinder(h = handle_len + 2, d = handle_dia - 2 * wall, center = false);\n    }\n\n    // Motor housing (top part)\n    translate([0, 0, handle_len])\n    difference() {\n        cylinder(h = motor_housing_len, d = motor_housing_dia, center = false);\n        translate([0, 0, -1])\n            cylinder(h = motor_housing_len + 2, d = motor_housing_dia - 2 * wall, center = false);\n    }\n\n    // Shaft housing (bottom part)\n    translate([0, 0, handle_len + motor_housing_len])\n    difference() {\n        cylinder(h = shaft_len, d = shaft_dia + 2 * wall, center = false);\n        translate([0, 0, -1])\n            cylinder(h = shaft_len + 2, d = shaft_dia, center = false);\n    }\n\n    // Blade housing bell\n    translate([0, 0, handle_len + motor_housing_len + shaft_len])\n    difference() {\n        cylinder(h = blade_housing_len, d1 = blade_housing_dia, d2 = blade_housing_dia * 0.7, center = false);\n        // Hollow bell\n        translate([0, 0, -1])\n            cylinder(h = blade_housing_len + 2, d1 = blade_housing_dia - 2 * wall, d2 = blade_housing_dia * 0.7 - 2 * wall, center = false);\n    }\n\n    // Control buttons on handle\n    translate([handle_dia / 2, 0, handle_len * 0.6])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h = 10, d = 8, center = true);\n        translate([0, 0, -6])\n            cube([6, 6, 12], center = true);\n    }\n\n    translate([handle_dia / 2, 0, handle_len * 0.75])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h = 10, d = 8, center = true);\n        translate([0, 0, -6])\n            cube([6, 6, 12], center = true);\n    }\n\n    // Power cord exit\n    translate([0, handle_dia / 2, handle_len * 0.1])\n    rotate([90, 0, 0])\n    cylinder(h = 15, d = 6, center = true);\n\n    // Blade assembly\n    translate([0, 0, handle_len + motor_housing_len + shaft_len + blade_housing_len - 5])\n    union() {\n        // Central hub\n        cylinder(h = 5, d = 8, center = false);\n        \n        // Four blades in cross pattern\n        for (i = [0:90:270]) {\n            rotate([0, 0, i])\n            translate([6, 0, 2.5])\n            cube([12, 2, 1], center = true);\n        }\n    }\n\n    // Ventilation slots\n    for (i = [0:30:330]) {\n        rotate([0, 0, i])\n        translate([motor_housing_dia / 2 - wall, 0, handle_len + motor_housing_len * 0.3])\n        cube([wall * 2, 1, 8], center = true);\n    }\n}\n\n// Render the blender\nimmersion_blender();",
    "renders": true
  },
  {
    "kitchen_appliance": "stand_mixer",
    "openscad_code": "// Stand Mixer Kitchen Appliance - Medium Complexity\n// Overall dimensions: ~100mm x ~80mm x ~120mm (L x W x H)\n\n// Parameters\n$fn = 32;\nwall_thickness = 2;\nbase_width = 80;\nbase_depth = 60;\nbase_height = 15;\nbody_width = 70;\nbody_depth = 55;\nbody_height = 45;\nneck_height = 20;\nneck_width = 40;\nhead_width = 50;\nhead_height = 35;\nhead_depth = 45;\nbowl_diameter = 55;\nbowl_height = 40;\nmixer_diameter = 8;\nmixer_height = 35;\n\n// Base module\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height/2 + wall_thickness])\n            cube([base_width - 2*wall_thickness, base_depth - 2*wall_thickness, base_height], center=true);\n        \n        // Feet cutouts\n        for(x = [-1, 1])\n            for(y = [-1, 1])\n                translate([x*(base_width/2 - 8), y*(base_depth/2 - 8), 0])\n                    cylinder(h=3, r=5, center=false);\n    }\n    \n    // Feet\n    for(x = [-1, 1])\n        for(y = [-1, 1])\n            translate([x*(base_width/2 - 8), y*(base_depth/2 - 8), 1.5])\n                cylinder(h=3, r=4);\n}\n\n// Body module\nmodule body() {\n    difference() {\n        // Main body\n        translate([0, 0, base_height + body_height/2])\n            cube([body_width, body_depth, body_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height + body_height/2 + wall_thickness])\n            cube([body_width - 2*wall_thickness, body_depth - 2*wall_thickness, body_height], center=true);\n    }\n    \n    // Control panel\n    translate([0, body_depth/2 - 1, base_height + body_height/2 + 5])\n        cube([30, 2, 10], center=true);\n    \n    // Control knob\n    translate([-10, body_depth/2, base_height + body_height/2 + 5])\n        rotate([90, 0, 0])\n            cylinder(h=5, r=4);\n    \n    translate([10, body_depth/2, base_height + body_height/2 + 5])\n        rotate([90, 0, 0])\n            cylinder(h=5, r=4);\n}\n\n// Neck module\nmodule neck() {\n    difference() {\n        // Main neck\n        translate([0, 0, base_height + body_height + neck_height/2])\n            cube([neck_width, neck_depth, neck_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height + body_height + neck_height/2 + wall_thickness])\n            cube([neck_width - 2*wall_thickness, neck_depth - 2*wall_thickness, neck_height], center=true);\n    }\n}\n\n// Head module\nmodule head() {\n    difference() {\n        // Main head\n        translate([0, 0, base_height + body_height + neck_height + head_height/2])\n            cube([head_width, head_depth, head_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height + body_height + neck_height + head_height/2 + wall_thickness])\n            cube([head_width - 2*wall_thickness, head_depth - 2*wall_thickness, head_height], center=true);\n    }\n}\n\n// Mixer attachment\nmodule mixer() {\n    // Mixer shaft\n    translate([0, 0, base_height + body_height + neck_height + head_height + mixer_height/2])\n        cylinder(h=mixer_height, r=mixer_diameter/2, center=true);\n    \n    // Mixer blades\n    for(i = [0:2]) {\n        rotate([0, 0, i*120])\n            translate([mixer_diameter, 0, base_height + body_height + neck_height + head_height + mixer_height*0.7])\n                cube([mixer_diameter*3, 2, 8], center=true);\n    }\n}\n\n// Bowl\nmodule bowl() {\n    difference() {\n        // Main bowl\n        translate([0, -body_depth/2 - 20, base_height + bowl_height/2 - 5])\n            cylinder(h=bowl_height, r=bowl_diameter/2, center=true);\n        \n        // Hollow interior\n        translate([0, -body_depth/2 - 20, base_height + bowl_height/2 - 2])\n            cylinder(h=bowl_height - 2, r=bowl_diameter/2 - wall_thickness, center=true);\n    }\n    \n    // Bowl handle\n    translate([bowl_diameter/2, -body_depth/2 - 20, base_height + bowl_height/2])\n        rotate([90, 0, 90])\n            cylinder(h=bowl_diameter/2, r=3);\n}\n\n// Logo plate\nmodule logo() {\n    translate([0, body_depth/2 - 1.5, base_height + body_height/2 + 10])\n        cube([25, 1, 8], center=true);\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    neck();\n    head();\n    mixer();\n    bowl();\n    logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "hand_mixer",
    "openscad_code": "// Hand Mixer - Realistic Style, Medium Complexity\n\n$fn = 32;\n\n// Overall dimensions\nmixer_length = 150;\nmixer_height = 120;\nmixer_width = 70;\nwall_thickness = 2;\n\n// Main body module\nmodule mixer_body() {\n    // Main housing\n    difference() {\n        // Main shell\n        translate([0, 0, mixer_height/2])\n            cube([mixer_length, mixer_width, mixer_height], center=true);\n        \n        // Front cavity for motor\n        translate([mixer_length/2 - 20, 0, mixer_height/2])\n            cube([40, mixer_width - 6, mixer_height - 6], center=true);\n    }\n}\n\n// Handle module\nmodule handle() {\n    // Handle curve\n    difference() {\n        // Main handle shape\n        translate([-mixer_length/2 + 30, 0, mixer_height - 15])\n            rotate([90, 0, 0])\n                cylinder(h=80, r1=25, r2=25);\n        \n        // Handle grip hole\n        translate([-mixer_length/2 + 30, 0, mixer_height - 15])\n            rotate([90, 0, 0])\n                cylinder(h=80, r1=18, r2=18);\n    }\n    \n    // Handle base supports\n    translate([-mixer_length/2 + 15, 0, mixer_height - 30])\n        cube([30, mixer_width - 10, 30], center=true);\n}\n\n// Control buttons\nmodule buttons() {\n    // Power button\n    translate([-20, 0, mixer_height - 10])\n        cylinder(h=5, r=8);\n    \n    // Speed buttons\n    for(i = [0:2]) {\n        translate([-40 - i*12, -mixer_width/4, mixer_height - 10])\n            cube([8, 8, 5]);\n        translate([-40 - i*12, mixer_width/4, mixer_height - 10])\n            cube([8, 8, 5]);\n    }\n}\n\n// Beater attachment points\nmodule beaters() {\n    // Beater mount\n    translate([mixer_length/2 - 10, 0, mixer_height/2])\n        cylinder(h=20, r=15);\n    \n    // Beater holes\n    for(i = [-1:1:1]) {\n        translate([mixer_length/2 + 5, i*20, mixer_height/2])\n            cylinder(h=25, r=5);\n    }\n}\n\n// Air vents\nmodule vents() {\n    // Side vents\n    for(i = [0:3]) {\n        translate([mixer_length/2 - 50 - i*15, mixer_width/2 + 0.1, 40])\n            cube([10, wall_thickness, 5]);\n    }\n    \n    // Mirror vents\n    for(i = [0:3]) {\n        translate([mixer_length/2 - 50 - i*15, -mixer_width/2 - 0.1, 40])\n            cube([10, wall_thickness, 5]);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    // Cord entry point\n    translate([-mixer_length/2, 0, 30])\n        rotate([90, 0, 0])\n            cylinder(h=15, r=6);\n    \n    // Cord\n    translate([-mixer_length/2 - 30, 0, 30])\n        rotate([90, 0, 0])\n            cylinder(h=60, r=4);\n}\n\n// Assembly\nunion() {\n    mixer_body();\n    handle();\n    buttons();\n    beaters();\n    vents();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "electric_whisk",
    "openscad_code": "// Electric Whisk - Medium complexity realistic style\n// Overall dimensions: ~110mm tall, ~55mm wide\n\n// Wall thickness constant\nwall = 2;\n\n// Main body (motor housing)\nmodule body() {\n    difference() {\n        // Main cylindrical body\n        cylinder(h = 60, r = 25, $fn = 32);\n        \n        // Top dome\n        translate([0, 0, 60])\n            sphere(r = 25, $fn = 32);\n            \n        // Hollow inside\n        translate([0, 0, -1])\n            cylinder(h = 62, r = 23, $fn = 32);\n        translate([0, 0, 61])\n            sphere(r = 23, $fn = 32);\n    }\n}\n\n// Handle grip\nmodule handle() {\n    translate([0, 0, 70])\n        rotate([0, 180, 0])\n        difference() {\n            // Main handle shape\n            cylinder(h = 40, r1 = 15, r2 = 12, $fn = 16);\n            \n            // Grip texture rings\n            for(i = [0:4]) {\n                translate([0, 0, i * 8 + 2])\n                    cylinder(h = 3, r = 14, $fn = 16);\n            }\n            \n            // Hollow handle\n            translate([0, 0, -1])\n                cylinder(h = 42, r = 10, $fn = 16);\n        }\n}\n\n// Power button\nmodule power_button() {\n    translate([25, 0, 45])\n        difference() {\n            // Button housing\n            cube([8, 12, 4], center = true);\n            \n            // Button itself\n            translate([0, 0, 1])\n                cube([6, 10, 3], center = true);\n                \n            // Cutout for button\n            translate([0, 0, -1])\n                cube([4, 8, 6], center = true);\n        }\n}\n\n// Speed dial\nmodule speed_dial() {\n    translate([-25, 0, 35])\n        rotate([90, 0, 0])\n        difference() {\n            // Dial base\n            cylinder(h = 4, r = 8, $fn = 24);\n            \n            // Dial knob\n            translate([0, 0, 4])\n                cylinder(h = 3, r = 6, $fn = 6);\n                \n            // Indicator line\n            translate([0, 4, 5.5])\n                cube([8, 1, 1], center = true);\n                \n            // Hollow base\n            translate([0, 0, -1])\n                cylinder(h = 6, r = 4, $fn = 24);\n        }\n}\n\n// Whisk attachment connector\nmodule connector() {\n    translate([0, 0, 0])\n        difference() {\n            // Main connector cylinder\n            cylinder(h = 15, r = 12, $fn = 16);\n            \n            // Locking tabs (4 tabs)\n            for(i = [0:3]) {\n                rotate([0, 0, i * 90])\n                translate([10, 0, 5])\n                    cube([4, 3, 5], center = true);\n            }\n            \n            // Central hole for whisk shaft\n            translate([0, 0, -1])\n                cylinder(h = 17, r = 6, $fn = 16);\n                \n            // Keyway slot\n            translate([6, 0, -1])\n                cube([6, 3, 17], center = true);\n        }\n}\n\n// Whisk wires (simplified as cylinders)\nmodule whisk_wires() {\n    // Main loop\n    rotate_extrude(angle = 360, $fn = 32)\n        translate([22, 0, 0])\n            circle(r = 1.5, $fn = 12);\n            \n    // Crossing loop\n    rotate([0, 90, 0])\n        rotate_extrude(angle = 360, $fn = 32)\n            translate([22, 0, 0])\n                circle(r = 1.5, $fn = 12);\n                \n    // Connection stem\n    translate([0, 0, -10])\n        cylinder(h = 10, r = 6, $fn = 16);\n}\n\n// Cord entry point\nmodule cord_entry() {\n    translate([0, 25, 25])\n        rotate([90, 0, 0])\n        difference() {\n            // Cord housing\n            cylinder(h = 10, r = 5, $fn = 16);\n            \n            // Cord hole\n            translate([0, 0, -1])\n                cylinder(h = 12, r = 3, $fn = 16);\n        }\n}\n\n// Assemble the whisk\nunion() {\n    // Main body assembly\n    body();\n    \n    // Handle on top\n    handle();\n    \n    // Controls\n    power_button();\n    speed_dial();\n    \n    // Cord entry\n    cord_entry();\n    \n    // Connector at bottom\n    connector();\n    \n    // Whisk attachment (positioned below)\n    translate([0, 0, -50])\n        whisk_wires();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "thermometer",
    "openscad_code": "// Kitchen Thermometer - Realistic Style Medium Complexity\n// Digital probe-style thermometer with display, buttons, and probe\n\n// Overall dimensions (mm)\noverall_length = 120;\nbody_width = 25;\nbody_thickness = 15;\nprobe_length = 100;\nprobe_diameter = 4;\n\n// Wall thickness for 3D printing\nwall = 2;\n\n// Main body module\nmodule thermometer_body() {\n    // Main rectangular body with rounded edges\n    difference() {\n        // Outer rounded rectangle\n        hull() {\n            translate([body_width/2-wall, body_thickness/2-wall, 0])\n                cylinder(h=body_thickness, r=wall, $fn=20);\n            translate([-body_width/2+wall, body_thickness/2-wall, 0])\n                cylinder(h=body_thickness, r=wall, $fn=20);\n            translate([body_width/2-wall, -body_thickness/2+wall, 0])\n                cylinder(h=body_thickness, r=wall, $fn=20);\n            translate([-body_width/2+wall, -body_thickness/2+wall, 0])\n                cylinder(h=body_thickness, r=wall, $fn=20);\n        }\n        \n        // Hollow out interior\n        hull() {\n            translate([body_width/2-2*wall, body_thickness/2-2*wall, wall])\n                cylinder(h=body_thickness-2*wall, r=wall-1, $fn=20);\n            translate([-body_width/2+2*wall, body_thickness/2-2*wall, wall])\n                cylinder(h=body_thickness-2*wall, r=wall-1, $fn=20);\n            translate([body_width/2-2*wall, -body_thickness/2+2*wall, wall])\n                cylinder(h=body_thickness-2*wall, r=wall-1, $fn=20);\n            translate([-body_width/2+2*wall, -body_thickness/2+2*wall, wall])\n                cylinder(h=body_thickness-2*wall, r=wall-1, $fn=20);\n        }\n    }\n}\n\n// LCD display module\nmodule lcd_display() {\n    // Display frame\n    difference() {\n        // Outer frame\n        translate([0, body_thickness/2, body_thickness/2])\n            cube([body_width-6, 2, 8], center=true);\n        \n        // Inner cutout\n        translate([0, body_thickness/2+1, body_thickness/2])\n            cube([body_width-10, 1, 6], center=true);\n    }\n    \n    // Display screen\n    translate([0, body_thickness/2+1.1, body_thickness/2])\n        cube([body_width-12, 0.5, 4], center=true);\n}\n\n// Control buttons module\nmodule buttons() {\n    // Power button\n    translate([-body_width/4, -body_thickness/2-1, body_thickness/2+3])\n        cylinder(h=2, r=3, $fn=16);\n    \n    // Mode button\n    translate([0, -body_thickness/2-1, body_thickness/2+3])\n        cylinder(h=2, r=3, $fn=16);\n    \n    // Hold button\n    translate([body_width/4, -body_thickness/2-1, body_thickness/2+3])\n        cylinder(h=2, r=3, $fn=16);\n    \n    // Button labels\n    translate([-body_width/4, -body_thickness/2-2.1, body_thickness/2+3])\n        cube([0.5, 0.5, 0.5], center=true);\n    translate([0, -body_thickness/2-2.1, body_thickness/2+3])\n        cube([0.5, 0.5, 0.5], center=true);\n    translate([body_width/4, -body_thickness/2-2.1, body_thickness/2+3])\n        cube([0.5, 0.5, 0.5], center=true);\n}\n\n// Probe connector module\nmodule probe_connector() {\n    // Connector housing\n    difference() {\n        // Outer housing\n        translate([0, 0, body_thickness])\n            cylinder(h=5, r=6, $fn=20);\n        \n        // Inner hole\n        translate([0, 0, body_thickness-1])\n            cylinder(h=7, r=probe_diameter/2+1, $fn=20);\n    }\n    \n    // Strain relief\n    translate([0, 0, body_thickness+2.5])\n        cylinder(h=3, r=4, $fn=16);\n}\n\n// Probe module\nmodule probe() {\n    // Probe shaft\n    translate([0, 0, body_thickness+5])\n        cylinder(h=probe_length, r=probe_diameter/2, $fn=20);\n    \n    // Probe tip\n    translate([0, 0, body_thickness+5+probe_length])\n        cylinder(h=5, r1=probe_diameter/2, r2=0.5, $fn=20);\n    \n    // Measurement markings every 10mm\n    for(i=[1:10:probe_length-10]) {\n        translate([0, 0, body_thickness+5+i])\n            rotate([0, 90, 0])\n                cylinder(h=probe_diameter+1, r=0.5, $fn=8);\n    }\n}\n\n// Battery compartment\nmodule battery_compartment() {\n    // Compartment cover\n    difference() {\n        // Cover plate\n        translate([0, body_thickness/2-wall, body_thickness/2])\n            cube([body_width-8, wall, 10], center=true);\n        \n        // Screw holes\n        translate([-(body_width-8)/2+3, body_thickness/2-wall, body_thickness/2])\n            cylinder(h=wall+1, r=1, $fn=10);\n        translate([(body_width-8)/2-3, body_thickness/2-wall, body_thickness/2])\n            cylinder(h=wall+1, r=1, $fn=10);\n    }\n}\n\n// Assembly\nunion() {\n    thermometer_body();\n    lcd_display();\n    buttons();\n    probe_connector();\n    probe();\n    battery_compartment();\n}\n\n// Add grip texture lines\nfor(i=[-body_width/2+3:2:body_width/2-3]) {\n    translate([i, 0, body_thickness/2-0.1])\n        cube([0.5, body_thickness-4, 0.2]);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kitchen_scale",
    "openscad_code": "// Kitchen Scale - Realistic Style, Medium Complexity\n// External dimensions: ~120 x 100 x 30 mm\n\n$fn = 50;\nscale_base = 120;\nscale_depth = 100;\nscale_height = 25;\nwall = 2;\n\n// Base shell\nmodule base_shell() {\n    difference() {\n        // Outer shell\n        translate([0, 0, scale_height/2])\n            cube([scale_base, scale_depth, scale_height], center=true);\n        // Hollow inside\n        translate([0, 0, scale_height/2])\n            cube([scale_base-wall*2, scale_depth-wall*2, scale_height+1], center=true);\n    }\n}\n\n// Top plate (weighing platform)\nmodule weighing_platform() {\n    platform_w = scale_base - 20;\n    platform_d = scale_depth - 20;\n    platform_h = 3;\n    \n    difference() {\n        // Main platform\n        translate([0, 0, scale_height + platform_h/2])\n            cube([platform_w, platform_d, platform_h], center=true);\n        // Slight recess\n        translate([0, 0, scale_height + platform_h - 0.5])\n            cube([platform_w - 10, platform_d - 10, 2], center=true);\n    }\n    \n    // Non-slip rings\n    for (r = [platform_w/2 - 10, platform_w/2 - 20]) {\n        translate([0, 0, scale_height + platform_h + 0.1])\n            linear_extrude(height=0.5)\n                circle(r=r);\n    }\n}\n\n// LCD display housing\nmodule display_housing() {\n    housing_w = 50;\n    housing_d = 25;\n    housing_h = 8;\n    \n    translate([scale_base/2 - housing_w/2 - 5, \n               scale_depth/2 - housing_d/2 - 5, \n               scale_height + housing_h/2])\n        cube([housing_w, housing_d, housing_h], center=true);\n    \n    // LCD screen\n    translate([scale_base/2 - housing_w/2 - 5, \n               scale_depth/2 - housing_d/2 - 5, \n               scale_height + housing_h + 0.5])\n        cube([housing_w - 4, housing_d - 4, 0.5], center=true);\n}\n\n// Control buttons\nmodule buttons() {\n    button_d = 8;\n    button_h = 2;\n    \n    for (i = [0:2]) {\n        translate([scale_base/2 - 15 - i*12, \n                   scale_depth/2 - 40, \n                   scale_height + button_h/2 + 0.5])\n            cylinder(h=button_h, d=button_d);\n    }\n}\n\n// Feet for stability\nmodule feet() {\n    foot_d = 8;\n    foot_h = 3;\n    \n    positions = [[-scale_base/2 + 10, -scale_depth/2 + 10],\n                 [scale_base/2 - 10, -scale_depth/2 + 10],\n                 [-scale_base/2 + 10, scale_depth/2 - 10],\n                 [scale_base/2 - 10, scale_depth/2 - 10]];\n    \n    for (pos = positions) {\n        translate([pos[0], pos[1], foot_h/2])\n            cylinder(h=foot_h, d=foot_d);\n    }\n}\n\n// Battery compartment cover\nmodule battery_cover() {\n    cover_w = 40;\n    cover_d = 15;\n    cover_h = 1;\n    \n    translate([0, -scale_depth/2 + cover_d/2 + 5, scale_height - 2])\n        cube([cover_w, cover_d, cover_h], center=true);\n    \n    // Screw hole\n    translate([0, -scale_depth/2 + cover_d/2 + 5, scale_height - 2])\n        cylinder(h=3, d=3);\n}\n\n// Assembly\nunion() {\n    base_shell();\n    weighing_platform();\n    display_housing();\n    buttons();\n    feet();\n    battery_cover();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "timer",
    "openscad_code": "// Kitchen Timer - Realistic Style, Medium Complexity\n// Overall dimensions: ~80mm x 60mm x 90mm\n\n$fn = 32;\n\n// Main body module\nmodule timer_body() {\n    // Base shell - hollow with 2mm walls\n    difference() {\n        // Outer shell\n        cube([65, 50, 80], center = true);\n        \n        // Inner cavity\n        cube([61, 46, 76], center = true);\n    }\n}\n\n// Display panel\nmodule display_panel() {\n    // Display screen recess\n    translate([0, 20, 30])\n    difference() {\n        cube([35, 2, 20], center = true);\n        translate([0, 0, 1])\n        cube([31, 1.5, 16], center = true);\n    }\n    \n    // Display border\n    translate([0, 21.5, 30])\n    cube([37, 1, 22], center = true);\n}\n\n// Control buttons\nmodule control_buttons() {\n    // Button row\n    for (i = [0:2]) {\n        translate([-15 + i*15, -20, 25])\n        difference() {\n            // Button base\n            cylinder(h = 5, r = 6, center = true);\n            // Button top recess\n            translate([0, 0, 2.5])\n            cylinder(h = 2, r = 4.5, center = true);\n        }\n    }\n    \n    // Start/Stop button (larger)\n    translate([0, -20, 15])\n    difference() {\n        cylinder(h = 6, r = 8, center = true);\n        translate([0, 0, 3])\n        cylinder(h = 2, r = 6, center = true);\n    }\n}\n\n// Rotary dial\nmodule rotary_dial() {\n    // Dial base\n    translate([25, 0, 0])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h = 8, r = 15, center = true);\n        // Knurling pattern\n        for (i = [0:11]) {\n            rotate([0, 0, i*30])\n            translate([12, 0, 0])\n            cube([3, 2, 8], center = true);\n        }\n    }\n    \n    // Dial shaft\n    translate([25, 0, 10])\n    rotate([90, 0, 0])\n    cylinder(h = 10, r = 3, center = true);\n}\n\n// Feet\nmodule feet() {\n    for (x = [-25, 25])\n    for (y = [-18, 18]) {\n        translate([x, y, -41])\n        cylinder(h = 5, r = 4, center = true);\n    }\n}\n\n// Air vents\nmodule air_vents() {\n    // Rear vents\n    translate([-33, 0, 0])\n    for (i = [0:3]) {\n        translate([0, -15 + i*10, 20])\n        cube([2, 5, 15], center = true);\n    }\n}\n\n// Speaker grill\nmodule speaker_grill() {\n    translate([0, -25, -10])\n    difference() {\n        cube([30, 2, 20], center = true);\n        // Grill holes\n        for (i = [0:4]) {\n            for (j = [0:2]) {\n                translate([-12 + i*6, 0, -8 + j*8])\n                cylinder(h = 3, r = 1, center = true);\n            }\n        }\n    }\n}\n\n// Battery compartment\nmodule battery_compartment() {\n    translate([0, 0, -38])\n    difference() {\n        cube([40, 30, 5], center = true);\n        translate([0, 0, 2.5])\n        cube([36, 26, 1], center = true);\n    }\n    \n    // Battery cover screws\n    for (x = [-15, 15])\n    for (y = [-10, 10]) {\n        translate([x, y, -40.5])\n        cylinder(h = 2, r = 2, center = true);\n    }\n}\n\n// Assembly\nunion() {\n    timer_body();\n    display_panel();\n    control_buttons();\n    rotary_dial();\n    feet();\n    air_vents();\n    speaker_grill();\n    battery_compartment();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "alarm",
    "openscad_code": "// Kitchen Timer Alarm with Bell\n// Overall dimensions: ~90mm W x ~60mm D x ~120mm H\n// Wall thickness: 2mm\n\n$fn = 32;\n\nmodule body() {\n    difference() {\n        // Main body shell\n        translate([-40, -30, 0])\n            cube([80, 60, 60]);\n        \n        // Hollow out inside\n        translate([-38, -28, 2])\n            cube([76, 56, 56]);\n        \n        // Battery compartment slot\n        translate([-35, -26, -2])\n            cube([70, 52, 4]);\n    }\n}\n\nmodule front_face() {\n    difference() {\n        // Front plate\n        translate([-40, 30, 0])\n            cube([80, 2, 60]);\n        \n        // Display window\n        translate([-20, 30, 35])\n            cube([40, 2, 20]);\n        \n        // Speaker holes\n        for (x = [-30:8:30]) {\n            for (y = [8:8:40]) {\n                translate([x, 30, y])\n                    cylinder(h = 3, r = 1.5);\n            }\n        }\n    }\n}\n\nmodule timer_knob() {\n    // Timer dial\n    translate([0, 35, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 8, r1 = 15, r2 = 15);\n    \n    // Knob grip ridges\n    for (i = [0:15:360]) {\n        rotate([0, 0, i])\n            translate([0, 35, 50])\n                rotate([90, 0, 0])\n                    translate([12, 0, 0])\n                        cube([3, 1.5, 8]);\n    }\n    \n    // Pointer indicator\n    translate([0, 35, 58])\n        cube([20, 2, 2]);\n}\n\nmodule alarm_bell() {\n    // Bell dome\n    translate([30, 0, 70])\n        sphere(r = 12);\n    \n    // Bell base\n    translate([30, 0, 58])\n        cylinder(h = 12, r = 8);\n    \n    // Bell striker\n    translate([30, 0, 60])\n        cylinder(h = 20, r = 2);\n}\n\nmodule control_buttons() {\n    // Start/stop button\n    translate([-25, 35, 20])\n        cylinder(h = 5, r = 6);\n    \n    // Reset button\n    translate([-5, 35, 20])\n        cylinder(h = 5, r = 4);\n    \n    // Mode button\n    translate([15, 35, 20])\n        cylinder(h = 5, r = 4);\n}\n\nmodule feet() {\n    // Four rubber feet\n    for (x = [-30, 30]) {\n        for (y = [-20, 20]) {\n            translate([x, y, -3])\n                cylinder(h = 3, r = 5);\n        }\n    }\n}\n\nmodule back_support() {\n    // Rear stand\n    translate([0, -30, 0])\n        rotate([10, 0, 0])\n            cube([40, 2, 25]);\n}\n\n// Assembly\nunion() {\n    body();\n    front_face();\n    timer_knob();\n    alarm_bell();\n    control_buttons();\n    feet();\n    back_support();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "grinder",
    "openscad_code": "// Coffee Grinder Model - Medium Complexity\n// Overall dimensions: 120mm x 80mm x 180mm\n\n$fn = 50;\n\n// Main body parameters\nbody_w = 80;\nbody_d = 60;\nbody_h = 100;\n\n// Hopper parameters\nhopper_top_d = 60;\nhopper_bottom_d = 40;\nhopper_h = 50;\n\n// Base parameters\nbase_w = 100;\nbase_d = 80;\nbase_h = 15;\n\n// Drawer parameters\ndrawer_w = 50;\ndrawer_h = 30;\ndrawer_d = 70;\n\n// Crank parameters\ncrank_handle_l = 60;\ncrank_handle_r = 8;\n\nmodule grinder_body() {\n    // Main cylindrical body with wall thickness\n    difference() {\n        cylinder(h=body_h, d=body_w);\n        translate([0, 0, 2])\n            cylinder(h=body_h-2, d=body_w-4);\n    }\n    \n    // Top rim detail\n    translate([0, 0, body_h])\n        cylinder(h=5, d=body_w+4);\n}\n\nmodule hopper() {\n    // Conical hopper\n    difference() {\n        cylinder(h=hopper_h, d1=hopper_top_d, d2=hopper_bottom_d);\n        translate([0, 0, 2])\n            cylinder(h=hopper_h-2, d1=hopper_top_d-4, d2=hopper_bottom_d-4);\n    }\n    \n    // Hopper lid\n    translate([0, 0, hopper_h+2])\n        cylinder(h=3, d=hopper_top_d+2);\n}\n\nmodule base() {\n    // Main base\n    difference() {\n        cube([base_w, base_d, base_h], center=true);\n        translate([0, 0, 2])\n            cube([base_w-4, base_d-4, base_h], center=true);\n    }\n    \n    // Feet\n    for(x=[-1, 1]) {\n        for(y=[-1, 1]) {\n            translate([x*35, y*30, -base_h/2-2])\n                cylinder(h=4, d=10);\n        }\n    }\n}\n\nmodule drawer() {\n    // Drawer box\n    difference() {\n        cube([drawer_w, drawer_d, drawer_h], center=true);\n        translate([0, 0, 2])\n            cube([drawer_w-4, drawer_d-4, drawer_h-2], center=true);\n    }\n    \n    // Drawer front face\n    translate([0, drawer_d/2+2, 0])\n        cube([drawer_w+4, 4, drawer_h+4], center=true);\n    \n    // Drawer knob\n    translate([0, drawer_d/2+6, 0])\n        sphere(d=10);\n}\n\nmodule crank() {\n    // Crank axle\n    rotate([90, 0, 0])\n        cylinder(h=30, d=8);\n    \n    // Crank arm\n    translate([15, 0, 30])\n        rotate([0, 90, 0])\n            cylinder(h=crank_handle_l, d=crank_handle_r*2);\n    \n    // Crank handle\n    translate([15, crank_handle_l, 30])\n        rotate([90, 0, 0])\n            cylinder(h=15, d=crank_handle_r);\n}\n\nmodule adjustment_knob() {\n    // Adjustment ring\n    difference() {\n        cylinder(h=8, d=body_w+10);\n        translate([0, 0, 2])\n            cylinder(h=8, d=body_w+6);\n    }\n    \n    // Knob grip\n    for(i=[0:45:315]) {\n        rotate([0, 0, i])\n            translate([body_w/2+8, 0, 4])\n                cube([8, 3, 8], center=true);\n    }\n}\n\n// Assembly\ntranslate([0, 0, base_h/2])\n    base();\n\ntranslate([0, 0, base_h+body_h/2])\n    grinder_body();\n\ntranslate([0, 0, base_h+body_h+hopper_h/2])\n    hopper();\n\ntranslate([0, -drawer_d/2, base_h+drawer_h/2])\n    drawer();\n\ntranslate([0, 0, base_h+body_h/2+20])\n    rotate([0, 0, 45])\n        crank();\n\ntranslate([0, 0, base_h+body_h/2-10])\n    adjustment_knob();",
    "renders": true
  },
  {
    "kitchen_appliance": "coffee_grinder",
    "openscad_code": "// Coffee Grinder - Realistic Style, Medium Complexity\n// Dimensions: 90mm x 130mm x 180mm (W x D x H)\n\n// Main body with 2mm wall thickness\nmodule base_body() {\n    difference() {\n        // Outer shell\n        cube([90, 130, 120], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cube([86, 126, 118], center=true);\n    }\n}\n\n// Hopper for coffee beans\nmodule hopper() {\n    translate([0, 0, 70])\n    difference() {\n        // Main hopper shape - truncated pyramid\n        cylinder(h=60, r1=35, r2=25, center=true);\n        \n        // Hollow interior\n        translate([0, 0, 0])\n            cylinder(h=62, r1=33, r2=23, center=true);\n    }\n}\n\n// Hopper lid with knob\nmodule hopper_lid() {\n    translate([0, 0, 105])\n    union() {\n        // Lid disk\n        cylinder(h=5, r=37, center=true);\n        \n        // Knob on top\n        translate([0, 0, 5])\n            cylinder(h=8, r=6, center=true);\n    }\n}\n\n// Grinding adjustment dial\nmodule adjustment_dial() {\n    translate([0, 65, 50])\n    rotate([90, 0, 0])\n    difference() {\n        // Main dial cylinder\n        cylinder(h=15, r=20, center=true);\n        \n        // Grip ridges (8 of them)\n        for(i = [0:7]) {\n            rotate([0, 0, i * 45])\n                translate([0, 18, 0])\n                    cube([3, 4, 15], center=true);\n        }\n        \n        // Center hole\n        cylinder(h=16, r=3, center=true);\n    }\n}\n\n// Power button\nmodule power_button() {\n    translate([-40, 0, 20])\n    difference() {\n        // Button housing\n        cube([12, 20, 8], center=true);\n        \n        // Button depression\n        translate([0, 0, 2])\n            cube([10, 18, 6], center=true);\n        \n        // Actual button\n        translate([0, 0, -2])\n            cube([8, 16, 4], center=true);\n    }\n}\n\n// Ground coffee container\nmodule ground_container() {\n    translate([0, 0, -70])\n    difference() {\n        // Container body\n        cylinder(h=40, r=30, center=true);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h=38, r=28, center=true);\n        \n        // Pour spout\n        translate([0, 28, 15])\n            rotate([90, 0, 0])\n                cylinder(h=12, r1=10, r2=6, center=true);\n    }\n}\n\n// Container handle\nmodule container_handle() {\n    translate([0, 40, -70])\n    rotate([90, 0, 0])\n    difference() {\n        // Handle grip\n        cylinder(h=30, r=4, center=true);\n        \n        // Attachment posts\n        translate([0, -15, 0])\n            cylinder(h=5, r=6, center=true);\n        translate([0, 15, 0])\n            cylinder(h=5, r=6, center=true);\n    }\n}\n\n// Motor housing detail\nmodule motor_housing() {\n    translate([0, 0, -5])\n    difference() {\n        // Housing block\n        cube([70, 80, 30], center=true);\n        \n        // Ventilation slots (5 slots)\n        for(i = [-2:2]) {\n            translate([i * 12, 0, 0])\n                cube([8, 82, 32], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    base_body();\n    hopper();\n    hopper_lid();\n    adjustment_dial();\n    power_button();\n    \n    // Container assembly\n    ground_container();\n    container_handle();\n    \n    // Detail parts\n    motor_housing();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "spice_grinder",
    "openscad_code": "// Spice Grinder - Realistic Style, Medium Complexity\n// Overall dimensions: ~65mm diameter, ~120mm height\n// Wall thickness: 2mm throughout\n\n// Main body module\nmodule body() {\n    difference() {\n        // Main cylindrical body\n        cylinder(h=80, d=60, $fn=100);\n        \n        // Hollow center\n        translate([0,0,2])\n            cylinder(h=78, d=56, $fn=100);\n        \n        // Top rim chamfer\n        translate([0,0,79])\n            cylinder(h=2, d1=64, d2=60, $fn=100);\n    }\n}\n\n// Grinding chamber with teeth\nmodule grinding_chamber() {\n    difference() {\n        // Outer cylinder\n        cylinder(h=35, d=54, $fn=60);\n        \n        // Inner hollow\n        translate([0,0,2])\n            cylinder(h=33, d=50, $fn=60);\n        \n        // Teeth pattern\n        for(i=[0:11]) {\n            rotate([0,0,i*30])\n                translate([20,0,0])\n                    cube([8,3,31], center=true);\n        }\n    }\n}\n\n// Lid with viewing window\nmodule lid() {\n    difference() {\n        union() {\n            // Main lid disk\n            cylinder(h=8, d=62, $fn=100);\n            \n            // Grip ring\n            translate([0,0,8])\n                cylinder(h=5, d1=62, d2=58, $fn=100);\n        }\n        \n        // Center hole for viewing\n        translate([0,0,2])\n            cylinder(h=8, d=30, $fn=60);\n        \n        // Grip texture\n        for(i=[0:23]) {\n            rotate([0,0,i*15])\n                translate([28,0,8])\n                    cube([10,1,5], center=true);\n        }\n    }\n}\n\n// Base with motor housing\nmodule base() {\n    difference() {\n        union() {\n            // Motor housing\n            cylinder(h=25, d=60, $fn=100);\n            \n            // Base ring\n            translate([0,0,0])\n                cylinder(h=5, d=70, $fn=100);\n        }\n        \n        // Motor cavity\n        translate([0,0,5])\n            cylinder(h=20, d=56, $fn=100);\n        \n        // Ventilation slots\n        for(i=[0:5]) {\n            rotate([0,0,i*60])\n                translate([27,0,10])\n                    cube([15,2,10], center=true);\n        }\n        \n        // Power cord hole\n        translate([27,0,12.5])\n            rotate([90,0,0])\n                cylinder(h=15, d=6, $fn=20);\n    }\n}\n\n// Control button\nmodule button() {\n    translate([30,0,32]) {\n        difference() {\n            // Button housing\n            cylinder(h=8, d=12, $fn=30);\n            \n            // Button surface\n            translate([0,0,2])\n                cylinder(h=6, d=10, $fn=30);\n        }\n    }\n}\n\n// Assembly\ntranslate([0,0,0]) base();\ntranslate([0,0,25]) body();\ntranslate([0,0,27]) grinding_chamber();\ntranslate([0,0,87]) lid();\nbutton();",
    "renders": true
  },
  {
    "kitchen_appliance": "powerblend",
    "openscad_code": "// PowerBlend Kitchen Blender - Realistic Style, Medium Complexity\n// Overall dimensions: 150mm (H) x 100mm (W) x 100mm (D)\n\n$fn = 50;  // Smooth curves for 3D printing\n\nmodule base() {\n    // Main base housing with angled sides\n    difference() {\n        hull() {\n            translate([0, 0, 15]) cube([90, 90, 30], center=true);\n            translate([0, 0, -15]) cube([80, 80, 30], center=true);\n        }\n        \n        // Hollow interior\n        translate([0, 0, 10]) cube([84, 84, 40], center=true);\n        \n        // Ventilation slots on back\n        for(i = [-30:10:30]) {\n            translate([42, i, 0]) rotate([0, 90, 0]) \n                cylinder(h=5, d1=3, d2=4);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons and dial\n    translate([0, -42, 15]) {\n        // Panel base\n        cube([60, 8, 25], center=true);\n        \n        // Power button\n        translate([-20, 5, 5]) \n            cylinder(h=3, d=8);\n        translate([-20, 5, 6]) \n            sphere(d=6);\n            \n        // Speed dial\n        translate([20, 5, 0]) {\n            cylinder(h=8, d=15);\n            translate([0, 0, 4]) rotate([90, 0, 0]) \n                cylinder(h=15, d=2, center=true);\n        }\n        \n        // Mode indicators (LEDs)\n        for(pos = [-10, 0, 10]) {\n            translate([pos, 5, 4]) \n                sphere(d=3);\n        }\n    }\n}\n\nmodule motor_housing() {\n    // Cylindrical motor housing above base\n    translate([0, 0, 35]) {\n        difference() {\n            cylinder(h=25, d=70);\n            \n            // Cooling vents\n            for(angle = [0:30:330]) {\n                rotate([0, 0, angle]) \n                    translate([30, 0, 10]) \n                        cube([20, 4, 5], center=true);\n            }\n        }\n    }\n}\n\nmodule drive_coupling() {\n    // Drive coupling for jar attachment\n    translate([0, 0, 60]) {\n        cylinder(h=8, d=25);\n        \n        // Drive teeth\n        for(i = [0:72:287]) {\n            rotate([0, 0, i]) \n                translate([8, 0, 4]) \n                    cube([6, 3, 8], center=true);\n        }\n    }\n}\n\nmodule jar_base() {\n    // Base of the blending jar\n    translate([0, 0, 68]) {\n        difference() {\n            cylinder(h=15, d=80);\n            translate([0, 0, 5]) cylinder(h=10, d=74);\n        }\n    }\n}\n\nmodule jar_body() {\n    // Main jar with handle\n    translate([0, 0, 83]) {\n        difference() {\n            // Main jar cylinder\n            cylinder(h=60, d=80);\n            translate([0, 0, 5]) cylinder(h=55, d=74);\n            \n            // Handle attachment holes\n            translate([40, 0, 30]) rotate([0, 90, 0]) \n                cylinder(h=10, d=8);\n            translate([40, 0, 45]) rotate([0, 90, 0]) \n                cylinder(h=10, d=8);\n        }\n    }\n}\n\nmodule handle() {\n    // Ergonomic handle\n    translate([40, 0, 113]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                hull() {\n                    cylinder(h=40, d=15, center=true);\n                    translate([0, 25, 0]) cylinder(h=15, d=12, center=true);\n                }\n                cylinder(h=45, d=8, center=true);\n            }\n        }\n    }\n}\n\nmodule lid() {\n    // Removable lid with cap\n    translate([0, 0, 150]) {\n        difference() {\n            cylinder(h=5, d=82);\n            translate([0, 0, 2]) cylinder(h=5, d=76);\n        }\n        \n        // Cap for adding ingredients\n        translate([20, 0, 5]) {\n            cylinder(h=8, d=25);\n            translate([0, 0, 8]) sphere(d=25);\n            translate([0, 0, 2]) cylinder(h=6, d=20);\n        }\n    }\n}\n\nmodule rubber_feet() {\n    // Anti-slip rubber feet\n    for(x = [-35, 35]) {\n        for(y = [-35, 35]) {\n            translate([x, y, -28]) \n                cylinder(h=3, d=10);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    control_panel();\n    motor_housing();\n    drive_coupling();\n    jar_base();\n    jar_body();\n    handle();\n    lid();\n    rubber_feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "slicemaster",
    "openscad_code": "// SliceMaster Kitchen Appliance - Realistic Medium Complexity\n// Overall dimensions: 120 x 90 x 80 mm\n\n// Parameters\n$fn = 50;\nwall_thickness = 2;\nbase_width = 120;\nbase_depth = 90;\nbase_height = 80;\n\n// Main body module\nmodule slicemaster_body() {\n    // Base enclosure\n    difference() {\n        // Outer shell\n        cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness/2])\n        cube([base_width - wall_thickness*2, base_depth - wall_thickness*2, base_height - wall_thickness*2], center=true);\n        \n        // Top opening for lid\n        translate([0, 0, base_height/2 - wall_thickness])\n        cube([base_width - 30, base_depth - 20, wall_thickness*2], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([base_width/2 - 15, 0, base_height/2 - 10]) {\n        // Panel base\n        cube([20, 60, 15], center=true);\n        \n        // Power button\n        translate([-5, 20, 8])\n        cylinder(h=5, r=4);\n        \n        // Speed dial\n        translate([0, 0, 8])\n        cylinder(h=5, r=6);\n        \n        // Slice thickness dial\n        translate([5, -20, 8])\n        cylinder(h=5, r=6);\n    }\n}\n\n// Food chute\nmodule food_chute() {\n    translate([0, base_depth/2 - 10, 20]) {\n        // Main chute tube\n        rotate([90, 0, 0])\n        cylinder(h=40, r1=25, r2=20);\n        \n        // Chute support\n        translate([0, -20, 0])\n        cube([40, 10, 40], center=true);\n    }\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    translate([0, 0, 0]) {\n        // Central hub\n        cylinder(h=15, r=8);\n        \n        // Blades\n        for(i = [0:45:315]) {\n            rotate([0, 0, i])\n            translate([0, 12, 7.5])\n            cube([25, 2, 15], center=true);\n        }\n    }\n}\n\n// Collection tray\nmodule collection_tray() {\n    translate([0, -base_depth/2 + 15, -base_height/2 + 10]) {\n        difference() {\n            // Tray body\n            cube([base_width - 40, 30, 15], center=true);\n            \n            // Interior cavity\n            translate([0, 0, wall_thickness])\n            cube([base_width - 40 - wall_thickness*2, 30 - wall_thickness*2, 15], center=true);\n        }\n        \n        // Handle\n        translate([0, -12, 0])\n        cube([base_width - 40, 5, 5], center=true);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-base_width/2 + 15, base_width/2 - 15])\n    for(y = [-base_depth/2 + 15, base_depth/2 - 15]) {\n        translate([x, y, -base_height/2])\n        cylinder(h=5, r=5);\n    }\n}\n\n// Assembly\nslicemaster_body();\ncontrol_panel();\nfood_chute();\ntranslate([0, 0, -base_height/2 + 25])\nblade_assembly();\ncollection_tray();\nfeet();",
    "renders": true
  },
  {
    "kitchen_appliance": "fusionmix",
    "openscad_code": "// FusionMix Kitchen Appliance - Realistic Medium Complexity\n// Dimensions: ~110mm height, ~80mm base diameter\n\n$fn = 50;\n\n// Main body module\nmodule main_body() {\n    // Base cylinder with slight taper\n    cylinder(h = 45, r1 = 38, r2 = 35, center = false);\n    \n    // Motor housing top\n    translate([0, 0, 45])\n        cylinder(h = 25, r = 35, center = false);\n    \n    // Control panel housing\n    translate([35, 0, 55])\n        rotate([0, 90, 0])\n            cylinder(h = 15, r = 8, center = false);\n}\n\n// Jar container with handle\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h = 60, r = 25, center = false);\n        translate([0, 0, -1])\n            cylinder(h = 62, r = 23, center = false);\n    }\n    \n    // Jar base\n    translate([0, 0, -2])\n        cylinder(h = 5, r = 27, center = false);\n    \n    // Handle\n    translate([25, 0, 30])\n        rotate([90, 0, 0])\n            difference() {\n                torus(12, 3);\n                translate([0, -15, 0])\n                    cube([30, 30, 6], center = true);\n            }\n    \n    // Lid\n    translate([0, 0, 60])\n        difference() {\n            cylinder(h = 8, r = 25.5, center = false);\n            translate([0, 0, 2])\n                cylinder(h = 6, r = 24, center = false);\n        }\n    \n    // Lid handle\n    translate([0, 0, 68])\n        cylinder(h = 5, r = 5, center = false);\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel face\n    translate([35, 0, 55])\n        rotate([0, 90, 0])\n            cube([30, 20, 2], center = true);\n    \n    // Power button\n    translate([35, -6, 55])\n        rotate([0, 90, 0])\n            cylinder(h = 3, r = 4, center = true);\n    \n    // Pulse button\n    translate([35, 0, 55])\n        rotate([0, 90, 0])\n            cylinder(h = 3, r = 4, center = true);\n    \n    // Speed dial\n    translate([35, 6, 55])\n        rotate([0, 90, 0])\n        difference() {\n            cylinder(h = 5, r = 6, center = true);\n            translate([0, 0, -3])\n                cube([12, 2, 6], center = true);\n        }\n}\n\n// Feet for stability\nmodule feet() {\n    for(i = [0:120:360]) {\n        rotate([0, 0, i])\n            translate([30, 0, -2])\n                cylinder(h = 4, r = 5, center = false);\n    }\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    translate([0, 0, 43])\n        difference() {\n            cylinder(h = 5, r = 10, center = false);\n            translate([0, 0, 2])\n                cylinder(h = 3, r = 8, center = false);\n        }\n    \n    // Blades\n    for(i = [0:90:360]) {\n        rotate([0, 0, i])\n            translate([0, 0, 45])\n                rotate([90, 0, 0])\n                    cube([20, 2, 1], center = true);\n    }\n}\n\n// Ventilation slots\nmodule vents() {\n    for(i = [0:15:150]) {\n        rotate([0, 0, i])\n            translate([35, 0, 35])\n                cube([15, 2, 8], center = true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-35, 0, 10])\n        rotate([0, 90, 0])\n            cylinder(h = 30, r = 3, center = false);\n    \n    // Cord strain relief\n    translate([-35, 0, 10])\n        rotate([0, 90, 0])\n            cylinder(h = 8, r = 5, center = false);\n}\n\n// Assembly\nunion() {\n    // Base structure\n    union() {\n        main_body();\n        feet();\n        vents();\n    }\n    \n    // Attachable parts\n    jar();\n    blade_assembly();\n    control_panel();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juiceflow",
    "openscad_code": "// Juiceflow Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 110mm x 80mm x 180mm overall\n\n$fn = 50;\n\n// Main body\nmodule main_body() {\n    // Base\n    translate([0, 0, 10])\n    cube([90, 70, 100], center=true);\n    \n    // Top rounded section\n    translate([0, 0, 65])\n    scale([1, 0.8, 0.5])\n    sphere(d=85);\n}\n\n// Juice container\nmodule juice_container() {\n    // Container base\n    translate([0, 0, 115])\n    cylinder(h=60, d1=60, d2=65);\n    \n    // Container lip\n    translate([0, 0, 175])\n    cylinder(h=5, d=70);\n    \n    // Handle\n    translate([35, 0, 140])\n    rotate([90, 0, 0])\n    cylinder(h=30, d=8);\n    \n    // Handle grip\n    translate([35, 0, 140])\n    rotate([90, 0, 0])\n    translate([0, 0, 25])\n    sphere(d=12);\n}\n\n// Motor housing on back\nmodule motor_housing() {\n    // Housing block\n    translate([0, -40, 70])\n    cube([80, 30, 60], center=true);\n    \n    // Ventilation slots\n    for (i = [-20:10:20]) {\n        translate([i, -55, 70])\n        cube([5, 15, 40], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel surface\n    translate([-50, 0, 85])\n    rotate([0, -15, 0])\n    cube([25, 50, 5], center=true);\n    \n    // Power button\n    translate([-50, -15, 85])\n    rotate([0, -15, 0])\n    cylinder(h=3, d=10);\n    \n    // Speed dial\n    translate([-50, 15, 85])\n    rotate([0, -15, 0])\n    cylinder(h=8, d=15);\n    \n    // Indicator lights\n    for (i = [-10:10:10]) {\n        translate([-50, i, 88])\n        rotate([0, -15, 0])\n        sphere(d=3);\n    }\n}\n\n// Base with feet\nmodule base_with_feet() {\n    // Base plate\n    translate([0, 0, 5])\n    cube([100, 80, 10], center=true);\n    \n    // Rubber feet\n    for (x = [-35:70:70]) {\n        for (y = [-25:50:50]) {\n            translate([x, y, 0])\n            cylinder(h=5, d=10);\n        }\n    }\n}\n\n// Juice spout\nmodule juice_spout() {\n    // Spout base\n    translate([0, 30, 100])\n    rotate([90, 0, 0])\n    cylinder(h=20, d1=25, d2=20);\n    \n    // Spout tip\n    translate([0, 30, 100])\n    rotate([90, 0, 0])\n    translate([0, 0, 20])\n    cylinder(h=15, d1=20, d2=15);\n}\n\n// Blade assembly (inside container)\nmodule blade_assembly() {\n    // Central shaft\n    translate([0, 0, 120])\n    cylinder(h=40, d=12);\n    \n    // Blades\n    for (i = [0:60:300]) {\n        rotate([0, 0, i])\n        translate([20, 0, 130])\n        cube([40, 3, 15], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    base_with_feet();\n    main_body();\n    motor_housing();\n    control_panel();\n    juice_container();\n    juice_spout();\n    \n    // Make blade assembly visible as translucent\n    %blade_assembly();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "turbochop",
    "openscad_code": "// TurboChop â€“ compact 3D-printable food-processor\n// Overall size 110 mm tall, 90 mm wide, 100 mm deep\n// Wall thickness 2 mm\n\n$fn = 36;\n\nmodule body() {\n    // Main cylindrical body, 2 mm walls\n    difference() {\n        cylinder(h = 60, d = 84);\n        translate([0, 0, 2]) cylinder(h = 58, d = 80);\n    }\n}\n\nmodule base() {\n    // Motor base, 2 mm walls\n    difference() {\n        cube([90, 100, 40], center = true);\n        translate([0, 0, 2]) cube([86, 96, 38], center = true);\n    }\n}\n\nmodule handle() {\n    // Ergonomic side handle\n    translate([0, 50, 30]) rotate([0, 90, 0])\n    difference() {\n        cylinder(h = 40, d = 20);\n        translate([-1, 0, 0]) cylinder(h = 42, d = 16);\n    }\n}\n\nmodule lid() {\n    // Top lid with feed tube\n    difference() {\n        cylinder(h = 12, d = 86);\n        translate([0, 0, 2]) cylinder(h = 12, d = 82);\n    }\n    // Feed chute tube\n    translate([0, 25, 12])\n    difference() {\n        cylinder(h = 30, d = 30);\n        translate([0, 0, 2]) cylinder(h = 30, d = 26);\n    }\n    // Plunger\n    translate([0, 25, 42])\n    difference() {\n        cylinder(h = 28, d = 26);\n        translate([0, 0, 2]) cylinder(h = 28, d = 22);\n    }\n}\n\nmodule controls() {\n    // Buttons on front\n    for (x = [-20, 0, 20]) {\n        translate([x, -50, 15])\n        difference() {\n            cube([10, 6, 8], center = true);\n            translate([0, 0, 2]) cube([8, 4, 6], center = true);\n        }\n    }\n    // Speed dial\n    translate([35, -50, 15])\n    difference() {\n        cylinder(h = 10, d = 18);\n        translate([0, 0, 2]) cylinder(h = 12, d = 14);\n    }\n}\n\nmodule blade() {\n    // Simple S-shaped blade\n    translate([0, 0, 20])\n    for (a = [0, 120, 240])\n        rotate([0, 0, a])\n        translate([0, 25, 0])\n        rotate([90, 0, 0])\n        scale([1, 0.2, 8])\n        cube([1, 1, 1], center = true);\n}\n\n// Assembly\nunion() {\n    color(\"lightgray\") base();\n    color(\"white\") translate([0, 0, 20]) body();\n    color(\"white\") translate([0, 0, 60]) handle();\n    color(\"white\") translate([0, 0, 80]) lid();\n    color(\"darkgray\") controls();\n    color(\"silver\") blade();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "vitablend",
    "openscad_code": "// Vitablend Kitchen Blender - Realistic Style, Medium Complexity\n// Total height ~120mm, base ~80mm diameter, suitable for 3D printing\n\n$fn = 50;  // Smooth curves\n\nmodule blender_base() {\n    // Main base cylinder with slight taper\n    cylinder(h=30, r1=40, r2=38, center=false);\n    \n    // Base bottom ring for stability\n    translate([0,0,-1])\n        cylinder(h=4, r1=42, r2=42, center=false);\n    \n    // Control panel protrusion\n    translate([35, 0, 15])\n        rotate([0,90,0])\n            cylinder(h=25, r=8, center=false);\n    \n    // Buttons\n    for(i=[-1:1]) {\n        translate([42, i*6, 15])\n            cube([3,4,2], center=true);\n    }\n    \n    // Power LED\n    translate([42, 0, 22])\n        sphere(r=2);\n}\n\nmodule motor_housing() {\n    // Tapered motor section above base\n    translate([0,0,30])\n        cylinder(h=25, r1=35, r2=30, center=false);\n    \n    // Ventilation slots\n    for(a=[0:45:315]) {\n        rotate([0,0,a])\n            translate([32,0,37.5])\n                cube([8,2,10], center=true);\n    }\n}\n\nmodule jar_base() {\n    // Jar coupling ring\n    translate([0,0,55])\n        cylinder(h=8, r1=28, r2=25, center=false);\n    \n    // Rubber gasket\n    translate([0,0,55])\n        cylinder(h=2, r1=25.5, r2=25.5, center=false);\n}\n\nmodule jar_body() {\n    // Main jar - slightly tapered cylinder\n    translate([0,0,63])\n        cylinder(h=45, r1=24, r2=26, center=false);\n    \n    // Handle mounting block\n    translate([26,0,80])\n        cube([8,12,25], center=true);\n    \n    // Handle grip\n    translate([34,0,80])\n        rotate([90,0,0])\n            cylinder(h=30, r=4, center=true);\n    \n    // Handle top connector\n    translate([26,0,95])\n        cube([8,12,5], center=true);\n}\n\nmodule lid_assembly() {\n    // Main lid\n    translate([0,0,108])\n        cylinder(h=5, r1=27, r2=24, center=false);\n    \n    // Lid handle\n    translate([0,0,113])\n        cylinder(h=8, r1=8, r2=0, center=false);\n    \n    // Pour spout\n    difference() {\n        translate([0,22,108])\n            cube([20,10,5], center=true);\n        translate([0,22,108])\n            cube([16,8,7], center=true);\n    }\n}\n\nmodule blades() {\n    // Blade assembly\n    translate([0,0,63])\n        rotate([90,0,0])\n            cylinder(h=15, r=3, center=false);\n    \n    // Blades (4 arms)\n    for(a=[0:90:270]) {\n        rotate([0,0,a])\n            translate([10,0,63])\n                cube([20,1.5,1], center=true);\n    }\n}\n\n// Assemble all parts\nunion() {\n    blender_base();\n    motor_housing();\n    jar_base();\n    jar_body();\n    lid_assembly();\n    blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "whirlmix",
    "openscad_code": "// Whirlmix Kitchen Blender - Medium Complexity Realistic Style\n\n$fn = 50;\n\n// Overall dimensions\nblender_height = 120;\nbase_diameter = 80;\njar_height = 70;\njar_diameter = 60;\n\nmodule blender_base() {\n    // Main base cylinder\n    cylinder(h = 30, d = base_diameter, center = true);\n    \n    // Motor housing bottom\n    translate([0, 0, 15])\n        cylinder(h = 20, d = base_diameter - 10, center = true);\n    \n    // Control panel\n    translate([-30, 0, 15])\n        cube([15, 40, 5], center = true);\n    \n    // Buttons\n    for(i = [1:3]) {\n        translate([-30, -15 + i*10, 18])\n            cylinder(h = 2, d = 6, center = true);\n    }\n    \n    // Power indicator light\n    translate([-30, 15, 18])\n        cylinder(h = 1, d = 4, center = true);\n    \n    // Ventilation slits\n    for(i = [1:8]) {\n        rotate([0, 0, i*45])\n            translate([0, base_diameter/2 - 5, 5])\n                cube([20, 2, 10], center = true);\n    }\n}\n\nmodule blender_jar() {\n    // Main jar body\n    translate([0, 0, 50])\n        cylinder(h = jar_height, d = jar_diameter, center = true);\n    \n    // Jar bottom\n    translate([0, 0, 15])\n        cylinder(h = 2, d = jar_diameter, center = true);\n    \n    // Handle\n    translate([jar_diameter/2 + 10, 0, 85])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h = 40, d = 15, center = true);\n                cylinder(h = 41, d = 10, center = true);\n            }\n    \n    // Lid\n    translate([0, 0, 105])\n        cylinder(h = 5, d = jar_diameter + 2, center = true);\n    \n    // Lid handle\n    translate([0, 0, 108])\n        cylinder(h = 10, d = 15, center = true);\n    \n    // Measurement markings\n    for(i = [1:4]) {\n        translate([jar_diameter/2 - 2, 0, 30 + i*15])\n            cube([5, 1, 0.5], center = true);\n    }\n}\n\nmodule blender_blades() {\n    // Blade assembly base\n    translate([0, 0, 15])\n        cylinder(h = 5, d = 20, center = true);\n    \n    // Blades\n    for(i = [1:4]) {\n        rotate([0, 0, i*90])\n            translate([8, 0, 15])\n                cube([16, 3, 1], center = true);\n    }\n}\n\n// Assemble the blender\nunion() {\n    blender_base();\n    blender_jar();\n    blender_blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "freshsqueeze",
    "openscad_code": "// FreshSqueeze Citrus Juicer - Medium Complexity Realistic Style\n// Overall dimensions: ~120mm tall x 100mm wide x 120mm deep\n\n$fn = 36;  // Smooth curves for 3D printing\n\n// Main body assembly\nmodule juicer_base() {\n    // Base housing - hollow cylinder with wall thickness\n    difference() {\n        cylinder(h = 50, d = 80);\n        translate([0, 0, 2])\n            cylinder(h = 48, d = 76);\n    }\n    \n    // Bottom plate for stability\n    translate([0, 0, -2])\n        cylinder(h = 4, d = 85);\n    \n    // Power cord entry\n    translate([40, 0, 25])\n        rotate([90, 0, 0])\n            cylinder(h = 15, d = 8);\n}\n\n// Motor housing dome\nmodule motor_housing() {\n    difference() {\n        // Outer dome\n        translate([0, 0, 50])\n            scale([1, 1, 0.8])\n                sphere(d = 85);\n        \n        // Inner hollow\n        translate([0, 0, 52])\n            scale([1, 1, 0.8])\n                sphere(d = 81);\n    }\n}\n\n// Juice cone with ribs\nmodule juice_cone() {\n    union() {\n        // Main cone\n        cylinder(h1 = 25, h2 = 0, r1 = 15, r2 = 0);\n        \n        // Ribs for grip\n        for(i = [0:30:359]) {\n            rotate([0, 0, i])\n                translate([0, 7, 10])\n                    cube([2, 8, 15], center = true);\n        }\n    }\n}\n\n// Strainer basket\nmodule strainer() {\n    difference() {\n        // Basket shape\n        cylinder(h = 25, d1 = 70, d2 = 65);\n        \n        // Hollow inside\n        translate([0, 0, 2])\n            cylinder(h = 23, d1 = 66, d2 = 61);\n        \n        // Drain holes\n        for(i = [0:45:359]) {\n            for(j = [10:8:20]) {\n                rotate([0, 0, i])\n                    translate([30, 0, j])\n                        cylinder(h = 2, d = 3);\n            }\n        }\n    }\n    \n    // Pour spout\n    translate([0, 35, 15])\n        rotate([0, -30, 0])\n            cube([20, 8, 6], center = true);\n}\n\n// Juice container\nmodule juice_container() {\n    difference() {\n        // Main container\n        translate([0, 0, -20])\n            cylinder(h = 40, d = 75);\n        \n        // Inside cavity\n        translate([0, 0, -18])\n            cylinder(h = 38, d = 71);\n        \n        // Handle hole\n        translate([0, 35, 0])\n            rotate([90, 0, 0])\n                cylinder(h = 25, d = 15);\n    }\n    \n    // Handle grip\n    translate([0, 45, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 20, d = 12);\n}\n\n// Control buttons\nmodule controls() {\n    // Power button\n    translate([35, -20, 55])\n        cylinder(h = 5, d = 12);\n    \n    // Reverse button\n    translate([20, -25, 55])\n        cylinder(h = 3, d = 8);\n    \n    // LED indicator\n    translate([45, -15, 58])\n        sphere(d = 4);\n}\n\n// Assembly\nunion() {\n    // Main structure\n    juicer_base();\n    motor_housing();\n    \n    // Working parts\n    translate([0, 0, 75])\n        juice_cone();\n    \n    translate([0, 0, 50])\n        strainer();\n    \n    // Container sits below\n    translate([0, 0, -20])\n        juice_container();\n    \n    // Controls on side\n    controls();\n    \n    // Feet for stability\n    for(i = [45:90:315]) {\n        rotate([0, 0, i])\n            translate([35, 0, -2])\n                cylinder(h = 5, d = 8);\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "crushpro",
    "openscad_code": "// CrushPro Kitchen Blender - Realistic Style, Medium Complexity\n// Overall dimensions: ~120mm height, ~80mm diameter base\n\n$fn = 50;\n\n// Main module\nmodule crushpro_blender() {\n    // Base housing with motor\n    difference() {\n        // Main cylindrical base\n        cylinder(h = 35, d = 80, center = true);\n        \n        // Bottom recess for motor ventilation\n        translate([0, 0, -18])\n            cylinder(h = 5, d = 70, center = true);\n        \n        // Front display recess\n        translate([35, 0, 5])\n            rotate([0, 90, 0])\n            cube([25, 15, 3], center = true);\n    }\n    \n    // Rubber feet\n    for (i = [0:3]) {\n        rotate([0, 0, i * 90])\n        translate([30, 0, -18.5])\n            cylinder(h = 3, d = 8);\n    }\n    \n    // Motor housing top ring\n    difference() {\n        translate([0, 0, 18])\n            cylinder(h = 5, d = 82);\n        translate([0, 0, 18])\n            cylinder(h = 6, d = 78);\n    }\n    \n    // Jar base coupling\n    translate([0, 0, 21])\n        cylinder(h = 8, d = 45);\n    \n    // Drive shaft\n    translate([0, 0, 29])\n        cylinder(h = 15, d = 8);\n    \n    // Control panel\n    translate([40, 0, 5]) {\n        // Panel base\n        rotate([0, 90, 0])\n            cube([20, 12, 2], center = true);\n        \n        // Power button\n        translate([2, -4, 0])\n            rotate([0, 90, 0])\n            cylinder(h = 3, d = 6);\n        \n        // Speed dial\n        translate([2, 4, 0])\n            rotate([0, 90, 0])\n            cylinder(h = 2, d = 10);\n    }\n    \n    // Glass jar\n    translate([0, 0, 45])\n        difference() {\n            // Main jar body\n            cylinder(h = 60, d1 = 65, d2 = 75);\n            \n            // Hollow interior\n            translate([0, 0, -2])\n                cylinder(h = 64, d1 = 61, d2 = 71);\n            \n            // Pour spout\n            translate([37.5, 0, 55])\n                rotate([90, 0, 0])\n                cylinder(h = 15, d1 = 12, d2 = 8);\n        }\n    \n    // Jar handle\n    translate([32.5, 0, 75])\n        difference() {\n            // Handle grip\n            rotate([0, 0, 90])\n                translate([0, 0, 0])\n                    cylinder(h = 50, d = 15);\n            \n            // Hollow grip\n            rotate([0, 0, 90])\n                translate([0, 0, 0])\n                    cylinder(h = 50, d = 10);\n        }\n    \n    // Lid assembly\n    translate([0, 0, 105])\n        difference() {\n            // Lid top\n            cylinder(h = 5, d = 75);\n            \n            // Lid seal groove\n            translate([0, 0, 2])\n                cylinder(h = 3, d = 71);\n        }\n    \n    // Lid handle\n    translate([0, 0, 108])\n        cylinder(h = 15, d = 20);\n    \n    // Measurement markings (simplified as grooves)\n    for (mark = [1:4]) {\n        translate([37.5, 0, 50 + mark * 10])\n            rotate([90, 0, 0])\n            cube([0.5, 5, 1], center = true);\n    }\n}\n\n// Render the complete model\ncrushpro_blender();",
    "renders": true
  },
  {
    "kitchen_appliance": "pureechef",
    "openscad_code": "// PureeChef Kitchen Blender - Realistic Style, Medium Complexity\n// Overall dimensions: 120mm width x 150mm height x 120mm depth\n\n$fn = 32;\n\n// Main module for the complete appliance\nmodule puree_chef() {\n    // Base unit\n    base();\n    \n    // Motor housing\n    motor_housing();\n    \n    // Control panel\n    control_panel();\n    \n    // Blending jar\n    jar();\n    \n    // Handle\n    handle();\n    \n    // Lid\n    lid();\n}\n\n// Base with rubber feet\nmodule base() {\n    // Main base body\n    difference() {\n        cube([80, 90, 25], center=true);\n        // Hollow interior\n        translate([0, 0, 10])\n            cube([76, 86, 15], center=true);\n    }\n    \n    // Rubber feet (4 corners)\n    for(x = [-35, 35])\n        for(y = [-40, 40])\n            translate([x, y, -12.5])\n                cylinder(h=3, r=4);\n}\n\n// Motor housing\nmodule motor_housing() {\n    // Main cylindrical housing\n    cylinder(h=70, r=40);\n    \n    // Top rim detail\n    translate([0, 0, 70])\n        cylinder(h=5, r1=42, r2=40);\n    \n    // Ventilation slots\n    for(i = [0:11]) {\n        rotate([0, 0, i*30])\n            translate([35, 0, 30])\n                cube([10, 2, 30]);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel surface\n    translate([0, 45, 30])\n        rotate([90, 0, 0])\n            difference() {\n                cube([60, 30, 5]);\n                translate([-55, -25, 2])\n                    cube([50, 20, 3]);\n            }\n    \n    // Power button\n    translate([-20, 50, 32])\n        cylinder(h=3, r=6);\n    \n    // Pulse button\n    translate([0, 50, 32])\n        cylinder(h=3, r=6);\n    \n    // Speed dial\n    translate([20, 50, 32])\n        cylinder(h=5, r=8);\n    \n    // Dial indicator\n    translate([20, 50, 37])\n        cube([2, 6, 1]);\n}\n\n// Blending jar\nmodule jar() {\n    // Main jar body\n    translate([0, 0, 105])\n        cylinder(h=80, r1=35, r2=30);\n    \n    // Jar base threads\n    translate([0, 0, 100])\n        cylinder(h=5, r=30);\n    \n    // Measurement markings\n    for(i = [1:4]) {\n        translate([32, 0, 110 + i*15])\n            rotate([0, 90, 0])\n                cube([10, 1, 0.5]);\n    }\n}\n\n// Handle assembly\nmodule handle() {\n    // Main handle\n    translate([35, 0, 145])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=60, r=8);\n                translate([0, 0, -7])\n                    cylinder(h=74, r=5);\n            }\n    \n    // Handle grip\n    translate([35, 0, 145])\n        rotate([0, 90, 0])\n            cylinder(h=50, r=6);\n}\n\n// Lid with center cap\nmodule lid() {\n    // Main lid\n    translate([0, 0, 185])\n        difference() {\n            cylinder(h=8, r=36);\n            translate([0, 0, 2])\n                cylinder(h=8, r=32);\n        }\n    \n    // Center cap\n    translate([0, 0, 193])\n        cylinder(h=5, r=15);\n    \n    // Pour spout\n    translate([25, 0, 185])\n        rotate([0, -30, 0])\n            cylinder(h=15, r1=6, r2=4);\n}\n\n// Generate the complete model\npuree_chef();",
    "renders": true
  },
  {
    "kitchen_appliance": "blendforce",
    "openscad_code": "// BlendForce Kitchen Blender - Realistic Style, Medium Complexity\n// Dimensions: ~80mm tall, ~50mm base diameter, 3D printable with 2mm walls\n\n$fn = 32;  // Smooth curves\n\n// Main assembly\nmodule blendforce() {\n    union() {\n        // Base unit\n        base();\n        \n        // Jar assembly\n        translate([0, 0, 25]) jar();\n        \n        // Lid assembly\n        translate([0, 0, 55]) lid();\n        \n        // Control panel\n        translate([0, -22, 8]) control_panel();\n        \n        // Handle\n        translate([20, 0, 40]) handle();\n    }\n}\n\n// Base unit with motor housing\nmodule base() {\n    difference() {\n        // Main cylindrical base\n        cylinder(h = 25, r = 25);\n        \n        // Ventilation slots\n        for(i = [0:45:315]) {\n            rotate([0, 0, i])\n                translate([23, 0, 10])\n                    cube([4, 2, 12], center = true);\n        }\n        \n        // Power cord hole\n        translate([-23, 0, 5])\n            rotate([0, 90, 0])\n                cylinder(h = 8, r = 3);\n    }\n    \n    // Rubber feet\n    for(i = [45:90:315]) {\n        rotate([0, 0, i])\n            translate([20, 0, 0])\n                cylinder(h = 3, r = 4);\n    }\n}\n\n// Blender jar with measurement markings\nmodule jar() {\n    difference() {\n        // Main jar body\n        cylinder(h = 30, r1 = 18, r2 = 15);\n        \n        // Hollow interior\n        translate([0, 0, -1])\n            cylinder(h = 32, r1 = 16, r2 = 13);\n        \n        // Measurement markings (subtle indentations)\n        union() {\n            for(i = [0:5:25]) {\n                translate([0, 0, i])\n                    rotate_extrude()\n                        translate([17.5, 0, 0])\n                            square([0.5, 0.3]);\n            }\n        }\n    }\n    \n    // Blade assembly base\n    translate([0, 0, -1])\n        difference() {\n            cylinder(h = 3, r = 8);\n            cylinder(h = 3.5, r = 6);\n        }\n    \n    // Blades (simplified)\n    color(\"silver\")\n        for(i = [0:120:240]) {\n            rotate([0, 0, i])\n                translate([0, 0, -0.5])\n                    cube([15, 2, 0.5], center = true);\n        }\n}\n\n// Lid with removable cap\nmodule lid() {\n    difference() {\n        // Main lid\n        cylinder(h = 5, r = 15.5);\n        \n        // Inner lip\n        translate([0, 0, -1])\n            cylinder(h = 6, r = 13.5);\n        \n        // Cap opening\n        translate([0, 0, 2])\n            cylinder(h = 5, r = 6);\n    }\n    \n    // Removable cap\n    translate([0, 0, 7])\n        cylinder(h = 3, r = 6.2);\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    difference() {\n        // Panel base\n        translate([0, 0, 0])\n            cube([25, 10, 2], center = true);\n        \n        // Button holes\n        translate([-8, 0, 1])\n            cube([6, 4, 2], center = true);\n        translate([0, 0, 1])\n            cube([6, 4, 2], center = true);\n        translate([8, 0, 1])\n            cube([6, 4, 2], center = true);\n    }\n    \n    // Buttons\n    color(\"red\")\n        translate([-8, 0, 2.5])\n            cube([5, 3, 1], center = true);\n    color(\"green\")\n        translate([0, 0, 2.5])\n            cube([5, 3, 1], center = true);\n    color(\"blue\")\n        translate([8, 0, 2.5])\n            cube([5, 3, 1], center = true);\n    \n    // Speed dial\n    translate([0, -6, 1])\n        cylinder(h = 5, r = 4);\n    translate([0, -6, 6])\n        cylinder(h = 2, r = 5);\n}\n\n// Handle for jar\nmodule handle() {\n    difference() {\n        // Main handle\n        translate([0, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h = 25, r = 5);\n        \n        // Handle hole\n        translate([0, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h = 27, r = 3);\n    }\n    \n    // Handle grip\n    color(\"black\")\n        translate([0, 0, -2])\n            rotate([0, 90, 0])\n                cylinder(h = 15, r = 5.5);\n}\n\n// Render the complete model\nblendforce();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixmate",
    "openscad_code": "// MixMate Kitchen Blender (medium complexity â€“ 3D-printable)\n\n// Overall scale factor â€“ change this to resize the whole appliance\nscale_factor = 1;\n\n// Wall thickness for 3D printing\nwall = 2;\n\n// Main body dimensions\nbase_w = 90 * scale_factor;\nbase_d = 90 * scale_factor;\nbase_h = 40 * scale_factor;\n\n// Jar dimensions\njar_r = 35 * scale_factor;\njar_h = 65 * scale_factor;\njar_wall = wall;\n\n// Motor housing on top\nmotor_h = 25 * scale_factor;\nmotor_r = 30 * scale_factor;\n\n// Buttons panel\npanel_w = 40 * scale_factor;\npanel_h = 15 * scale_factor;\npanel_d = 5 * scale_factor;\n\n// Blade assembly\nblade_shaft_r = 5 * scale_factor;\nblade_shaft_h = 25 * scale_factor;\nblade_len = 25 * scale_factor;\nblade_th = 1 * scale_factor;\n\n// Feet\nfoot_r = 5 * scale_factor;\nfoot_h = 4 * scale_factor;\n\nmodule base() {\n    difference() {\n        // Main block\n        cube([base_w, base_d, base_h], center = true);\n        \n        // Hollow inside for electronics\n        translate([0, 0, -wall/2])\n            cube([base_w - 2*wall, base_d - 2*wall, base_h], center = true);\n        \n        // Cable exit slot\n        translate([base_w/2 - wall, 0, -base_h/2])\n            cube([wall, 15 * scale_factor, 10 * scale_factor], center = false);\n    }\n}\n\nmodule jar() {\n    difference() {\n        // Cylinder body\n        cylinder(h = jar_h, r = jar_r, center = false);\n        \n        // Hollow cavity\n        translate([0, 0, jar_wall])\n            cylinder(h = jar_h, r = jar_r - jar_wall, center = false);\n    }\n    \n    // Bottom thickened for threads\n    translate([0, 0, 0])\n        cylinder(h = 5 * scale_factor, r = jar_r, center = false);\n}\n\nmodule motor_housing() {\n    difference() {\n        cylinder(h = motor_h, r = motor_r, center = false);\n        \n        // Vent slots\n        for (i = [0:4]) {\n            rotate([0, 0, i * 72])\n                translate([motor_r - wall, 0, motor_h/2])\n                    cube([wall, 4 * scale_factor, motor_h * 0.8], center = true);\n        }\n    }\n}\n\nmodule buttons_panel() {\n    translate([-base_w/2 - panel_d/2, 0, base_h/2 - panel_h/2]) {\n        difference() {\n            cube([panel_d, panel_w, panel_h], center = true);\n            \n            // Two buttons\n            translate([0, -panel_w/4, 0])\n                cube([panel_d + 1, 10 * scale_factor, 4 * scale_factor], center = true);\n            translate([0, panel_w/4, 0])\n                cube([panel_d + 1, 10 * scale_factor, 4 * scale_factor], center = true);\n        }\n    }\n}\n\nmodule blades() {\n    // Shaft\n    cylinder(h = blade_shaft_h, r = blade_shaft_r, center = false);\n    \n    // Four blades\n    for (i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([0, blade_len/2, blade_shaft_h - blade_th])\n                cube([blade_len, blade_th, blade_th * 3], center = true);\n    }\n}\n\nmodule feet() {\n    // Four rubber feet\n    for (x = [-1, 1])\n        for (y = [-1, 1])\n            translate([x * (base_w/2 - foot_r), y * (base_d/2 - foot_r), -base_h/2 - foot_h/2])\n                cylinder(h = foot_h, r = foot_r, center = true);\n}\n\n// Assembly\nunion() {\n    // Base with feet\n    base();\n    feet();\n    \n    // Buttons panel attached to base\n    buttons_panel();\n    \n    // Motor housing on top center of base\n    translate([0, 0, base_h/2 + motor_h/2])\n        motor_housing();\n    \n    // Jar sits on base\n    translate([0, 0, base_h/2])\n        jar();\n    \n    // Blades inside jar\n    translate([0, 0, base_h/2 + 5 * scale_factor])\n        blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicecraft",
    "openscad_code": "// JuiceCraft compact juicer â€“ realistic medium-complexity OpenSCAD model\n// Overall size â‰ˆ 120 mm Ã— 110 mm Ã— 180 mm â€“ printable at 0.2 mm layer height\n$fn = 36;\n\n// Wall thickness\nwt = 2;\n\nmodule main_body() {\n    // Motor housing â€“ hollow cylinder with chamfered top\n    difference() {\n        cylinder(h = 90, r = 50);\n        translate([0, 0, wt]) cylinder(h = 90 - wt, r = 50 - wt);\n    }\n    translate([0, 0, 90]) {\n        cylinder(h = 10, r1 = 50, r2 = 45); // chamfer\n    }\n}\n\nmodule base() {\n    // Circular base with rubber feet\n    difference() {\n        cylinder(h = 15, r = 55);\n        translate([0, 0, wt]) cylinder(h = 15, r = 55 - wt);\n    }\n    // Four rubber feet\n    for (a = [0:90:270]) {\n        rotate([0, 0, a]) translate([45, 0, 0])\n            cylinder(h = 3, r = 5);\n    }\n}\n\nmodule pulp_bin() {\n    // Semi-cylindrical pulp collector that snaps on the side\n    difference() {\n        rotate_extrude(angle = 180) translate([50, 0, 0]) circle(r = 35);\n        translate([0, 0, wt]) rotate_extrude(angle = 180)\n            translate([50, 0, 0]) circle(r = 35 - wt);\n    }\n    // Snap ridge\n    translate([50, 0, 0]) cube([wt, 70, 5], center = true);\n}\n\nmodule juice_jug() {\n    // 250 ml transparent jug\n    difference() {\n        translate([0, 0, 15]) cylinder(h = 60, r = 30);\n        translate([0, 0, 15 + wt]) cylinder(h = 60, r = 30 - wt);\n    }\n    // Spout\n    translate([30 - 2, 0, 45]) rotate([0, 90, 0])\n        cylinder(h = 20, r1 = 8, r2 = 4);\n    // Handle\n    translate([30, 0, 45]) rotate([0, 90, 0])\n        difference() {\n            cylinder(h = 50, r = 6);\n            translate([-6, 0, -1]) cube([12, 12, 52]);\n        }\n}\n\nmodule feed_chute() {\n    // Wide stainless-steel feed tube on top\n    translate([0, 0, 100]) {\n        cylinder(h = 50, r = 20);\n        translate([0, 0, 50]) cylinder(h = 10, r1 = 20, r2 = 22);\n    }\n    // Internal taper for food guide\n    difference() {\n        translate([0, 0, 100]) cylinder(h = 60, r = 22);\n        translate([0, 0, 100 + wt]) cylinder(h = 60, r = 22 - wt);\n    }\n}\n\nmodule control_panel() {\n    // Front panel with three soft-touch buttons\n    translate([0, 50, 60]) {\n        cube([60, wt, 20], center = true);\n        for (i = [-1:1]) {\n            translate([i * 15, -wt / 2 - 0.1, 0])\n                cube([10, wt + 0.2, 8], center = true);\n        }\n    }\n    // Dial for speed\n    translate([0, 50, 85]) {\n        cylinder(h = 5, r = 12);\n        translate([0, 0, 5]) cylinder(h = 5, r = 8);\n    }\n}\n\nmodule power_cord() {\n    // Simple cord stub at back\n    rotate([90, 0, 0]) translate([0, -45, -10])\n        cylinder(h = 30, r = 5);\n}\n\n// Assembly\nunion() {\n    base();\n    translate([0, 0, 15]) main_body();\n    translate([0, 0, 15]) pulp_bin();\n    juice_jug();\n    feed_chute();\n    control_panel();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chopexpress",
    "openscad_code": "// ChopExpress mini food chopper â€“ simplified but recognizable\n// Overall height â‰ˆ 110 mm, footprint â‰ˆ 85 mm Ã— 85 mm\n// 2 mm wall thickness everywhere for easy 3-D printing\n\n$fn = 36;\n\n// Main body\nmodule body() {\n    difference() {\n        // Main bowl (cylinder with 2 mm thick walls)\n        cylinder(h = 70, d = 85, center = false);\n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h = 68, d = 81, center = false);\n    }\n}\n\n// Motor top cap / lid\nmodule lid() {\n    difference() {\n        // Outer shell\n        cylinder(h = 25, d = 85);\n        // Recess for bowl lip\n        translate([0, 0, 2])\n            cylinder(h = 23, d = 81);\n    }\n    // Central hub for blade axis\n    translate([0, 0, 12.5])\n        cylinder(h = 12, d = 18);\n}\n\n// Simple two-blade rotor\nmodule blades() {\n    difference() {\n        // Central hub\n        cylinder(h = 10, d = 10);\n        // Blade arms\n        for (a = [0, 120, 240])\n            rotate([0, 0, a])\n                translate([20, -2, 3])\n                    cube([40, 4, 4]);\n    }\n}\n\n// Tiny control panel on lid top\nmodule panel() {\n    translate([0, 30, 25]) {\n        // Panel base\n        cube([30, 10, 3], center = true);\n        // Push button\n        translate([-8, 0, 2])\n            cylinder(h = 5, d = 6);\n        // Pulse slider\n        translate([8, 0, 2])\n            cube([12, 6, 4], center = true);\n    }\n}\n\n// Rubber feet\nmodule feet() {\n    for (p = [[-35, -35], [35, -35], [35, 35], [-35, 35]])\n        translate([p[0], p[1], -3])\n            cylinder(h = 3, d = 8);\n}\n\n// Assemble the complete ChopExpress\nunion() {\n    // Body\n    translate([0, 0, 0])\n        body();\n    // Lid\n    translate([0, 0, 70])\n        lid();\n    // Blades inside bowl\n    translate([0, 0, 30])\n        blades();\n    // Control panel\n    panel();\n    // Feet under base\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendlab",
    "openscad_code": "// BlendLab Blender - Realistic Medium Complexity\n// Dimensions in mm - designed for 3D printing\n// Overall height ~120mm, base diameter ~85mm\n\n$fn = 32;  // Smooth curves\nwall_thickness = 2;\n\n// Main assembly\nmodule blendlab() {\n    union() {\n        // Motor base\n        translate([0, 0, 0]) base();\n        \n        // Glass jar\n        translate([0, 0, 35]) jar();\n        \n        // Lid assembly\n        translate([0, 0, 85]) lid();\n    }\n}\n\n// Motor base with control panel\nmodule base() {\n    difference() {\n        // Main base cylinder\n        cylinder(h = 35, r1 = 42, r2 = 38);\n        \n        // Bottom recess for weight distribution\n        translate([0, 0, -0.1]) cylinder(h = 5, r1 = 35, r2 = 35);\n        \n        // Motor shaft hole\n        translate([0, 0, 32]) cylinder(h = 5, r = 6);\n    }\n    \n    // Control panel - slightly angled\n    translate([35, 0, 25]) rotate([0, -15, 0]) {\n        difference() {\n            // Panel body\n            cube([20, 30, 3]);\n            \n            // Button holes\n            for(i = [0:2]) {\n                translate([-15, -10 + i*10, -0.1]) \n                    cylinder(h = 4, r = 3, $fn = 16);\n            }\n        }\n        \n        // Buttons\n        for(i = [0:2]) {\n            translate([-15, -10 + i*10, 1.5]) \n                color(\"red\") cylinder(h = 1.5, r = 2.8, $fn = 16);\n        }\n    }\n    \n    // Ventilation slots on bottom\n    for(i = [0:11]) {\n        rotate([0, 0, i*30]) {\n            translate([25, -1, 2]) cube([15, 2, 1]);\n        }\n    }\n    \n    // Rubber feet\n    for(a = [45:120:360]) {\n        rotate([0, 0, a]) {\n            translate([30, 0, -1]) cylinder(h = 2, r = 3);\n        }\n    }\n}\n\n// Glass blending jar\nmodule jar() {\n    difference() {\n        // Main jar body - tapered\n        cylinder(h = 45, r1 = 35, r2 = 30);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness]) \n            cylinder(h = 45 - wall_thickness, r1 = 33, r2 = 28);\n    }\n    \n    // Handle\n    translate([35, 0, 22]) rotate([0, 90, 0]) {\n        difference() {\n            // Handle grip\n            cylinder(h = 25, r = 5);\n            \n            // Hollow handle\n            translate([0, 0, wall_thickness]) \n                cylinder(h = 25, r = 3);\n        }\n        \n        // Handle supports\n        translate([0, -12.5, 0]) rotate([90, 0, 0]) \n            cylinder(h = 5, r = 5);\n        translate([0, 12.5, 0]) rotate([90, 0, 0]) \n            cylinder(h = 5, r = 5);\n    }\n    \n    // Measurement markings\n    for(i = [1:4]) {\n        translate([-33, 0, i*8]) cube([5, 0.5, 0.5]);\n    }\n}\n\n// Lid assembly\nmodule lid() {\n    difference() {\n        // Main lid disk\n        cylinder(h = 8, r = 30.5);\n        \n        // Top recess\n        translate([0, 0, -0.1]) cylinder(h = 3, r = 25);\n    }\n    \n    // Plug for adding ingredients\n    translate([0, 15, 6]) rotate([0, 0, 0]) {\n        difference() {\n            // Plug body\n            cylinder(h = 10, r1 = 8, r2 = 6);\n            \n            // Plug hole\n            translate([0, 0, wall_thickness]) \n                cylinder(h = 10, r1 = 6, r2 = 4);\n        }\n        \n        // Plug grip\n        translate([0, 0, 10]) sphere(r = 5);\n    }\n    \n    // Sealing ring\n    translate([0, 0, -1]) cylinder(h = 2, r = 31.5);\n}\n\n// Blade assembly inside jar\nmodule blades() {\n    translate([0, 0, 30]) {\n        for(i = [0:2]) {\n            rotate([0, 0, i*120]) {\n                // Blade support\n                translate([0, 0, 0]) cube([20, 2, 1]);\n                \n                // Angled cutting edge\n                translate([10, 0, 0.5]) rotate([0, -30, 0]) \n                    cube([10, 1, 0.5]);\n            }\n        }\n        \n        // Center hub\n        cylinder(h = 3, r = 5);\n    }\n}\n\n// Render the complete model\nblendlab();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixmaster",
    "openscad_code": "// Mixmaster Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: ~120mm width x ~100mm depth x ~180mm height\n// Wall thickness: 2mm for 3D printing\n\nmodule base() {\n    // Main body base\n    difference() {\n        hull() {\n            cube([80, 90, 40], center = true);\n            translate([0, 0, -5]) cube([70, 80, 30], center = true);\n        }\n        // Hollow interior\n        translate([0, 0, -2]) cube([76, 86, 36], center = true);\n    }\n}\n\nmodule motor_housing() {\n    // Motor housing on top\n    difference() {\n        translate([0, 0, 25]) cube([60, 70, 50], center = true);\n        // Ventilation slots\n        for(i = [-20:5:20]) {\n            translate([i, 0, 50]) cube([3, 30, 10], center = true);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, 48, 20]) {\n        difference() {\n            cube([40, 2, 30], center = true);\n            // Speed dial\n            translate([0, 0, 10]) cylinder(h = 3, r = 8, $fn = 32);\n        }\n        // Control buttons\n        translate([-12, 2, 5]) cube([8, 4, 6], center = true);\n        translate([12, 2, 5]) cube([8, 4, 6], center = true);\n        // Power LED\n        translate([0, 2, -5]) cylinder(h = 1, r = 2, $fn = 16);\n    }\n}\n\nmodule stand_supports() {\n    // Front and rear stands\n    for(y = [-35, 35]) {\n        translate([0, y, -25]) {\n            difference() {\n                cylinder(h = 30, r = 8, $fn = 32);\n                translate([0, 0, 2]) cylinder(h = 26, r = 6, $fn = 32);\n            }\n        }\n    }\n}\n\nmodule mixing_head() {\n    // Rotating mixing head assembly\n    translate([0, 0, 55]) {\n        // Pivot housing\n        rotate([0, 90, 0]) {\n            difference() {\n                cylinder(h = 20, r = 12, $fn = 32);\n                translate([0, 0, 2]) cylinder(h = 16, r = 10, $fn = 32);\n            }\n        }\n        // Mixing arm\n        translate([0, -20, 0]) {\n            rotate([90, 0, 0]) {\n                difference() {\n                    cylinder(h = 50, r = 8, $fn = 32);\n                    translate([0, 0, 2]) cylinder(h = 46, r = 6, $fn = 32);\n                }\n                // Mixing attachment socket\n                translate([0, -27, 0]) cylinder(h = 10, r = 6, $fn = 32);\n            }\n        }\n    }\n}\n\nmodule bowl_support() {\n    // Support ring for mixing bowl\n    translate([0, -40, -10]) {\n        difference() {\n            cylinder(h = 8, r = 30, $fn = 64);\n            translate([0, 0, 2]) cylinder(h = 4, r = 28, $fn = 64);\n        }\n    }\n}\n\nmodule power_cord() {\n    // Power cord exit\n    translate([42, 0, 0]) {\n        rotate([0, 90, 0]) {\n            difference() {\n                cylinder(h = 15, r = 5, $fn = 16);\n                translate([0, 0, 2]) cylinder(h = 11, r = 3, $fn = 16);\n            }\n        }\n    }\n}\n\n// Assemble the mixmaster\nunion() {\n    base();\n    motor_housing();\n    control_panel();\n    stand_supports();\n    mixing_head();\n    bowl_support();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicejet",
    "openscad_code": "// JuiceJet Kitchen Appliance (Medium Complexity)\n// Dimensions: ~120mm tall, ~100mm wide, ~120mm deep\n\n$fn = 50;\n\n// Main body\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([80, 80, 100], center = true);\n        \n        // Hollow interior\n        translate([0, 0, -2])\n            cube([76, 76, 96], center = true);\n    }\n}\n\n// Juice container (transparent)\nmodule juice_container() {\n    difference() {\n        // Main container\n        cylinder(h = 60, r = 25);\n        \n        // Hollow inside\n        translate([0, 0, 2])\n            cylinder(h = 58, r = 23);\n        \n        // Pour spout\n        translate([0, 25, 55])\n            rotate([90, 0, 0])\n                cylinder(h = 15, r1 = 12, r2 = 8);\n    }\n}\n\n// Motor housing (base)\nmodule motor_housing() {\n    difference() {\n        cube([85, 85, 30], center = true);\n        \n        // Top chamfer\n        translate([0, 0, 15])\n            cylinder(h = 20, r1 = 45, r2 = 42);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-30, 30], y = [-30, 30]) {\n        translate([x, y, -18])\n            cylinder(h = 8, r = 6);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([0, 45, 30])\n        cube([60, 10, 20], center = true);\n    \n    // Power button\n    translate([-20, 51, 30])\n        cylinder(h = 5, r = 8);\n    \n    // Speed dial\n    translate([20, 51, 30])\n        cylinder(h = 5, r = 10);\n    \n    // Indicator lights\n    for(i = [-1, 0, 1]) {\n        translate([i * 10, 51, 40])\n            sphere(r = 3);\n    }\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 52])\n            cylinder(h = 8, r = 28);\n        \n        // Handle\n        translate([0, 0, 60])\n            cube([15, 30, 10], center = true);\n        \n        // Feed tube\n        translate([0, 0, 65])\n            cylinder(h = 20, r = 15);\n        \n        // Feed tube hollow\n        translate([0, 0, 67])\n            cylinder(h = 18, r = 13);\n    }\n}\n\n// Pusher for feed tube\nmodule pusher() {\n    translate([0, 0, 90])\n        cylinder(h = 30, r = 12);\n}\n\n// Side handles\nmodule handles() {\n    // Left handle\n    translate([-45, 0, 20])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h = 40, r = 8);\n                translate([0, 0, -10])\n                    cylinder(h = 60, r = 5);\n            }\n    \n    // Right handle\n    mirror([1, 0, 0])\n        translate([-45, 0, 20])\n            rotate([0, 90, 0])\n                difference() {\n                    cylinder(h = 40, r = 8);\n                    translate([0, 0, -10])\n                        cylinder(h = 60, r = 5);\n                }\n}\n\n// Assembly\nunion() {\n    // Base assembly\n    color(\"darkslategray\")\n        motor_housing();\n    \n    color(\"darkslategray\")\n        feet();\n    \n    // Main body\n    color(\"silver\")\n        translate([0, 0, 65])\n            main_body();\n    \n    // Juice container\n    color(\"gold\", 0.6)\n        translate([0, 0, 100])\n            juice_container();\n    \n    // Lid assembly\n    color(\"silver\")\n        lid();\n    \n    color(\"forestgreen\")\n        pusher();\n    \n    // Controls\n    color(\"black\")\n        control_panel();\n    \n    // Handles\n    color(\"darkslategray\")\n        handles();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "sliceworks",
    "openscad_code": "// Sliceworks kitchen appliance - medium complexity realistic food slicer\n// Dimensions: ~120mm wide x 80mm deep x 100mm tall\n// Wall thickness: 2mm throughout\n\n// Main body module\nmodule slicer_body() {\n    difference() {\n        // Main housing\n        translate([0, 0, 30]) \n            cube([100, 70, 60], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 30]) \n            cube([96, 66, 58], center=true);\n    }\n    \n    // Base plate\n    translate([0, 0, 10]) \n        cube([110, 80, 20], center=true);\n    \n    // Rubber feet\n    for(x = [-45, 45])\n        for(y = [-30, 30])\n            translate([x, y, 0])\n                cylinder(h=3, r=5, center=true);\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    // Blade guard\n    difference() {\n        translate([-45, 0, 60]) \n            rotate([0, 90, 0]) \n                cylinder(h=50, r1=30, r2=25);\n        \n        translate([-45, 0, 60]) \n            rotate([0, 90, 0]) \n                cylinder(h=50, r1=28, r2=23);\n    }\n    \n    // Blade\n    translate([-50, 0, 60]) \n        rotate([0, 90, 0]) \n            cylinder(h=2, r=28);\n    \n    // Blade hub\n    translate([-50, 0, 60]) \n        rotate([0, 90, 0]) \n            cylinder(h=8, r=8);\n}\n\n// Food carriage\nmodule food_carriage() {\n    // Carriage base\n    translate([30, 0, 40]) \n        cube([40, 50, 10], center=true);\n    \n    // Carriage walls\n    difference() {\n        translate([30, 0, 50]) \n            cube([38, 48, 20], center=true);\n        \n        translate([30, 0, 50]) \n            cube([34, 44, 18], center=true);\n    }\n    \n    // Thumb guard\n    translate([50, 0, 65]) \n        cube([5, 40, 8], center=true);\n    \n    // Adjustment knob posts\n    for(i = [-1, 1])\n        translate([45, i*20, 35]) \n            cylinder(h=15, r=3);\n}\n\n// Thickness adjustment\nmodule thickness_knob() {\n    // Knob base\n    translate([50, 0, 25]) \n        cylinder(h=10, r=12);\n    \n    // Knob grip\n    for(i = [0:45:315])\n        rotate([0, 0, i])\n            translate([50, 8, 30]) \n                cube([3, 6, 3], center=true);\n    \n    // Thickness scale\n    translate([50, 15, 25]) \n        cube([20, 2, 8], center=true);\n}\n\n// Power switch\nmodule power_switch() {\n    // Switch housing\n    translate([0, 40, 65]) \n        cube([20, 8, 12], center=true);\n    \n    // Switch toggle\n    translate([0, 44, 65]) \n        cube([10, 3, 8], center=true);\n}\n\n// Food pusher\nmodule food_pusher() {\n    // Handle\n    translate([30, 0, 75]) \n        cylinder(h=30, r=5);\n    \n    // Grip\n    translate([30, 0, 90]) \n        sphere(r=8);\n    \n    // Pusher plate\n    translate([30, 0, 60]) \n        cube([35, 35, 3], center=true);\n}\n\n// Assembly\nunion() {\n    slicer_body();\n    blade_assembly();\n    food_carriage();\n    thickness_knob();\n    power_switch();\n    food_pusher();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendsphere",
    "openscad_code": "// BlendSphere Kitchen Appliance (Smoothie Blender)\n// Realistic style, medium complexity\n// Overall size: ~120mm height x 100mm diameter\n\n$fn = 48;\n\n// Main body dimensions\nbase_d = 100;           // Base diameter\nbase_h = 30;            // Base height\nmotor_h = 40;           // Motor housing height\njar_d = 85;             // Jar diameter\njar_h = 70;             // Jar height\nlid_d = 80;             // Lid diameter\nlid_h = 8;              // Lid height\n\n// Wall thickness\nwall_t = 2;\n\nmodule base() {\n    // Main base cylinder\n    difference() {\n        cylinder(h = base_h, d = base_d);\n        translate([0, 0, wall_t])\n            cylinder(h = base_h, d = base_d - 2*wall_t);\n    }\n    \n    // Control panel\n    translate([base_d/2 - 15, 0, base_h - 8])\n        rotate([90, 0, 0])\n        difference() {\n            cube([30, 8, 4]);\n            translate([wall_t, wall_t, -1])\n                cube([30 - 2*wall_t, 8 - 2*wall_t, 6]);\n        }\n    \n    // Buttons on panel\n    for(i = [-1, 0, 1]) {\n        translate([base_d/2 - 15 + 10 + i*8, 0, base_h - 4])\n            rotate([90, 0, 0])\n            cylinder(h = 2, d = 5);\n    }\n    \n    // Rubber feet\n    for(a = [0:90:270]) {\n        rotate([0, 0, a + 45])\n        translate([(base_d/2 - 8), 0, 0])\n        cylinder(h = 3, d = 6);\n    }\n}\n\nmodule motor_housing() {\n    // Motor housing\n    difference() {\n        cylinder(h = motor_h, d = base_d - 10);\n        translate([0, 0, wall_t])\n            cylinder(h = motor_h, d = base_d - 10 - 2*wall_t);\n    }\n    \n    // Ventilation slots\n    for(h = [0:10:motor_h - 10]) {\n        for(a = [0:30:330]) {\n            rotate([0, 0, a])\n            translate([base_d/2 - 15, 0, h + base_h + 5])\n                cube([12, 2, 5]);\n        }\n    }\n}\n\nmodule blade_assembly() {\n    // Blade hub\n    difference() {\n        cylinder(h = 8, d = 25);\n        translate([0, 0, wall_t])\n            cylinder(h = 8, d = 25 - 2*wall_t);\n    }\n    \n    // Blades (4 arms)\n    for(a = [0:90:270]) {\n        rotate([0, 0, a])\n        translate([0, 0, 4])\n        linear_extrude(height = 0.8)\n            polygon(points=[[0,0], [15,3], [25,0], [15,-3]]);\n    }\n}\n\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h = jar_h, d1 = jar_d, d2 = jar_d - 10);\n        translate([0, 0, wall_t])\n            cylinder(h = jar_h, d1 = jar_d - 2*wall_t, d2 = jar_d - 10 - 2*wall_t);\n    }\n    \n    // Handle\n    translate([jar_d/2 + 5, 0, jar_h/2])\n        rotate([90, 0, 0])\n        difference() {\n            torus(r1 = 15, r2 = 4);\n            torus(r1 = 15, r2 = 2);\n        }\n    \n    // Measurement markings\n    for(h = [10:15:jar_h - 20]) {\n        rotate([0, 0, 30])\n        translate([jar_d/2 - 5, 0, h])\n            cube([10, 0.5, 1]);\n    }\n}\n\nmodule lid() {\n    // Main lid\n    difference() {\n        cylinder(h = lid_h, d = lid_d);\n        translate([0, 0, wall_t])\n            cylinder(h = lid_h, d = lid_d - 2*wall_t);\n    }\n    \n    // Center cap\n    translate([0, 0, lid_h])\n    difference() {\n        cylinder(h = 8, d1 = 25, d2 = 20);\n        translate([0, 0, wall_t])\n            cylinder(h = 8, d1 = 25 - 2*wall_t, d2 = 20 - 2*wall_t);\n    }\n    \n    // Pour spout\n    translate([lid_d/2 - 10, 0, lid_h/2])\n        rotate([90, 0, 0])\n        difference() {\n            cylinder(h = 15, d = 12);\n            translate([0, 0, wall_t])\n                cylinder(h = 15, d = 12 - 2*wall_t);\n        }\n}\n\n// Assemble the blender\nunion() {\n    // Base assembly\n    base();\n    \n    // Motor housing on top of base\n    translate([0, 0, base_h])\n        motor_housing();\n    \n    // Blade assembly\n    translate([0, 0, base_h + motor_h])\n        blade_assembly();\n    \n    // Jar\n    translate([0, 0, base_h + motor_h - 5])\n        jar();\n    \n    // Lid\n    translate([0, 0, base_h + motor_h - 5 + jar_h])\n        lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixpro",
    "openscad_code": "// MixPro Kitchen Blender (Medium Complexity, Realistic Style)\n// Overall dimensions: ~110mm tall, 90mm wide, 90mm deep\n// Wall thickness: 2mm throughout for 3D printing\n\n$fn = 36;\n\n// Main body module\nmodule blender_body() {\n    difference() {\n        // Outer shell\n        cube([70, 90, 100], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 5])\n        cube([66, 86, 96], center=true);\n        \n        // Top opening for jar\n        translate([0, 0, 50])\n        cylinder(h=10, r1=30, r2=30, center=true);\n        \n        // Bottom ventilation holes\n        for(i=[-20:20:20])\n            translate([i, 40, -50])\n            cube([8, 2, 8], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, -46, 0])\n    difference() {\n        cube([50, 4, 30], center=true);\n        \n        // Button holes\n        for(i=[-15:10:15])\n            translate([i, 0, 10])\n            cylinder(h=5, r=4, center=true);\n    }\n}\n\n// Buttons\nmodule buttons() {\n    for(i=[-15:10:15])\n        translate([i, -44, 10])\n        cylinder(h=3, r=3.5, center=true);\n}\n\n// Speed dial\nmodule speed_dial() {\n    translate([0, -44, -5])\n    difference() {\n        cylinder(h=8, r=12, center=true);\n        cylinder(h=10, r=3, center=true);\n    }\n    \n    // Dial knob\n    translate([0, -40, -5])\n    rotate([90, 0, 0])\n    cylinder(h=15, r=5, center=true);\n}\n\n// Motor base\nmodule motor_base() {\n    translate([0, 0, -55])\n    difference() {\n        cylinder(h=20, r1=35, r2=30, center=true);\n        cylinder(h=22, r1=33, r2=28, center=true);\n    }\n}\n\n// Rubber feet\nmodule feet() {\n    for(x=[-25:50:25])\n        for(y=[-25:50:25]) {\n            translate([x, y, -65])\n            cylinder(h=3, r=5, center=true);\n        }\n}\n\n// Blender jar\nmodule blender_jar() {\n    translate([0, 0, 75])\n    difference() {\n        cylinder(h=60, r1=28, r2=25, center=true);\n        cylinder(h=62, r1=26, r2=23, center=true);\n    }\n    \n    // Handle\n    translate([30, 0, 75])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=50, r=6, center=true);\n        cylinder(h=52, r=3, center=true);\n    }\n    \n    // Lid\n    translate([0, 0, 105])\n    difference() {\n        cylinder(h=5, r1=30, r2=28, center=true);\n        cylinder(h=7, r1=28, r2=26, center=true);\n    }\n    \n    // Lid handle\n    translate([0, 0, 108])\n    cylinder(h=8, r1=8, r2=5, center=true);\n}\n\n// Jar base coupling\nmodule jar_base() {\n    translate([0, 0, 45])\n    difference() {\n        cylinder(h=8, r=25, center=true);\n        \n        // Blades\n        for(i=[0:120:240]) {\n            rotate([0, 0, i])\n            translate([0, 15, 0])\n            cube([30, 2, 2], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    blender_body();\n    control_panel();\n    buttons();\n    speed_dial();\n    motor_base();\n    feet();\n    jar_base();\n    \n    // Detachable parts (print separately)\n    blender_jar();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicegenie",
    "openscad_code": "// JuiceGenie compact juicer â€“ medium-complexity, 3D-printable model\n// Overall footprint â‰ˆ 100 mm (W) Ã— 110 mm (D) Ã— 160 mm (H)\n\n$fn=36;               // Smoother curves without overhangs\n\n// ---------- Helper module for rounded boxes ----------\nmodule rounded_box(size=[1,1,1], r=2){\n    x=size[0]; y=size[1]; z=size[2];\n    hull(){\n        translate([ r, r, 0]) cylinder(h=z, r=r);\n        translate([x-r, r, 0]) cylinder(h=z, r=r);\n        translate([x-r, y-r, 0]) cylinder(h=z, r=r);\n        translate([ r, y-r, 0]) cylinder(h=z, r=r);\n    }\n}\n\n// ---------- Main body shell ----------\nmodule body(){\n    difference(){\n        rounded_box([100,110,110], r=6);          // 2 mm walls via inner subtraction\n        translate([2,2,2]) rounded_box([96,106,108], r=5);\n    }\n}\n\n// ---------- Feed chute on top ----------\nmodule feed_chute(){\n    color(\"LightGray\")\n    translate([30,55,110])\n    rotate([0,0,0])\n    cylinder(h=35, r1=22, r2=18, center=false);\n    \n    // Inner hole for fruit\n    translate([30,55,110])\n    cylinder(h=36, r=16);\n}\n\n// ---------- Pusher (separate printable part) ----------\nmodule pusher(){\n    color(\"LimeGreen\")\n    translate([0,0,150])\n    cylinder(h=40, r=15);\n    \n    color(\"DarkGreen\")\n    translate([0,0,185])\n    sphere(d=30);\n}\n\n// ---------- Front spout ----------\nmodule spout(){\n    color(\"LightGray\")\n    difference(){\n        translate([-15,0,25])\n        rotate([0,90,0])\n        cylinder(h=30, r1=10, r2=6);\n        \n        // Hollow channel\n        translate([-15,0,25])\n        rotate([0,90,0])\n        cylinder(h=31, r1=8, r2=4);\n    }\n}\n\n// ---------- Juice container cup ----------\nmodule cup(){\n    color(\"Cyan\")\n    difference(){\n        translate([0,-15,5])\n        rounded_box([60,50,60], r=5);\n        \n        translate([2,-13,7])\n        rounded_box([56,46,58], r=4);\n    }\n}\n\n// ---------- Control dial (right side) ----------\nmodule dial(){\n    color(\"Black\")\n    translate([98,75,75])\n    rotate([90,0,0])\n    cylinder(h=8, r=12);\n    \n    // Knurling\n    for(i=[0:30:359]){\n        rotate([0,0,i])\n        translate([98,75,75])\n        translate([10,0,0])\n        cube([3,2,8], center=true);\n    }\n}\n\n// ---------- Rubber feet (4Ã—) ----------\nmodule feet(){\n    for(pos=[[10,10],[90,10],[10,100],[90,100]]){\n        translate([pos[0], pos[1], 0])\n        color(\"Gray20\")\n        cylinder(h=3, r=5);\n    }\n}\n\n// ---------- Assembly ----------\nunion(){\n    body();\n    feed_chute();\n    spout();\n    dial();\n    feet();\n    \n    // Optional extras shown separately\n    %pusher();\n    translate([20,-70,0]) cup();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "turbowhirl",
    "openscad_code": "// Turbowhirl Kitchen Appliance - Realistic Style\n// Medium complexity 3D printable model\n\n$fn = 50;\n\n// Main dimensions\nbase_width = 80;\nbase_depth = 60;\nbase_height = 15;\n\nbody_width = 70;\nbody_depth = 50;\nbody_height = 100;\n\njar_diameter = 50;\njar_height = 80;\njar_wall = 2;\n\nmodule base() {\n    // Main base with rounded corners\n    difference() {\n        minkowski() {\n            cube([base_width, base_depth, base_height], center = true);\n            cylinder(h=0.1, r=5);\n        }\n        \n        // Ventilation slots\n        for (i = [-20:10:20]) {\n            translate([i, 0, base_height/2 - 1])\n                cube([8, base_depth - 10, 2]);\n        }\n        \n        // Power cable hole\n        translate([base_width/2 - 5, 0, 0])\n            rotate([90, 0, 0])\n                cylinder(h=10, r=3);\n    }\n}\n\nmodule body() {\n    // Main body housing\n    difference() {\n        translate([0, 0, base_height/2 + body_height/2])\n            cube([body_width, body_depth, body_height], center = true);\n        \n        // Motor cavity\n        translate([0, 0, base_height + 20])\n            cylinder(h=30, r=15);\n    }\n    \n    // Control panel\n    translate([body_width/2 - 5, 0, base_height + body_height - 20])\n        cube([10, 30, 8], center = true);\n    \n    // Speed dial\n    translate([body_width/2, 0, base_height + body_height - 16])\n        rotate([90, 0, 0])\n            cylinder(h=5, r=8);\n    \n    // Power button\n    translate([body_width/2 - 2, -10, base_height + body_height - 16])\n        cube([4, 4, 3]);\n    \n    // LED indicator\n    translate([body_width/2 - 2, 10, base_height + body_height - 16])\n        sphere(r=2);\n}\n\nmodule jar() {\n    // Main jar body\n    difference() {\n        translate([0, 0, base_height + body_height + jar_height/2])\n            cylinder(h=jar_height, r=jar_diameter/2);\n        \n        // Inner cavity\n        translate([0, 0, base_height + body_height + 5])\n            cylinder(h=jar_height - 10, r=jar_diameter/2 - jar_wall);\n    }\n    \n    // Measuring marks\n    for (i = [1:3]) {\n        translate([jar_diameter/2 - 1, 0, base_height + body_height + 20 * i])\n            cube([jar_wall, 0.5, 2]);\n    }\n    \n    // Handle\n    translate([jar_diameter/2 - 5, 0, base_height + body_height + jar_height/2])\n        difference() {\n            rotate([0, 90, 0])\n                cylinder(h=30, r=5);\n            rotate([0, 90, 0])\n                translate([0, 0, jar_wall])\n                    cylinder(h=30 - 2*jar_wall, r=5 - jar_wall);\n        }\n    \n    // Lid\n    translate([0, 0, base_height + body_height + jar_height + 5])\n        difference() {\n            cylinder(h=10, r=jar_diameter/2);\n            translate([0, 0, 5])\n                cylinder(h=5, r=jar_diameter/2 - jar_wall);\n        }\n    \n    // Lid handle\n    translate([0, 0, base_height + body_height + jar_height + 15])\n        cylinder(h=8, r=5);\n}\n\nmodule blades() {\n    // Central hub\n    translate([0, 0, base_height + body_height + 5])\n        cylinder(h=5, r=8);\n    \n    // Blades (4-arm design)\n    for (i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([12, 0, base_height + body_height + 7.5])\n                cube([25, 3, 2], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    jar();\n    blades();\n}\n\n// Rubber feet\nfor (x = [-25, 25]) {\n    for (y = [-20, 20]) {\n        translate([x, y, -base_height/2 - 1])\n            cylinder(h=2, r=3);\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendcore",
    "openscad_code": "// BlendCore Kitchen Blender â€“ 1:8 scale, 3D-printable (â‰ˆ120 mm tall)\n// All walls â‰¥2 mm, overhangs avoided or chamfered.\n\n$fn = 36;\n\n// Overall proportions\nbase_w = 80;\nbase_d = 80;\nbase_h = 35;\n\nmotor_h = 25;\nmotor_r = 32;\n\njar_h = 60;\njar_r = 28;\njar_walls = 2.5;\n\nlid_h = 8;\nlid_r = jar_r + 1;\n\nbutton_w = 10;\nbutton_h = 4;\nbutton_d = 4;\n\n// Main body\nmodule blender_base() {\n    difference() {\n        // Main block\n        cube([base_w, base_d, base_h], center = true);\n        // Cable recess (rear)\n        translate([0, base_d/2 + 1, -base_h/2 + 5])\n            cube([30, 10, 10], center = true);\n    }\n}\n\n// Motor dome\nmodule motor_top() {\n    cylinder(h = motor_h, r = motor_r);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel surface\n    translate([-base_w/2 - 0.5, 0, base_h/2 - 5])\n        cube([2, 50, 10], center = true);\n    // Buttons\n    for (i = [-1:1]) {\n        translate([-base_w/2 - 1, i * 12, base_h/2 - 1])\n            cube([button_w, button_h, button_d], center = true);\n    }\n}\n\n// Glass jar body\nmodule jar() {\n    difference() {\n        cylinder(h = jar_h, r = jar_r);\n        translate([0, 0, jar_walls])\n            cylinder(h = jar_h, r = jar_r - jar_walls);\n    }\n}\n\n// Handle attached to jar\nmodule jar_handle() {\n    translate([jar_r + 2, 0, jar_h/2])\n        rotate([90, 0, 0])\n            cylinder(h = 50, r = 4);\n    // Bridging support arms\n    translate([jar_r + 2, 0, jar_h/2 + 25])\n        rotate([0, 90, 0])\n            cylinder(h = 8, r = 4);\n    translate([jar_r + 2, 0, jar_h/2 - 25])\n        rotate([0, 90, 0])\n            cylinder(h = 8, r = 4);\n}\n\n// Lid with spout\nmodule lid() {\n    difference() {\n        cylinder(h = lid_h, r = lid_r);\n        // Central plug\n        translate([0, 0, -1])\n            cylinder(h = lid_h + 2, r = jar_r - jar_walls - 1);\n        // Pour spout\n        translate([lid_r - 5, 0, lid_h/2])\n            rotate([0, 90, 0])\n                cylinder(h = 15, r = 5);\n    }\n}\n\n// Assembly\nunion() {\n    // Base\n    blender_base();\n\n    // Motor dome on top\n    translate([0, 0, base_h/2 + motor_h/2])\n        motor_top();\n\n    // Control panel on side\n    control_panel();\n\n    // Jar on motor\n    translate([0, 0, base_h/2 + motor_h])\n        jar();\n\n    // Handle\n    translate([0, 0, base_h/2 + motor_h])\n        jar_handle();\n\n    // Lid on jar\n    translate([0, 0, base_h/2 + motor_h + jar_h + lid_h/2])\n        lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixwizard",
    "openscad_code": "// MixWizard Kitchen Appliance - Realistic Style, Medium Complexity\n// Size: ~100mm tall, 3D printable with 2mm walls\n\nmodule body() {\n    difference() {\n        // Main housing - slightly tapered for printability\n        translate([0, 0, 40]) {\n            cylinder(h = 80, r1 = 35, r2 = 32, $fn = 64);\n        }\n        \n        // Hollow interior\n        translate([0, 0, 42]) {\n            cylinder(h = 76, r1 = 33, r2 = 30, $fn = 64);\n        }\n    }\n}\n\nmodule base() {\n    // Sturdy base with rubber feet\n    difference() {\n        translate([0, 0, 2]) {\n            cylinder(h = 8, r = 38, $fn = 64);\n        }\n        // Ventilation slots\n        for (i = [0:5]) {\n            rotate([0, 0, i * 60]) {\n                translate([20, 0, 5]) {\n                    cube([25, 3, 4]);\n                }\n            }\n        }\n    }\n    \n    // Rubber feet\n    for (i = [0:3]) {\n        rotate([0, 0, i * 90 + 45]) {\n            translate([30, 0, 0]) {\n                cylinder(h = 2, r = 4, $fn = 16);\n            }\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front panel with controls\n    translate([0, 35, 75]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                cube([50, 15, 2]);\n                // Power button\n                translate([-15, 7.5, 0]) {\n                    cylinder(h = 3, r = 5, $fn = 32);\n                }\n                // Speed dial\n                translate([15, 7.5, 0]) {\n                    cylinder(h = 3, r = 8, $fn = 32);\n                }\n            }\n        }\n    }\n    \n    // LCD display\n    translate([0, 32, 80]) {\n        cube([30, 2, 8]);\n    }\n}\n\nmodule mixing_jug() {\n    // Jug with handle\n    difference() {\n        translate([0, 0, 85]) {\n            cylinder(h = 60, r1 = 28, r2 = 32, $fn = 64);\n        }\n        translate([0, 0, 87]) {\n            cylinder(h = 56, r1 = 26, r2 = 30, $fn = 64);\n        }\n    }\n    \n    // Handle\n    translate([28, 0, 115]) {\n        rotate([0, 90, 0]) {\n            difference() {\n                cylinder(h = 40, r = 5, $fn = 32);\n                cylinder(h = 40, r = 3, $fn = 32);\n            }\n        }\n    }\n    \n    // Lid\n    translate([0, 0, 147]) {\n        cylinder(h = 3, r = 33, $fn = 64);\n    }\n}\n\nmodule motor_housing() {\n    // Top section with cooling vents\n    difference() {\n        translate([0, 0, 145]) {\n            cylinder(h = 15, r = 34, $fn = 64);\n        }\n        \n        // Cooling vents\n        for (i = [0:11]) {\n            rotate([0, 0, i * 30]) {\n                translate([33, 0, 152]) {\n                    cube([4, 2, 8]);\n                }\n            }\n        }\n    }\n}\n\nmodule blade_assembly() {\n    // Blade support\n    translate([0, 0, 85]) {\n        cylinder(h = 8, r = 8, $fn = 32);\n        \n        // Blades\n        for (i = [0:3]) {\n            rotate([0, 0, i * 90]) {\n                translate([0, 0, 4]) {\n                    rotate([90, 0, 0]) {\n                        cube([25, 1.5, 3]);\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    control_panel();\n    mixing_jug();\n    motor_housing();\n    blade_assembly();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicerush",
    "openscad_code": "// Juicerush Kitchen Appliance - Realistic Medium Complexity\n// Dimensions: ~120mm x ~80mm x ~160mm\n\n$fn = 32;\n\nmodule base() {\n    // Main body base\n    difference() {\n        hull() {\n            translate([0, 0, 10]) cube([110, 70, 20], center=true);\n            translate([0, 0, 25]) cube([100, 60, 10], center=true);\n        }\n        \n        // Bottom cavity for weight reduction\n        translate([0, 0, 5]) cube([90, 50, 15], center=true);\n        \n        // Cable exit\n        translate([-50, 0, 10]) rotate([0, 90, 0]) cylinder(h=10, r=4);\n    }\n}\n\nmodule body() {\n    // Main body housing\n    difference() {\n        hull() {\n            translate([0, 0, 35]) cube([100, 60, 70], center=true);\n            translate([0, 0, 100]) cube([90, 50, 20], center=true);\n        }\n        \n        // Motor cavity\n        translate([0, 0, 70]) cube([80, 40, 50], center=true);\n        \n        // Top opening for juicer mechanism\n        translate([0, 0, 110]) cylinder(h=20, r=30);\n    }\n}\n\nmodule juice_container() {\n    // Removable juice container\n    difference() {\n        // Main container body\n        translate([-40, 0, 30]) {\n            hull() {\n                cube([35, 45, 60], center=true);\n                translate([0, 0, 30]) cube([30, 40, 5], center=true);\n            }\n        }\n        \n        // Container cavity\n        translate([-40, 0, 35]) cube([28, 38, 50], center=true);\n        \n        // Spout\n        translate([-55, 22, 45]) cube([8, 10, 15], center=true);\n    }\n    \n    // Handle\n    translate([-40, -25, 50]) rotate([90, 0, 0]) cylinder(h=20, r=3);\n    translate([-40, -25, 50]) cube([25, 4, 4], center=true);\n}\n\nmodule pulp_container() {\n    // Pulp collection container\n    difference() {\n        translate([40, 0, 30]) {\n            hull() {\n                cube([35, 45, 40], center=true);\n                translate([0, 0, 20]) cube([30, 40, 5], center=true);\n            }\n        }\n        \n        // Container cavity\n        translate([40, 0, 35]) cube([28, 38, 30], center=true);\n    }\n}\n\nmodule juicer_mechanism() {\n    // Central juicing assembly\n    difference() {\n        // Main cone\n        cylinder(h=40, r1=25, r2=15);\n        \n        // Strainer holes pattern\n        for(i = [0:15]) {\n            rotate([0, 0, i*22.5]) {\n                translate([20, 0, 20]) cylinder(h=40, r=1.5);\n                translate([15, 0, 30]) cylinder(h=40, r=1.5);\n            }\n        }\n    }\n    \n    // Top rim\n    translate([0, 0, 40]) cylinder(h=5, r=30);\n    \n    // Internal ridges\n    for(i = [0:11]) {\n        rotate([0, 0, i*30]) {\n            translate([0, 0, 5]) cube([2, 25, 30], center=true);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, -32, 70]) {\n        difference() {\n            cube([60, 4, 25], center=true);\n            \n            // Display window\n            translate([0, 0, 8]) cube([25, 2, 8], center=true);\n        }\n        \n        // Buttons\n        translate([-20, 2, 5]) cylinder(h=3, r=4);\n        translate([-20, 2, 0]) cylinder(h=2, r=2);\n        \n        translate([-10, 2, 5]) cylinder(h=3, r=4);\n        translate([-10, 2, 0]) cylinder(h=2, r=2);\n        \n        translate([10, 2, 5]) cylinder(h=3, r=6);\n        translate([10, 2, 0]) cylinder(h=2, r=3);\n        \n        // Knob\n        translate([25, 2, 5]) {\n            cylinder(h=8, r=6);\n            translate([0, 0, 8]) cylinder(h=2, r=4);\n            // Knob indicator line\n            translate([0, 4, 9]) cube([1, 4, 2], center=true);\n        }\n    }\n}\n\nmodule feet() {\n    // Rubber feet\n    for(x = [-45, 45]) {\n        for(y = [-25, 25]) {\n            translate([x, y, 1]) cylinder(h=2, r=4);\n        }\n    }\n}\n\nmodule lid() {\n    // Top lid with handle\n    difference() {\n        // Main lid\n        translate([0, 0, 115]) {\n            cylinder(h=8, r=32);\n            \n            // Handle\n            translate([0, 0, 8]) cube([15, 50, 10], center=true);\n            translate([0, 0, 13]) cube([10, 45, 5], center=true);\n        }\n        \n        // Central hole\n        translate([0, 0, 115]) cylinder(h=10, r=10);\n        \n        // Feeder tube\n        translate([0, 0, 125]) cylinder(h=30, r=20);\n        translate([0, 0, 155]) cylinder(h=5, r=25);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    juice_container();\n    pulp_container();\n    control_panel();\n    feet();\n}\n\n// Removable parts\ntranslate([0, 0, 110]) juicer_mechanism();\ntranslate([0, 0, 0]) lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "chopzone",
    "openscad_code": "// ChopZone kitchen food-processor / mini-chopper â€“ medium realism\n// Overall footprint ~90Ã—70Ã—130 mm, wall thickness 2 mm, printable without supports\n\n$fn = 36;\n\nmodule main_body() {\n    // 2 mm shell around the bowl cavity\n    difference() {\n        // outer block\n        translate([-45,-35,0]) cube([90,70,100]);\n        // inner cavity\n        translate([-43,-33,2]) cube([86,66,96]);\n    }\n    // rounded top rim\n    cylinder(h=4, d1=90, d2=90);\n    translate([0,0,100]) cylinder(h=4, d1=90, d2=86);\n}\n\nmodule handle() {\n    // side handle for easy grip\n    translate([47,0,60])\n    rotate([0,90,0])\n    difference() {\n        cylinder(h=30, d=16);\n        translate([0,0,8]) cylinder(h=30, d=12);\n    }\n}\n\nmodule motor_base() {\n    // bottom motor housing â€“ slightly wider than bowl\n    difference() {\n        cylinder(h=25, d=96);\n        translate([0,0,2]) cylinder(h=25, d=92);\n    }\n    // four rubber feet\n    for(a=[-45,45], b=[-45,45])\n        translate([a,b,0]) cylinder(h=3, d=8);\n}\n\nmodule buttons() {\n    // two push buttons on front face\n    translate([0,-36,75]) union() {\n        cube([20,4,8], center=true);           // pulse\n        translate([0,0,12]) cube([20,4,8], center=true); // on/off\n    }\n}\n\nmodule drive_shaft() {\n    // central shaft\n    translate([0,0,25])\n    cylinder(h=75, d=12);\n    // S-blade pair\n    translate([0,0,60])\n    rotate([0,0,45]) {\n        cube([55,2,8], center=true);   // blade 1\n        cube([2,55,8], center=true);   // blade 2\n    }\n}\n\nmodule lid() {\n    // top cap with feeding chute\n    difference() {\n        // lid disk\n        translate([0,0,100])\n        cylinder(h=8, d=86);\n        translate([0,0,100])\n        cylinder(h=8, d=82);\n        // chute\n        translate([20,0,104])\n        rotate([0,-30,0])\n        cylinder(h=35, d1=20, d2=18);\n    }\n    // pusher for chute\n    translate([20,0,125])\n    rotate([0,-30,0])\n    cylinder(h=30, d=16);\n}\n\nunion() {\n    main_body();\n    handle();\n    motor_base();\n    buttons();\n    drive_shaft();\n    lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendedge",
    "openscad_code": "// Realistic medium-complexity BlenderEdge kitchen appliance (100 mm tall)\n// All units in millimeters, ready for 3D printing\n\n$fn = 32;\n\n// Overall dimensions\nbase_w = 80;\nbase_d = 70;\nbase_h = 10;\n\nmotor_h = 60;\nmotor_r = 30;\n\njar_h = 80;\njar_r = 25;\njar_wall = 2;\n\n// Main body module\nmodule blender_body() {\n    // Base with rubber feet cavities\n    difference() {\n        // Solid base block\n        translate([0, 0, base_h/2])\n            cube([base_w, base_d, base_h], center=true);\n        \n        // Rubber feet holes (4 corners)\n        for (x = [-1, 1])\n            for (y = [-1, 1])\n                translate([x*base_w/3, y*base_d/3, -1])\n                    cylinder(h=base_h+2, r=5);\n    }\n    \n    // Motor housing (cylinder with slight taper)\n    union() {\n        translate([0, 0, base_h + motor_h/2])\n            cylinder(h1=motor_h, r1=motor_r, r2=motor_r*0.9);\n        \n        // Control panel\n        translate([motor_r*0.8, 0, base_h + motor_h*0.7])\n            rotate([0, 90, 0])\n                panel();\n    }\n    \n    // Jar base coupling\n    difference() {\n        translate([0, 0, base_h])\n            cylinder(h=10, r=jar_r+4);\n        \n        // Drive socket\n        translate([0, 0, base_h+2])\n            cylinder(h=10, r=jar_r-8);\n    }\n}\n\n// Control panel with buttons\nmodule panel() {\n    // Panel body\n    color(\"black\")\n    translate([0, 0, 5])\n        cube([20, 40, 2], center=true);\n    \n    // Buttons\n    for (i = [0:2]) {\n        translate([0, -15 + i*15, 6.5])\n            color(\"silver\")\n            cylinder(h=3, r=4);\n    }\n    \n    // Power indicator LED\n    translate([0, 20, 6.5])\n        color(\"red\")\n        sphere(r=2);\n}\n\n// Blender jar with handle\nmodule jar() {\n    // Main jar body (hollow)\n    difference() {\n        // Outer wall\n        translate([0, 0, jar_h/2])\n            cylinder(h=jar_h, r=jar_r, center=true);\n        \n        // Inner cavity\n        translate([0, 0, jar_h/2])\n            cylinder(h=jar_h+2, r=jar_r-jar_wall, center=true);\n    }\n    \n    // Handle\n    union() {\n        // Handle grip\n        translate([jar_r+5, 0, jar_h/2])\n            rotate([0, 90, 0])\n                cylinder(h=30, r=5);\n        \n        // Upper support\n        translate([jar_r+3, 0, jar_h*0.75])\n            cube([10, 6, 2], center=true);\n        \n        // Lower support\n        translate([jar_r+3, 0, jar_h*0.25])\n            cube([10, 6, 2], center=true);\n    }\n    \n    // Lid\n    translate([0, 0, jar_h+2])\n        difference() {\n            cylinder(h=5, r=jar_r);\n            cylinder(h=6, r=jar_r-5);\n        }\n    \n    // Lid handle\n    translate([0, 0, jar_h+7])\n        sphere(r=8);\n}\n\n// Assembly\nblender_body();\ntranslate([0, 0, base_h+10]) jar();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixnova",
    "openscad_code": "// Mixnova Blender - medium complexity kitchen appliance\n// Overall dimensions: ~100mm tall x 60mm wide x 60mm deep\n\n// Main body module\nmodule base() {\n    // Main motor housing\n    difference() {\n        // Main body cylinder\n        cylinder(h=30, r=30, $fn=60);\n        \n        // Top cavity for jar\n        translate([0, 0, 25])\n            cylinder(h=10, r=28, $fn=60);\n        \n        // Bottom vent holes\n        for(i=[0:15]) {\n            rotate([0, 0, i*24])\n                translate([25, 0, 5])\n                    cube([8, 2, 8]);\n        }\n    }\n    \n    // Control panel\n    translate([20, -30, 15])\n        cube([20, 5, 15]);\n    \n    // Buttons\n    for(i=[0:2]) {\n        translate([27, -32, 20+i*5])\n            cube([6, 2, 3]);\n    }\n    \n    // Power indicator LED\n    translate([27, -32, 30])\n        sphere(r=2);\n}\n\n// Jar module\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h=40, r=25, $fn=60);\n        // Hollow inside\n        translate([0, 0, 2])\n            cylinder(h=38, r=23, $fn=60);\n    }\n    \n    // Jar lid\n    translate([0, 0, 40])\n        difference() {\n            cylinder(h=8, r=25, $fn=60);\n            translate([0, 0, 2])\n                cylinder(h=6, r=23, $fn=60);\n        }\n    \n    // Handle\n    translate([25, 0, 20])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=30, r=5, $fn=20);\n                translate([0, 0, 2])\n                    cylinder(h=26, r=3, $fn=20);\n            }\n    \n    // Pour spout\n    translate([0, 25, 35])\n        rotate([0, -30, 0])\n            cube([2, 15, 8]);\n}\n\n// Blade assembly\nmodule blades() {\n    // Blade hub\n    cylinder(h=5, r=10, $fn=20);\n    \n    // Blades (4 arms)\n    for(i=[0:3]) {\n        rotate([0, 0, i*90])\n            translate([0, 7.5, 2.5])\n                cube([15, 1.5, 2]);\n    }\n}\n\n// Base feet\nmodule feet() {\n    for(i=[0:3]) {\n        rotate([0, 0, i*120])\n            translate([25, 0, -3])\n                cylinder(h=3, r=5, $fn=20);\n    }\n}\n\n// Assembly\nunion() {\n    // Base with feet\n    translate([0, 0, 3])\n        base();\n    feet();\n    \n    // Jar assembly\n    translate([0, 0, 30])\n        union() {\n            jar();\n            translate([0, 0, 2])\n                blades();\n        }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicespark",
    "openscad_code": "// Juicespark Kitchen Appliance - Realistic Style\n// Medium complexity OpenSCAD model\n\n// Dimensions (mm)\nbase_width = 80;\nbase_depth = 60;\nbase_height = 15;\n\nbody_width = 70;\nbody_depth = 50;\nbody_height = 100;\n\njug_radius = 25;\njug_height = 80;\njug_wall = 2;\n\nmotor_width = 50;\nmotor_height = 40;\nmotor_depth = 40;\n\n// Main module\nmodule juicespark() {\n    difference() {\n        union() {\n            // Base with rubber feet\n            base();\n            \n            // Main body housing\n            body();\n            \n            // Motor housing on top\n            motor_housing();\n            \n            // Control panel\n            control_panel();\n            \n            // Juice jug\n            translate([0, -20, body_height]) \n                jug();\n            \n            // Handle supports\n            handle_supports();\n        }\n        \n        // Cavity for motor\n        translate([0, 0, base_height + 5])\n            cube([motor_width - 10, motor_depth - 10, motor_height + 20], center=true);\n            \n        // Jug cavity\n        translate([0, -20, body_height + jug_wall])\n            cylinder(h=jug_height - jug_wall, r=jug_radius - jug_wall, center=false);\n            \n        // Spout hole\n        translate([0, -45, body_height + 30])\n            rotate([90, 0, 0])\n                cylinder(h=20, r1=8, r2=5, center=false);\n    }\n}\n\n// Base with rounded corners and feet\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, base_height/2])\n            rounded_cube([base_width, base_depth, base_height], 5);\n            \n        // Rubber feet holes\n        for(x = [-30, 30])\n            for(y = [-20, 20])\n                translate([x, y, base_height - 2])\n                    cylinder(h=4, r=3, center=false);\n    }\n}\n\n// Main body with ventilation slots\nmodule body() {\n    difference() {\n        // Main body\n        translate([0, 0, base_height + body_height/2])\n            rounded_cube([body_width, body_depth, body_height], 3);\n            \n        // Ventilation slots\n        for(i = [1:5]) {\n            translate([-body_width/2 + 5, body_depth/2 + 0.1, base_height + i*15])\n                cube([body_width - 10, 2, 2]);\n        }\n    }\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0, 0, base_height + body_height + motor_height/2])\n        rounded_cube([motor_width, motor_depth, motor_height], 2);\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    difference() {\n        // Panel base\n        translate([body_width/2 - 2, 0, base_height + body_height/2])\n            rounded_cube([4, 25, 40], 2);\n            \n        // Power button\n        translate([body_width/2, -8, base_height + body_height/2 + 10])\n            cylinder(h=3, r=4, center=true);\n            \n        // Speed dial\n        translate([body_width/2, 8, base_height + body_height/2 + 25])\n            cylinder(h=5, r=6, center=true);\n            \n        // Indicator light\n        translate([body_width/2, 0, base_height + body_height/2 + 35])\n            sphere(r=2);\n    }\n}\n\n// Juice jug with handle and spout\nmodule jug() {\n    difference() {\n        union() {\n            // Main jug body\n            cylinder(h=jug_height, r=jug_radius, center=false);\n            \n            // Handle\n            translate([jug_radius - 2, 0, 30])\n                rotate([0, 90, 0])\n                    difference() {\n                        cylinder(h=40, r=8, center=true);\n                        cylinder(h=42, r=5, center=true);\n                    }\n            \n            // Spout\n            translate([0, -jug_radius, jug_height - 20])\n                rotate([0, 0, 0])\n                    cylinder(h=15, r1=jug_radius/2, r2=0, center=false);\n        }\n        \n        // Lid hole\n        translate([0, 0, jug_height - 5])\n            cylinder(h=10, r=15, center=false);\n    }\n}\n\n// Handle supports for main body\nmodule handle_supports() {\n    for(x = [-body_width/2 + 10, body_width/2 - 10]) {\n        translate([x, body_depth/2 + 3, base_height + body_height/2])\n            rounded_cube([6, 6, 30], 2);\n    }\n}\n\n// Helper module for rounded cubes\nmodule rounded_cube(size, radius) {\n    x = size[0]; y = size[1]; z = size[2];\n    translate([0, 0, 0])\n        minkowski() {\n            cube([x-2*radius, y-2*radius, z-2*radius], center=true);\n            sphere(r=radius, $fn=20);\n        }\n}\n\n// Render the model\n$fn = 30;\njuicespark();",
    "renders": true
  },
  {
    "kitchen_appliance": "sliceswift",
    "openscad_code": "// SliceSwift Kitchen Appliance - Medium Complexity\n// Dimensions: 100mm x 60mm x 120mm (L x W x H)\n\n// Main body\nmodule appliance_body() {\n    // Base frame\n    difference() {\n        cube([100, 60, 80], center=true);\n        translate([0, 0, 40])\n            cube([96, 56, 78], center=true);\n    }\n    \n    // Top cover\n    translate([0, 0, 42])\n    difference() {\n        cube([98, 58, 10], center=true);\n        translate([0, 0, 5])\n            cube([94, 54, 10], center=true);\n    }\n}\n\n// Feed chute\nmodule feed_chute() {\n    translate([0, 35, 25])\n    difference() {\n        cube([45, 20, 50], center=true);\n        translate([0, 0, 25])\n            cube([40, 15, 50], center=true);\n    }\n}\n\n// Pusher\nmodule pusher() {\n    translate([0, 35, 55])\n    cube([38, 12, 30], center=true);\n}\n\n// Control knob\nmodule control_knob() {\n    translate([-40, 0, 10])\n    difference() {\n        cylinder(h=8, r=8, center=true);\n        cylinder(h=10, r=6, center=true);\n    }\n}\n\n// Power button\nmodule power_button() {\n    translate([40, 0, 10])\n    cube([15, 15, 4], center=true);\n}\n\n// Feet\nmodule feet() {\n    for(x=[-40, 40]) {\n        for(y=[-20, 20]) {\n            translate([x, y, -41])\n                cylinder(h=4, r=5, center=true);\n        }\n    }\n}\n\n// Side ventilation slots\nmodule ventilation_slots() {\n    for(i=[-20:8:20]) {\n        translate([51, i, 0])\n            cube([2, 6, 60], center=true);\n    }\n}\n\n// Motor housing detail\nmodule motor_detail() {\n    translate([0, 0, 0])\n    difference() {\n        cube([20, 20, 20], center=true);\n        translate([0, 0, 10])\n            cube([16, 16, 20], center=true);\n    }\n}\n\n// Blade assembly representation\nmodule blades() {\n    translate([0, 0, -10])\n    for(i=[0:60:359]) {\n        rotate([90, 0, i])\n            cube([20, 2, 1], center=true);\n    }\n}\n\n// Juice outlet\nmodule juice_outlet() {\n    translate([0, -35, -20])\n    difference() {\n        cube([25, 15, 10], center=true);\n        translate([0, 0, 5])\n            cylinder(h=15, r=6, center=true);\n    }\n}\n\n// Assembly\nunion() {\n    appliance_body();\n    feed_chute();\n    pusher();\n    control_knob();\n    power_button();\n    feet();\n    ventilation_slots();\n    translate([0, 0, -30]) motor_detail();\n    blades();\n    juice_outlet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendwave",
    "openscad_code": "$fn = 36;\n\n// Overall dimensions (mm)\nbase_w = 70;\nbase_d = 70;\nbase_h = 25;\n\njug_h = 90;\njug_r = 30;\nwall = 2;\n\nmodule base() {\n    difference() {\n        // Main body\n        union() {\n            translate([0, 0, base_h/2])\n                cube([base_w, base_d, base_h], center=true);\n            // Front slope\n            translate([0, base_d/2-10, base_h-10])\n                rotate([0, 45, 0])\n                    cube([base_w, 20, 20]);\n        }\n        // Cavity\n        translate([0, 0, -1])\n            cube([base_w-wall*2, base_d-wall*2, base_h+2], center=true);\n    }\n}\n\nmodule motor_hub() {\n    union() {\n        // Cylindrical motor block\n        translate([0, 0, base_h+10])\n            cylinder(h=20, r=base_w/2-5);\n        // Coupling ring\n        translate([0, 0, base_h+10])\n            cylinder(h=5, r=16);\n        // Drive lug\n        translate([0, 0, base_h+25])\n            cylinder(h=3, r=5);\n    }\n}\n\nmodule jug() {\n    difference() {\n        union() {\n            // Jug body\n            translate([0, 0, base_h+10+jug_h/2])\n                cylinder(h=jug_h, r=jug_r);\n            // Handle\n            translate([jug_r+4, 0, base_h+10+jug_h*0.6])\n                rotate([-90, 0, 0])\n                    cylinder(h=50, r=4);\n            // Handle grip\n            translate([jug_r+4, 0, base_h+10+jug_h*0.6-20])\n                rotate([-90, 0, 0])\n                    cylinder(h=50, r=6);\n        }\n        // Hollow\n        translate([0, 0, base_h+10+jug_h/2])\n            cylinder(h=jug_h-wall, r=jug_r-wall);\n        // Spout\n        translate([jug_r-5, 0, base_h+10+jug_h*0.8])\n            rotate([0, 90, 0])\n                cylinder(h=25, r=10);\n    }\n}\n\nmodule lid() {\n    difference() {\n        // Lid disc\n        translate([0, 0, base_h+10+jug_h+2])\n            cylinder(h=5, r=jug_r);\n        // Grip\n        translate([0, 0, base_h+10+jug_h+7])\n            cylinder(h=10, r=6);\n        // Fill hole\n        translate([0, -jug_r/2, base_h+10+jug_h+7])\n            cylinder(h=5, r=8);\n    }\n}\n\nmodule control_panel() {\n    // Panel face\n    translate([base_w/2, 0, base_h+10])\n        cube([5, base_d-20, 20], center=true);\n    // Buttons\n    for (i = [0:2]) {\n        translate([base_w/2+3, -15+i*15, base_h+15])\n            sphere(r=3);\n    }\n    // Dial\n    translate([base_w/2+3, 15, base_h+15])\n        cylinder(h=5, r=6);\n}\n\n// Assembly\nbase();\nmotor_hub();\njug();\nlid();\ncontrol_panel();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixdrive",
    "openscad_code": "// Mixdrive Kitchen Appliance - Realistic Medium Complexity\n// Overall dimensions: 100mm x 60mm x 120mm (WxDxH)\n\nmodule base() {\n    // Main body with rounded edges\n    difference() {\n        // Main chassis\n        union() {\n            translate([-50, -30, 0]) cube([100, 60, 80]);\n            translate([-48, -28, 78]) cube([96, 56, 4]);\n        }\n        \n        // Front panel recess\n        translate([-45, -25, 50]) cube([90, 50, 30]);\n        \n        // Side vents\n        for (y = [-20, 20]) {\n            translate([45*sign(y), y, 60]) rotate([0, 90, 0]) \n            cylinder(h=5, r=3);\n            translate([45*sign(y), y, 50]) rotate([0, 90, 0]) \n            cylinder(h=5, r=3);\n        }\n    }\n}\n\nmodule top_panel() {\n    // Top surface with motor mount\n    difference() {\n        translate([-45, -25, 82]) cube([90, 50, 8]);\n        translate([0, 0, 88]) cylinder(h=5, r=15);\n    }\n}\n\nmodule mixing_bowl() {\n    // Removable mixing bowl\n    translate([0, 0, 95]) {\n        difference() {\n            cylinder(h=30, r1=25, r2=22);\n            translate([0, 0, 2]) cylinder(h=28, r1=23, r2=20);\n        }\n        \n        // Handle\n        translate([25, -3, 15]) rotate([0, 90, 0])\n        cylinder(h=8, r=3);\n    }\n}\n\nmodule control_panel() {\n    // Front control interface\n    translate([-40, -22, 52]) {\n        // Panel surface\n        cube([80, 44, 2]);\n        \n        // Speed dial\n        translate([-25, 0, 3]) {\n            cylinder(h=5, r=8);\n            translate([0, 0, 5]) cylinder(h=3, r=6);\n            translate([0, 5, 6.5]) cube([2, 5, 2]);\n        }\n        \n        // Buttons\n        for (i = [0:1]) {\n            translate([10 + i*15, 0, 3]) {\n                cube([8, 6, 3]);\n                translate([4, 3, 4]) sphere(r=1);\n            }\n        }\n        \n        // LED indicator\n        translate([30, -10, 3]) cylinder(h=2, r=3);\n    }\n}\n\nmodule feet() {\n    // Support feet\n    for (x = [-40, 40]) {\n        for (y = [-20, 20]) {\n            translate([x, y, -5]) {\n                cylinder(h=5, r=4);\n                translate([0, 0, -1]) sphere(r=4);\n            }\n        }\n    }\n}\n\nmodule power_cord() {\n    // Rear power cord\n    translate([40, 0, 40]) rotate([90, 0, 0]) {\n        cylinder(h=20, r=3);\n        translate([0, 0, 20]) sphere(r=3);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    top_panel();\n    mixing_bowl();\n    control_panel();\n    feet();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicezoom",
    "openscad_code": "// JuiceZoom Kitchen Appliance\n// Moderate complexity realistic model\n\nmodule body() {\n    // Main body housing\n    difference() {\n        // Outer shell\n        cube([90, 80, 120], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 5])\n        cube([86, 76, 110], center=true);\n    }\n}\n\nmodule base() {\n    // Sturdy base with rubber feet positions\n    difference() {\n        // Base platform\n        translate([0, 0, -62])\n        cube([95, 85, 8], center=true);\n        \n        // Screw holes for feet\n        for(pos = [[-35, -30], [35, -30], [-35, 30], [35, 30]]) {\n            translate([pos[0], pos[1], -58])\n            cylinder(h=12, d=6, center=true);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons and dial\n    translate([0, 42, 20])\n    difference() {\n        // Panel surface\n        cube([70, 4, 40], center=true);\n        \n        // Power button\n        translate([-25, 3, 10])\n        cylinder(h=5, d=12);\n        \n        // Speed dial\n        translate([25, 3, 5])\n        cylinder(h=5, d=16);\n        \n        // LED indicator\n        translate([0, 3, -10])\n        cylinder(h=5, d=8);\n    }\n}\n\nmodule juice_container() {\n    // Transparent juice container\n    translate([0, -30, 40])\n    difference() {\n        // Container walls\n        cylinder(h=60, d=50, center=true);\n        \n        // Hollow inside\n        translate([0, 0, 5])\n        cylinder(h=70, d=46, center=true);\n        \n        // Spout\n        translate([20, 0, -25])\n        cube([15, 10, 15], center=true);\n    }\n}\n\nmodule lid() {\n    // Removable lid with handle\n    translate([0, -30, 75])\n    difference() {\n        // Lid disk\n        cylinder(h=6, d=54);\n        \n        // Handle hole\n        translate([0, 0, 3])\n        cylinder(h=10, d=20);\n    }\n    \n    // Handle grip\n    translate([0, -30, 85])\n    rotate([90, 0, 0])\n    cylinder(h=20, d=8);\n}\n\nmodule pulp_container() {\n    // Side pulp container\n    translate([45, 0, 0])\n    difference() {\n        // Container body\n        cube([25, 35, 80], center=true);\n        \n        // Hollow space\n        translate([0, 0, 5])\n        cube([21, 31, 70], center=true);\n        \n        // Grip indentation\n        translate([10, 18, 0])\n        cube([5, 4, 60], center=true);\n    }\n}\n\nmodule motor_housing() {\n    // Bottom motor housing with ventilation\n    translate([0, 0, -30])\n    difference() {\n        // Housing block\n        cube([80, 70, 40], center=true);\n        \n        // Ventilation slots\n        for(i = [-30:10:30]) {\n            translate([0, i, -10])\n            cube([82, 2, 20], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    base();\n    control_panel();\n    juice_container();\n    lid();\n    pulp_container();\n    motor_housing();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "choplogic",
    "openscad_code": "// ChopLogic Food Processor â€“ realistic medium-complexity kitchen appliance\n// Overall footprint ~100 mm wide Ã— 120 mm deep Ã— 160 mm high\n// Wall thickness 2 mm, no overhangs >45Â°, ready for FDM printing\n\n$fn = 36;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        translate([0,0,75]) cube([90,110,150], center=true);\n        // Hollow interior\n        translate([0,0,77]) cube([86,106,146], center=true);\n    }\n}\n\n// Front control panel\nmodule control_panel() {\n    difference() {\n        // Panel plate\n        translate([0,-56,115]) cube([70,6,40], center=true);\n        // Three dial holes Ã˜10 mm\n        for(x=[-25,0,25])\n            translate([x,-53,115]) rotate([90,0,0]) cylinder(h=8,d=10,center=true);\n    }\n    // Dial knobs\n    for(x=[-25,0,25])\n        translate([x,-50,115]) rotate([90,0,0]) cylinder(h=8,d=12,center=true);\n}\n\n// Motor base block (bottom weight)\nmodule motor_base() {\n    translate([0,0,8]) cube([94,114,16], center=true);\n}\n\n// Bowl with handle\nmodule bowl() {\n    difference() {\n        union() {\n            // Bowl walls\n            cylinder(h=60,r=42,center=false);\n            // Handle\n            translate([42,0,25]) rotate([0,90,0]) cylinder(h=20,r=8);\n            translate([42,0,25]) cube([20,16,16], center=true);\n        }\n        // Hollow cavity\n        translate([0,0,2]) cylinder(h=60,r=40,center=false);\n    }\n}\n\n// Snap-fit lid\nmodule lid() {\n    difference() {\n        // Lid disc\n        translate([0,0,64]) cylinder(h=5,r=44,center=false);\n        // Central feed tube\n        translate([0,0,69]) cylinder(h=20,r=15,center=false);\n    }\n    // Pusher\n    translate([0,0,79]) cylinder(h=18,r=13,center=false);\n}\n\n// Feet (4 rubber pads)\nmodule feet() {\n    for(x=[-38,38]) for(y=[-48,48])\n        translate([x,y,0]) cylinder(h=4,r=6,$fn=20);\n}\n\n// Assembly\nunion() {\n    body_shell();\n    control_panel();\n    motor_base();\n    feet();\n    // Bowl & lid stacked on top\n    translate([0,0,16]) bowl();\n    lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendflex",
    "openscad_code": "// BlendFlex Kitchen Appliance - Medium Complexity Realistic Style\n// Overall dimensions: 120mm x 160mm x 200mm (L x W x H)\n\nmodule body_base() {\n    // Main body housing with rounded edges\n    difference() {\n        // Main body shell\n        minkowski() {\n            cube([116, 156, 120], center = true);\n            sphere(2);\n        }\n        \n        // Hollow interior\n        minkowski() {\n            cube([112, 152, 116], center = true);\n            sphere(1);\n        }\n    }\n}\n\nmodule motor_housing() {\n    // Cylindrical motor housing on top\n    translate([0, 0, 60]) {\n        difference() {\n            cylinder(h = 60, r = 50, center = true, $fn = 32);\n            cylinder(h = 62, r = 48, center = true, $fn = 32);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons and display\n    translate([58, 0, 30]) {\n        difference() {\n            // Panel surface\n            cube([4, 120, 60]);\n            \n            // Display screen\n            translate([2, -30, 20]) cube([2, 60, 30]);\n            \n            // Buttons\n            for (i = [0:3]) {\n                translate([2, -50 + i*25, 0]) cylinder(h = 2, r = 8, $fn = 16);\n            }\n        }\n        \n        // Button labels\n        for (i = [0:3]) {\n            translate([3, -50 + i*25, 0]) sphere(1);\n        }\n    }\n}\n\nmodule jar_base() {\n    // Base for blending jar\n    translate([0, 0, 120]) {\n        cylinder(h = 15, r = 45, $fn = 32);\n        \n        // Jar coupling teeth\n        for (i = [0:11]) {\n            rotate([0, 0, i*30]) {\n                translate([40, 0, 7.5]) cube([5, 5, 15], center = true);\n            }\n        }\n    }\n}\n\nmodule jar_body() {\n    // Main blending jar\n    translate([0, 0, 150]) {\n        difference() {\n            // Jar walls\n            cylinder(h = 80, r1 = 45, r2 = 40, $fn = 32);\n            cylinder(h = 81, r1 = 43, r2 = 38, $fn = 32);\n        }\n        \n        // Measurement markings\n        for (i = [1:3]) {\n            translate([44, 0, 20 + i*20]) cube([2, 1, 1]);\n        }\n    }\n}\n\nmodule jar_lid() {\n    // Removable lid with handle\n    translate([0, 0, 230]) {\n        difference() {\n            cylinder(h = 8, r = 42, $fn = 32);\n            cylinder(h = 9, r = 40, $fn = 32);\n        }\n        \n        // Handle\n        translate([0, 0, 4]) {\n            difference() {\n                cylinder(h = 30, r = 12, $fn = 16);\n                cylinder(h = 31, r = 8, $fn = 16);\n            }\n        }\n    }\n}\n\nmodule feet() {\n    // Anti-slip rubber feet\n    for (x = [-40, 40]) {\n        for (y = [-60, 60]) {\n            translate([x, y, -61]) {\n                cylinder(h = 3, r = 6, $fn = 16);\n            }\n        }\n    }\n}\n\nmodule power_cord() {\n    // Power cord entry point\n    translate([-58, 0, -30]) {\n        rotate([0, 90, 0]) {\n            difference() {\n                cylinder(h = 15, r = 8, $fn = 16);\n                cylinder(h = 16, r = 6, $fn = 16);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    body_base();\n    motor_housing();\n    control_panel();\n    jar_base();\n    jar_body();\n    jar_lid();\n    feet();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixpilot",
    "openscad_code": "// MixPilot Kitchen Mixer - Realistic Style, Medium Complexity\n// Overall dimensions: 110mm x 65mm x 120mm (L x W x H)\n\n// Main body\nmodule body() {\n    difference() {\n        // Main housing\n        translate([0,0,60])\n            cube([80,50,100], center=true);\n        \n        // Top cavity for bowl\n        translate([0,0,90])\n            cube([60,40,30], center=true);\n        \n        // Front display cutout\n        translate([0,-25.1,75])\n            cube([40,5,20], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0,-25,75])\n        cube([38,2,18], center=true);\n    \n    // Buttons\n    for (x = [-12, -4, 4, 12]) {\n        translate([x, -24, 72])\n            cylinder(h=1.5, r=2.5, $fn=16);\n    }\n    \n    // Speed dial\n    translate([0, -24, 80])\n        cylinder(h=3, r=6, $fn=32);\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0,0,100])\n        cylinder(h=20, r=25, $fn=32);\n    \n    // Ventilation slots\n    for (a = [0:30:150]) {\n        rotate([0,0,a])\n            translate([20,0,105])\n                cube([10,2,10], center=true);\n    }\n}\n\n// Mixing arm\nmodule mixing_arm() {\n    // Arm base\n    translate([0,0,120])\n        cylinder(h=15, r=8, $fn=16);\n    \n    // Arm extension\n    translate([0,0,127.5])\n        rotate([0,90,0])\n            cylinder(h=25, r=3, $fn=16);\n    \n    // Mixer head\n    translate([25,0,127.5])\n        sphere(r=6);\n    \n    // Beaters\n    for (i = [0,1]) {\n        translate([i*6-3,0,127.5])\n            rotate([0,90,0])\n                cylinder(h=35, r=1.5, $fn=8);\n    }\n}\n\n// Bowl\nmodule bowl() {\n    difference() {\n        // Outer bowl\n        translate([0,0,60])\n            cylinder(h=40, r=28, r1=28, r2=25, $fn=32);\n        \n        // Inner cavity\n        translate([0,0,60])\n            cylinder(h=40, r=24, r1=24, r2=21, $fn=32);\n    }\n    \n    // Handle\n    translate([30,0,70])\n        rotate([0,90,0])\n            difference() {\n                cylinder(h=20, r=6, $fn=16);\n                translate([0,0,-10])\n                    cylinder(h=20, r=4, $fn=16);\n            }\n}\n\n// Base\nmodule base() {\n    translate([0,0,5])\n        cube([90,60,10], center=true);\n    \n    // Rubber feet\n    for (x = [-35,35]) {\n        for (y = [-20,20]) {\n            translate([x,y,0])\n                cylinder(h=3, r=4, $fn=16);\n        }\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([40,0,10])\n        rotate([0,90,0])\n            cylinder(h=40, r=2, $fn=8);\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    control_panel();\n    motor_housing();\n    mixing_arm();\n    bowl();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicepulse",
    "openscad_code": "// JuicePulse â€“ compact personal-size cold-press juicer\n// Overall footprint â‰ˆ 110 mm Ã— 120 mm Ã— 185 mm\n// Wall thickness 2 mm everywhere for reliable 3D printing\n\n$fn = 36;\n\nmodule roundedBox(x, y, z, r){\n    hull(){\n        translate([r, r, 0]) cylinder(r=r, h=z);\n        translate([x-r, r, 0]) cylinder(r=r, h=z);\n        translate([r, y-r, 0]) cylinder(r=r, h=z);\n        translate([x-r, y-r, 0]) cylinder(r=r, h=z);\n    }\n}\n\n// Main body shell\nmodule body(){\n    difference(){\n        roundedBox(110, 120, 160, 8);\n        translate([2, 2, 2]) roundedBox(106, 116, 158, 6);\n    }\n}\n\n// Motor base with feet\nmodule base(){\n    difference(){\n        translate([0,0,0]) roundedBox(110, 120, 25, 8);\n        translate([2,2,2]) roundedBox(106, 116, 23, 6);\n    }\n    // Rubber feet\n    for(dx=[15,95], dy=[15,105])\n        translate([dx,dy,1]) cylinder(r=6,h=4);\n}\n\n// Control knob\nmodule knob(){\n    translate([55, -8, 140]) rotate([90,0,0])\n        difference(){\n            cylinder(r1=12, r2=9, h=10);\n            cylinder(r1=11, r2=8, h=11);\n        }\n}\n\n// Display window\nmodule display(){\n    translate([30, 2, 110]) cube([50, 2, 20]);\n}\n\n// Feed chute\nmodule chute(){\n    translate([55, 60, 160]) rotate([0,0,0])\n        cylinder(r1=25, r2=20, h=25);\n    translate([55, 60, 185]) cylinder(r=20, h=5);\n}\n\n// Juice jug\nmodule jug(){\n    difference(){\n        translate([55, 95, 90]) rotate([90,0,0])\n            cylinder(r=30, h=70);\n        translate([55, 95, 90]) rotate([90,0,0])\n            cylinder(r=28, h=71);\n    }\n    // Handle\n    difference(){\n        translate([85, 95, 105]) rotate([0,90,0])\n            rotate_extrude(angle=180, convexity=10)\n                translate([30,0,0]) circle(r=5);\n        translate([85, 95, 105]) rotate([0,90,0])\n            rotate_extrude(angle=180, convexity=10)\n                translate([30,0,0]) circle(r=3);\n    }\n}\n\n// Pulp bin\nmodule pulpBin(){\n    difference(){\n        translate([20, 95, 70]) cube([70, 30, 60]);\n        translate([22, 97, 72]) cube([66, 26, 58]);\n    }\n}\n\n// Assembly\nunion(){\n    color(\"ivory\") body();\n    color(\"darkslategray\") base();\n    color(\"black\") knob();\n    color(\"lightgray\") display();\n    color(\"silver\") chute();\n    color(\"limegreen\") jug();\n    color(\"darkorange\") pulpBin();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "turboslice",
    "openscad_code": "// TurboSlice kitchen appliance (realistic, medium complexity)\n// Approximate footprint: 120 x 80 x 90 mm\n\n// Main parameters\nwall = 2;\nbase_w = 120;\nbase_d = 80;\nbase_h = 90;\n\nmodule main_body() {\n    difference() {\n        // Main shell\n        cube([base_w, base_d, base_h], center=true);\n        // Hollow cavity\n        translate([0, 0, wall/2])\n            cube([base_w-wall*2, base_d-wall*2, base_h-wall], center=true);\n    }\n}\n\nmodule chute() {\n    // Feed chute on top\n    translate([0, base_d/2-15, base_h/2-5])\n        rotate([-45, 0, 0])\n            difference() {\n                cube([40, 35, 35], center=true);\n                translate([0, 0, wall])\n                    cube([40-wall*2, 35-wall*2, 35-wall*2], center=true);\n            }\n}\n\nmodule pusher() {\n    // Food pusher\n    translate([0, base_d/2+5, base_h/2+5])\n        cylinder(h=30, r1=18, r2=15, $fn=16);\n}\n\nmodule control_panel() {\n    // Front control panel\n    translate([0, -base_d/2+wall, 0])\n        difference() {\n            cube([80, wall+1, 30], center=true);\n            \n            // Power button\n            translate([-25, 0, 8])\n                cylinder(h=wall+2, r=6, $fn=20);\n                \n            // Speed dial\n            translate([25, 0, 8])\n                cylinder(h=wall+2, r=8, $fn=20);\n                \n            // Indicator light\n            translate([0, 0, 12])\n                sphere(r=3, $fn=16);\n        }\n}\n\nmodule feet() {\n    // Rubber feet\n    for(x=[-base_w/2+15, base_w/2-15])\n        for(y=[-base_d/2+15, base_d/2-15])\n            translate([x, y, -base_h/2])\n                cylinder(h=5, r=5, $fn=16);\n}\n\nmodule handle() {\n    // Side handle for easy grip\n    translate([-base_w/2-wall, 0, 0])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=60, r=8, center=true, $fn=16);\n                cylinder(h=70, r=6, center=true, $fn=16);\n            }\n}\n\nmodule motor_vent() {\n    // Rear motor ventilation slots\n    translate([0, base_d/2-wall/2, -base_h/2+20]) {\n        for(i=[-20:10:20])\n            translate([i, 0, 0])\n                cube([5, wall+1, 40]);\n    }\n}\n\nmodule output_spout() {\n    // Sliced food output spout\n    translate([0, -base_d/2, -base_h/2+10])\n        difference() {\n            cube([50, 20, 20], center=false);\n            translate([wall, wall, wall])\n                cube([50-wall*2, 20, 20-wall*2], center=false);\n        }\n}\n\n// Assembly\nunion() {\n    main_body();\n    chute();\n    pusher();\n    control_panel();\n    feet();\n    handle();\n    motor_vent();\n    output_spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendcraft",
    "openscad_code": "// BlendCraft blender - realistic medium-complexity model\n// Overall height ~100mm, footprint 55x55mm, wall thickness 2mm\n\nmodule base() {\n    // Main motor base\n    difference() {\n        cube([55, 55, 35], center=true);\n        translate([0, 0, 1])\n            cube([51, 51, 35], center=true);\n    }\n    // Rubber feet\n    for(x=[-22, 22])\n        for(y=[-22, 22])\n            translate([x, y, -17.5])\n                cylinder(h=2, d=6, center=true);\n}\n\nmodule control_panel() {\n    // Front panel with buttons\n    translate([0, 32, 0])\n        difference() {\n            cube([30, 4, 25], center=true);\n            translate([0, 1, 8])\n                cube([26, 2, 8], center=true);\n        }\n    // Buttons\n    for(pos=[-9, 0, 9])\n        translate([pos, 34.5, 8])\n            cylinder(h=3, d=6, $fn=20);\n    // Rotary dial\n    translate([0, 34.5, -5])\n        rotate([90, 0, 0])\n            cylinder(h=5, d=10, $fn=32);\n}\n\nmodule jug() {\n    // Main jar body\n    difference() {\n        cylinder(h=50, d=45, center=false, $fn=64);\n        translate([0, 0, 2])\n            cylinder(h=46, d=41, center=false, $fn=64);\n    }\n    // Handle\n    translate([22.5, 0, 25])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=40, d=15, center=true, $fn=32);\n                cylinder(h=41, d=11, center=true, $fn=32);\n            }\n    // Pour spout\n    translate([0, -22.5, 45])\n        rotate([0, 30, 0])\n            difference() {\n                cube([20, 4, 15], center=true);\n                translate([0, 0, 2])\n                    cube([18, 2, 13], center=true);\n            }\n    // Lid\n    translate([0, 0, 50])\n        difference() {\n            cylinder(h=5, d=46, center=false, $fn=64);\n            translate([0, 0, 2])\n                cylinder(h=3, d=42, center=false, $fn=64);\n        }\n    // Lid grip\n    translate([0, 0, 57.5])\n        cylinder(h=5, d=15, center=false, $fn=32);\n}\n\nmodule blade_assembly() {\n    // Coupling base\n    cylinder(h=8, d=35, center=false, $fn=32);\n    // Blades\n    for(angle=[0, 120, 240])\n        rotate([0, 0, angle])\n            translate([0, 10, 4])\n                rotate([0, 90, 0])\n                    cube([20, 2, 2], center=true);\n    // Center shaft\n    translate([0, 0, 4])\n        cylinder(h=15, d=6, center=false, $fn=20);\n}\n\nmodule blendcraft() {\n    base();\n    control_panel();\n    translate([0, 0, 26])\n        jug();\n    translate([0, 0, 35])\n        blade_assembly();\n}\n\nblendcraft();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixsphere",
    "openscad_code": "// MixSphere Kitchen Blender\n// Realistic style, medium complexity\n// 3D printable with 2mm walls\n\n// Main parameters\n$fn = 50;\n\n// Overall dimensions\nbase_dia = 80;\nbase_height = 25;\nmotor_housing_dia = 70;\nmotor_housing_height = 40;\njar_dia = 60;\njar_height = 100;\njar_wall = 2;\n\n// Base with rubber feet\nmodule base() {\n    // Main base cylinder\n    cylinder(h=base_height, d=base_dia, center=false);\n    \n    // Rubber feet (4 cylindrical feet)\n    for (i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([base_dia/2 - 10, 0, -1])\n                cylinder(h=3, d=8, center=false);\n    }\n}\n\n// Motor housing with cooling vents\nmodule motor_housing() {\n    // Main housing\n    cylinder(h=motor_housing_height, d=motor_housing_dia, center=false);\n    \n    // Cooling vents (slots)\n    for (i = [0:5]) {\n        rotate([0, 0, i*60])\n            translate([motor_housing_dia/2 - 5, 0, motor_housing_height/2])\n                cube([10, 2, motor_housing_height*0.8], center=true);\n    }\n    \n    // Control panel area\n    translate([motor_housing_dia/2 - 15, 0, motor_housing_height - 10])\n        cube([30, 20, 10], center=true);\n}\n\n// Control buttons\nmodule control_panel() {\n    // Panel base\n    translate([motor_housing_dia/2 - 15, 0, motor_housing_height - 5])\n        cube([28, 18, 8], center=true);\n    \n    // Buttons (5 buttons in a row)\n    for (i = [0:4]) {\n        translate([motor_housing_dia/2 - 25 + i*6, 0, motor_housing_height + 2])\n            cylinder(h=3, d=5, center=false);\n    }\n}\n\n// Blender jar\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h=jar_height, d=jar_dia, center=false);\n        // Hollow inside\n        translate([0, 0, jar_wall])\n            cylinder(h=jar_height-jar_wall, d=jar_dia-2*jar_wall, center=false);\n    }\n    \n    // Jar base threads (simplified)\n    translate([0, 0, -5])\n        cylinder(h=5, d=jar_dia+2, center=false);\n    \n    // Handle\n    translate([jar_dia/2 - 5, 0, jar_height/2])\n        rotate([90, 0, 0])\n            difference() {\n                // Handle shape\n                union() {\n                    cylinder(h=60, d=15, center=true);\n                    translate([0, 0, 30])\n                        sphere(d=15);\n                }\n                // Hollow handle\n                cylinder(h=58, d=11, center=true);\n            }\n    \n    // Spout for pouring\n    translate([-jar_dia/2, 0, jar_height - 20])\n        rotate([0, 30, 0])\n            cube([jar_dia/2, 20, 10], center=true);\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    // Blade base\n    cylinder(h=10, d=30, center=false);\n    \n    // Blades (4 crossed blades)\n    for (i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([0, 0, 5])\n                cube([20, 2, 1], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Base\n    base();\n    \n    // Motor housing on top of base\n    translate([0, 0, base_height])\n        motor_housing();\n    \n    // Control panel\n    translate([0, 0, base_height])\n        control_panel();\n    \n    // Jar on top of motor housing\n    translate([0, 0, base_height + motor_housing_height - 5])\n        jar();\n    \n    // Blade assembly inside jar base\n    translate([0, 0, base_height + motor_housing_height - 10])\n        blade_assembly();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juiceswift",
    "openscad_code": "// Juiceswift Kitchen Appliance - Medium complexity realistic style\n// Compact juicer with pulp container, juice jug, and control panel\n\n$fn = 50;  // Smooth curves\n\n// Main dimensions (mm)\nbase_w = 80;\nbase_d = 100;\nbase_h = 15;\n\nbody_w = 75;\nbody_d = 95;\nbody_h = 80;\n\nmotor_h = 60;\nmotor_r = 30;\n\njug_w = 40;\njug_d = 30;\njug_h = 50;\n\npulp_w = 50;\npulp_d = 45;\npulp_h = 60;\n\n// Main body assembly\nmodule main_body() {\n    // Base with rubber feet\n    difference() {\n        cube([base_w, base_d, base_h], center=true);\n        // Rubber feet cutouts\n        for (x = [-base_w/2 + 10, base_w/2 - 10])\n            for (y = [-base_d/2 + 10, base_d/2 - 10])\n                translate([x, y, -base_h/2])\n                    cylinder(r=3, h=base_h+1, center=true);\n    }\n    \n    // Main housing\n    translate([0, 0, base_h/2 + body_h/2])\n        difference() {\n            cube([body_w, body_d, body_h], center=true);\n            // Motor cavity\n            translate([0, -20, body_h/2 - 5])\n                cylinder(r=motor_r, h=motor_h+5, center=false);\n        }\n}\n\n// Motor top with feed chute\nmodule motor_assembly() {\n    translate([0, 0, base_h + body_h - 10])\n        difference() {\n            // Motor dome\n            cylinder(r=motor_r, h=30, center=false);\n            // Feed chute\n            translate([0, motor_r - 15, 25])\n                rotate([0, 0, 0])\n                    cylinder(r=15, h=25, center=false);\n            // Safety interlock hole\n            translate([motor_r - 5, 0, 20])\n                cylinder(r=3, h=10, center=false);\n        }\n}\n\n// Juice jug with handle\nmodule juice_jug() {\n    translate([-body_w/2 - jug_w/2 - 5, 0, base_h/2 + jug_h/2])\n        union() {\n            difference() {\n                // Jug body\n                cube([jug_w, jug_d, jug_h], center=true);\n                // Interior cavity\n                translate([0, 0, -2])\n                    cube([jug_w - 4, jug_d - 4, jug_h - 2], center=true);\n            }\n            // Handle\n            translate([jug_w/2, 0, 0])\n                difference() {\n                    rotate([0, 90, 0])\n                        cylinder(r=8, h=30, center=true);\n                    rotate([0, 90, 0])\n                        cylinder(r=5, h=32, center=true);\n                }\n            // Spout\n            translate([0, jug_d/2, jug_h/2 - 10])\n                rotate([90, 0, 0])\n                    cylinder(r=8, h=15, center=false);\n        }\n}\n\n// Pulp container\nmodule pulp_container() {\n    translate([body_w/2 + pulp_w/2 + 5, 0, base_h/2 + pulp_h/2])\n        difference() {\n            // Container body\n            cube([pulp_w, pulp_d, pulp_h], center=true);\n            // Interior cavity\n            translate([0, 0, -2])\n                cube([pulp_w - 4, pulp_d - 4, pulp_h - 2], center=true);\n            // Grip indent\n            translate([pulp_w/2 - 2, 0, 0])\n                cube([4, 30, 20], center=true);\n        }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    translate([0, body_d/2 + 2, base_h + body_h/2])\n        union() {\n            // Panel base\n            cube([40, 5, 30], center=true);\n            \n            // Power button\n            translate([-15, 3, 10])\n                difference() {\n                    cube([8, 3, 8], center=true);\n                    translate([0, 1.5, 0])\n                        sphere(r=3);\n                }\n            \n            // Speed dial\n            translate([0, 3, 0])\n                difference() {\n                    cylinder(r=8, h=5, center=true);\n                    translate([0, 0, 3])\n                        cylinder(r=6, h=3, center=true);\n                    // Dial indicator\n                    translate([6, 0, 0])\n                        cube([3, 2, 2], center=true);\n                }\n            \n            // Pulse button\n            translate([15, 3, 10])\n                difference() {\n                    cube([8, 3, 8], center=true);\n                    translate([0, 1.5, 0])\n                        sphere(r=3);\n                }\n        }\n}\n\n// Assembly\nunion() {\n    main_body();\n    motor_assembly();\n    juice_jug();\n    pulp_container();\n    control_panel();\n    \n    // Structural supports\n    translate([0, body_d/2 - 5, base_h + 5])\n        cube([body_w - 10, 10, 5], center=true);\n    translate([0, -body_d/2 + 5, base_h + 5])\n        cube([body_w - 10, 10, 5], center=true);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chopnova",
    "openscad_code": "// Chopnova-style mini food-processor (medium complexity, 3D-printable)\n// Overall height â‰ˆ 120 mm\n\n$fn = 36;\n\n// Main body shell\nmodule body() {\n    difference() {\n        union() {\n            // Cylindrical main housing\n            cylinder(h = 85, d = 70);\n            // Top shoulder ring\n            translate([0, 0, 85])\n                cylinder(h = 5, d = 78);\n        }\n        // Hollow cavity (2 mm walls)\n        translate([0, 0, -1])\n            cylinder(h = 87, d = 66);\n    }\n}\n\n// Transparent bowl (press-fit into top)\nmodule bowl() {\n    color(\"cyan\", 0.4)\n    translate([0, 0, 90])\n        difference() {\n            cylinder(h = 25, d = 74);\n            translate([0, 0, 2])\n                cylinder(h = 25, d = 70);\n        }\n}\n\n// Motor base with feet\nmodule base() {\n    difference() {\n        cylinder(h = 12, d = 75);\n        // Four recessed feet\n        for (a = [0:90:270])\n            rotate([0, 0, a + 45])\n                translate([28, 0, -1])\n                    cube([12, 8, 14], center = true);\n    }\n}\n\n// Control knob on front\nmodule knob() {\n    translate([0, 38, 50])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 8, d = 12);\n                translate([0, 0, -1])\n                    cylinder(h = 10, d = 6);\n            }\n}\n\n// Safety latch button\nmodule latch() {\n    translate([0, 38, 75])\n        cube([10, 6, 4], center = true);\n}\n\n// Drive shaft stub (inside bowl)\nmodule shaft() {\n    color(\"gray\")\n    translate([0, 0, 90])\n        cylinder(h = 20, d = 8);\n}\n\n// Cooling vents (array of slots)\nmodule vents() {\n    for (i = [0:8])\n        rotate([0, 0, i * 40])\n            translate([35, 0, 30])\n                cube([1.5, 8, 12], center = true);\n}\n\n// Assembly\nunion() {\n    body();\n    base();\n    bowl();\n    shaft();\n    knob();\n    latch();\n    difference() {\n        cylinder(h = 85, d = 70);\n        translate([0, 0, -1])\n            cylinder(h = 87, d = 68);\n        vents();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendpilot",
    "openscad_code": "// BlendPilot Kitchen Blender - Realistic Style, Medium Complexity\n// Dimensions: 90mm x 80mm x 160mm\n\n$fn = 32;\n\n// Main body module\nmodule blender_base() {\n    // Base structure with rounded corners\n    difference() {\n        // Main body\n        union() {\n            // Lower cylindrical base\n            cylinder(h=25, d=70, center=false);\n            // Upper rounded transition\n            translate([0, 0, 25])\n                cylinder(h=15, d1=70, d2=65, center=false);\n        }\n        \n        // Power cord hole\n        translate([35, -5, 10])\n            rotate([90, 0, 0])\n                cylinder(h=20, d=8, center=true);\n    }\n}\n\n// Motor housing with cooling vents\nmodule motor_housing() {\n    difference() {\n        // Main housing\n        union() {\n            cylinder(h=35, d=65, center=false);\n            translate([0, 0, 35])\n                cylinder(h=5, d1=65, d2=60, center=false);\n        }\n        \n        // Cooling vents\n        for(i=[0:35:315]) {\n            rotate([0, 0, i])\n                translate([30, 0, 15])\n                    cube([3, 10, 30], center=true);\n        }\n    }\n}\n\n// Control panel with buttons\nmodule control_panel() {\n    translate([0, 25, 45])\n        difference() {\n            // Panel base\n            cube([40, 2, 20], center=true);\n            \n            // Buttons\n            translate([-10, 1, 5])\n                cube([6, 2, 6], center=true);\n            translate([0, 1, 5])\n                cube([6, 2, 6], center=true);\n            translate([10, 1, 5])\n                cube([6, 2, 6], center=true);\n            \n            // Speed dial\n            translate([0, 1, -5])\n                cylinder(h=2, d=8, center=true);\n        }\n}\n\n// Blender jar with handle\nmodule blender_jar() {\n    translate([0, 0, 60]) {\n        // Main jar body\n        difference() {\n            // Outer jar\n            cylinder(h=80, d=50, center=false);\n            // Inner cavity\n            translate([0, 0, 2])\n                cylinder(h=78, d=46, center=false);\n        }\n        \n        // Handle\n        translate([25, 0, 40])\n            difference() {\n                // Handle grip\n                rotate([0, 90, 0])\n                    cylinder(h=60, d=12, center=true);\n                // Handle hole\n                rotate([0, 90, 0])\n                    cylinder(h=62, d=8, center=true);\n            }\n        \n        // Jar lid\n        translate([0, 0, 80])\n            difference() {\n                cylinder(h=8, d=52, center=false);\n                translate([0, 0, 2])\n                    cylinder(h=8, d=48, center=false);\n            }\n    }\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    translate([0, 0, 60]) {\n        // Blade hub\n        cylinder(h=5, d=15, center=false);\n        \n        // Blades\n        for(i=[0:120:240]) {\n            rotate([0, 0, i])\n                translate([7.5, 0, 2.5])\n                    cube([15, 2, 1], center=true);\n        }\n    }\n}\n\n// Feet for stability\nmodule feet() {\n    for(i=[0:90:270]) {\n        rotate([0, 0, i])\n            translate([25, 0, 0])\n                cylinder(h=5, d=12, center=false);\n    }\n}\n\n// Assembly\nunion() {\n    // Base assembly\n    union() {\n        blender_base();\n        feet();\n    }\n    \n    // Motor assembly\n    translate([0, 0, 25])\n        motor_housing();\n    \n    // Controls\n    control_panel();\n    \n    // Jar assembly\n    blender_jar();\n    \n    // Blade assembly (visible through jar)\n    blade_assembly();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixedge",
    "openscad_code": "// OpenSCAD Mini Mixer Blender â€“ 3D-printable, medium-complexity model\n// External size â‰ˆ 105 mm (H) Ã— 65 mm (W) Ã— 65 mm (D)\n// All walls â‰¥ 2 mm for standard FDM printing\n\n// ------------------ PARAMETERS ------------------\nwall = 2;        // wall thickness\nbase_d = 60;     // motor base diameter\nbase_h = 40;     // motor base height\njar_d = 50;      // glass jar diameter\njar_h = 55;      // glass jar height\nlid_d = 46;      // lid diameter\nlid_h = 10;      // lid height\nbutton_r = 4;    // control button radius\nbutton_h = 3;    // control button protrusion\n\n$fn = 48;\n\n// ------------------ MODULES ------------------\nmodule motor_base() {\n    // Main cylindrical body\n    cylinder(h = base_h, d = base_d);\n\n    // Chamfer top edge\n    translate([0, 0, base_h])\n    cylinder(h = 3, d1 = base_d, d2 = base_d - 4);\n\n    // Vent slots (cut-outs)\n    for (a = [0 : 60 : 300]) {\n        rotate([0, 0, a])\n        translate([base_d/2 - 1, -3, base_h/2])\n        cube([wall + 1, 6, 8], center = true);\n    }\n\n    // Rubber feet\n    for (a = [45 : 90 : 315]) {\n        rotate([0, 0, a])\n        translate([base_d/2 * 0.75, 0, -0.5])\n        cylinder(h = 2.5, d = 6);\n    }\n}\n\nmodule control_panel() {\n    // Panel plate\n    translate([base_d/2 - 1, 0, base_h/2])\n    rotate([0, 90, 0])\n    cube([base_h - 10, 20, wall]);\n\n    // Buttons\n    for (i = [0 : 1]) {\n        translate([base_d/2 + 1, -6 + i*12, base_h/2 - 5 + i*8])\n        cylinder(h = button_h, r = button_r);\n    }\n}\n\nmodule jar() {\n    // Main jar body (hollow tube)\n    difference() {\n        cylinder(h = jar_h, d = jar_d);\n        translate([0, 0, wall])\n        cylinder(h = jar_h, d = jar_d - 2*wall);\n    }\n\n    // Bottom threads ring\n    translate([0, 0, -wall])\n    cylinder(h = wall, d = jar_d + 4);\n\n    // Handle\n    translate([jar_d/2 + 2, 0, jar_h/2])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h = 30, d = 12);\n        cylinder(h = 30, d = 8);\n    }\n}\n\nmodule lid() {\n    difference() {\n        // Lid cap\n        cylinder(h = lid_h, d = lid_d + 4);\n\n        // Recess for stacking\n        translate([0, 0, wall])\n        cylinder(h = lid_h - wall, d = lid_d);\n\n        // Center hole for pouring\n        translate([0, 0, lid_h/2])\n        rotate([0, 90, 0])\n        cylinder(h = 20, r = 3);\n    }\n\n    // Small grip handle\n    translate([0, lid_d/2 - 4, lid_h - 2])\n    cube([20, 8, 4], center = true);\n}\n\n// ------------------ ASSEMBLY ------------------\nunion() {\n    motor_base();\n    control_panel();\n\n    translate([0, 0, base_h - 2])\n    jar();\n\n    translate([0, 0, base_h + jar_h])\n    lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicelogic",
    "openscad_code": "// Juicelogic Kitchen Juice Extractor - Realistic Style\n// Medium complexity model with 3D-printable walls (2mm)\n\n$fn = 50;  // Smooth curves\n\n// Overall dimensions (mm)\nbody_w = 80;\nbody_d = 90;\nbody_h = 160;\n\n// Wall thickness for 3D printing\nwall = 2;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        cube([body_w, body_d, body_h], center=true);\n        \n        // Inner cavity\n        translate([0, 0, -wall/2])\n            cube([body_w-wall*2, body_d-wall*2, body_h-wall], center=true);\n    }\n}\n\n// Juice container\nmodule juice_container() {\n    translate([0, body_d/2 + 15, -body_h/3])\n    difference() {\n        // Main container body\n        cube([60, 30, 60], center=true);\n        \n        // Tapered inside\n        translate([0, 0, 5])\n            cube([56, 26, 55], center=true);\n    }\n}\n\n// Feeding chute\nmodule feeding_chute() {\n    translate([0, -body_d/3, body_h/2 + 20])\n    rotate([0, 0, 0])\n    difference() {\n        // Outer cylinder\n        cylinder(h=40, r1=25, r2=20);\n        \n        // Inner hole\n        translate([0, 0, -1])\n            cylinder(h=42, r1=23-wall, r2=18-wall);\n    }\n}\n\n// Control panel with buttons\nmodule control_panel() {\n    translate([body_w/2 + 2, 0, body_h/4])\n    cube([10, 40, 30], center=true);\n    \n    // Power button\n    translate([body_w/2 + 5, -10, body_h/4 + 10])\n    cylinder(h=5, r=6);\n    \n    // Speed dial\n    translate([body_w/2 + 5, 10, body_h/4])\n    rotate([90, 0, 0])\n    cylinder(h=10, r=8);\n    \n    // Button details\n    for(i=[-1:1]) {\n        translate([body_w/2 + 5, i*8, body_h/4 - 10])\n        cube([6, 6, 2], center=true);\n    }\n}\n\n// Motor base details\nmodule motor_base() {\n    translate([0, 0, -body_h/2 - 10])\n    difference() {\n        cube([body_w + 10, body_d + 10, 20], center=true);\n        \n        // Ventilation slots\n        for(i=[-3:3]) {\n            translate([i*10, 0, 8])\n            cube([4, body_d + 5, 4], center=true);\n        }\n    }\n}\n\n// Feet for stability\nmodule feet() {\n    for(x=[-1,1]) {\n        for(y=[-1,1]) {\n            translate([x*body_w/2.5, y*body_d/2.5, -body_h/2 - 20])\n            cylinder(h=5, r=5);\n        }\n    }\n}\n\n// Handle on juice container\nmodule handle() {\n    translate([0, body_d/2 + 30, 0])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h=50, r=5);\n        translate([0, 0, -1])\n            cylinder(h=52, r=3);\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    body_shell();\n    translate([0, 0, -body_h/2 + 5])\n    color(\"lightgray\")\n    motor_base();\n    \n    // Attachments\n    color(\"transparent\")\n    juice_container();\n    \n    color(\"lightgray\")\n    feeding_chute();\n    \n    color(\"darkgray\")\n    control_panel();\n    \n    // Structural details\n    color(\"black\")\n    feet();\n    \n    color(\"darkgray\")\n    handle();\n}\n\n// Additional details - power cord\ntranslate([-body_w/2 - 20, 0, -body_h/2 - 10])\nrotate([90, 0, 0])\ncylinder(h=30, r=3);\n\n// Small indicator light\ntranslate([body_w/2 + 5, 0, body_h/4 + 15])\nsphere(r=3);",
    "renders": true
  },
  {
    "kitchen_appliance": "whirlchef",
    "openscad_code": "// WhirlChef Countertop Blender - Realistic Medium Complexity\n// Overall dimensions: 120mm x 100mm x 160mm (L x W x H)\n\n$fn = 48;\n\n// Main module\nmodule whirlchef() {\n    // Base motor housing\n    base();\n    \n    // Control panel\n    control_panel();\n    \n    // Jar assembly\n    jar_assembly();\n    \n    // Handle\n    handle();\n}\n\n// Base motor housing\nmodule base() {\n    difference() {\n        // Main body\n        translate([0, 0, 25])\n            cube([90, 80, 50], center = true);\n        \n        // Bottom ventilation slots\n        for (i = [-30:15:30]) {\n            translate([i, 0, 0])\n                cube([8, 82, 52], center = true);\n        }\n        \n        // Top recess for jar\n        translate([0, 0, 51])\n            cylinder(h = 5, r = 30);\n    }\n    \n    // Rubber feet\n    for (x = [-35, 35])\n        for (y = [-30, 30])\n            translate([x, y, 0])\n                cylinder(h = 3, r = 5);\n    \n    // Brand label\n    translate([0, 0, 51])\n        cube([40, 15, 1], center = true);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([-50, 0, 60])\n        difference() {\n            cube([20, 60, 10], center = true);\n            \n            // Button holes\n            for (i = [-20:10:20]) {\n                translate([0, i, 5])\n                    cylinder(h = 12, r = 4);\n            }\n        }\n    \n    // Buttons\n    for (i = [-20:10:20]) {\n        translate([-50, i, 60]) {\n            color(\"red\")\n                cylinder(h = 8, r = 3.5);\n            \n            // Button tops\n            translate([0, 0, 8])\n                sphere(r = 3.5);\n        }\n    }\n    \n    // Dial\n    translate([-50, 0, 75])\n        cylinder(h = 5, r = 12);\n    \n    // Dial indicator\n    translate([-38, 0, 77.5])\n        rotate([0, 90, 0])\n            cylinder(h = 2, r = 2);\n}\n\n// Jar assembly\nmodule jar_assembly() {\n    // Jar body\n    difference() {\n        // Main jar\n        translate([0, 0, 110])\n            cylinder(h = 80, r1 = 35, r2 = 30);\n        \n        // Hollow interior\n        translate([0, 0, 110])\n            cylinder(h = 78, r1 = 33, r2 = 28);\n    }\n    \n    // Jar base threads\n    translate([0, 0, 75])\n        cylinder(h = 10, r = 30);\n    \n    // Lid\n    translate([0, 0, 150])\n        difference() {\n            cylinder(h = 8, r = 35);\n            translate([0, 0, 1])\n                cylinder(h = 8, r = 33);\n        }\n    \n    // Lid handle\n    translate([0, 0, 158])\n        cylinder(h = 15, r = 8);\n    \n    // Lid spout\n    translate([30, 0, 150])\n        rotate([0, -30, 0])\n            cylinder(h = 20, r1 = 8, r2 = 5);\n}\n\n// Handle\nmodule handle() {\n    difference() {\n        // Main handle\n        translate([40, 0, 110])\n            rotate([0, 90, 0])\n                cylinder(h = 60, r = 5);\n        \n        // Grip hollow\n        translate([40, 0, 110])\n            rotate([0, 90, 0])\n                cylinder(h = 58, r = 3);\n    }\n    \n    // Handle supports\n    translate([40, 0, 80])\n        sphere(r = 6);\n    \n    translate([40, 0, 140])\n        sphere(r = 6);\n}\n\n// Scale to reasonable print size\nscale(0.8)\n    whirlchef();",
    "renders": true
  },
  {
    "kitchen_appliance": "blendspark",
    "openscad_code": "// BlendSpark Kitchen Blender - Realistic Medium Complexity\n// 100mm total height, 3D printable with 2mm walls\n\n$fn = 32;\n\n// Main module\nmodule blendspark() {\n    // Base unit\n    base();\n    \n    // Motor housing\n    motor_housing();\n    \n    // Control panel\n    control_panel();\n    \n    // Jar assembly\n    jar_assembly();\n    \n    // Lid\n    lid();\n}\n\n// Base with rubber feet\nmodule base() {\n    // Main base\n    difference() {\n        cylinder(h=15, d=60, center=false);\n        cylinder(h=16, d=56, center=false);\n    }\n    \n    // Rubber feet\n    for(i=[0:3]) {\n        rotate([0,0,i*90]) \n        translate([22,0,0])\n        cylinder(h=2, d=6, center=false);\n    }\n    \n    // Ventilation slots\n    for(i=[0:5]) {\n        rotate([0,0,i*60]) \n        translate([25,0,7])\n        cube([10,1,6], center=true);\n    }\n}\n\n// Motor housing\nmodule motor_housing() {\n    difference() {\n        // Main housing\n        translate([0,0,15])\n        cylinder(h=35, d=55, center=false);\n        \n        // Taper top\n        translate([0,0,48])\n        cylinder(h=2, d1=55, d2=50, center=false);\n    }\n    \n    // Cooling vents\n    for(i=[0:11]) {\n        rotate([0,0,i*30]) \n        translate([25,0,25])\n        cube([8,1,15], center=true);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel base\n    translate([40,0,25])\n    rotate([0,90,0])\n    difference() {\n        cylinder(h=20, d=15, center=true);\n        cylinder(h=21, d=11, center=true);\n    }\n    \n    // Power button\n    translate([45,0,28])\n    sphere(d=4);\n    \n    // Speed dial\n    translate([45,0,22])\n    cylinder(h=3, d=8, center=true);\n    \n    // Indicator lights\n    for(i=[0:2]) {\n        translate([42+i*2,0,31])\n        sphere(d=1.5);\n    }\n}\n\n// Jar assembly\nmodule jar_assembly() {\n    // Jar base\n    translate([0,0,50])\n    difference() {\n        cylinder(h=35, d=45, center=false);\n        cylinder(h=36, d=41, center=false);\n    }\n    \n    // Handle\n    translate([22.5,0,67.5])\n    rotate([0,90,0])\n    difference() {\n        // Handle grip\n        cylinder(h=40, d=10, center=true);\n        cylinder(h=41, d=6, center=true);\n    }\n    \n    // Handle supports\n    translate([22.5,0,60])\n    rotate([0,90,0])\n    cylinder(h=2, d=8, center=false);\n    \n    translate([22.5,0,75])\n    rotate([0,90,0])\n    cylinder(h=2, d=8, center=false);\n    \n    // Blade assembly\n    translate([0,0,85])\n    blades();\n}\n\n// Blender blades\nmodule blades() {\n    // Blade hub\n    cylinder(h=3, d=12, center=false);\n    \n    // Four blades\n    for(i=[0:3]) {\n        rotate([0,0,i*90]) \n        translate([0,8,1.5])\n        cube([20,2,1], center=true);\n    }\n}\n\n// Jar lid\nmodule lid() {\n    // Main lid\n    translate([0,0,85])\n    difference() {\n        cylinder(h=5, d=47, center=false);\n        cylinder(h=6, d=43, center=false);\n    }\n    \n    // Lid handle\n    translate([0,0,90])\n    cylinder(h=8, d=8, center=false);\n    \n    // Pour spout\n    translate([15,0,85])\n    rotate([0,-30,0])\n    difference() {\n        cylinder(h=10, d=8, center=false);\n        cylinder(h=11, d=4, center=false);\n    }\n}\n\n// Generate the model\nblendspark();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixcraft",
    "openscad_code": "// Mixcraft Kitchen Stand Mixer - Medium Complexity Realistic Style\n// Dimensions: ~120mm height, 80mm width, 100mm depth\n// Wall thickness: 2mm throughout\n\n// Main module\nmodule mixcraft_mixer() {\n    // Base assembly\n    base_assembly();\n    \n    // Stand column\n    stand_column();\n    \n    // Motor head\n    motor_head();\n    \n    // Mixing bowl\n    mixing_bowl();\n    \n    // Control panel\n    control_panel();\n    \n    // Handle\n    handle();\n    \n    // Mixer attachments\n    mixer_attachments();\n}\n\n// Base assembly\nmodule base_assembly() {\n    // Main base\n    difference() {\n        cube([80, 100, 15], center=true);\n        translate([0, 0, 7])\n            cube([76, 96, 15], center=true);\n    }\n    \n    // Base feet\n    for (pos = [[-35, -45], [35, -45], [-35, 45], [35, 45]]) {\n        translate([pos[0], pos[1], -7.5])\n            cylinder(h=5, r=5, center=true);\n    }\n    \n    // Base rim\n    translate([0, 0, 7.5])\n        cube([82, 102, 2], center=true);\n}\n\n// Stand column\nmodule stand_column() {\n    // Main column\n    difference() {\n        translate([0, 30, 15])\n            cube([20, 20, 70], center=true);\n        translate([0, 30, 15])\n            cube([16, 16, 70], center=true);\n    }\n    \n    // Support braces\n    for (angle = [0, 90]) {\n        rotate([0, 0, angle])\n            translate([10, 20, 25])\n                cube([2, 25, 15], center=true);\n    }\n}\n\n// Motor head\nmodule motor_head() {\n    // Main housing\n    difference() {\n        translate([0, 0, 60])\n            cube([60, 70, 50], center=true);\n        translate([0, 0, 62])\n            cube([56, 66, 50], center=true);\n    }\n    \n    // Front dome\n    translate([0, -35, 60])\n        scale([1, 0.5, 0.8])\n            sphere(r=30);\n    \n    // Motor vent slots\n    for (i = [-2:2]) {\n        translate([0, 5 + i*8, 85])\n            cube([50, 2, 2], center=true);\n    }\n}\n\n// Mixing bowl\nmodule mixing_bowl() {\n    // Bowl\n    difference() {\n        translate([0, 0, 35])\n            cylinder(h=40, r1=35, r2=30, center=false);\n        translate([0, 0, 37])\n            cylinder(h=40, r1=33, r2=28, center=false);\n    }\n    \n    // Bowl rim\n    translate([0, 0, 75])\n        cylinder(h=3, r1=36, r2=36, center=false);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([0, 35, 75])\n        cube([40, 2, 20], center=true);\n    \n    // Speed dial\n    translate([0, 36, 80])\n        cylinder(h=5, r=8, center=true);\n    \n    // Power button\n    translate([-15, 36, 80])\n        cube([8, 2, 6], center=true);\n    \n    // Speed indicator lines\n    for (i = [0:4]) {\n        translate([15, 36, 75 + i*3])\n            cube([2, 1, 1], center=true);\n    }\n}\n\n// Handle\nmodule handle() {\n    // Main handle\n    translate([0, 0, 85])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=30, r=5, center=true);\n                translate([0, 0, 0])\n                    cylinder(h=32, r=3, center=true);\n            }\n    \n    // Handle grips\n    for (pos = [-10, 0, 10]) {\n        translate([0, pos, 85])\n            rotate([90, 0, 0])\n                cylinder(h=1, r=6, center=true);\n    }\n}\n\n// Mixer attachments\nmodule mixer_attachments() {\n    // Whisk attachment\n    translate([0, -35, 45])\n        for (i = [0:3]) {\n            rotate([0, 0, i*90])\n                translate([8, 0, 0])\n                    cylinder(h=30, r=2, center=false);\n        }\n}\n\n// Render the mixer\nmixcraft_mixer();",
    "renders": true
  },
  {
    "kitchen_appliance": "juiceforce",
    "openscad_code": "// JuiceForce Juicer - Realistic Style, Medium Complexity\n// Overall dimensions: ~90mm tall, 80mm wide, 80mm deep\n\n// Main body module\nmodule main_body() {\n    // Base housing\n    difference() {\n        // Main housing block - 2mm wall thickness\n        cube([76, 76, 50], center=true);\n        \n        // Hollow cavity\n        translate([0, 0, 2])\n            cube([72, 72, 46], center=true);\n        \n        // Front display cutout\n        translate([0, 38.5, 15])\n            cube([30, 2, 20], center=true);\n        \n        // Power cord hole\n        translate([0, -38.5, -20])\n            rotate([90, 0, 0])\n            cylinder(h=5, r=4, center=true);\n    }\n}\n\n// Motor housing top\nmodule motor_housing() {\n    // Top dome\n    translate([0, 0, 25])\n        scale([1, 1, 0.6])\n        sphere(r=40, $fn=40);\n    \n    // Motor vents\n    for(i = [0:5:35]) {\n        rotate([0, 0, i])\n            translate([0, 35, 25])\n            cube([2, 5, 8], center=true);\n    }\n}\n\n// Juice container with handle\nmodule juice_container() {\n    // Main container\n    difference() {\n        cylinder(h=40, r=30, center=true, $fn=64);\n        translate([0, 0, 5])\n            cylinder(h=30, r=28, center=true, $fn=64);\n    }\n    \n    // Handle\n    translate([30, 0, 0])\n        rotate([0, 90, 0])\n        difference() {\n            cylinder(h=35, r=4, center=true, $fn=16);\n            translate([0, 0, 0])\n                cylinder(h=31, r=2, center=true, $fn=16);\n        }\n}\n\n// Feeding chute\nmodule feeding_chute() {\n    // Main chute tube\n    cylinder(h=30, r=15, center=true, $fn=32);\n    \n    // Chute opening\n    translate([0, 0, 15])\n        cylinder(h=5, r=12, center=true, $fn=32);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel background\n    translate([0, 39, 15])\n        cube([26, 2, 16], center=true);\n    \n    // Buttons\n    for(i = [-1:2:1]) {\n        translate([i*8, 40.5, 15])\n            cube([6, 1, 6], center=true);\n    }\n    \n    // Power button\n    translate([0, 40.5, 22])\n        cylinder(h=1, r=4, center=true, $fn=16);\n    \n    // LED indicator\n    translate([12, 40.5, 22])\n        cylinder(h=1, r=2, center=true, $fn=16);\n}\n\n// Base with feet\nmodule base_with_feet() {\n    // Base plate\n    cube([80, 80, 4], center=true);\n    \n    // Rubber feet\n    for(x = [-30, 30])\n        for(y = [-30, 30])\n            translate([x, y, -2.5])\n                cylinder(h=3, r=4, center=true, $fn=16);\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    // Central hub\n    cylinder(h=8, r=8, center=true, $fn=16);\n    \n    // Blades (4 blades)\n    for(i = [0:90:270]) {\n        rotate([0, 0, i])\n            translate([12, 0, 0])\n                cube([24, 2, 6], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Base\n    base_with_feet();\n    \n    // Main components\n    translate([0, 0, -27])\n        main_body();\n    \n    translate([0, 0, -2])\n        motor_housing();\n    \n    // Container on top\n    translate([0, 0, 50])\n        juice_container();\n    \n    // Feeding chute\n    translate([0, 0, 65])\n        feeding_chute();\n    \n    // Blade assembly inside container\n    translate([0, 0, 30])\n        blade_assembly();\n    \n    // Control panel\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chopjet",
    "openscad_code": "// ChopJet Kitchen Appliance - Realistic Medium Complexity\n// A compact food-processor style chopjet with bowl, motor housing, and controls\n\n// Overall dimensions\nwidth = 120;\ndepth = 100;\nheight = 180;\n\n// Wall thickness\nwall = 2;\n\n// Base/Motor housing\nmodule base() {\n    difference() {\n        // Main body - slightly tapered\n        hull() {\n            translate([0, 0, height*0.4/2]) cube([width*0.9, depth*0.9, height*0.4], center=true);\n            translate([0, 0, height*0.3/2]) cube([width*0.8, depth*0.8, height*0.3], center=true);\n        }\n        \n        // Cavity for motor\n        translate([0, 0, height*0.1]) cube([width*0.6, depth*0.6, height*0.35], center=true);\n    }\n    \n    // Rubber feet\n    for(x = [-width*0.35, width*0.35])\n        for(y = [-depth*0.35, depth*0.35])\n            translate([x, y, 0]) cylinder(h=wall, r=5, $fn=16);\n}\n\n// Control panel\nmodule controls() {\n    translate([width*0.4, 0, height*0.4]) {\n        // Panel surface\n        difference() {\n            cube([width*0.2, depth*0.6, height*0.05], center=true);\n            // Buttons\n            for(i = [-1, 0, 1]) {\n                translate([0, i*15, 3]) \n                    cube([15, 8, 4], center=true);\n            }\n        }\n        \n        // Rotary dial\n        translate([0, depth*0.3+10, height*0.025]) {\n            cylinder(h=10, r=12, $fn=32);\n            translate([0, 0, 5]) cylinder(h=3, r=8, $fn=6);\n        }\n    }\n}\n\n// Bowl assembly\nmodule bowl() {\n    // Bowl base\n    difference() {\n        cylinder(h=height*0.5, r1=width*0.35, r2=width*0.3, $fn=64);\n        translate([0, 0, wall]) \n            cylinder(h=height*0.5-wall, r1=width*0.35-wall, r2=width*0.3-wall, $fn=64);\n    }\n    \n    // Handle\n    translate([width*0.35-2, 0, height*0.25]) \n        rotate([0, 90, 0]) \n            cylinder(h=width*0.2, r=8, $fn=16);\n    \n    // Lid\n    translate([0, 0, height*0.5+2]) {\n        difference() {\n            cylinder(h=10, r=width*0.35, $fn=64);\n            translate([0, 0, wall]) \n                cylinder(h=10, r=width*0.33, $fn=64);\n        }\n        \n        // Feed tube\n        translate([0, width*0.2, 5]) {\n            cylinder(h=20, r=15, $fn=32);\n            translate([0, 0, wall]) \n                cylinder(h=20, r=13, $fn=32);\n        }\n    }\n}\n\n// Blade assembly\nmodule blades() {\n    translate([0, 0, height*0.4+wall]) {\n        // Hub\n        cylinder(h=10, r=15, $fn=32);\n        \n        // Blades - 4 arms\n        for(i = [0:90:270]) {\n            rotate([0, 0, i]) {\n                translate([0, 0, 5]) \n                    cube([width*0.25, 3, 1], center=true);\n                translate([width*0.15, 0, 5]) \n                    rotate([90, 0, 0]) \n                        cylinder(h=3, r=width*0.05, $fn=16);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    color(\"silver\") base();\n    color(\"black\") controls();\n    color(\"white\") bowl();\n    color(\"steel\") blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendrush",
    "openscad_code": "// Blendrush Kitchen Appliance (Medium Complexity)\n// Realistic style, 3D printable\n\n$fn = 32;\n\n// Main body dimensions\nbody_width = 60;\nbody_depth = 40;\nbody_height = 80;\n\n// Container dimensions\ncontainer_radius = 20;\ncontainer_height = 35;\ncontainer_thickness = 2;\n\n// Base dimensions\nbase_width = 70;\nbase_depth = 50;\nbase_height = 10;\n\n// Handle dimensions\nhandle_length = 25;\nhandle_radius = 5;\nhandle_clearance = 8;\n\n// Control panel dimensions\npanel_width = 25;\npanel_height = 15;\npanel_depth = 5;\nbutton_radius = 3;\n\nmodule base() {\n    // Main base with rounded edges\n    difference() {\n        // Base body\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Rounded bottom\n        translate([0, 0, -base_height/2])\n            cylinder(h=base_height, r1=base_width/2, r2=base_width/2, center=true);\n    }\n    \n    // Rubber feet\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x * (base_width/2 - 8), y * (base_depth/2 - 8), 0])\n                cylinder(h=2, r=4);\n        }\n    }\n}\n\nmodule motor_body() {\n    // Main motor housing\n    translate([0, 0, base_height + body_height/2])\n        cube([body_width, body_depth, body_height], center=true);\n    \n    // Cooling vents\n    for(i = [1:4]) {\n        translate([body_width/2 + 1, -body_depth/2 + i * 10, base_height + body_height - 15])\n            rotate([0, 90, 0])\n                cylinder(h=body_width, r=1.5);\n    }\n    \n    // Power cord entry\n    translate([-body_width/2 - 3, 0, base_height + 20])\n        rotate([90, 0, 0])\n            cylinder(h=8, r=3);\n}\n\nmodule container() {\n    // Main container\n    difference() {\n        translate([0, 0, base_height + body_height + container_height/2])\n            cylinder(h=container_height, r=container_radius, center=true);\n        \n        // Hollow inside\n        translate([0, 0, base_height + body_height + container_height/2])\n            cylinder(h=container_height + 2, r=container_radius - container_thickness, center=true);\n        \n        // Pour spout\n        translate([container_radius - 2, 0, base_height + body_height + container_height - 5])\n            cube([container_radius, 12, 10], center=true);\n    }\n    \n    // Measurement markings\n    for(i = [1:3]) {\n        translate([container_radius - 1, 0, base_height + body_height + i * 10])\n            cube([1, 15, 0.5], center=true);\n    }\n}\n\nmodule handle() {\n    // Container handle\n    translate([container_radius + handle_clearance, 0, base_height + body_height + container_height/2])\n        rotate([0, 90, 0])\n            difference() {\n                // Handle grip\n                cylinder(h=handle_length, r=handle_radius, center=true);\n                \n                // Hollow grip\n                cylinder(h=handle_length + 2, r=handle_radius - 2, center=true);\n            }\n}\n\nmodule lid() {\n    // Main lid\n    translate([0, 0, base_height + body_height + container_height + 2])\n        difference() {\n            cylinder(h=4, r=container_radius);\n            cylinder(h=5, r=container_radius - container_thickness);\n        }\n    \n    // Lid knob\n    translate([0, 0, base_height + body_height + container_height + 6])\n        cylinder(h=8, r=6);\n    \n    // Safety lock tabs\n    for(angle = [0:120:240]) {\n        rotate([0, 0, angle])\n            translate([container_radius - 3, 0, base_height + body_height + container_height + 2])\n                cube([6, 3, 4]);\n    }\n}\n\nmodule control_panel() {\n    translate([0, body_depth/2 + panel_depth/2, base_height + body_height - 20])\n        cube([panel_width, panel_depth, panel_height], center=true);\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([-8 + i * 8, body_depth/2 + panel_depth + 1, base_height + body_height - 15 - i * 4])\n            sphere(r=button_radius);\n    }\n    \n    // Speed dial\n    translate([0, body_depth/2 + panel_depth + 1, base_height + body_height - 25])\n        cylinder(h=3, r=6);\n}\n\n// Assembly\nunion() {\n    base();\n    motor_body();\n    container();\n    handle();\n    lid();\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixflow",
    "openscad_code": "// Mixflow Kitchen Mixer (Medium Complexity, Realistic Style)\n// Overall dimensions: ~100mm tall x 80mm wide x 90mm deep\n\n$fn = 50;\n\n// Main body\nmodule body() {\n    difference() {\n        // Main housing\n        translate([0, 0, 40])\n            cube([70, 85, 80], center=true);\n        \n        // Front cavity for bowl\n        translate([0, 25, 20])\n            cube([65, 50, 60], center=true);\n        \n        // Back ventilation slots\n        for (i = [-30:10:30]) {\n            translate([0, -45, i])\n                cube([60, 5, 3], center=true);\n        }\n    }\n}\n\n// Motor head\nmodule motor_head() {\n    difference() {\n        // Main motor housing\n        translate([0, 0, 85])\n            cube([75, 90, 30], center=true);\n        \n        // Top curve detail\n        translate([0, 0, 100])\n            sphere(40);\n        \n        // Control panel recess\n        translate([0, 40, 90])\n            cube([50, 20, 10], center=true);\n    }\n}\n\n// Control panel\nmodule controls() {\n    translate([0, 50, 90]) {\n        // Speed dial\n        rotate([90, 0, 0])\n            cylinder(h=8, r=10);\n        \n        // Power button\n        translate([-20, 0, 0])\n            cube([12, 6, 8], center=true);\n        \n        // Pulse button\n        translate([20, 0, 0])\n            cube([12, 6, 8], center=true);\n    }\n}\n\n// Mixing bowl\nmodule bowl() {\n    difference() {\n        // Main bowl\n        translate([0, 25, 15])\n            cylinder(h=50, r=35, r1=35, r2=30);\n        \n        // Inner cavity\n        translate([0, 25, 10])\n            cylinder(h=48, r=33);\n        \n        // Handle\n        translate([40, 25, 35])\n            rotate([0, 90, 0])\n                cylinder(h=30, r=5);\n    }\n}\n\n// Mixer attachment\nmodule attachment() {\n    // Shaft\n    translate([0, 0, 75])\n        cylinder(h=30, r=3);\n    \n    // Whisk head\n    translate([0, 0, 60])\n        union() {\n            for (i = [0:60:359]) {\n                rotate([0, 0, i])\n                    translate([15, 0, 0])\n                        cylinder(h=20, r=2);\n            }\n        }\n}\n\n// Base with rubber feet\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, 0])\n            cube([75, 85, 10], center=true);\n        \n        // Rubber feet recesses\n        for (x = [-30, 30]) {\n            for (y = [-35, 35]) {\n                translate([x, y, 5])\n                    cylinder(h=5, r=5);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    motor_head();\n    controls();\n    bowl();\n    attachment();\n}\n\n// Add small details\n// LED indicator\ntranslate([0, 50, 100])\n    sphere(3);",
    "renders": true
  },
  {
    "kitchen_appliance": "juicechef",
    "openscad_code": "// JuiceChef Kitchen Appliance - Medium Complexity\n// A countertop juicer with realistic proportions\n\n$fn = 32;\n\n// Main body dimensions\nbase_width = 45;\nbase_depth = 35;\nbase_height = 15;\n\n// Motor housing\nmotor_width = 40;\nmotor_depth = 30;\nmotor_height = 25;\n\n// Juice container\ncontainer_radius = 18;\ncontainer_height = 30;\ncontainer_wall = 2;\n\n// Feeding tube\ntube_radius = 10;\ntube_height = 25;\n\nmodule base() {\n    // Main base with rounded corners\n    difference() {\n        minkowski() {\n            cube([base_width, base_depth, base_height], center = true);\n            cylinder(r = 3, h = 0.1, center = true);\n        }\n        \n        // Ventilation slots\n        for(i = [-1:1]) {\n            translate([0, i * 8, -base_height/2 + 2])\n                cube([base_width - 10, 2, 4]);\n        }\n    }\n}\n\nmodule motor_housing() {\n    // Central motor housing\n    translate([0, 0, base_height/2 + motor_height/2])\n        difference() {\n            cube([motor_width, motor_depth, motor_height], center = true);\n            \n            // Control panel recess\n            translate([motor_width/2 - 1, 0, 5])\n                cube([2, 20, 10], center = true);\n        }\n}\n\nmodule control_panel() {\n    // Buttons and dial on front\n    translate([motor_width/2, 0, base_height/2 + motor_height/2 + 5])\n        union() {\n            // Power button\n            translate([-5, -8, 0])\n                cylinder(r = 4, h = 2);\n            \n            // Speed dial\n            translate([0, 0, 0])\n                cylinder(r = 6, h = 3);\n            \n            // Pulse button\n            translate([5, 8, 0])\n                cylinder(r = 3, h = 2);\n        }\n}\n\nmodule juice_container() {\n    // Main juice collection container\n    translate([0, -5, base_height/2 + motor_height + container_height/2 - 5])\n        difference() {\n            cylinder(r = container_radius, h = container_height);\n            translate([0, 0, container_wall])\n                cylinder(r = container_radius - container_wall, h = container_height);\n            \n            // Handle cutout\n            translate([container_radius - 2, 0, container_height/2])\n                cube([4, 15, container_height - 8], center = true);\n        }\n}\n\nmodule container_handle() {\n    // Handle for juice container\n    translate([container_radius + 2, -5, base_height/2 + motor_height + container_height/2 - 5])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(r = 3, h = 15);\n                translate([0, 0, -1])\n                    cylinder(r = 1.5, h = 17);\n            }\n}\n\nmodule feeding_tube() {\n    // Large feeding tube on top\n    translate([0, 8, base_height/2 + motor_height + container_height - 5])\n        union() {\n            // Main tube\n            cylinder(r = tube_radius, h = tube_height);\n            \n            // Tube rim\n            translate([0, 0, tube_height])\n                cylinder(r = tube_radius + 2, h = 3);\n            \n            // Pusher storage\n            translate([0, 0, tube_height + 5])\n                cylinder(r = tube_radius - 3, h = 8);\n        }\n}\n\nmodule pulp_container() {\n    // Side pulp collection container\n    translate([motor_width/2 + 10, 0, base_height/2 + 5])\n        difference() {\n            cube([15, motor_depth - 10, 20], center = true);\n            translate([0, 0, 2])\n                cube([11, motor_depth - 14, 18], center = true);\n        }\n}\n\nmodule non_slip_feet() {\n    // Rubber feet at corners\n    for(x = [-base_width/2 + 5, base_width/2 - 5])\n        for(y = [-base_depth/2 + 5, base_depth/2 - 5])\n            translate([x, y, -base_height/2 - 1])\n                cylinder(r = 2, h = 2);\n}\n\n// Assembly\nunion() {\n    base();\n    motor_housing();\n    control_panel();\n    juice_container();\n    container_handle();\n    feeding_tube();\n    pulp_container();\n    non_slip_feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "turboblend",
    "openscad_code": "// TurboBlend Kitchen Blender - 3D Printable Model\n// Dimensions: ~120mm height, ~85mm base diameter\n\n$fn = 50;\n\n// Main module\nmodule turboblend() {\n    // Base unit\n    union() {\n        // Motor base\n        translate([0, 0, 0]) {\n            cylinder(h = 60, r1 = 42, r2 = 38);\n        }\n        \n        // Control panel\n        translate([0, -30, 60]) {\n            rotate([90, 0, 0]) {\n                difference() {\n                    cube([50, 30, 2], center = true);\n                    translate([0, 0, 1]) {\n                        cube([46, 26, 3], center = true);\n                    }\n                }\n            }\n        }\n        \n        // Buttons\n        for(i = [-1:1]) {\n            translate([i * 12, -30, 61]) {\n                cylinder(h = 3, r = 4);\n            }\n        }\n        \n        // Power dial\n        translate([20, -30, 63]) {\n            cylinder(h = 5, r = 6);\n        }\n        \n        // Jar base\n        translate([0, 0, 60]) {\n            cylinder(h = 8, r = 35);\n        }\n        \n        // Jar\n        translate([0, 0, 68]) {\n            difference() {\n                cylinder(h = 50, r1 = 32, r2 = 28);\n                translate([0, 0, 2]) {\n                    cylinder(h = 46, r1 = 30, r2 = 26);\n                }\n            }\n        }\n        \n        // Jar handle\n        translate([32, 0, 90]) {\n            rotate([0, 90, 0]) {\n                difference() {\n                    cylinder(h = 50, r = 8);\n                    translate([0, 0, 2]) {\n                        cylinder(h = 46, r = 5);\n                    }\n                }\n            }\n        }\n        \n        // Lid\n        translate([0, 0, 118]) {\n            difference() {\n                cylinder(h = 4, r = 28);\n                translate([0, 0, 2]) {\n                    cylinder(h = 4, r = 26);\n                }\n            }\n        }\n        \n        // Lid knob\n        translate([0, 0, 122]) {\n            cylinder(h = 6, r = 6);\n        }\n        \n        // Base feet\n        for(angle = [0:90:270]) {\n            rotate([0, 0, angle]) {\n                translate([35, 0, -2]) {\n                    cylinder(h = 4, r = 5);\n                }\n            }\n        }\n        \n        // Ventilation slots\n        translate([0, 0, 20]) {\n            for(i = [1:3]) {\n                rotate([0, 0, i * 120]) {\n                    translate([38, 0, 0]) {\n                        cube([20, 2, 15], center = true);\n                    }\n                }\n            }\n        }\n    }\n}\n\nturboblend();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixgenie",
    "openscad_code": "// MixGenie Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: 90mm x 70mm x 120mm\n\n$fn = 32;\n\n// Main body module\nmodule mixgenie_body() {\n    // Base\n    difference() {\n        cube([90, 70, 15], center = true);\n        translate([0, 0, 7.5])\n            cube([86, 66, 15], center = true);\n    }\n    \n    // Main housing\n    difference() {\n        translate([0, 0, 8])\n            cube([85, 65, 85], center = true);\n        translate([0, 0, 8])\n            cube([81, 61, 85], center = true);\n    }\n    \n    // Top cover\n    difference() {\n        translate([0, 0, 95])\n            cube([85, 65, 10], center = true);\n        translate([0, 0, 95])\n            cube([81, 61, 10], center = true);\n    }\n}\n\n// Motor section\nmodule motor_housing() {\n    translate([0, 0, 50])\n        difference() {\n            cylinder(h = 30, r = 25);\n            cylinder(h = 30, r = 23);\n        }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([40, 0, 25])\n        difference() {\n            cube([15, 40, 5], center = true);\n            cube([13, 38, 5], center = true);\n        }\n    \n    // Buttons\n    for(i = [0:3]) {\n        translate([40, -15 + i*10, 28])\n            cylinder(h = 2, r = 3);\n    }\n    \n    // Power button\n    translate([40, 15, 28])\n        cylinder(h = 3, r = 4);\n}\n\n// Jar base\nmodule jar_base() {\n    // Bottom ring\n    difference() {\n        translate([0, 0, 105])\n            cylinder(h = 5, r = 20);\n        translate([0, 0, 105])\n            cylinder(h = 5, r = 18);\n    }\n    \n    // Mounting threads\n    for(i = [0:11]) {\n        rotate([0, 0, i*30])\n            translate([17, 0, 105])\n                cube([2, 3, 5], center = true);\n    }\n}\n\n// Jar\nmodule jar() {\n    // Main jar body\n    difference() {\n        translate([0, 0, 130])\n            cylinder(h = 40, r1 = 20, r2 = 22);\n        translate([0, 0, 130])\n            cylinder(h = 40, r1 = 18, r2 = 20);\n    }\n    \n    // Lid\n    difference() {\n        translate([0, 0, 172])\n            cylinder(h = 5, r = 22);\n        translate([0, 0, 172])\n            cylinder(h = 5, r = 20);\n    }\n    \n    // Handle\n    translate([22, 0, 145])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 20, r = 4);\n                cylinder(h = 20, r = 2);\n            }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-35, 35]) {\n        for(y = [-25, 25]) {\n            translate([x, y, -7.5])\n                cylinder(h = 5, r = 3);\n        }\n    }\n}\n\n// Ventilation slots\nmodule vents() {\n    for(i = [0:4]) {\n        translate([-40, -30 + i*15, 60])\n            cube([80, 2, 8]);\n    }\n}\n\n// Assembly\nunion() {\n    mixgenie_body();\n    motor_housing();\n    control_panel();\n    jar_base();\n    jar();\n    feet();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicecore",
    "openscad_code": "// JuiceCore â€“ mid-size citrus press, 3D-printable, ~110 mm tall\n// All walls â‰¥ 2 mm, no nasty overhangs, printed as one solid part\n\n// ---------- global parameters ----------\nwall = 2;\ndia = 78;               // main body diameter\nh   = 100;              // total height\nconeH = 35;             // reamer cone height\nbaseH = 25;             // base section height\nmidH  = h - coneH - baseH;\n\n// ---------- module: rounded cylinder ----------\nmodule cyl_r(d,h) {\n    cylinder(d=d,h=h,$fn=60);\n}\n\n// ---------- module: reamer cone with ribs ----------\nmodule reamer() {\n    difference() {\n        cyl_r(dia-2*wall, coneH);           // main cone\n        translate([0,0,-0.1])\n            cylinder(d1=dia-6,d2=0,h=coneH+0.2,$fn=6); // remove inside\n    }\n    // ribs\n    for(a=[0:60:359])\n        rotate([0,0,a])\n            translate([dia/2-wall-1.5, -1.5, 0])\n                cube([4,3,coneH]);\n}\n\n// ---------- module: juice cup with spout ----------\nmodule cup() {\n    difference() {\n        cyl_r(dia, midH);\n        translate([0,0,wall])\n            cyl_r(dia-2*wall, midH+1);\n    }\n    // spout\n    translate([dia/2,0,midH/2])\n        rotate([0,90,0])\n            cylinder(d1=10,d2=6,h=12,$fn=20);\n}\n\n// ---------- module: base with feet ----------\nmodule base() {\n    union() {\n        cyl_r(dia, baseH);\n        // four feet\n        for(a=[45,135,225,315])\n            rotate([0,0,a])\n                translate([dia/2-6,-4,0])\n                    cube([8,8,6]);\n    }\n}\n\n// ---------- module: top handle ----------\nmodule handle() {\n    translate([0,0,h])\n        rotate([0,0,0])\n            difference() {\n                union() {\n                    // vertical shaft\n                    translate([-4,-4,0])\n                        cube([8,8,30]);\n                    // horizontal grip\n                    translate([-4,0,30])\n                        cube([8,30,8]);\n                }\n                // hollow shaft\n                translate([-2,-2,2])\n                    cube([4,4,26]);\n                translate([-2,2,32])\n                    cube([4,26,4]);\n            }\n}\n\n// ---------- build ----------\nunion() {\n    base();\n    translate([0,0,baseH])\n        cup();\n    translate([0,0,baseH+midH])\n        reamer();\n    handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chopcraft",
    "openscad_code": "$fa = 1;\n$fs = 0.5;\n\n// Chopcraft food processor main body\nmodule main_body() {\n    // Outer shell with rounded top and bottom\n    difference() {\n        union() {\n            // Main cylindrical body\n            cylinder(h = 70, d = 60, center = true);\n            // Rounded edges\n            translate([0, 0, 35])\n                sphere(d = 60);\n            translate([0, 0, -35])\n                sphere(d = 60);\n        }\n        // Hollow interior\n        translate([0, 0, 0])\n            cylinder(h = 74, d = 56, center = true);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel base\n    translate([31, 0, 20])\n        rotate([0, 90, 0])\n        cylinder(h = 30, d = 15, center = true);\n    \n    // Power button\n    translate([31, 8, 25])\n        rotate([0, 90, 0])\n        cylinder(h = 3, d = 6, $fn = 6);\n    \n    // Pulse button\n    translate([31, 0, 25])\n        rotate([0, 90, 0])\n        cylinder(h = 3, d = 6, $fn = 6);\n    \n    // Speed dial\n    translate([31, -8, 25])\n        rotate([0, 90, 0])\n        cylinder(h = 5, d = 10);\n}\n\n// Motor base with ventilation slots\nmodule motor_base() {\n    // Base cylinder\n    difference() {\n        cylinder(h = 25, d = 65, center = true);\n        // Ventilation slots\n        for(i = [0:8]) {\n            rotate([0, 0, i * 45])\n                translate([32.5, 0, 0])\n                    cube([5, 2, 25], center = true);\n        }\n    }\n    \n    // Rubber feet\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90 + 45])\n            translate([25, 0, -12.5])\n                cylinder(h = 3, d = 8);\n    }\n}\n\n// Food bowl with handle\nmodule food_bowl() {\n    // Main bowl\n    difference() {\n        cylinder(h = 40, d = 55, center = true);\n        translate([0, 0, 5])\n            cylinder(h = 35, d = 50, center = true);\n    }\n    \n    // Handle\n    translate([27.5, 0, 0])\n        rotate([90, 0, 0])\n        difference() {\n            // Handle grip\n            cylinder(h = 20, d = 10);\n            // Hollow grip\n            translate([0, 0, 2])\n                cylinder(h = 16, d = 6);\n            // Attachment point\n            translate([0, 0, -5])\n                cube([15, 5, 10], center = true);\n        }\n}\n\n// Lid with feed tube\nmodule lid() {\n    // Main lid\n    difference() {\n        cylinder(h = 5, d = 57, center = true);\n        translate([0, 0, -2.5])\n            cylinder(h = 5, d = 52, center = true);\n    }\n    \n    // Feed tube\n    translate([0, 15, 5])\n        cylinder(h = 25, d1 = 20, d2 = 15);\n    \n    // Safety lock tabs\n    for(i = [0:1]) {\n        rotate([0, 0, i * 180])\n            translate([25, 0, 0])\n                cube([10, 3, 5], center = true);\n    }\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    // Central shaft\n    cylinder(h = 35, d = 8, center = true);\n    \n    // Blades\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([0, 0, i % 2 ? 10 : -10])\n                cube([30, 2, 1], center = true);\n    }\n}\n\n// Assemble the complete chopcraft\ntranslate([0, 0, 0])\n    motor_base();\ntranslate([0, 0, 25])\n    main_body();\ntranslate([31, 0, 45])\n    control_panel();\ntranslate([0, 0, 60])\n    blade_assembly();\ntranslate([0, 0, 85])\n    food_bowl();\ntranslate([0, 0, 115])\n    lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "blendswift",
    "openscad_code": "// Blendswift Kitchen Blender - Realistic style, medium complexity\n// Overall dimensions: 120x100x150 mm\n\n$fn = 50;\n\n// Main parameters\nbase_width = 80;\nbase_depth = 90;\nbase_height = 40;\njar_diameter = 70;\njar_height = 100;\nhandle_width = 15;\nhandle_thickness = 8;\nwall_thickness = 2;\n\n// Base module with control panel\nmodule blender_base() {\n    // Main base housing\n    difference() {\n        // Outer shell\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_height/2])\n            cube([base_width-wall_thickness*2, base_depth-wall_thickness*2, base_height-wall_thickness], center=true);\n    }\n    \n    // Control panel face\n    translate([0, base_depth/2 - 1, base_height/2])\n        cube([60, 2, 20], center=true);\n    \n    // Buttons (3 speed buttons)\n    for(i=[-1:1]) {\n        translate([i*15, base_depth/2, 35])\n            cylinder(h=3, d=8);\n    }\n    \n    // Power indicator light\n    translate([25, base_depth/2, 35])\n        cylinder(h=2, d=5);\n    \n    // Rubber feet (4 corners)\n    for(x=[-1:2:1])\n        for(y=[-1:2:1])\n            translate([x*(base_width/2-10), y*(base_depth/2-10), 0])\n                cylinder(h=3, d=8);\n}\n\n// Motor coupling on base\nmodule motor_coupling() {\n    translate([0, 0, base_height])\n        cylinder(h=8, d=30);\n    \n    translate([0, 0, base_height+8])\n        cylinder(h=5, d=20);\n    \n    // Drive teeth\n    for(i=[0:3]) {\n        rotate([0, 0, i*90])\n            translate([0, 7, base_height+8])\n                cube([4, 4, 5], center=true);\n    }\n}\n\n// Blender jar with handle\nmodule blender_jar() {\n    // Main jar body\n    difference() {\n        cylinder(h=jar_height, d=jar_diameter);\n        translate([0, 0, wall_thickness])\n            cylinder(h=jar_height-wall_thickness, d=jar_diameter-wall_thickness*2);\n    }\n    \n    // Jar bottom\n    translate([0, 0, wall_thickness/2])\n        cylinder(h=wall_thickness, d=jar_diameter-wall_thickness*2);\n    \n    // Handle\n    translate([(jar_diameter/2)+handle_width/2, 0, jar_height/2])\n        rotate([90, 0, 0])\n            difference() {\n                // Handle shape\n                translate([0, 0, handle_width/2])\n                    cube([handle_width, handle_thickness, jar_height*0.7], center=true);\n                \n                // Handle grip hole\n                translate([0, 0, handle_width/2])\n                    cube([handle_width-wall_thickness*2, handle_thickness+1, jar_height*0.7-wall_thickness*2], center=true);\n            }\n    \n    // Measuring marks\n    for(h=[20:20:80]) {\n        translate([jar_diameter/2-2, 0, h])\n            cube([4, 1, 1], center=true);\n    }\n}\n\n// Blender lid\nmodule blender_lid() {\n    // Main lid\n    translate([0, 0, jar_height+5])\n        difference() {\n            cylinder(h=8, d=jar_diameter+2);\n            translate([0, 0, 2])\n                cylinder(h=6, d=jar_diameter-2);\n        }\n    \n    // Center cap for adding ingredients\n    translate([0, 0, jar_height+13])\n        difference() {\n            cylinder(h=10, d=25);\n            translate([0, 0, 2])\n                cylinder(h=8, d=20);\n        }\n    \n    // Lid handle\n    translate([0, 0, jar_height+18])\n        sphere(d=15);\n}\n\n// Assembly\nblender_base();\nmotor_coupling();\n\ntranslate([0, 0, base_height+8])\n    blender_jar();\n\nblender_lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixzone",
    "openscad_code": "// MixZone Kitchen Blender - Realistic Style, Medium Complexity\n// Dimensions: 100mm x 100mm x 170mm (suitable for 3D printing)\n\n// Global parameters\n$fn = 32;  // Smooth curves\nwall_thickness = 2;\n\n// Main module\nmodule mixzone_blender() {\n    // Base unit\n    difference() {\n        union() {\n            // Main body base\n            translate([0, 0, 10]) {\n                cube([90, 90, 60], center=true);\n            }\n            \n            // Motor housing dome\n            translate([0, 0, 40]) {\n                scale([1, 1, 0.6]) sphere(d=85);\n            }\n            \n            // Control panel\n            translate([0, -42, 45]) {\n                cube([80, 8, 25], center=true);\n            }\n        }\n        \n        // Hollow out the base\n        translate([0, 0, 10]) {\n            cube([86, 86, 56], center=true);\n        }\n    }\n    \n    // Feet\n    for(i = [-1, 1]) {\n        for(j = [-1, 1]) {\n            translate([i*38, j*38, 0]) {\n                cylinder(h=10, d=12);\n            }\n        }\n    }\n    \n    // Jar base connection\n    translate([0, 0, 70]) {\n        difference() {\n            cylinder(h=8, d=30);\n            cylinder(h=10, d=24);\n        }\n    }\n    \n    // Jar assembly\n    difference() {\n        union() {\n            // Main jar body\n            translate([0, 0, 125]) {\n                cylinder(h=80, d1=60, d2=70);\n            }\n            \n            // Jar handle\n            translate([35, 0, 125]) {\n                difference() {\n                    rotate([0, 90, 0]) {\n                        cylinder(h=70, d=15);\n                    }\n                    rotate([0, 90, 0]) {\n                        translate([0, 0, 2]) {\n                            cylinder(h=70, d=9);\n                        }\n                    }\n                }\n            }\n            \n            // Jar top rim\n            translate([0, 0, 165]) {\n                cylinder(h=5, d=75);\n            }\n        }\n        \n        // Hollow jar\n        translate([0, 0, 125]) {\n            cylinder(h=82, d1=56, d2=66);\n        }\n    }\n    \n    // Lid\n    difference() {\n        // Lid body\n        translate([0, 0, 170]) {\n            cylinder(h=8, d=74);\n        }\n        \n        // Lid grip hole\n        translate([0, 0, 174]) {\n            cylinder(h=10, d=15);\n        }\n    }\n    \n    // Lid handle\n    translate([0, 0, 178]) {\n        sphere(d=12);\n    }\n    \n    // Control buttons\n    for(i = [-30, -10, 10, 30]) {\n        translate([i, -42, 52]) {\n            difference() {\n                cube([12, 4, 8], center=true);\n                translate([0, 1, 0]) {\n                    cube([10, 2, 6], center=true);\n                }\n            }\n        }\n    }\n    \n    // Power indicator LED\n    translate([0, -38, 60]) {\n        cylinder(h=2, d=6);\n    }\n    \n    // Drive shaft\n    translate([0, 0, 78]) {\n        cylinder(h=12, d=8);\n    }\n}\n\n// Render the model\nmixzone_blender();",
    "renders": true
  },
  {
    "kitchen_appliance": "juiceedge",
    "openscad_code": "// Realistic Juice Extractor (Medium Complexity)\n// Overall size: ~110mm x 130mm x 160mm\n\n$fn = 50;\n\nmodule main_body() {\n    // Central motor housing - slightly tapered cylinder\n    difference() {\n        cylinder(h = 90, r1 = 45, r2 = 42, center = true);\n        translate([0, 0, -45]) cylinder(h = 92, r1 = 43, r2 = 40, center = true);\n    }\n}\n\nmodule base() {\n    // Stable circular base with rubber feet\n    difference() {\n        cylinder(h = 10, r = 50);\n        translate([0, 0, 1]) cylinder(h = 12, r = 48);\n    }\n    \n    // Rubber feet - four small cylinders\n    for (a = [0:90:270]) {\n        rotate([0, 0, a]) translate([40, 0, -3]) cylinder(h = 3, r = 5);\n    }\n}\n\nmodule juice_container() {\n    // Clear plastic container for juice\n    difference() {\n        translate([0, 60, 0]) cube([60, 60, 40], center = true);\n        translate([0, 60, -2]) cube([56, 56, 44], center = true);\n    }\n    \n    // Handle\n    translate([30, 90, 0]) difference() {\n        cube([8, 20, 30], center = true);\n        translate([0, 0, 5]) cube([4, 16, 20], center = true);\n    }\n}\n\nmodule pulp_container() {\n    // Larger container for pulp\n    difference() {\n        translate([0, -60, 0]) cube([70, 70, 50], center = true);\n        translate([0, -60, -2]) cube([66, 66, 54], center = true);\n    }\n}\n\nmodule feed_tube() {\n    // Large feed tube on top\n    difference() {\n        translate([0, 0, 50]) cylinder(h = 50, r = 25);\n        translate([0, 0, 50]) cylinder(h = 52, r = 23);\n    }\n    \n    // Food pusher\n    difference() {\n        translate([0, 0, 110]) cylinder(h = 40, r = 22);\n        translate([0, 0, 110]) cylinder(h = 42, r = 20);\n    }\n    translate([0, 0, 150]) cylinder(h = 10, r = 25);\n}\n\nmodule control_panel() {\n    // Front control panel with buttons\n    translate([0, 48, 20]) difference() {\n        cube([60, 2, 40], center = true);\n        translate([0, 0, 5]) cube([58, 1.5, 38], center = true);\n    }\n    \n    // Power button\n    translate([-20, 49, 25]) cylinder(h = 3, r = 8);\n    translate([-20, 49, 28]) cylinder(h = 2, r = 6);\n    \n    // Speed dial\n    translate([20, 49, 25]) cylinder(h = 5, r = 10);\n    translate([20, 49, 30]) cylinder(h = 3, r = 8);\n    \n    // LED indicator\n    translate([0, 49, 35]) cylinder(h = 1, r = 3);\n}\n\nmodule lid() {\n    // Top lid with locking tabs\n    difference() {\n        translate([0, 0, 10]) cylinder(h = 5, r = 48);\n        translate([0, 0, 10]) cylinder(h = 6, r = 46);\n    }\n    \n    // Locking tabs - two on sides\n    for (a = [0:180:180]) {\n        rotate([0, 0, a]) translate([45, 0, 12.5]) cube([10, 5, 5], center = true);\n    }\n}\n\nmodule spout() {\n    // Juice spout\n    difference() {\n        translate([0, 30, -40]) rotate([90, 0, 0]) cylinder(h = 20, r1 = 8, r2 = 5);\n        translate([0, 30, -40]) rotate([90, 0, 0]) cylinder(h = 21, r1 = 6, r2 = 3);\n    }\n}\n\n// Main assembly\nunion() {\n    base();\n    \n    translate([0, 0, 5]) main_body();\n    \n    translate([0, 0, 10]) lid();\n    \n    juice_container();\n    \n    pulp_container();\n    \n    feed_tube();\n    \n    control_panel();\n    \n    spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "whirlblend",
    "openscad_code": "// WhirlBlend Kitchen Blender - Realistic Medium Complexity\n// Dimensions: 80mm x 80mm x 180mm (fits 3D printer bed)\n\n$fn = 32;\n\n// Main body parameters\nbase_width = 80;\nbase_depth = 80;\nbase_height = 50;\nbody_height = 80;\n\n// Jug parameters\njug_radius = 35;\njug_height = 90;\njug_wall = 2;\n\n// Base with motor housing\nmodule blender_base() {\n    difference() {\n        // Main base body\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Ventilation slots\n        for (i = [-1, 1]) {\n            translate([i * 25, base_depth/2 - 3, 25])\n                cube([30, 6, 10]);\n        }\n        \n        // Bottom cavity for motor\n        translate([0, 0, 5])\n            cube([60, 60, 8], center=true);\n    }\n    \n    // Rubber feet\n    for (x = [-1, 1])\n        for (y = [-1, 1])\n            translate([x * 30, y * 30, 0])\n                cylinder(h=3, r=5);\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel surface\n    translate([0, base_depth/2 - 8, base_height + 10])\n        cube([60, 5, 20], center=true);\n    \n    // Power button\n    translate([-20, base_depth/2 - 5, base_height + 15])\n        cube([10, 2, 6], center=true);\n    \n    // Speed dial\n    translate([20, base_depth/2 - 5, base_height + 18])\n        cylinder(h=6, r=8);\n    \n    // LED indicator\n    translate([20, base_depth/2 - 5, base_height + 25])\n        sphere(r=3);\n}\n\n// Motor coupling ring\nmodule coupling() {\n    difference() {\n        translate([0, 0, base_height])\n            cylinder(h=8, r=25);\n        \n        // Central hole\n        translate([0, 0, base_height - 1])\n            cylinder(h=10, r=10);\n        \n        // Drive slots\n        for (i = [0:3])\n            rotate([0, 0, i * 90])\n                translate([15, 0, base_height])\n                    cube([8, 4, 8], center=true);\n    }\n}\n\n// Blender jug with handle\nmodule blender_jug() {\n    difference() {\n        // Main jug body\n        translate([0, 0, base_height + jug_height/2 + 8])\n            cylinder(h=jug_height, r=jug_radius);\n        \n        // Inner cavity\n        translate([0, 0, base_height + 8])\n            cylinder(h=jug_height, r=jug_radius - jug_wall);\n    }\n    \n    // Jug handle\n    translate([jug_radius - 2, 0, base_height + 30])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=50, r=8);\n                translate([0, 0, 4])\n                    cylinder(h=50, r=5);\n            }\n    \n    // Lid\n    translate([0, 0, base_height + jug_height + 10])\n        difference() {\n            cylinder(h=8, r=jug_radius);\n            translate([0, 0, -1])\n                cylinder(h=10, r=jug_radius - jug_wall);\n        }\n    \n    // Measuring cap\n    translate([0, jug_radius/2, base_height + jug_height + 14])\n        cylinder(h=5, r=8);\n}\n\n// Blade assembly\nmodule blades() {\n    // Blade hub\n    translate([0, 0, base_height + 8])\n        cylinder(h=3, r=8);\n    \n    // Blades (4 wings)\n    for (i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([12, 0, base_height + 9.5])\n                rotate([90, 0, 0])\n                    cube([20, 1.5, 3], center=true);\n    }\n}\n\n// Assemble the complete blender\nunion() {\n    blender_base();\n    control_panel();\n    coupling();\n    blender_jug();\n    blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixpulse",
    "openscad_code": "// MixPulse Kitchen Blender - Realistic Style, Medium Complexity\n// Overall dimensions: ~120mm height, ~80mm base diameter\n\n$fn = 50;\n\n// Main body parameters\nbase_height = 25;\nbase_radius = 40;\nmotor_housing_height = 35;\nmotor_housing_radius = 35;\njar_height = 70;\njar_radius = 30;\n\n// Wall thickness\nwall = 2;\n\n// Base with anti-slip ring\nmodule base() {\n    difference() {\n        // Main base\n        cylinder(h = base_height, r = base_radius, center = false);\n        \n        // Hollow inside for electronics\n        translate([0, 0, wall])\n            cylinder(h = base_height - wall, r = base_radius - wall, center = false);\n        \n        // Cable groove\n        translate([base_radius - 5, 0, base_height/2])\n            rotate([0, 90, 0])\n                cylinder(h = 10, r = 4, center = true);\n    }\n    \n    // Anti-slip rubber ring\n    translate([0, 0, 1])\n        cylinder(h = 2, r1 = base_radius - 5, r2 = base_radius - 2);\n    \n    // Control panel area\n    translate([base_radius - 15, 0, base_height - 8])\n        cube([30, 20, 8], center = true);\n}\n\n// Motor housing with cooling vents\nmodule motor_housing() {\n    union() {\n        // Main housing\n        cylinder(h = motor_housing_height, r = motor_housing_radius, center = false);\n        \n        // Ventilation slots\n        for(i = [0:11]) {\n            rotate([0, 0, i * 30])\n                translate([motor_housing_radius - 2, 0, motor_housing_height/2])\n                    cube([wall + 1, 3, motor_housing_height - 10], center = true);\n        }\n        \n        // Power button\n        translate([motor_housing_radius - 8, 0, motor_housing_height - 5])\n            cube([14, 8, 3], center = true);\n    }\n    \n    // Hollow inside\n    translate([0, 0, wall])\n        cylinder(h = motor_housing_height - wall, r = motor_housing_radius - wall, center = false);\n}\n\n// Blending jar with handle and spout\nmodule jar() {\n    difference() {\n        // Main jar body\n        cylinder(h = jar_height, r = jar_radius, center = false);\n        \n        // Hollow for contents\n        translate([0, 0, wall])\n            cylinder(h = jar_height - wall, r = jar_radius - wall, center = false);\n    }\n    \n    // Handle\n    translate([jar_radius - 2, 0, jar_height/2])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h = 40, r = 8, center = true);\n                cylinder(h = 42, r = 5, center = true);\n            }\n    \n    // Spout\n    translate([jar_radius * 0.7, 0, jar_height - 5])\n        rotate([0, 0, 0])\n            difference() {\n                cube([15, 20, 10], center = true);\n                translate([5, 0, 0])\n                    cube([10, 16, 6], center = true);\n            }\n    \n    // Measurement markings (simplified)\n    for(i = [1:3]) {\n        translate([jar_radius - 1, 0, i * 15])\n            cube([wall, 8, 1], center = true);\n    }\n    \n    // Lid\n    translate([0, 0, jar_height + 2])\n        difference() {\n            cylinder(h = 5, r = jar_radius + 2, center = false);\n            translate([0, 0, wall])\n                cylinder(h = 5, r = jar_radius, center = false);\n        }\n    \n    // Lid handle\n    translate([0, 0, jar_height + 7])\n        cylinder(h = 8, r = 8, center = false);\n    translate([0, 0, jar_height + 9])\n        sphere(r = 10);\n}\n\n// Blade assembly\nmodule blades() {\n    translate([0, 0, motor_housing_height + 2])\n        difference() {\n            cylinder(h = 8, r = 20, center = false);\n            translate([0, 0, wall])\n                cylinder(h = 8, r = 18, center = false);\n        }\n    \n    // Blades (4-wing design)\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([8, 0, motor_housing_height + 6])\n                cube([20, 2, 1], center = true);\n    }\n}\n\n// Assembly\nbase();\ntranslate([0, 0, base_height])\n    motor_housing();\ntranslate([0, 0, base_height + motor_housing_height])\n    blades();\ntranslate([0, 0, base_height + motor_housing_height + 10])\n    jar();",
    "renders": true
  },
  {
    "kitchen_appliance": "juicesphere",
    "openscad_code": "// Juicesphere kitchen appliance - medium complexity realistic style\n// Overall dimensions: 120mm width x 160mm height x 120mm depth\n\nmodule juicesphere_body() {\n    // Main spherical body with flat base\n    difference() {\n        union() {\n            // Main sphere\n            sphere(d=100, $fn=100);\n            // Flat base cylinder\n            translate([0, -50, 0])\n                cylinder(h=10, d=100, $fn=100);\n        }\n        // Hollow interior\n        sphere(d=96, $fn=100);\n    }\n}\n\nmodule juice_container() {\n    // Transparent juice container (cylinder with rounded top)\n    translate([0, 30, 0])\n        rotate([90, 0, 0])\n        difference() {\n            union() {\n                cylinder(h=60, d=40, $fn=50);\n                translate([0, 0, 60])\n                    sphere(d=40, $fn=50);\n            }\n            // Hollow interior\n            translate([0, 0, 2])\n                cylinder(h=58, d=36, $fn=50);\n            translate([0, 0, 60])\n                sphere(d=36, $fn=50);\n        }\n}\n\nmodule control_panel() {\n    // Control panel with buttons and dial\n    translate([0, -40, 45])\n        rotate([90, 0, 0])\n        union() {\n            // Panel base\n            cube([60, 2, 30], center=true);\n            \n            // Power button\n            translate([-20, 3, 10])\n                cylinder(h=3, d=10, $fn=20);\n            \n            // Speed dial\n            translate([0, 3, 0])\n                cylinder(h=8, d=15, $fn=30);\n            translate([0, 11, 0])\n                cylinder(h=2, d=8, $fn=20);\n            \n            // Pulse button\n            translate([20, 3, 10])\n                cylinder(h=3, d=10, $fn=20);\n        }\n}\n\nmodule feet() {\n    // Four support feet\n    for(i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([35, -50, 35])\n                cylinder(h=8, d1=12, d2=8, $fn=20);\n    }\n}\n\nmodule handle() {\n    // Side handle for carrying\n    translate([50, 0, 0])\n        rotate([0, 90, 0])\n        difference() {\n            // Handle grip\n            torus(20, 4, $fn=50);\n            // Cut for hand space\n            translate([0, 0, -20])\n                cube([50, 20, 40], center=true);\n        }\n}\n\nmodule spout() {\n    // Pouring spout\n    translate([0, 50, 0])\n        rotate([0, -30, 0])\n        union() {\n            // Main spout body\n            cylinder(h=30, d=15, $fn=30);\n            // Spout tip\n            translate([0, 30, 0])\n                cylinder(h=10, d1=15, d2=8, $fn=30);\n        }\n}\n\nmodule lid() {\n    // Removable lid with grip\n    translate([0, 30, 65])\n        union() {\n            // Lid disc\n            cylinder(h=5, d=42, $fn=50);\n            // Grip handle\n            translate([0, 0, 5])\n                cylinder(h=15, d=8, $fn=20);\n        }\n}\n\n// Assembly\nunion() {\n    color(\"white\") juicesphere_body();\n    color(\"silver\") feet();\n    color(\"gray20\") control_panel();\n    color(\"black\") handle();\n    color(\"silver\") spout();\n    color(\"gold\") juice_container();\n    color(\"red\") lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chopflex",
    "openscad_code": "// ChopFlex â€“ compact 3D-printable food-processor / mini-chopper\n// Overall footprint â‰ˆ 95 mm Ã— 95 mm Ã— 135 mm\n\n$fn = 48;\n\n// ---------- Parameters ----------\nbase_w = 95;          // body width\nbase_d = 95;          // body depth\nwall_t = 2;           // wall thickness\nmotor_h = 55;\nbowl_h = 50;\nlid_h  = 25;\nbutton_r = 6;\nbutton_h = 3;\n\n// ---------- Modules ----------\nmodule body_shell() {\n    difference() {\n        cube([base_w, base_d, motor_h], center=true);\n        translate([0,0,wall_t])\n            cube([base_w-2*wall_t, base_d-2*wall_t, motor_h], center=true);\n    }\n}\n\nmodule feet() {\n    for(x=[-1,1], y=[-1,1])\n        translate([x*(base_w/2-5), y*(base_d/2-5), -motor_h/2-3])\n            cylinder(h=6, r1=5, r2=3);\n}\n\nmodule control_panel() {\n    translate([base_w/2+1, 0, motor_h/2-15])\n        rotate([0,90,0])\n            difference() {\n                cube([30, 20, wall_t], center=true);\n                translate([0, -5, 0])\n                    cube([button_r*2+2, button_r*2+2, wall_t+1], center=true);\n            }\n}\n\nmodule buttons() {\n    translate([base_w/2+wall_t+button_h/2+1, -5, motor_h/2-15])\n        cylinder(h=button_h, r=button_r);\n    translate([base_w/2+wall_t+button_h/2+1,  5, motor_h/2-15])\n        cylinder(h=button_h, r=button_r*0.8);\n}\n\nmodule bowl() {\n    color(\"white\", 0.6)\n    difference() {\n        cylinder(h=bowl_h, r=base_w/2-wall_t-5, center=false);\n        translate([0,0,wall_t])\n            cylinder(h=bowl_h, r=base_w/2-2*wall_t-5, center=false);\n    }\n}\n\nmodule handle() {\n    translate([base_w/2-wall_t-8, 0, bowl_h/2])\n        rotate([0,90,0])\n            difference() {\n                cylinder(h=30, r=6);\n                cylinder(h=31, r=3);\n            }\n}\n\nmodule lid() {\n    color(\"lightblue\", 0.5)\n    difference() {\n        cylinder(h=lid_h, r=base_w/2-wall_t-5, center=false);\n        translate([0,0,lid_h-wall_t])\n            cylinder(h=wall_t+1, r=base_w/2-2*wall_t-5, center=false);\n    }\n}\n\nmodule pusher() {\n    translate([0,0,lid_h+10])\n        cylinder(h=25, r=12);\n}\n\nmodule blades() {\n    color(\"silver\")\n    for(a=[0,120,240])\n        rotate([0,0,a])\n            translate([0,22,0])\n                cube([4, 45, 1.5], center=true);\n}\n\n// ---------- Assembly ----------\nunion() {\n    body_shell();\n    feet();\n    control_panel();\n    buttons();\n    translate([0,0,motor_h/2])\n        bowl();\n    translate([base_w/2-wall_t-8,0,motor_h/2+bowl_h/2])\n        handle();\n    translate([0,0,motor_h/2+bowl_h])\n        lid();\n    translate([0,0,motor_h/2+bowl_h])\n        pusher();\n    translate([0,0,motor_h/2+bowl_h/3])\n        blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendnova",
    "openscad_code": "// Blendnova Kitchen Blender - Realistic Style\n\n// Overall dimensions: 80mm x 80mm x 160mm\n\nmodule base() {\n    // Main base unit\n    difference() {\n        cylinder(h = 40, d = 70, $fn = 48);\n        translate([0, 0, 2]) cylinder(h = 36, d = 66, $fn = 48);\n    }\n    \n    // Control panel area\n    translate([-35, -35, 40]) cube([70, 70, 5]);\n    \n    // Buttons\n    for (i = [0:2]) {\n        translate([-25 + i*15, -15, 46]) {\n            difference() {\n                cube([8, 8, 3]);\n                translate([1, 1, 1]) cube([6, 6, 2]);\n            }\n        }\n    }\n    \n    // LED indicator\n    translate([20, -15, 46]) {\n        cylinder(h = 2, d = 6, $fn = 16);\n        translate([0, 0, 2]) cylinder(h = 1, d = 4, $fn = 16);\n    }\n    \n    // Ventilation slots\n    for (i = [0:5]) {\n        rotate([0, 0, i*60]) {\n            translate([32, -2, 20]) cube([4, 4, 15]);\n        }\n    }\n}\n\nmodule motor_housing() {\n    // Main motor cylinder\n    cylinder(h = 35, d = 60, $fn = 48);\n    \n    // Reinforcement ring\n    translate([0, 0, 5]) cylinder(h = 5, d = 65, $fn = 48);\n    translate([0, 0, 25]) cylinder(h = 5, d = 65, $fn = 48);\n    \n    // Power cord entry\n    translate([28, 0, 15]) rotate([90, 0, 0]) \n        cylinder(h = 20, d = 8, $fn = 16);\n}\n\nmodule jar_base() {\n    // Coupling mechanism\n    cylinder(h = 15, d = 50, $fn = 32);\n    \n    // Drive shaft\n    translate([0, 0, 15]) cylinder(h = 8, d = 8, $fn = 16);\n    \n    // Locking tabs\n    for (i = [0:3]) {\n        rotate([0, 0, i*90 + 45]) {\n            translate([22, -3, 0]) cube([6, 6, 15]);\n        }\n    }\n}\n\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h = 80, d1 = 55, d2 = 65, $fn = 32);\n        translate([0, 0, 2]) cylinder(h = 76, d1 = 51, d2 = 61, $fn = 32);\n    }\n    \n    // Handle\n    translate([32, 0, 40]) rotate([0, 90, 0]) \n        difference() {\n            cylinder(h = 50, d = 20, $fn = 16);\n            translate([0, 0, 5]) cylinder(h = 40, d = 16, $fn = 16);\n            translate([0, -10, 5]) cube([20, 20, 40]);\n        }\n    \n    // Measurement markings\n    for (i = [0:3]) {\n        translate([28, -32, 15 + i*15]) cube([4, 1, 0.5]);\n    }\n    \n    // Jar lid\n    translate([0, 0, 80]) {\n        difference() {\n            cylinder(h = 10, d = 67, $fn = 32);\n            translate([0, 0, 2]) cylinder(h = 8, d = 63, $fn = 32);\n        }\n        \n        // Pour spout\n        translate([0, 25, 10]) rotate([0, 0, 0]) \n            cube([20, 15, 15]);\n    }\n}\n\n// Assembly\nunion() {\n    // Base unit with controls\n    translate([0, 0, 0]) base();\n    \n    // Motor housing\n    translate([0, 0, 40]) motor_housing();\n    \n    // Jar base coupling\n    translate([0, 0, 75]) jar_base();\n    \n    // Blender jar\n    translate([0, 0, 83]) jar();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixlogic",
    "openscad_code": "// Mixlogic Kitchen Scale - Realistic Medium Complexity\n\n// Overall dimensions: 120x160x40mm (footprint x depth x height)\n\nscale_factor = 1;\nwall_th = 2 * scale_factor;  // 2mm walls for 3D printing\nbase_h = 5 * scale_factor;\nplatform_h = 5 * scale_factor;\ndisplay_h = 10 * scale_factor;\nbutton_h = 3 * scale_factor;\n\n// Main body\nmodule base() {\n    difference() {\n        // Main shell\n        translate([0, 0, base_h/2])\n            cube([120, 160, base_h], center=true);\n        \n        // Hollow out interior\n        translate([0, 0, base_h/2])\n            cube([120-wall_th*2, 160-wall_th*2, base_h+1], center=true);\n            \n        // Battery compartment (rear)\n        translate([0, 70, base_h-wall_th/2])\n            cube([50, 40, wall_th+1], center=true);\n            \n        // USB-C port (left side)\n        translate([-60-wall_th/2, 0, base_h/2])\n            cube([wall_th+1, 15, 8], center=true);\n    }\n    \n    // Rubber feet (4 corners)\n    for(x = [-50, 50])\n        for(y = [-70, 70])\n            translate([x, y, 0])\n                cylinder(h=2*scale_factor, r=5*scale_factor, $fn=20);\n}\n\n// Weighing platform\nmodule platform() {\n    // Main glass platform\n    translate([0, 0, base_h + platform_h/2])\n        cube([100, 100, platform_h], center=true);\n        \n    // Raised edges\n    difference() {\n        translate([0, 0, base_h + platform_h])\n            cube([104, 104, 1*scale_factor], center=true);\n        translate([0, 0, base_h + platform_h - 0.5])\n            cube([100-wall_th, 100-wall_th, 2*scale_factor], center=true);\n    }\n    \n    // Load cells support ribs (hidden inside)\n    for(x = [-30, 30])\n        for(y = [-30, 30])\n            translate([x, y, base_h + platform_h/2])\n                cube([10, 10, platform_h], center=true);\n}\n\n// Display module\nmodule display() {\n    // Housing\n    difference() {\n        translate([0, -50, base_h + display_h/2])\n            cube([80, 30, display_h], center=true);\n        // Screen cutout\n        translate([0, -50, base_h + display_h - wall_th])\n            cube([70, 20, wall_th+1], center=true);\n    }\n    \n    // LCD screen detail\n    translate([0, -50, base_h + display_h - wall_th + 0.1])\n        cube([68, 18, 0.5*scale_factor], center=true);\n        \n    // Buttons\n    for(i = [0, 1, 2]) {\n        translate([25 + i*20, -65, base_h + button_h/2])\n            cylinder(h=button_h, r=6*scale_factor, $fn=16);\n    }\n    \n    // Tare button (larger)\n    translate([-30, -65, base_h + button_h/2])\n        cylinder(h=button_h, r=8*scale_factor, $fn=16);\n}\n\n// Structural reinforcement\nmodule frame() {\n    // Front-rear beams\n    translate([0, 0, base_h/2])\n        cube([110, wall_th*2, base_h], center=true);\n    translate([0, 0, base_h/2])\n        cube([wall_th*2, 150, base_h], center=true);\n        \n    // Corner posts\n    for(x = [-55, 55])\n        for(y = [-75, 75])\n            translate([x, y, base_h/2])\n                cube([wall_th*2, wall_th*2, base_h], center=true);\n}\n\n// Assembly\nunion() {\n    base();\n    platform();\n    display();\n    frame();\n    \n    // Logo detail\n    translate([0, 0, base_h + 0.5])\n        linear_extrude(height=0.5)\n            text(\"MIXLOGIC\", size=8, halign=\"center\", valign=\"center\");\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicedrive",
    "openscad_code": "// Juicedrive Kitchen Appliance - Medium Complexity Realistic Style\n// Overall dimensions: 120x80x100mm (designed for 3D printing)\n\n$fn = 50;\n\nmodule main_body() {\n    // Main housing - 2mm wall thickness\n    difference() {\n        cube([120, 80, 100], center = true);\n        translate([0, 0, 5])\n            cube([116, 76, 90], center = true);\n    }\n}\n\nmodule base_platform() {\n    // Raised platform for stability\n    translate([0, 0, -48])\n        cube([130, 90, 4], center = true);\n}\n\nmodule juice_container() {\n    // Central juice container\n    translate([0, 0, 25])\n    difference() {\n        cylinder(h = 60, r = 25);\n        translate([0, 0, 2])\n            cylinder(h = 58, r = 23);\n    }\n}\n\nmodule feed_chute() {\n    // Feed chute for fruits\n    translate([0, 35, 65])\n    rotate([0, 0, 0])\n    difference() {\n        cylinder(h = 30, r = 15);\n        translate([0, 0, 2])\n            cylinder(h = 30, r = 13);\n    }\n}\n\nmodule control_panel() {\n    // Control panel with buttons\n    translate([45, -25, 35])\n    difference() {\n        cube([20, 40, 5], center = true);\n        translate([0, 0, 3])\n            cube([16, 36, 3], center = true);\n    }\n}\n\nmodule power_button() {\n    // Circular power button\n    translate([45, -35, 38])\n    cylinder(h = 3, r = 5);\n}\n\nmodule speed_dial() {\n    // Rotational speed dial\n    translate([45, -15, 38])\n    cylinder(h = 4, r = 8);\n}\n\nmodule handle() {\n    // Handle for juice container\n    translate([-30, 0, 25])\n    difference() {\n        rotate([0, 90, 0])\n            cylinder(h = 60, r = 5);\n        translate([0, 0, -30])\n            rotate([0, 90, 0])\n                cylinder(h = 60, r = 3);\n    }\n}\n\nmodule spout() {\n    // Pouring spout with drip guard\n    translate([0, 30, 10])\n    union() {\n        translate([0, 0, 0])\n            cylinder(h = 15, r = 8);\n        translate([0, 10, -5])\n            rotate([90, 0, 0])\n                cylinder(h = 20, r1 = 8, r2 = 5);\n    }\n}\n\nmodule feet() {\n    // Support feet in corners\n    for (x = [-55, 55])\n        for (y = [-35, 35])\n            translate([x, y, -52])\n                cylinder(h = 4, r = 5);\n}\n\nmodule ventilation() {\n    // Side ventilation slots\n    for (i = [1:4])\n        translate([-60, -35 + i*20, 0])\n            cube([2, 10, 60]);\n}\n\nmodule logo() {\n    // Simple logo embossing\n    translate([50, 0, 48])\n    linear_extrude(height = 1)\n        text(\"JUICE\", size = 8);\n}\n\n// Main assembly\nunion() {\n    main_body();\n    base_platform();\n    juice_container();\n    feed_chute();\n    control_panel();\n    power_button();\n    speed_dial();\n    handle();\n    spout();\n    feet();\n    ventilation();\n    logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "turbomix",
    "openscad_code": "// TurboMix kitchen blender â€“ medium-detail, 3D-printable\n// Overall height â‰ˆ 120 mm, footprint â‰ˆ 80 mm Ã— 80 mm\n\n$fn = 36;         // smooth curves without excessive facets\n\n// ---------- main body ----------\nmodule body() {\n    difference() {\n        // outer shell\n        cylinder(h = 60, d1 = 70, d2 = 65, center = false);\n\n        // hollow cavity\n        translate([0, 0, 2])\n            cylinder(h = 58, d1 = 66, d2 = 61, center = false);\n    }\n}\n\n// ---------- motor base bottom plate ----------\nmodule base_plate() {\n    translate([0, 0, -2])\n        cube([72, 72, 2], center = true);\n}\n\n// ---------- control panel ----------\nmodule panel() {\n    // panel block\n    translate([0, 40, 30])\n        rotate([90, 0, 0])\n        difference() {\n            cube([30, 20, 4], center = true);\n            translate([0, 0, -1])\n                cube([26, 16, 6], center = true);\n        }\n\n    // three control knobs\n    for (x = [-10, 0, 10]) {\n        translate([x, 40, 32])\n            rotate([90, 0, 0])\n            cylinder(h = 5, d = 6);\n    }\n}\n\n// ---------- jug ----------\nmodule jug() {\n    difference() {\n        // outer jug\n        translate([0, 0, 62])\n            cylinder(h = 45, d1 = 60, d2 = 50);\n\n        // inner volume\n        translate([0, 0, 63])\n            cylinder(h = 43, d1 = 56, d2 = 46);\n    }\n\n    // handle\n    translate([35, 0, 75])\n        rotate([90, 0, 90])\n        difference() {\n            cylinder(h = 40, d = 12);\n            translate([0, 0, -1])\n                cylinder(h = 42, d = 8);\n        }\n\n    // lid\n    translate([0, 0, 107])\n        difference() {\n            cylinder(h = 8, d = 50);\n            translate([0, 0, -1])\n                cylinder(h = 10, d = 46);\n        }\n\n    // lid knob\n    translate([0, 0, 115])\n        cylinder(h = 6, d = 12);\n}\n\n// ---------- blade assembly ----------\nmodule blades() {\n    translate([0, 0, 60])\n        for (a = [0:120:359])\n            rotate([0, 0, a])\n                cube([20, 2, 1], center = true);\n}\n\n// ---------- assembly ----------\nunion() {\n    body();\n    base_plate();\n    panel();\n    jug();\n    blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendjet",
    "openscad_code": "// BlendJet Portable Blender - Realistic Style (Medium Complexity)\n// Overall height ~180mm, base diameter ~80mm\n\n$fn = 50;  // Smooth curves for 3D printing\n\n// Main dimensions\nbase_d = 80;\nbase_h = 40;\njar_d = 75;\njar_h = 100;\ncap_h = 25;\nwall_t = 2;\n\n// Base module with motor housing\nmodule base() {\n    difference() {\n        // Main base cylinder\n        cylinder(h=base_h, d=base_d, center=false);\n        \n        // Hollow inside\n        translate([0, 0, wall_t])\n            cylinder(h=base_h, d=base_d-wall_t*2, center=false);\n        \n        // Air vents pattern\n        for(i=[0:5:355]) {\n            rotate([0, 0, i])\n                translate([base_d/2-6, 0, base_h/2])\n                    cube([12, 4, base_h-wall_t], center=true);\n        }\n    }\n    \n    // Control button area\n    translate([base_d/2-10, 0, base_h/2])\n        difference() {\n            cube([15, 25, 10], center=true);\n            translate([0, 0, 1])\n                cube([13, 23, 12], center=true);\n        }\n    \n    // Power button\n    translate([base_d/2-4, 0, base_h/2+2])\n        cylinder(h=3, d=8);\n}\n\n// Glass jar with measurement marks\nmodule jar() {\n    difference() {\n        // Outer jar\n        cylinder(h=jar_h, d=jar_d, center=false);\n        \n        // Hollow inside\n        translate([0, 0, wall_t])\n            cylinder(h=jar_h-wall_t, d=jar_d-wall_t*2, center=false);\n    }\n    \n    // Measurement marks (ml)\n    for(h=[20:20:100]) {\n        translate([jar_d/2-1, 0, h])\n            cube([2, 0.5, 0.5], center=true);\n    }\n}\n\n// Blade assembly\nmodule blades() {\n    // Central hub\n    cylinder(h=15, d=20);\n    \n    // 4 blades\n    for(i=[0:90:270]) {\n        rotate([0, 0, i])\n            translate([0, 10, 7.5])\n                rotate([90, 0, 0])\n                    cylinder(h=20, d=2);\n    }\n}\n\n// Screw-on cap with drinking spout\nmodule cap() {\n    difference() {\n        // Main cap\n        cylinder(h=cap_h, d=jar_d, center=false);\n        \n        // Hollow inside\n        translate([0, 0, wall_t])\n            cylinder(h=cap_h, d=jar_d-wall_t*2, center=false);\n        \n        // Drinking spout hole\n        translate([jar_d/4, 0, cap_h/2])\n            rotate([0, 90, 0])\n                cylinder(h=15, d=10);\n    }\n    \n    // Carry loop\n    translate([0, 0, cap_h+2])\n        rotate_extrude()\n            translate([jar_d/2-5, 0, 0])\n                circle(r=2);\n}\n\n// USB-C charging port detail\nmodule charging_port() {\n    translate([base_d/2-3, 0, 10])\n        cube([6, 8, 4], center=true);\n}\n\n// Assembly\ntranslate([0, 0, 0])\n    base();\n\ntranslate([0, 0, base_h])\n    jar();\n\ntranslate([0, 0, base_h+wall_t])\n    blades();\n\ntranslate([0, 0, base_h+jar_h])\n    cap();\n\ntranslate([0, base_d/2, 0])\n    charging_port();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixspark",
    "openscad_code": "// MixSpark Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: ~120mm tall, ~80mm wide, ~80mm deep\n\n$fn=50;\n\n// Main body module\nmodule body() {\n    // Outer shell with rounded edges\n    difference() {\n        // Main rounded cube\n        minkowski() {\n            cube([76, 76, 110], center=true);\n            sphere(3);\n        }\n        \n        // Hollow inside\n        translate([0,0,5])\n        minkowski() {\n            cube([72, 72, 100], center=true);\n            sphere(2);\n        }\n    }\n}\n\n// Base with feet\nmodule base() {\n    // Bottom base plate\n    translate([0,0,-57])\n    cube([80, 80, 4], center=true);\n    \n    // Four rubber feet\n    for(x=[-30, 30])\n        for(y=[-30, 30])\n            translate([x,y,-59])\n            cylinder(h=3, d1=8, d2=6);\n}\n\n// Motor housing top\nmodule motor_top() {\n    // Top dome\n    translate([0,0,58])\n    scale([1,1,0.6])\n    sphere(38);\n    \n    // Control panel area\n    translate([0,30,55])\n    cube([60, 20, 8], center=true);\n}\n\n// Jar container\nmodule jar() {\n    // Main jar body\n    translate([0,0,25])\n    cylinder(h=40, d1=70, d2=65);\n    \n    // Jar base connection\n    translate([0,0,10])\n    cylinder(h=15, d=60);\n    \n    // Handle\n    translate([35,0,35])\n    rotate([0,90,0])\n    cylinder(h=30, d=8);\n    \n    // Handle grip\n    translate([50,0,35])\n    rotate([0,90,0])\n    cylinder(h=20, d=12);\n    \n    // Lid\n    translate([0,0,67])\n    cylinder(h=5, d=68);\n    \n    // Lid knob\n    translate([0,0,72])\n    cylinder(h=8, d=12);\n}\n\n// Control buttons\nmodule controls() {\n    // Main panel\n    translate([0,35,60])\n    cube([50, 12, 2], center=true);\n    \n    // Buttons\n    for(x=[-15, 0, 15])\n        translate([x,35,62])\n        cylinder(h=3, d=8);\n    \n    // Power dial\n    translate([0,25,62])\n    cylinder(h=5, d=15);\n    \n    // Dial indicator\n    translate([0,25,67])\n    cube([2, 10, 1], center=true);\n}\n\n// Ventilation slots\nmodule vents() {\n    for(z=[20:10:40])\n        translate([38,0,z])\n        rotate([0,90,0])\n        cube([20, 2, 1]);\n}\n\n// Assembly\nunion() {\n    body();\n    base();\n    motor_top();\n    jar();\n    controls();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicewhirl",
    "openscad_code": "// Juicewhirl Kitchen Appliance â€“ OpenSCAD  (medium complexity, 3D-printable)\n// Overall footprint: 120 mm (W) Ã— 120 mm (D) Ã— 160 mm (H)\n// Wall thickness: 2 mm everywhere\n\n$fn = 36;\n\n// Main body ----------------------------------------------------------\nmodule body() {\n    difference() {\n        // outer shell\n        translate([0,0,60])\n            cube([120,120,120], center=true);\n        \n        // inner cavity\n        translate([0,0,62])\n            cube([116,116,116], center=true);\n    }\n}\n\n// Base ring ----------------------------------------------------------\nmodule base_ring() {\n    difference() {\n        cylinder(h=10, d=124);\n        cylinder(h=12, d=120);\n    }\n}\n\n// Control panel ------------------------------------------------------\nmodule control_panel() {\n    translate([-60,0,100])\n    rotate([0,-90,0])\n    union() {\n        // panel plate\n        translate([0,0,0])\n            cube([40,60,2]);\n\n        // dial\n        translate([0,15,2])\n            cylinder(h=8, d=20);\n\n        // button\n        translate([0,-15,2])\n            cube([14,14,4], center=true);\n    }\n}\n\n// Juice outlet spout -------------------------------------------------\nmodule spout() {\n    translate([60,0,50])\n    rotate([0,90,0])\n    union() {\n        // main spout tube\n        cylinder(h=35, d=24);\n        \n        // tapered tip\n        translate([35,0,0])\n            scale([1,1,0.6])\n                cylinder(h=12, d=24);\n        \n        // mounting flange\n        translate([-2,0,0])\n            cylinder(h=4, d=30);\n    }\n}\n\n// Lid ----------------------------------------------------------------\nmodule lid() {\n    translate([0,0,125])\n    difference() {\n        // outer lid\n        cylinder(h=10, d=118);\n        \n        // finger recess\n        translate([0,0,-1])\n            cylinder(h=12, d=110);\n        \n        // knob\n        translate([0,0,11])\n            cylinder(h=12, d=20);\n    }\n}\n\n// Handle -------------------------------------------------------------\nmodule handle() {\n    translate([0,0,100])\n    rotate([0,0,0])\n    difference() {\n        union() {\n            // grip arch\n            translate([0,65,0])\n                rotate([90,0,0])\n                    cylinder(h=80, d=12);\n            // vertical posts\n            translate([0,60,-40])\n                cylinder(h=40, d=12);\n            translate([0,60,40])\n                cylinder(h=40, d=12);\n        }\n        // hollow arch for grip\n        translate([0,65,0])\n            rotate([90,0,0])\n                cylinder(h=82, d=8);\n    }\n}\n\n// Internal strainer --------------------------------------------------\nmodule strainer() {\n    translate([0,0,40])\n    difference() {\n        cylinder(h=70, d=110);\n        cylinder(h=72, d=106);\n        \n        // hexagonal juice holes\n        for (i = [0:5]) {\n            rotate([0,0,i*60])\n                for (j = [-2:2]) {\n                    translate([40,j*15,35])\n                        rotate([90,0,0])\n                            cylinder(h=5, d=6);\n                }\n        }\n    }\n}\n\n// Assembly -----------------------------------------------------------\nunion() {\n    body();\n    base_ring();\n    control_panel();\n    spout();\n    lid();\n    handle();\n    strainer();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "choprush",
    "openscad_code": "// ChopRush kitchen appliance â€“ medium complexity realistic style\n// All dimensions in mm, printable on a 200 mm bed\n\n$fn = 36; // smooth curves\n\n// ----- Main body -----\nmodule body() {\n    difference() {\n        // outer shell\n        cube([90, 55, 85], center = true);\n\n        // cavity for motor and bowl\n        translate([0, 0, -5])\n            cube([86, 51, 75], center = true);\n    }\n}\n\n// ----- Control panel -----\nmodule control_panel() {\n    translate([50, 0, 20])\n        rotate([0, 90, 0])\n        difference() {\n            // panel slab\n            cube([40, 20, 3], center = true);\n            // two button holes\n            for (y = [-7, 7])\n                translate([0, y, -2])\n                    cylinder(h = 5, r = 4, center = true);\n        }\n}\n\n// ----- Buttons -----\nmodule buttons() {\n    for (y = [-7, 7])\n        translate([50, y, 18])\n            rotate([0, 90, 0])\n                cylinder(h = 5, r = 3.8, center = true);\n}\n\n// ----- Motor shaft sleeve -----\nmodule shaft() {\n    translate([0, 0, 35])\n        cylinder(h = 30, r = 8, center = true);\n}\n\n// ----- Blade set -----\nmodule blades() {\n    for (a = [0:120:240])\n        rotate([0, 0, a])\n            translate([0, 15, 0])\n                cube([30, 2, 2], center = true);\n}\n\n// ----- Bowl -----\nmodule bowl() {\n    difference() {\n        // outside\n        cylinder(h = 50, r1 = 45, r2 = 40, center = true);\n        // inside cavity\n        translate([0, 0, 5])\n            cylinder(h = 48, r1 = 42, r2 = 37, center = true);\n    }\n}\n\n// ----- Lid -----\nmodule lid() {\n    difference() {\n        // lid disc\n        translate([0, 0, 30])\n            cylinder(h = 5, r = 47, center = true);\n        // center hole for shaft\n        translate([0, 0, 30])\n            cylinder(h = 7, r = 9, center = true);\n    }\n}\n\n// ----- Handle on lid -----\nmodule lid_handle() {\n    translate([0, 40, 30])\n        rotate([90, 0, 0])\n            cylinder(h = 25, r = 5, center = true);\n}\n\n// ----- Anti-slip feet -----\nmodule feet() {\n    for (x = [-35, 35])\n        for (y = [-20, 20])\n            translate([x, y, -44])\n                cylinder(h = 4, r = 4);\n}\n\n// ----- Assembly -----\nunion() {\n    body();\n    control_panel();\n    buttons();\n    shaft();\n    blades();\n    translate([0, 0, -25]) bowl();\n    lid();\n    lid_handle();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendgenie",
    "openscad_code": "// BlendGenie Personal Blender â€“ 3D-printable model (realistic, medium complexity)\n// Overall size: ~110 mm tall (fits 150 mm print volume)\n\n$fn = 50;          // smooth curves\nwall = 2;          // uniform wall thickness for printability\n\nmodule body() {\n    // Main cylindrical body\n    difference() {\n        cylinder(h = 80, d = 65, center = true);\n        translate([0,0,wall]) cylinder(h = 85, d = 65 - 2*wall, center = true);\n    }\n}\n\nmodule base() {\n    // Flat circular base with feet\n    difference() {\n        cylinder(h = 10, d = 70, center = true);\n        translate([0,0,wall]) cylinder(h = 12, d = 70 - 2*wall, center = true);\n    }\n\n    // Four small feet\n    for (a = [0, 90, 180, 270]) {\n        rotate([0,0,a])\n            translate([25,0,-5.5]) cylinder(h = 3, d = 8);\n    }\n}\n\nmodule motor_housing() {\n    // Slight taper on top of body\n    difference() {\n        cylinder(h = 15, d1 = 65, d2 = 55, center = true);\n        translate([0,0,wall]) cylinder(h = 17, d1 = 65 - 2*wall, d2 = 55 - 2*wall, center = true);\n    }\n}\n\nmodule control_panel() {\n    translate([0, -35, 30])\n    difference() {\n        // Panel face\n        cube([25, 3, 20], center = true);\n        // Button recesses\n        for (y = [-7, 0, 7]) {\n            translate([0, 2, y]) cube([10, 2, 5], center = true);\n        }\n    }\n\n    // Buttons\n    for (y = [-7, 0, 7]) {\n        translate([0, 34.5, 30 + y])\n            cube([8, 1, 4], center = true);\n    }\n}\n\nmodule jar() {\n    // Clear blending jar with threads\n    difference() {\n        // Outer jar\n        cylinder(h = 60, d = 55, center = true);\n        // Inner cavity\n        translate([0,0,wall]) cylinder(h = 64, d = 55 - 2*wall, center = true);\n    }\n\n    // Screw threads\n    for (i = [0:3]) {\n        rotate([0,0,i * 90])\n            translate([27,0,25])\n                cube([wall, 2, 6], center = true);\n    }\n\n    // Handle\n    difference() {\n        translate([30, 0, 0])\n            rotate([0,90,0]) cylinder(h = 35, d = 12, center = true);\n        translate([30, 0, 0])\n            rotate([0,90,0]) cylinder(h = 37, d = 12 - 2*wall, center = true);\n    }\n}\n\nmodule lid() {\n    // Screw-on lid with spout\n    difference() {\n        cylinder(h = 8, d = 55, center = true);\n        translate([0,0,wall]) cylinder(h = 10, d = 55 - 2*wall, center = true);\n    }\n\n    // Spout\n    translate([0, 25, 4])\n    rotate([0,90,0])\n    cylinder(h = 20, d1 = 20, d2 = 15);\n}\n\n// Final assembly\ntranslate([0,0,5]) base();\ntranslate([0,0,15]) body();\ntranslate([0,0,55]) motor_housing();\ncontrol_panel();\ntranslate([0,0,80]) jar();\ntranslate([0,0,115]) lid();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixforce",
    "openscad_code": "// Mixforce kitchen blender appliance - realistic medium complexity\n\n// Overall dimensions\nbase_d = 85;\nbase_h = 25;\nmotor_h = 70;\nmotor_d = 65;\njar_d = 70;\njar_h = 100;\ntotal_h = base_h + motor_h + jar_h;\n\n// Base module with feet\nmodule base() {\n    difference() {\n        // Main base cylinder\n        cylinder(h = base_h, d = base_d, $fn = 64);\n        \n        // Recessed bottom\n        translate([0, 0, -0.1])\n            cylinder(h = base_h * 0.5, d = base_d * 0.9, $fn = 64);\n            \n        // Ventilation holes\n        for (i = [0:5:355]) {\n            rotate([0, 0, i])\n                translate([base_d * 0.42, 0, base_h * 0.3])\n                    cylinder(h = base_h * 0.4, d = 4, $fn = 8);\n        }\n    }\n    \n    // Rubber feet\n    for (i = [45:90:315]) {\n        rotate([0, 0, i])\n            translate([base_d * 0.4, 0, -1])\n                cylinder(h = 3, d = 8, $fn = 16);\n    }\n}\n\n// Motor housing\nmodule motor() {\n    union() {\n        // Main motor body\n        difference() {\n            cylinder(h = motor_h, d = motor_d, $fn = 64);\n            \n            // Control panel recess\n            translate([motor_d/2 - 10, 0, motor_h * 0.7])\n                cube([20, 40, 15], center = true);\n        }\n        \n        // Control buttons\n        translate([motor_d/2 - 5, -15, motor_h * 0.7])\n            cube([10, 8, 2], center = true);\n        translate([motor_d/2 - 5, 0, motor_h * 0.7])\n            cube([10, 8, 2], center = true);\n        translate([motor_d/2 - 5, 15, motor_h * 0.7])\n            cube([10, 8, 2], center = true);\n            \n        // Power dial\n        translate([motor_d/2 - 5, 0, motor_h * 0.5])\n            rotate([90, 0, 0])\n                cylinder(h = 8, d = 12, $fn = 32);\n                \n        // LED indicator\n        translate([motor_d/2 - 5, 0, motor_h * 0.85])\n            sphere(d = 5, $fn = 16);\n    }\n}\n\n// Blender jar\nmodule jar() {\n    difference() {\n        // Main jar body\n        cylinder(h = jar_h, d = jar_d, $fn = 64);\n        \n        // Hollow inside\n        translate([0, 0, -1])\n            cylinder(h = jar_h + 2, d = jar_d - 4, $fn = 64);\n            \n        // Spout\n        translate([jar_d/2 - 5, 0, jar_h * 0.8])\n            rotate([0, 90, 0])\n                cylinder(h = 20, d = 15, $fn = 32);\n    }\n    \n    // Handle\n    translate([jar_d/2 - 2, 0, jar_h/2])\n        rotate([0, 90, 0])\n            difference() {\n                // Handle grip\n                cylinder(h = 60, d = 12, $fn = 32);\n                \n                // Handle hole\n                translate([0, 0, -1])\n                    cylinder(h = 62, d = 8, $fn = 32);\n            }\n            \n    // Measuring lines\n    for (level = [1:3]) {\n        translate([0, 0, jar_h * 0.2 * level])\n            difference() {\n                cylinder(h = 0.5, d = jar_d - 1, $fn = 64);\n                cylinder(h = 1, d = jar_d - 3, $fn = 64);\n            }\n    }\n    \n    // Lid\n    translate([0, 0, jar_h + 2])\n        difference() {\n            cylinder(h = 8, d = jar_d + 2, $fn = 64);\n            translate([0, 0, -1])\n                cylinder(h = 10, d = jar_d - 2, $fn = 64);\n                \n            // Lid handle\n            translate([0, 0, 4])\n                cylinder(h = 15, d = 20, $fn = 32);\n        }\n}\n\n// Blade assembly\nmodule blades() {\n    // Blade hub\n    cylinder(h = 8, d = 25, $fn = 32);\n    \n    // Blades (4 arms)\n    for (i = [0:90:270]) {\n        rotate([0, 0, i])\n            translate([10, 0, 4])\n                cube([20, 2, 1], center = true);\n    }\n}\n\n// Main assembly\ntranslate([0, 0, 0])\n    base();\n\ntranslate([0, 0, base_h])\n    motor();\n\ntranslate([0, 0, base_h + motor_h])\n    union() {\n        blades();\n        jar();\n    }",
    "renders": true
  },
  {
    "kitchen_appliance": "juiceflex",
    "openscad_code": "// JuiceFlex compact juicer â€“ OpenSCAD\n// Printable on FDM printers, no support needed (print with spout facing up)\n\n$fn=64;          // global resolution\nwall=2;          // constant wall thickness for 3D-printability\n\nmodule body(){\n    // main cylindrical shell\n    difference(){\n        cylinder(h=80, r1=45, r2=45);\n        translate([0,0,2]) cylinder(h=78, r1=43, r2=43); // hollow\n    }\n    // base ring\n    translate([0,0,-1]) \n        difference(){\n            cylinder(h=6, r1=48, r2=48);\n            cylinder(h=8, r1=46, r2=46);\n        }\n}\n\nmodule handle(){\n    translate([0,45,60]) rotate([90,0,0])\n        difference(){\n            cylinder(h=25, r1=8, r2=8);\n            translate([0,0,wall]) cylinder(h=25, r1=6, r2=6);\n        }\n}\n\nmodule lid(){\n    translate([0,0,82]) \n        union(){\n            // top disk\n            difference(){\n                cylinder(h=4, r1=50, r2=50);\n                cylinder(h=6, r1=48, r2=48);\n            }\n            // feed chute\n            translate([0,25,4])\n                difference(){\n                    cylinder(h=40, r1=15, r2=12);\n                    translate([0,0,wall]) cylinder(h=40, r1=13, r2=10);\n                }\n        }\n}\n\nmodule spout(){\n    translate([35,0,15]) rotate([0,-90,0])\n        difference(){\n            // spout tube\n            cylinder(h=30, r1=10, r2=8);\n            translate([0,0,wall]) cylinder(h=30, r1=8, r2=6);\n        }\n}\n\nmodule control(){\n    translate([-50,0,40]) rotate([0,90,0])\n        union(){\n            // dial knob\n            difference(){\n                cylinder(h=12, r1=10, r2=10);\n                translate([0,0,wall]) cylinder(h=12, r1=8, r2=8);\n            }\n            // pointer ridge\n            translate([0,0,6]) cube([18,4,2], center=true);\n        }\n}\n\nmodule legs(){\n    for(a=[0:120:359])\n        rotate([0,0,a]) translate([35,0,-5])\n            difference(){\n                cylinder(h=6, r1=5, r2=5);\n                cylinder(h=7, r1=3, r2=3);\n            }\n}\n\n// assembly\nbody();\nhandle();\nlid();\nspout();\ncontrol();\nlegs();",
    "renders": true
  },
  {
    "kitchen_appliance": "sliceblend",
    "openscad_code": "// SliceBlend Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: ~110mm tall, ~80mm diameter\n\n// Main body assembly\nmodule sliceblend() {\n    // Base with motor housing\n    difference() {\n        cylinder(h=25, d=80, $fn=100);\n        translate([0, 0, -1]) cylinder(h=27, d=76, $fn=100);\n    }\n    \n    // Rubber feet\n    for (i = [0:3]) {\n        rotate([0, 0, i*90+45]) \n            translate([28, 0, 0]) \n                cylinder(h=3, d=8, $fn=20);\n    }\n    \n    // Control panel\n    translate([-30, -35, 25]) {\n        cube([60, 10, 2]);\n        \n        // Power button\n        translate([5, 5, 2]) cylinder(h=3, d=6, $fn=20);\n        \n        // Speed dial\n        translate([25, 5, 2]) cylinder(h=4, d=10, $fn=30);\n        \n        // Pulse button\n        translate([45, 5, 2]) cylinder(h=2, d=8, $fn=20);\n    }\n    \n    // Main blending jar\n    difference() {\n        // Jar body\n        translate([0, 0, 27]) cylinder(h=70, d1=75, d2=65, $fn=100);\n        \n        // Handle cutout\n        translate([30, -10, 27]) cube([20, 20, 70]);\n        \n        // Inner volume\n        translate([0, 0, 29]) cylinder(h=66, d=60, $fn=100);\n    }\n    \n    // Handle\n    difference() {\n        translate([40, -10, 62]) {\n            rotate([90, 0, 0]) cylinder(h=70, d=12, $fn=30);\n            translate([0, 35, 0]) sphere(d=12, $fn=30);\n        }\n        \n        // Handle grip hole\n        translate([40, -10, 62]) {\n            rotate([90, 0, 0]) cylinder(h=70, d=8, $fn=30);\n            translate([0, 35, 0]) sphere(d=8, $fn=30);\n        }\n    }\n    \n    // Lid\n    difference() {\n        // Lid top\n        translate([0, 0, 97]) cylinder(h=8, d=67, $fn=100);\n        \n        // Lid seal\n        translate([0, 0, 97]) cylinder(h=5, d=62, $fn=100);\n        \n        // Fill cap hole\n        translate([0, 22, 97]) cylinder(h=9, d=12, $fn=30);\n    }\n    \n    // Fill cap\n    translate([0, 22, 105]) {\n        cylinder(h=5, d=14, $fn=30);\n        translate([0, 0, 5]) cylinder(h=2, d=10, $fn=30);\n    }\n    \n    // Blades (simplified representation)\n    for (i = [0:3]) {\n        rotate([0, 0, i*90]) \n            translate([0, 0, 27]) \n                rotate([90, 0, 0]) \n                    scale([1, 0.5, 0.2]) \n                        cube([35, 8, 2], center=true);\n    }\n    \n    // Ventilation slots\n    for (i = [0:7]) {\n        rotate([0, 0, i*45]) \n            translate([39, 0, 15]) \n                cube([10, 2, 8]);\n    }\n    \n    // Power cord\n    translate([-35, 0, 5]) {\n        rotate([90, 0, 0]) cylinder(h=30, d=6, $fn=20);\n        translate([0, -30, 0]) rotate([0, 90, 0]) cylinder(h=20, d=4, $fn=20);\n    }\n}\n\n// Render the complete model\nsliceblend();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixswift",
    "openscad_code": "// MixSwift kitchen appliance - medium complexity realistic model\n// Overall dimensions: 120mm (W) x 80mm (D) x 140mm (H)\n\n$fn = 32;\n\nmodule base() {\n    // Main body base\n    translate([0, 0, 10]) cube([120, 80, 80], center=true);\n    \n    // Bottom feet\n    for(x=[-45, 45])\n        for(y=[-25, 25])\n            translate([x, y, 2]) cylinder(h=5, r=5);\n}\n\nmodule motor_housing() {\n    // Upper motor housing\n    translate([0, 0, 90]) cube([110, 70, 50], center=true);\n    \n    // Ventilation slots\n    for(i=[-40:10:40])\n        translate([i, 35, 90]) cube([5, 2, 50]);\n}\n\nmodule control_panel() {\n    // Control panel face\n    translate([0, 35, 110]) cube([90, 2, 30], center=true);\n    \n    // Buttons\n    for(i=[-30:15:30])\n        translate([i, 36, 115]) cube([8, 2, 8], center=true);\n    \n    // Power dial\n    translate([0, 36, 125]) cylinder(h=3, r=8);\n}\n\nmodule jar_base() {\n    // Jar attachment ring\n    translate([0, 0, 115]) cylinder(h=10, r1=30, r2=28);\n    \n    // Threading for jar\n    difference() {\n        cylinder(h=10, r=30);\n        cylinder(h=10, r=26);\n    }\n}\n\nmodule jar() {\n    // Main jar body\n    translate([0, 0, 150]) cylinder(h=50, r1=28, r2=32);\n    \n    // Handle\n    translate([30, 0, 175]) rotate([90, 0, 0]) cylinder(h=40, r=5);\n    translate([30, 0, 175]) sphere(r=5);\n    \n    // Lid\n    translate([0, 0, 175]) difference() {\n        cylinder(h=5, r=32);\n        cylinder(h=3, r=30);\n    }\n}\n\nmodule power_cord() {\n    // Power cord exit\n    translate([-50, 0, 60]) rotate([90, 0, 0]) cylinder(h=20, r=5);\n}\n\nunion() {\n    base();\n    motor_housing();\n    control_panel();\n    jar_base();\n    jar();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicenova",
    "openscad_code": "// Juicenova Juicer - Realistic Kitchen Appliance (Medium Complexity)\n// Overall dimensions: 120mm x 120mm x 180mm\n\n$fn = 32;\n\n// Main body\nmodule juicer_base() {\n    // Base body\n    difference() {\n        cube([100, 100, 80], center=true);\n        translate([0, 0, 40])\n            cube([96, 96, 80], center=true);\n    }\n    \n    // Rubber feet\n    for(x = [-40, 40])\n        for(y = [-40, 40])\n            translate([x, y, -42])\n                cylinder(h=4, r=5);\n    \n    // Control panel\n    translate([0, 45, 0])\n        difference() {\n            cube([60, 2, 20], center=true);\n            translate([-20, -1, 5])\n                cylinder(h=4, r=4);\n            translate([0, -1, 5])\n                cylinder(h=4, r=4);\n            translate([20, -1, 5])\n                cylinder(h=4, r=4);\n        }\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0, 0, 80])\n        difference() {\n            cylinder(h=40, r1=45, r2=40);\n            translate([0, 0, -1])\n                cylinder(h=42, r1=43, r2=38);\n        }\n    \n    // Power cord\n    translate([40, 0, 85])\n        rotate([90, 0, 0])\n            cylinder(h=30, r=3);\n}\n\n// Juice container\nmodule juice_container() {\n    translate([0, 0, 130])\n        difference() {\n            cylinder(h=50, r=35);\n            translate([0, 0, 2])\n                cylinder(h=50, r=33);\n        }\n    \n    // Handle\n    translate([35, 0, 155])\n        difference() {\n            rotate([0, 90, 0])\n                cylinder(h=30, r=6);\n            rotate([0, 90, 0])\n                translate([0, 0, 2])\n                    cylinder(h=30, r=4);\n        }\n    \n    // Spout\n    translate([0, 35, 155])\n        difference() {\n            cube([8, 15, 8], center=true);\n            translate([0, 15, 0])\n                cube([6, 15, 6], center=true);\n        }\n}\n\n// Filter basket\nmodule filter_basket() {\n    translate([0, 0, 130])\n        difference() {\n            cylinder(h=20, r=30);\n            translate([0, 0, 2])\n                cylinder(h=20, r=28);\n        }\n    \n    // Filter holes pattern\n    for(i = [0:7])\n        rotate([0, 0, i * 45])\n            for(j = [-20:5:20])\n                translate([j, 0, 140])\n                    cylinder(h=20, r=1);\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, 180])\n        difference() {\n            cylinder(h=10, r=40);\n            translate([0, 0, 2])\n                cylinder(h=10, r=38);\n        }\n    \n    // Feeding tube\n    translate([0, -20, 185])\n        difference() {\n            cylinder(h=30, r=15);\n            translate([0, 0, 2])\n                cylinder(h=30, r=13);\n        }\n    \n    // Handle grip\n    translate([0, 20, 185])\n        difference() {\n            cube([30, 10, 5], center=true);\n            translate([0, 0, 2])\n                cube([28, 8, 5], center=true);\n        }\n}\n\n// Assembly\njuicer_base();\nmotor_housing();\njuice_container();\nfilter_basket();\nlid();",
    "renders": true
  },
  {
    "kitchen_appliance": "choppilot",
    "openscad_code": "// Choppilot food-processor / mini-chopper\n// 110 mm tall, 3D-printable, no supports needed\n// All walls â‰¥2 mm\n\n$fn = 36;          // smooth curves\n\n// Overall dimensions\nbase_d   = 80;     // footprint\nbase_h   = 25;\nbowl_d   = 75;\nbowl_h   = 55;\nlid_h    = 20;\nmotor_h  = 30;\n\n// Wall thickness\nwall = 2;\n\nmodule base_with_feet() {\n    // Main base\n    difference() {\n        cylinder(h = base_h, d = base_d);\n        translate([0,0,wall])\n            cylinder(h = base_h, d = base_d - 2*wall);\n    }\n    \n    // Four rubber feet\n    for(a = [45, 135, 225, 315])\n        rotate([0,0,a])\n        translate([base_d/2 - 5, 0, -0.1])\n            cylinder(h = 3, d1 = 5, d2 = 4);\n}\n\nmodule control_panel() {\n    translate([base_d/2 - 10, 0, base_h])\n    rotate([90,0,0])\n    difference() {\n        // Panel block\n        translate([0,0,0])\n            cube([20, 12, wall], center = true);\n        \n        // Two button holes\n        translate([0,  3, 0])\n            cylinder(h = wall+1, d = 5);\n        translate([0, -3, 0])\n            cylinder(h = wall+1, d = 5);\n    }\n}\n\nmodule bowl() {\n    difference() {\n        cylinder(h = bowl_h, d = bowl_d);\n        // Inner cavity\n        translate([0,0,wall])\n            cylinder(h = bowl_h, d = bowl_d - 2*wall);\n    }\n    \n    // Handle\n    translate([bowl_d/2 + 2, 0, bowl_h/2])\n    rotate([0,90,0])\n    difference() {\n        cylinder(h = 25, d = 12);\n        translate([0,0,wall])\n            cylinder(h = 25, d = 12 - 2*wall);\n    }\n}\n\nmodule lid() {\n    difference() {\n        cylinder(h = lid_h, d = bowl_d);\n        // recess for food chute\n        translate([0,0,lid_h - 5])\n            cylinder(h = 6, d = bowl_d - 10);\n    }\n    \n    // Central shaft hole\n    translate([0,0,-0.1])\n        cylinder(h = lid_h + 2, d = 8);\n    \n    // Food pusher / chute plug\n    translate([0, 0, lid_h - 2])\n        cylinder(h = 12, d = 22);\n}\n\nmodule blade_assembly() {\n    // Central shaft\n    cylinder(h = bowl_h - 5, d = 6);\n    \n    // Two cross blades\n    for(r = [0, 90])\n        rotate([0,0,r])\n        translate([0,0,bowl_h/2 - 5])\n            cube([30, 2, 10], center = true);\n}\n\nunion() {\n    // Base\n    base_with_feet();\n    control_panel();\n    \n    // Bowl stacked on base\n    translate([0,0,base_h])\n        bowl();\n    \n    // Blade\n    translate([0,0,base_h + wall + 1])\n        blade_assembly();\n    \n    // Lid on bowl\n    translate([0,0,base_h + bowl_h])\n        lid();\n    \n    // Motor housing above lid\n    translate([0,0,base_h + bowl_h + lid_h])\n    difference() {\n        cylinder(h = motor_h, d = bowl_d - 5);\n        // cable hole\n        translate([0, bowl_d/2 - 2, motor_h/2])\n            rotate([90,0,0])\n                cylinder(h = 15, d = 8);\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendflow",
    "openscad_code": "$fn = 24;\n\n// Overall scale factor so the tallest part â‰ˆ 110 mm\nscale_factor = 1.0;\n\n// Wall thickness for 3D-printability\nwall = 2;\n\nmodule blendflow() {\n    // Main motor base housing\n    difference() {\n        union() {\n            // Lower base cylinder (motor housing)\n            cylinder(h = 50 * scale_factor, d = 90 * scale_factor, center = true);\n            // Upper shoulder\n            translate([0, 0, 25 * scale_factor])\n                cylinder(h = 10 * scale_factor, d = 95 * scale_factor, center = true);\n        }\n        // Hollow out inside\n        cylinder(h = 60 * scale_factor, d = 90 * scale_factor - 2 * wall, center = true);\n    }\n\n    // Rubber feet (simple cylinders)\n    for (r = [1, 3]) {\n        rotate([0, 0, r * 90])\n            translate([32 * scale_factor, 32 * scale_factor, -25 * scale_factor])\n                cylinder(h = 3 * scale_factor, d = 8 * scale_factor, center = true);\n    }\n\n    // Control dial ring\n    translate([0, 0, 28 * scale_factor])\n        difference() {\n            cylinder(h = 6 * scale_factor, d = 45 * scale_factor, center = true);\n            cylinder(h = 6.5 * scale_factor, d = 40 * scale_factor, center = true);\n        }\n\n    // On/off push button\n    translate([0, -20 * scale_factor, 31 * scale_factor])\n        cube([12 * scale_factor, 8 * scale_factor, 4 * scale_factor], center = true);\n\n    // LED indicator light\n    translate([18 * scale_factor, 0, 31 * scale_factor])\n        sphere(d = 4 * scale_factor);\n\n    // Motor drive shaft stub\n    translate([0, 0, 30 * scale_factor])\n        cylinder(h = 8 * scale_factor, d = 12 * scale_factor);\n\n    // Jar base collar\n    translate([0, 0, 38 * scale_factor])\n        difference() {\n            cylinder(h = 6 * scale_factor, d = 60 * scale_factor, center = true);\n            cylinder(h = 7 * scale_factor, d = 54 * scale_factor, center = true);\n        }\n\n    // Clear blending jar\n    difference() {\n        // Jar outer shell\n        translate([0, 0, 38 * scale_factor + 55 * scale_factor])\n            cylinder(h = 110 * scale_factor, d = 80 * scale_factor, center = true);\n        // Hollow inside\n        translate([0, 0, 38 * scale_factor + 55 * scale_factor])\n            cylinder(h = 110 * scale_factor + 1, d = 80 * scale_factor - 2 * wall, center = true);\n    }\n\n    // Jar lid\n    translate([0, 0, 38 * scale_factor + 110 * scale_factor + 4 * scale_factor])\n        difference() {\n            cylinder(h = 8 * scale_factor, d = 82 * scale_factor, center = true);\n            cylinder(h = 9 * scale_factor, d = 78 * scale_factor, center = true);\n        }\n\n    // Lid handle\n    translate([0, 0, 38 * scale_factor + 110 * scale_factor + 12 * scale_factor])\n        cylinder(h = 20 * scale_factor, d1 = 28 * scale_factor, d2 = 20 * scale_factor, center = true);\n\n    // Blades (simplified, 4 fins)\n    for (a = [0:90:270]) {\n        rotate([0, 0, a])\n            translate([0, 0, 38 * scale_factor])\n                cube([30 * scale_factor, 8 * scale_factor, 1.5 * scale_factor], center = true);\n    }\n}\n\nblendflow();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixcore",
    "openscad_code": "// MixCore Kitchen Blender (realistic style, medium complexity)\n\n// Overall dimensions: 120mm height (fits 3D printer bed)\n\n// Main body module\nmodule blender_body() {\n    // Base cylinder\n    difference() {\n        cylinder(h=25, d1=80, d2=70, $fn=100);\n        // Hollow interior\n        translate([0,0,2])\n            cylinder(h=23, d1=76, d2=66, $fn=100);\n    }\n    \n    // Motor housing cylinder\n    translate([0,0,25])\n        difference() {\n            cylinder(h=40, d=70, $fn=100);\n            // Interior cavity\n            translate([0,0,2])\n                cylinder(h=38, d=66, $fn=100);\n        }\n    \n    // Upper neck\n    translate([0,0,65])\n        difference() {\n            cylinder(h=15, d=50, $fn=100);\n            // Interior cavity\n            translate([0,0,2])\n                cylinder(h=13, d=46, $fn=100);\n        }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel base\n    translate([0, 35, 35])\n        difference() {\n            cube([60, 8, 25], center=true);\n            // Hollow back\n            translate([0, -6, 0])\n                cube([56, 8, 21], center=true);\n        }\n    \n    // Buttons\n    for (i = [-1, 0, 1]) {\n        translate([i * 20, 39.1, 35])\n            cube([8, 2, 8], center=true);\n    }\n    \n    // Power button\n    translate([0, 39.1, 42])\n        cylinder(h=2, d=10, $fn=32);\n}\n\n// Jar module\nmodule blender_jar() {\n    // Main jar body\n    translate([0,0,85])\n        difference() {\n            cylinder(h=70, d=65, d2=55, $fn=100);\n            // Interior cavity\n            translate([0,0,2])\n                cylinder(h=68, d=61, d2=51, $fn=100);\n        }\n    \n    // Jar lid\n    translate([0,0,157])\n        difference() {\n            cylinder(h=8, d=55, $fn=100);\n            // Handle cavity\n            translate([0,0,2])\n                cylinder(h=6, d=51, $fn=100);\n        }\n    \n    // Lid handle\n    translate([0,0,165])\n        cylinder(h=15, d=15, $fn=32);\n}\n\n// Blade assembly module\nmodule blade_assembly() {\n    // Blade base\n    translate([0,0,80])\n        cylinder(h=5, d=45, $fn=64);\n    \n    // Blades (4 arms)\n    for (i = [0:3]) {\n        rotate([0,0,i * 90])\n            translate([15,0,82.5])\n                cube([30, 2.5, 1], center=true);\n    }\n}\n\n// Feet module\nmodule feet() {\n    // Rubber feet\n    for (a = [45, 135, 225, 315]) {\n        rotate([0,0,a])\n            translate([30, 0, -1])\n                cylinder(h=3, d=8, $fn=32);\n    }\n}\n\n// Render complete blender\nunion() {\n    blender_body();\n    control_panel();\n    blender_jar();\n    blade_assembly();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicechop",
    "openscad_code": "// JuiceChop Kitchen Appliance - Realistic Style, Medium Complexity\n// Compact countertop juicer/chopper combo, ~120mm tall, 3D-printable\n\n// Overall dimensions\nbase_d = 80;\nbase_h = 20;\nbody_h = 70;\nfeed_d = 45;\npusher_d = 40;\njar_d = 60;\njar_h = 50;\n\nmodule juicechop() {\n    // Base with rubber feet indentations\n    difference() {\n        cylinder(h = base_h, d1 = base_d, d2 = base_d - 4, $fn = 48);\n        for (a = [0 : 90 : 270])\n            rotate([0, 0, a])\n                translate([base_d/2 - 8, 0, -1])\n                    cube([8, 8, base_h + 2], center = true);\n    }\n\n    // Motor housing\n    translate([0, 0, base_h])\n        difference() {\n            cylinder(h = body_h, d = base_d - 4, $fn = 48);\n            // Control dial recess\n            translate([base_d/2 - 12, 0, 15])\n                rotate([0, 90, 0])\n                    cylinder(h = 20, d = 12, $fn = 24);\n        }\n\n    // Control dial\n    translate([base_d/2 - 12, 0, base_h + 15])\n        rotate([0, 90, 0])\n            cylinder(h = 18, d = 10, $fn = 24);\n\n    // Feed chute\n    translate([0, 0, base_h + body_h])\n        difference() {\n            cylinder(h = 40, d = feed_d, $fn = 36);\n            // Internal taper for food guidance\n            cylinder(h = 40, d1 = feed_d - 8, d2 = feed_d - 16, $fn = 36);\n        }\n\n    // Safety lid with pusher\n    translate([0, 0, base_h + body_h + 40])\n        difference() {\n            cylinder(h = 10, d = feed_d + 6, $fn = 36);\n            // Pusher hole\n            cylinder(h = 12, d = pusher_d, $fn = 36);\n        }\n\n    // Pusher\n    translate([0, 0, base_h + body_h + 52])\n        difference() {\n            cylinder(h = 35, d = pusher_d - 2, $fn = 36);\n            // Handle\n            translate([0, 0, 30])\n                cylinder(h = 10, d = pusher_d + 8, $fn = 36);\n            // Air vents\n            for (i = [1 : 3])\n                rotate([0, 0, i * 120])\n                    translate([pusher_d/2 - 4, 0, 15])\n                        cube([8, 4, 20], center = true);\n        }\n\n    // Juice jar\n    translate([base_d/2 + jar_d/2 - 5, 0, 0])\n        difference() {\n            cylinder(h = jar_h, d = jar_d, $fn = 48);\n            // Internal cavity\n            cylinder(h = jar_h - 4, d = jar_d - 4, $fn = 48);\n            // Handle\n            translate([jar_d/2 - 4, 0, jar_h/2])\n                rotate([0, 90, 0])\n                    difference() {\n                        cylinder(h = 30, d = 12, $fn = 24);\n                        cylinder(h = 32, d = 8, $fn = 24);\n                    }\n            // Spout\n            translate([jar_d/2 - 2, 0, jar_h - 10])\n                rotate([90, 0, 0])\n                    cylinder(h = 15, d1 = 16, d2 = 8, $fn = 24);\n        }\n\n    // Jar lid\n    translate([base_d/2 + jar_d/2 - 5, 0, jar_h])\n        difference() {\n            cylinder(h = 5, d = jar_d + 2, $fn = 48);\n            cylinder(h = 6, d = jar_d - 2, $fn = 48);\n        }\n\n    // Motor vents\n    for (z = [base_h + 10 : 10 : base_h + 50])\n        for (a = [0 : 45 : 315])\n            rotate([0, 0, a])\n                translate([base_d/2 - 8, 0, z])\n                    cube([16, 2, 4], center = true);\n}\n\njuicechop();",
    "renders": true
  },
  {
    "kitchen_appliance": "turbojuice",
    "openscad_code": "// TurboJuice Kitchen Appliance - Medium Complexity\n// Dimensions: ~110mm tall, ~80mm wide, ~90mm deep\n\n$fn = 32; // Smooth curves for 3D printing\n\nmodule base()\n{\n    // Main base body with rounded edges\n    difference()\n    {\n        minkowski()\n        {\n            cube([75, 70, 35]);\n            sphere(3);\n        }\n        // Hollow center\n        translate([3.5, 3.5, 3])\n            cube([68, 63, 32]);\n    }\n}\n\nmodule motor_housing()\n{\n    // Central cylindrical motor housing\n    difference()\n    {\n        cylinder(h = 45, r = 25);\n        // Internal cavity\n        cylinder(h = 42, r = 22);\n    }\n}\n\nmodule juice_container()\n{\n    // Clear juice container with spout\n    difference()\n    {\n        // Container body\n        translate([0, 0, 5])\n            minkowski()\n            {\n                cube([50, 40, 45]);\n                sphere(1);\n            }\n        \n        // Hollow interior\n        translate([2, 2, 7])\n            cube([46, 36, 42]);\n        \n        // Pour spout\n        translate([25, 38, 35])\n            rotate([0, -45, 0])\n            cylinder(h = 15, r1 = 6, r2 = 4);\n    }\n}\n\nmodule control_panel()\n{\n    // Control panel with buttons and dial\n    translate([-20, -30, 36])\n    {\n        // Panel base\n        cube([40, 15, 8]);\n        \n        // Power button\n        translate([5, 5, 8])\n            cylinder(h = 2, r = 4);\n        \n        // Speed dial\n        translate([25, 7.5, 8])\n            cylinder(h = 5, r = 6);\n        \n        // Indicator light\n        translate([35, 5, 8])\n            sphere(2);\n    }\n}\n\nmodule safety_latches()\n{\n    // Two safety latches for container\n    for(side = [-1, 1])\n    {\n        translate([side * 30, 0, 25])\n        {\n            // Latch base\n            cube([5, 15, 8]);\n            // Latch handle\n            translate([side * 2, 7.5, 8])\n                cylinder(h = 5, r = 2);\n        }\n    }\n}\n\nmodule feet()\n{\n    // Four rubber feet\n    for(x = [-30, 30])\n        for(y = [-25, 25])\n            translate([x, y, -2])\n                cylinder(h = 4, r = 3);\n}\n\nmodule blades()\n{\n    // S-shaped cutting blades\n    rotate([0, 0, 0])\n    {\n        // Central hub\n        cylinder(h = 8, r = 5);\n        \n        // Blades\n        for(angle = [0, 120, 240])\n            rotate([0, 0, angle])\n                translate([0, 12, 4])\n                    cube([2, 25, 1]);\n    }\n}\n\n// Assembly\nbase();\ntranslate([0, 0, 35]) motor_housing();\ntranslate([0, 10, 80]) juice_container();\ncontrol_panel();\nsafety_latches();\nfeet();\ntranslate([0, 10, 80]) blades();",
    "renders": true
  },
  {
    "kitchen_appliance": "blendchef",
    "openscad_code": "// BlendChef Kitchen Blender - Realistic Style, Medium Complexity\n// Approx 100mm high, 3D printable with 2mm walls\n\n$fn = 32;\n\n// Main parameters\nbase_d = 70;\nbase_h = 25;\nmotor_h = 40;\njar_d = 55;\njar_h = 80;\nhandle_w = 12;\nhandle_h = 60;\n\nmodule base() {\n    // Main base housing - hollow for electronics\n    difference() {\n        cylinder(d=base_d, h=base_h);\n        translate([0,0,2])\n            cylinder(d=base_d-4, h=base_h);\n    }\n    \n    // Rubber feet - 4 corners\n    for(i=[0:3]) {\n        rotate([0,0,i*90])\n            translate([base_d/2-10, 0, -1])\n                cylinder(d=8, h=3);\n    }\n    \n    // Control panel area\n    translate([0, -base_d/2+5, base_h-2])\n        cube([30, 10, 4], center=true);\n}\n\nmodule motor_housing() {\n    // Tapered motor housing\n    cylinder(d1=base_d, d2=base_d-10, h=motor_h);\n    \n    // Cooling vents\n    for(i=[0:11]) {\n        rotate([0,0,i*30])\n            translate([base_d/2-2, 0, motor_h/2])\n                cube([10, 2, 15], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Buttons\n    translate([-10, -base_d/2+5, base_h+2])\n        cube([8, 6, 3], center=true);\n    translate([0, -base_d/2+5, base_h+2])\n        cube([8, 6, 3], center=true);\n    translate([10, -base_d/2+5, base_h+2])\n        cube([8, 6, 3], center=true);\n    \n    // Dial\n    translate([20, -base_d/2+5, base_h+3])\n        rotate([90,0,0])\n            cylinder(d=10, h=5);\n}\n\nmodule jar() {\n    // Main jar\n    difference() {\n        cylinder(d=jar_d, h=jar_h);\n        translate([0,0,2])\n            cylinder(d=jar_d-4, h=jar_h);\n    }\n    \n    // Measurement markings\n    for(h=[20:20:60]) {\n        translate([jar_d/2-1, 0, h])\n            cube([2, 0.5, 0.5], center=true);\n    }\n    \n    // Handle\n    translate([jar_d/2-2, 0, jar_h/2]) {\n        difference() {\n            // Handle grip\n            rotate([0,90,0])\n                cylinder(d=handle_w, h=handle_h);\n            // Hollow handle\n            rotate([0,90,0])\n                translate([0,0,2])\n                    cylinder(d=handle_w-4, h=handle_h-4);\n        }\n        \n        // Handle supports\n        translate([0, 0, handle_h/2-5])\n            cube([handle_w/2, handle_w/2, 10], center=true);\n        translate([0, 0, -handle_h/2+5])\n            cube([handle_w/2, handle_w/2, 10], center=true);\n    }\n}\n\nmodule lid() {\n    // Main lid\n    translate([0, 0, jar_h+5])\n        cylinder(d=jar_d+2, h=5);\n    \n    // Lid handle\n    translate([0, 0, jar_h+10])\n        cylinder(d=20, h=8);\n    \n    // Pour spout\n    translate([jar_d/2+2, 0, jar_h+2])\n        rotate([0,90,0])\n            cylinder(d=15, h=10);\n}\n\n// Assembly\nbase();\ntranslate([0,0,base_h])\n    motor_housing();\ncontrol_panel();\ntranslate([0,0,base_h+motor_h])\n    jar();\nlid();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixrush",
    "openscad_code": "// MixRush Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 100mm x 120mm x 200mm (Width x Depth x Height)\n\n// Main body module\nmodule mixrush_body() {\n    // Base unit\n    difference() {\n        // Main housing\n        union() {\n            // Bottom housing\n            cube([80, 100, 120], center=true);\n            // Top motor housing\n            translate([0, 0, 70])\n                cylinder(h=40, d1=70, d2=60, center=true);\n        }\n        // Motor vent slots\n        for(i=[-2:1:2]) {\n            translate([0, 52, 70])\n                rotate([90, 0, 0])\n                    cube([4, 20, 2], center=true);\n        }\n        // Bottom cavity\n        translate([0, 0, -10])\n            cube([76, 96, 20], center=true);\n    }\n}\n\n// Jar module\nmodule jar() {\n    // Main jar body\n    union() {\n        // Jar base\n        translate([0, 0, -20])\n            cylinder(h=80, d=50, center=true);\n        // Lid\n        translate([0, 0, 25])\n            cylinder(h=10, d=52, center=true);\n        // Handle\n        translate([25, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h=30, d=8, center=true);\n        translate([25, 0, 0])\n            sphere(d=10);\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel base\n    translate([0, -50, 0])\n        cube([60, 10, 30], center=true);\n    \n    // Buttons\n    for(i=[-1:1]) {\n        // Speed buttons\n        translate([i*20, -50, 10])\n            cylinder(h=3, d=8, center=true);\n        translate([i*20, -50, 12])\n            sphere(d=6);\n    }\n    \n    // Power button\n    translate([0, -50, 20])\n        cylinder(h=4, d=12, center=true);\n    translate([0, -50, 22])\n        sphere(d=10);\n}\n\n// Base with rubber feet\nmodule base_with_feet() {\n    // Main base\n    translate([0, 0, -65])\n        cube([90, 110, 10], center=true);\n    \n    // Rubber feet\n    for(x=[-35, 35])\n        for(y=[-40, 40])\n            translate([x, y, -71])\n                cylinder(h=3, d=10, center=true);\n}\n\n// Jar coupling\nmodule jar_coupling() {\n    // Coupling base\n    translate([0, 0, -15])\n        cylinder(h=10, d=30, center=true);\n    \n    // Drive teeth\n    for(i=[0:60:359]) {\n        rotate([0, 0, i])\n            translate([12, 0, -15])\n                cube([4, 3, 10], center=true);\n    }\n}\n\n// Main assembly\nunion() {\n    // Base assembly\n    base_with_feet();\n    \n    // Main body\n    mixrush_body();\n    \n    // Control panel\n    control_panel();\n    \n    // Jar assembly\n    translate([0, 0, 25])\n        jar();\n    \n    // Coupling mechanism\n    jar_coupling();\n}\n\n// Ventilation grill details\nfor(i=[-1:1]) {\n    translate([i*25, 52, 55])\n        cube([15, 2, 30], center=true);\n}\n\n// Power cord\ntranslate([0, 60, -60])\n    rotate([90, 0, 0])\n        cylinder(h=50, d=8, center=true);",
    "renders": true
  },
  {
    "kitchen_appliance": "chopsphere",
    "openscad_code": "// ChopSphere â€“ compact spherical food-chopper (Ã˜ 110 mm)\n// Realistic style, medium complexity, 3D-printable\n\n$fn = 60;          // smooth curves\nwall = 2;          // printable wall thickness\ndia = 110;         // overall diameter\nh   = dia/2;       // half-diameter\n\n// ---------- Main body ----------\nmodule shell() {\n    difference() {\n        sphere(d = dia);                       // outer sphere\n        sphere(d = dia - 2*wall);              // hollow inside\n    }\n}\n\n// ---------- Feed tube on top ----------\nmodule feed_tube() {\n    translate([0, 0, h]) {\n        difference() {\n            cylinder(h = 30, d1 = 35, d2 = 28); // slight taper\n            cylinder(h = 32, d  = 28 - 2*wall); // inner hole\n        }\n    }\n}\n\n// ---------- Lid cap for feed tube ----------\nmodule lid() {\n    translate([0, 0, h + 30 + 2])\n    difference() {\n        cylinder(h = 6, d = 38);\n        cylinder(h = 7, d = 32);\n    }\n}\n\n// ---------- Motor base ring ----------\nmodule base_ring() {\n    translate([0, 0, -h])\n    difference() {\n        cylinder(h = 12, d = dia);\n        cylinder(h = 13, d = dia - 2*wall);\n    }\n}\n\n// ---------- Vent slots ----------\nmodule vents() {\n    for(a = [0:30:359])\n        rotate([0, 0, a])\n        translate([dia/2 - wall - 1, 0, -h + 2])\n            cube([wall + 2, 10, 8], center = true);\n}\n\n// ---------- Control dial ----------\nmodule dial() {\n    translate([dia/2 - 10, 0, 0])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h = 8, d = 20);\n        cylinder(h = 9, d = 12);\n    }\n}\n\n// ---------- Blade rotor inside ----------\nmodule blades() {\n    for(a = [0:120:240])\n        rotate([0, 0, a])\n        translate([0, 0, -20])\n            cube([wall*6, 25, wall*1.5], center = true);\n}\n\n// ---------- Assembly ----------\nunion() {\n    shell();\n    feed_tube();\n    lid();\n    base_ring();\n    difference() { base_ring(); vents(); }\n    dial();\n    blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendzoom",
    "openscad_code": "// BlendZoom Kitchen Blender - Medium complexity realistic style\n// Overall dimensions: ~120mm height, ~80mm base diameter\n\nmodule main_body() {\n    // Main cylindrical base with slight taper\n    cylinder(h=60, r1=40, r2=35, $fn=64);\n    \n    // Top rim lip\n    translate([0,0,58])\n    cylinder(h=4, r1=38, r2=42, $fn=64);\n}\n\nmodule motor_housing() {\n    // Motor base - slightly smaller diameter\n    translate([0,0,-5])\n    cylinder(h=15, r=38, $fn=64);\n    \n    // Ventilation slots\n    for(i=[0:7]) {\n        rotate([0,0,i*45])\n        translate([30,0,2])\n        cube([15,3,8], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Control panel protrusion\n    translate([42,0,25])\n    rotate([0,90,0])\n    cylinder(h=20, r=12, $fn=32);\n    \n    // Buttons\n    for(i=[0:2]) {\n        translate([42, -8 + i*8, 25])\n        cube([3,4,2], center=true);\n    }\n    \n    // Power dial\n    translate([42, 0, 35])\n    rotate([90,0,0])\n    cylinder(h=8, r=6, $fn=32);\n}\n\nmodule jar_base() {\n    // Jar mounting ring\n    translate([0,0,62])\n    cylinder(h=5, r=32, $fn=64);\n    \n    // Rubber gasket detail\n    translate([0,0,64])\n    cylinder(h=2, r=30, $fn=64);\n}\n\nmodule blending_jar() {\n    // Main jar body - tapered\n    translate([0,0,67])\n    cylinder(h=50, r1=30, r2=25, $fn=64);\n    \n    // Measurement markings (subtracted)\n    for(i=[1:4]) {\n        translate([0,0,67 + i*10])\n        rotate([0,0,0])\n        translate([28,0,0])\n        cube([4,0.5,2], center=true);\n    }\n}\n\nmodule jar_lid() {\n    // Lid top\n    translate([0,0,119])\n    cylinder(h=3, r=27, $fn=64);\n    \n    // Lid handle\n    translate([0,0,122])\n    cylinder(h=8, r=8, $fn=32);\n    \n    // Handle grip\n    difference() {\n        translate([0,0,126])\n        cylinder(h=4, r=8, $fn=32);\n        \n        translate([0,0,126])\n        cylinder(h=4, r=4, $fn=32);\n    }\n}\n\nmodule blade_assembly() {\n    // Blade base\n    translate([0,0,67])\n    cylinder(h=8, r=15, $fn=32);\n    \n    // Blades (simplified crossed blades)\n    for(i=[0:1]) {\n        rotate([0,0,i*90])\n        translate([0,0,71])\n        cube([25,2,0.5], center=true);\n    }\n}\n\nmodule power_cord() {\n    // Cord exit point\n    translate([-38,0,5])\n    rotate([90,0,0])\n    cylinder(h=15, r=3, $fn=16);\n    \n    // Cord strain relief\n    translate([-38,0,5])\n    rotate([90,0,0])\n    cylinder(h=5, r=4, $fn=16);\n}\n\n// Main assembly\nunion() {\n    // Base structure\n    difference() {\n        union() {\n            main_body();\n            motor_housing();\n        }\n        \n        // Ventilation holes\n        for(i=[0:7]) {\n            rotate([0,0,i*45])\n            translate([30,0,2])\n            cube([15,3.5,9], center=true);\n        }\n    }\n    \n    // Control elements\n    control_panel();\n    \n    // Jar mounting\n    jar_base();\n    \n    // Jar and contents\n    blending_jar();\n    \n    // Lid assembly\n    jar_lid();\n    \n    // Internal blade assembly\n    blade_assembly();\n    \n    // Power cord detail\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "mixjet",
    "openscad_code": "// MixJet Kitchen Appliance - Realistic Medium Complexity\n// Overall dimensions: 90mm x 70mm x 160mm\n\n$fn = 36;\n\n// Main body module\nmodule main_body() {\n    // Base cylinder\n    difference() {\n        cylinder(h = 120, d1 = 80, d2 = 70);\n        // Hollow interior\n        translate([0, 0, 5])\n            cylinder(h = 115, d1 = 76, d2 = 66);\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel base\n    translate([0, 40, 120])\n        rotate([90, 0, 0])\n            difference() {\n                cube([40, 20, 2], center = true);\n                translate([0, 0, -1])\n                    cube([38, 18, 4], center = true);\n            }\n    \n    // Power button\n    translate([-15, 40, 121])\n        rotate([90, 0, 0])\n            cylinder(h = 3, r = 4);\n    \n    // Speed dial\n    translate([15, 40, 121])\n        rotate([90, 0, 0])\n            cylinder(h = 4, r = 6);\n    \n    // Indicator lights\n    for(i = [-1:1]) {\n        translate([i * 8, 40, 122])\n            sphere(r = 1.5);\n    }\n}\n\n// Handle module\nmodule handle() {\n    translate([0, 30, 90])\n        rotate([90, 0, 0])\n            difference() {\n                // Handle grip\n                cylinder(h = 50, r = 8);\n                // Hollow grip\n                translate([0, 0, 2])\n                    cylinder(h = 46, r = 6);\n            }\n    \n    // Handle supports\n    for(y = [0, 50]) {\n        translate([0, 30, 90 - y])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r1 = 8, r2 = 5);\n    }\n}\n\n// Blade assembly module\nmodule blade_assembly() {\n    // Blade hub\n    translate([0, 0, 5])\n        cylinder(h = 10, r = 20);\n    \n    // Blades (4 blades)\n    for(a = [0:90:270]) {\n        rotate([0, 0, a])\n            translate([10, 0, 10])\n                cube([25, 3, 1], center = true);\n    }\n}\n\n// Jar module\nmodule jar() {\n    // Jar body\n    difference() {\n        translate([0, 0, 120])\n            cylinder(h = 80, d1 = 60, d2 = 65);\n        // Jar interior\n        translate([0, 0, 125])\n            cylinder(h = 75, d1 = 56, d2 = 61);\n    }\n    \n    // Jar lid\n    translate([0, 0, 200])\n        difference() {\n            cylinder(h = 10, r = 34);\n            translate([0, 0, 2])\n                cylinder(h = 8, r = 32);\n        }\n    \n    // Lid handle\n    translate([0, 0, 210])\n        cylinder(h = 15, r = 5);\n}\n\n// Ventilation slots\nmodule vents() {\n    for(z = [20:20:100]) {\n        translate([40, 0, z])\n            rotate([0, 90, 0])\n                cube([15, 2, 5]);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-35, -35, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 50, r = 4);\n}\n\n// Assemble the complete MixJet\nunion() {\n    main_body();\n    control_panel();\n    handle();\n    blade_assembly();\n    jar();\n    vents();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicepilot",
    "openscad_code": "// JuicePilot Kitchen Juicer - Realistic Style, Medium Complexity\n// Approximate dimensions: 100mm width x 120mm depth x 150mm height\n\n// Main body module\nmodule juice_body() {\n    difference() {\n        // Main housing - slightly tapered\n        hull() {\n            translate([0, 0, 5]) cube([90, 70, 80], center=true);\n            translate([0, 0, 45]) cube([85, 65, 70], center=true);\n        }\n        \n        // Front display recess\n        translate([0, 36, 25]) cube([40, 5, 20], center=true);\n        \n        // Rear ventilation slots\n        for(i = [-30:10:30]) {\n            translate([i, -36, 30]) cube([3, 3, 25]);\n        }\n    }\n}\n\n// Motor base with feet\nmodule motor_base() {\n    union() {\n        // Base platform\n        translate([0, 0, -5]) cube([95, 75, 10], center=true);\n        \n        // Rubber feet - 4 corners\n        for(x = [-35, 35])\n        for(y = [-25, 25]) {\n            translate([x, y, -10]) cylinder(h=5, r=4, $fn=16);\n        }\n    }\n}\n\n// Juice container with handle\nmodule juice_container() {\n    difference() {\n        // Main container\n        translate([0, 0, 60]) cylinder(h=50, r1=25, r2=30, $fn=32);\n        \n        // Inner cavity\n        translate([0, 0, 60]) cylinder(h=48, r1=23, r2=28, $fn=32);\n    }\n    \n    // Handle\n    translate([35, 0, 85]) rotate([90, 0, 0]) \n        difference() {\n            cylinder(h=40, r=8, $fn=16);\n            cylinder(h=42, r=5, $fn=16);\n        }\n}\n\n// Feeding chute\nmodule feeding_chute() {\n    difference() {\n        // Chute tube\n        translate([0, 0, 110]) cylinder(h=30, r=15, $fn=32);\n        \n        // Inner hole\n        translate([0, 0, 110]) cylinder(h=32, r=12, $fn=32);\n    }\n    \n    // Feed tray\n    translate([0, 20, 110]) cube([30, 15, 2], center=true);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, 38, 25]) {\n        // Panel surface\n        cube([35, 2, 15], center=true);\n        \n        // Power button\n        translate([-12, 1, 0]) cylinder(h=3, r=4, $fn=16);\n        \n        // Speed dial\n        translate([12, 1, 0]) cylinder(h=4, r=5, $fn=32);\n        \n        // LED indicator\n        translate([0, 1, 5]) sphere(r=2, $fn=16);\n    }\n}\n\n// Pulp container drawer\nmodule pulp_container() {\n    // Drawer front\n    translate([0, -20, 10]) cube([60, 5, 40], center=true);\n    \n    // Handle\n    translate([0, -22, 10]) cube([20, 3, 5], center=true);\n}\n\n// Blade assembly\nmodule blade_assembly() {\n    // Central shaft\n    translate([0, 0, 55]) cylinder(h=10, r=5, $fn=16);\n    \n    // Blades - 4-arm cutter\n    for(i = [0:90:270]) {\n        rotate([0, 0, i]) {\n            translate([15, 0, 60]) cube([30, 2, 1], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Base structure\n    motor_base();\n    juice_body();\n    \n    // Functional parts\n    juice_container();\n    feeding_chute();\n    blade_assembly();\n    \n    // Controls\n    control_panel();\n    \n    // Storage\n    pulp_container();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "whirlslice",
    "openscad_code": "// WhirlSlice - medium-complexity kitchen appliance\n// Overall footprint ~95 mm x 70 mm x 120 mm, wall 2 mm\n\n$fn = 40;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer block\n        translate([0, 0, 60]) cube([95, 70, 120], center = true);\n        // Hollow cavity (2 mm walls)\n        translate([0, 0, 60]) cube([91, 66, 116], center = true);\n    }\n}\n\n// Front control panel\nmodule control_panel() {\n    translate([47.5, 0, 110]) cube([6, 30, 20], center = true);\n}\n\n// Rotary dial\nmodule dial() {\n    translate([50, 0, 110]) rotate([90, 0, 0]) \n        cylinder(h = 4, r1 = 8, r2 = 6);\n    for (i = [0:15:345])\n        rotate([0, 0, i])\n            translate([50, 6, 110])\n                cube([1, 2, 1], center = true);\n}\n\n// Start button\nmodule start_button() {\n    translate([50, 15, 100]) cylinder(h = 3, r = 4);\n}\n\n// Whirl chamber â€“ transparent in print, shown as shell\nmodule whirl_chamber() {\n    difference() {\n        // Outer cylinder\n        translate([0, 0, 75]) cylinder(h = 70, r = 30);\n        // Inner cavity\n        translate([0, 0, 77]) cylinder(h = 66, r = 28);\n    }\n}\n\n// Feed tube\nmodule feed_tube() {\n    translate([0, 0, 125]) cylinder(h = 20, r1 = 20, r2 = 15);\n}\n\n// Blades (swept propeller shape, printable without support)\nmodule blades() {\n    for (a = [0:120:240]) {\n        rotate([0, 0, a])\n            translate([0, 0, 75])\n                rotate([90, 0, 0])\n                    linear_extrude(height = 2, center = true, twist = 45)\n                        square([25, 6], center = true);\n    }\n}\n\n// Motor housing base\nmodule base_housing() {\n    translate([0, 0, 15]) cube([95, 70, 30], center = true);\n}\n\n// Rubber feet\nmodule feet() {\n    for (x = [-35, 35], y = [-25, 25]) {\n        translate([x, y, 0]) cylinder(h = 3, r = 5);\n    }\n}\n\n// Assembly\nunion() {\n    body_shell();\n    control_panel();\n    dial();\n    start_button();\n    whirl_chamber();\n    feed_tube();\n    blades();\n    base_housing();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendlogic",
    "openscad_code": "// BlendLogic medium-complexity kitchen blender\n// Overall height â‰ˆ 130 mm, footprint â‰ˆ 90 mm x 90 mm\n// Wall thickness 2 mm throughout for reliable 3-D printing\n\n$fn = 36;\n\n// Main assembly\nmodule blendLogic_blender() {\n    union() {\n        base();\n        jar();\n    }\n}\n\n// Motor base with controls\nmodule base() {\n    difference() {\n        // Main housing\n        translate([0, 0, 25])\n            cube([90, 90, 50], center = true);\n\n        // Hollow cavity\n        translate([0, 0, 26])\n            cube([86, 86, 46], center = true);\n\n        // Power cord recess\n        translate([0, -47, 25])\n            cube([20, 4, 10], center = true);\n    }\n\n    // Rubber feet\n    for (dx = [-35, 35])\n        for (dy = [-35, 35])\n            translate([dx, dy, -2])\n                cylinder(h = 4, r = 5);\n\n    // Control panel face\n    translate([-47, 0, 50])\n        rotate([0, 90, 0])\n        difference() {\n            cylinder(h = 30, r = 20);\n            translate([0, 0, -1])\n                cylinder(h = 32, r = 18);\n        }\n\n    // Buttons\n    for (i = [0:2])\n        translate([-47, -8 + i * 8, 40 + i * 5])\n            rotate([0, 90, 0])\n            cylinder(h = 4, r = 4);\n\n    // Rotary dial\n    translate([-47, 0, 65])\n        rotate([0, 90, 0])\n        difference() {\n            cylinder(h = 6, r = 8);\n            translate([0, 0, -1])\n                cylinder(h = 8, r = 5);\n        }\n}\n\n// Blending jar\nmodule jar() {\n    difference() {\n        // Outer jar shell\n        cylinder(h = 70, r1 = 35, r2 = 40);\n\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 68, r1 = 33, r2 = 38);\n    }\n\n    // Lid\n    translate([0, 0, 72])\n        difference() {\n            cylinder(h = 10, r = 40);\n            translate([0, 0, 2])\n                cylinder(h = 10, r = 38);\n        }\n\n    // Lid handle\n    translate([0, 0, 80])\n        cylinder(h = 5, r = 15);\n    translate([0, 0, 82.5])\n        sphere(r = 8);\n\n    // Handle\n    difference() {\n        union() {\n            translate([40, 0, 35])\n                rotate([90, 0, 0])\n                cylinder(h = 30, r = 7);\n            translate([40, 0, 20])\n                sphere(r = 7);\n            translate([40, 0, 50])\n                sphere(r = 7);\n        }\n        // Hollow handle grip\n        translate([40, 0, 35])\n            rotate([90, 0, 0])\n            cylinder(h = 30, r = 5);\n    }\n\n    // Blade assembly\n    translate([0, 0, -2])\n        union() {\n            cylinder(h = 8, r = 15);\n            for (a = [0:120:359])\n                rotate([0, 0, a])\n                translate([10, 0, 4])\n                    cube([20, 2, 4], center = true);\n        }\n}\n\nblendLogic_blender();",
    "renders": true
  },
  {
    "kitchen_appliance": "mixchef",
    "openscad_code": "// MixChef Kitchen Appliance - Realistic Style (Medium Complexity)\n\n// Overall dimensions (mm)\nbase_w = 80; base_d = 60; base_h = 50;\njar_h = 45; jar_r = 25;\nmotor_h = 35; motor_r = 30;\n\n// Wall thickness\nwall = 2;\n\n// Base module\nmodule base() {\n    difference() {\n        // Main base body\n        cube([base_w, base_d, base_h], center=true);\n        \n        // Hollow cavity\n        translate([0, 0, wall/2])\n            cube([base_w - 2*wall, base_d - 2*wall, base_h - wall], center=true);\n        \n        // Bottom opening\n        translate([0, 0, -base_h/2])\n            cube([base_w - 2*wall, base_d - 2*wall, wall], center=true);\n    }\n    \n    // Rubber feet\n    for(i = [-1:1:1]) {\n        for(j = [-1:1:1]) {\n            translate([i*base_w/3, j*base_d/3, -base_h/2 + 1])\n                cylinder(h=2, r=4, center=true);\n        }\n    }\n}\n\n// Motor housing\nmodule motor_housing() {\n    difference() {\n        // Main motor body\n        cylinder(h=motor_h, r=motor_r, center=true);\n        \n        // Top cavity for coupling\n        translate([0, 0, motor_h/3])\n            cylinder(h=motor_h/2, r=10, center=true);\n    }\n    \n    // Ventilation slots\n    for(angle = [0:30:330]) {\n        rotate([0, 0, angle])\n            translate([motor_r - 1, 0, motor_h/4])\n                cube([2, 4, motor_h/2], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([motor_r + 5, 0, motor_h/2 - 5]) {\n        // Panel base\n        cube([15, 30, 8], center=true);\n        \n        // Speed dial\n        translate([0, -8, 5])\n            cylinder(h=3, r=5, center=true);\n        \n        // Buttons\n        for(pos = [0, 10]) {\n            translate([0, pos, 5])\n                cube([8, 6, 2], center=true);\n        }\n    }\n}\n\n// Jar assembly\nmodule jar() {\n    difference() {\n        // Main jar body\n        cylinder(h=jar_h, r=jar_r, center=true);\n        \n        // Hollow interior\n        translate([0, 0, -wall/2])\n            cylinder(h=jar_h - wall, r=jar_r - wall, center=true);\n    }\n    \n    // Handle\n    translate([jar_r + 3, 0, 0]) {\n        difference() {\n            cylinder(h=jar_h - 10, r=6, center=true);\n            cylinder(h=jar_h - 10, r=4, center=true);\n        }\n    }\n    \n    // Lid\n    translate([0, 0, jar_h/2 + 3]) {\n        difference() {\n            cylinder(h=6, r=jar_r, center=true);\n            cylinder(h=6, r=jar_r - wall, center=true);\n        }\n        \n        // Lid handle\n        translate([0, 0, 4])\n            cylinder(h=8, r=8, center=true);\n    }\n}\n\n// Blades assembly\nmodule blades() {\n    // Blade hub\n    cylinder(h=8, r=8, center=true);\n    \n    // Blades (4 arms)\n    for(angle = [0:90:270]) {\n        rotate([0, 0, angle]) {\n            translate([0, 12, 0])\n                cube([2, 24, 1], center=true);\n        }\n    }\n}\n\n// Assembly\ntranslate([0, 0, base_h/2])\n    base();\n\ntranslate([0, 0, base_h + motor_h/2])\n    motor_housing();\n\ntranslate([motor_r + 12, 0, base_h + motor_h/2])\n    control_panel();\n\ntranslate([0, 0, base_h + motor_h + jar_h/2])\n    jar();\n\ntranslate([0, 0, base_h + motor_h - 5])\n    blades();",
    "renders": true
  },
  {
    "kitchen_appliance": "juicezone",
    "openscad_code": "// JuiceZone Blender-style kitchen appliance â€“ roughly 110 mm tall, 80 mm Ã˜\n// All wall thickness 2 mm, no overhangs >45Â°, safe for FDM printing\n\n$fn = 36;\n\n// Overall scale factor â€“ tweak this to resize the whole model\nscale_factor = 1;\n\nmodule juicezone() {\n    scale([scale_factor, scale_factor, scale_factor]) {\n\n        // Central motor base (hollow cylinder)\n        difference() {\n            cylinder(h = 45, d = 80);\n            translate([0, 0, 2])\n                cylinder(h = 43, d = 76);\n        }\n\n        // Bottom rubber feet\n        for (a = [0, 120, 240]) {\n            rotate([0, 0, a])\n                translate([29, 0, -1])\n                    cylinder(h = 3, d = 8);\n        }\n\n        // Front control panel\n        translate([-40, 33, 20]) {\n            // Panel face\n            cube([80, 6, 15]);\n\n            // Circular power button\n            translate([20, 3, 7])\n                cylinder(h = 2, d = 8);\n\n            // Speed dial (knob)\n            translate([50, 3, 7])\n                rotate([90, 0, 0])\n                    cylinder(h = 8, d1 = 10, d2 = 8);\n        }\n\n        // Jar base collar (where jar sits)\n        translate([0, 0, 45])\n            difference() {\n                cylinder(h = 8, d = 58);\n                translate([0, 0, 2])\n                    cylinder(h = 8, d = 54);\n            }\n\n        // Jar body (clear container)\n        translate([0, 0, 45 + 8]) {\n            difference() {\n                cylinder(h = 50, d = 70);\n                translate([0, 0, 2])\n                    cylinder(h = 48, d = 66);\n            }\n        }\n\n        // Jar handle (hollow tube)\n        translate([35, 0, 45 + 8 + 25]) {\n            difference() {\n                rotate([90, 0, 0])\n                    cylinder(h = 50, d = 20);\n                rotate([90, 0, 0])\n                    translate([0, 0, 2])\n                        cylinder(h = 50, d = 16);\n            }\n        }\n\n        // Lid (top cap)\n        translate([0, 0, 45 + 8 + 50]) {\n            difference() {\n                cylinder(h = 6, d = 70);\n                translate([0, 0, 2])\n                    cylinder(h = 6, d = 66);\n            }\n\n            // Lid grip\n            translate([0, 25, 3])\n                cube([40, 10, 2], center = true);\n        }\n\n        // Side cooling vents (slots)\n        for (z = [10 : 8 : 38]) {\n            rotate([0, 0, 90])\n                translate([0, 40.5, z])\n                    cube([20, 1.5, 5]);\n        }\n    }\n}\n\njuicezone();",
    "renders": true
  },
  {
    "kitchen_appliance": "chopflow",
    "openscad_code": "// Chopflow kitchen appliance â€“ medium complexity, realistic style, 3D-printable\n\n// Overall size: 120 mm Ã— 110 mm Ã— 140 mm\n$fn = 36;\n\n// Wall thickness constant\nwall = 2;\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Exterior rounded box\n        minkowski() {\n            cube([90, 100, 110], center = true);\n            sphere(wall);\n        }\n        // Hollow cavity\n        minkowski() {\n            cube([90 - 2*wall, 100 - 2*wall, 110 - 2*wall], center = true);\n            sphere(0.1);\n        }\n    }\n}\n\n// Glass bowl container\nmodule bowl() {\n    difference() {\n        translate([0, 0, 30])\n            cylinder(h = 60, r1 = 42, r2 = 40);\n        translate([0, 0, 30 + wall])\n            cylinder(h = 60, r1 = 42 - wall, r2 = 40 - wall);\n    }\n}\n\n// Locking tabs around bowl rim\nmodule tabs() {\n    for (a = [0:120:359]) {\n        rotate([0, 0, a])\n            translate([0, 45, 60 + 30])\n                cube([15, wall, 6], center = true);\n    }\n}\n\n// Motor base top plate with pusher tube\nmodule topPlate() {\n    difference() {\n        union() {\n            translate([0, 0, 55])\n                cube([92, 102, 6], center = true);\n            // Pusher feed tube\n            translate([0, 0, 55 + 3 + 25])\n                cylinder(h = 50, r1 = 20, r2 = 18);\n        }\n        // Central hole for bowl shaft\n        translate([0, 0, 55])\n            cylinder(h = 7, r = 10);\n        // Feed tube hole\n        translate([0, 0, 55 + 3 + 25])\n            cylinder(h = 51, r = 14);\n    }\n}\n\n// Control panel with dial and buttons\nmodule controlPanel() {\n    translate([0, -55, 30]) {\n        difference() {\n            cube([60, 8, 40], center = true);\n            translate([0, 4, 0])\n                cube([58, 8, 38], center = true);\n        }\n        // Dial\n        translate([-20, -4, 0])\n            rotate([90, 0, 0])\n                cylinder(h = 6, r = 8);\n        translate([-20, -8, 0])\n            rotate([90, 0, 0])\n                cylinder(h = 3, r = 2);\n        // Buttons\n        for (x = [10:15:40]) {\n            translate([x, -4, 8])\n                cube([8, 4, 4], center = true);\n        }\n    }\n}\n\n// Ventilation slots on rear\nmodule vents() {\n    for (h = [-40:10:40]) {\n        translate([0, 51, h])\n            cube([80, wall, 5], center = true);\n    }\n}\n\n// Feet\nmodule feet() {\n    for (x = [-35, 35])\n        for (y = [-40, 40])\n            translate([x, y, -55])\n                cylinder(h = 6, r = 6);\n}\n\n// Assembly\nunion() {\n    body();\n    bowl();\n    tabs();\n    topPlate();\n    controlPanel();\n    vents();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "blendpulse",
    "openscad_code": "// BlendPulse Kitchen Blender - Realistic Medium Complexity\n// Total height: 140mm, base footprint: 60x60mm\n\n$fn = 32;\n\n// Main module\nmodule blendpulse() {\n    // Base motor housing\n    union() {\n        // Main base cylinder\n        difference() {\n            cylinder(h = 50, d = 60, center = true);\n            translate([0, 0, -25])\n                cylinder(h = 52, d = 56, center = true);\n        }\n        \n        // Base bottom plate\n        translate([0, 0, -25])\n            cylinder(h = 2, d = 62);\n            \n        // Rubber feet\n        for(i = [0:3]) {\n            rotate([0, 0, i * 90])\n                translate([23, 0, -26])\n                    cylinder(h = 3, d = 8);\n        }\n    }\n    \n    // Control panel\n    translate([30, 0, -10])\n        rotate([0, 90, 0])\n        difference() {\n            cube([30, 20, 8], center = true);\n            translate([0, 0, 4.5])\n                cube([28, 18, 2], center = true);\n        }\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([36, -8 + i * 8, -10])\n            cube([6, 4, 2]);\n    }\n    \n    // Speed dial\n    translate([36, 0, 0])\n        cylinder(h = 5, d = 12);\n    \n    // Motor shaft housing\n    translate([0, 0, 25])\n        cylinder(h = 15, d = 25);\n    \n    // Glass jar base\n    translate([0, 0, 40]) {\n        difference() {\n            cylinder(h = 5, d = 50);\n            translate([0, 0, -0.5])\n                cylinder(h = 6, d = 46);\n        }\n        \n        // Jar body\n        translate([0, 0, 30])\n            cylinder(h = 60, d1 = 48, d2 = 52);\n            \n        // Handle\n        translate([30, 0, 30])\n            difference() {\n                rotate([90, 0, 0])\n                    cylinder(h = 50, d = 15);\n                translate([10, 0, 0])\n                    cube([20, 40, 15], center = true);\n            }\n            \n        // Jar lid\n        translate([0, 0, 70]) {\n            difference() {\n                cylinder(h = 8, d = 54);\n                translate([0, 0, -0.5])\n                    cylinder(h = 9, d = 50);\n            }\n            \n            // Pour spout\n            translate([20, 0, 4])\n                rotate([0, 90, 0])\n                cylinder(h = 15, d1 = 12, d2 = 8);\n                \n            // Lid handle\n            translate([0, 0, 10])\n                cylinder(h = 10, d = 8);\n        }\n    }\n    \n    // Blades inside jar\n    translate([0, 0, 45]) {\n        for(i = [0:1]) {\n            rotate([0, 0, i * 180])\n                cube([35, 2, 1], center = true);\n        }\n        for(i = [0:1]) {\n            rotate([0, 0, 90 + i * 180])\n                cube([30, 2, 1], center = true);\n        }\n    }\n    \n    // Power cord\n    translate([-30, 0, -25])\n        rotate([90, 0, 0])\n        cylinder(h = 40, d = 5);\n}\n\nblendpulse();",
    "renders": true
  },
  {
    "kitchen_appliance": "juicemaster",
    "openscad_code": "// Juicemaster 3000 - Realistic Style, Medium Complexity\n// Overall dimensions: ~100mm x 80mm x 120mm\n\n$fn = 32;\n\nmodule body() {\n    difference() {\n        // Main body\n        translate([0, 0, 50]) cube([80, 60, 100], center = true);\n        \n        // Top funnel hole\n        translate([0, 0, 100]) cylinder(h = 5, r = 25);\n        \n        // Front button holes\n        translate([-20, 31, 70]) cylinder(h = 5, r = 6);\n        translate([0, 31, 70]) cylinder(h = 5, r = 6);\n        translate([20, 31, 70]) cylinder(h = 5, r = 6);\n    }\n}\n\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, 0]) cube([90, 70, 10], center = true);\n        \n        // Ventilation slots\n        for (i = [-30:15:30]) {\n            translate([i, 0, 5]) cube([10, 65, 5], center = true);\n        }\n    }\n}\n\nmodule juice_jug() {\n    difference() {\n        // Jug body\n        translate([0, -45, 40]) cube([40, 30, 50], center = true);\n        \n        // Hollow interior\n        translate([0, -45, 45]) cube([36, 26, 45], center = true);\n        \n        // Spout\n        translate([0, -60, 55]) rotate([0, 0, 45]) cube([20, 5, 5], center = true);\n    }\n    \n    // Handle\n    translate([20, -45, 55]) difference() {\n        cylinder(h = 30, r = 5);\n        cylinder(h = 30, r = 3);\n    }\n}\n\nmodule pulp_container() {\n    difference() {\n        // Container body\n        translate([0, 45, 40]) cube([60, 25, 50], center = true);\n        \n        // Hollow interior\n        translate([0, 45, 45]) cube([56, 21, 45], center = true);\n    }\n}\n\nmodule funnel() {\n    difference() {\n        // Outer cone\n        cylinder(h1 = 30, h2 = 0, r1 = 30, r2 = 5);\n        \n        // Inner cone\n        translate([0, 0, 2]) cylinder(h1 = 28, h2 = 0, r1 = 28, r2 = 3);\n    }\n}\n\nmodule buttons() {\n    // Power button\n    translate([-20, 32, 70]) cylinder(h = 6, r = 5);\n    \n    // Speed buttons\n    translate([0, 32, 70]) cylinder(h = 6, r = 5);\n    translate([20, 32, 70]) cylinder(h = 6, r = 5);\n}\n\nmodule control_panel() {\n    // Display area\n    translate([0, 30, 85]) cube([50, 2, 20], center = true);\n}\n\nmodule motor_housing() {\n    // Rear motor bulge\n    translate([0, 0, 50]) cube([70, 50, 80], center = true);\n}\n\n// Assembly\nunion() {\n    // Main components\n    body();\n    base();\n    motor_housing();\n    \n    // Containers\n    juice_jug();\n    pulp_container();\n    \n    // Top funnel\n    translate([0, 0, 115]) funnel();\n    \n    // Controls\n    buttons();\n    control_panel();\n    \n    // Feet\n    for (x = [-35, 35]) {\n        for (y = [-25, 25]) {\n            translate([x, y, -5]) cylinder(h = 10, r = 5);\n        }\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "turbocraft",
    "openscad_code": "// TurboCraft Kitchen Blender\n// Medium complexity 3D printable model\n// Overall dimensions: 110mm x 110mm x 190mm\n\n$fn = 36;\n\nmodule base() {\n    // Main cylindrical base housing motor\n    difference() {\n        cylinder(h = 60, d = 90);\n        // Motor ventilation holes\n        for(i = [0:45:315]) {\n            rotate([0, 0, i])\n                translate([35, 0, 30])\n                    cube([5, 2, 25], center = true);\n        }\n    }\n    \n    // Rubber feet (4 corners)\n    for(x = [-35, 35])\n        for(y = [-35, 35]) {\n            translate([x, y, -3])\n                cylinder(h = 3, d = 12);\n        }\n}\n\nmodule control_panel() {\n    // Control panel housing\n    translate([0, 45, 60])\n        rotate([90, 0, 0])\n            difference() {\n                cube([60, 25, 20], center = true);\n                translate([0, 0, 10])\n                    cube([56, 21, 20], center = true);\n            }\n    \n    // Power button\n    translate([-20, 45, 75])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 8, d = 12);\n                translate([0, 0, 4])\n                    cylinder(h = 8, d = 8);\n            }\n    \n    // Speed dial\n    translate([20, 45, 75])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 5, d = 20);\n                translate([0, 0, 2.5])\n                    cylinder(h = 5, d = 16);\n            }\n    \n    // Speed indicator marks\n    for(i = [-45:30:45]) {\n        translate([20, 45 + 10 * sin(i), 80])\n            cube([1, 3, 2]);\n    }\n}\n\nmodule jar_base() {\n    // Jar coupling mechanism\n    difference() {\n        cylinder(h = 20, d = 70);\n        translate([0, 0, 5])\n            cylinder(h = 15, d = 60);\n    }\n    \n    // Drive socket\n    translate([0, 0, 10])\n        cylinder(h = 10, d = 20);\n    for(i = [0:60:300]) {\n        rotate([0, 0, i])\n            translate([10, 0, 10])\n                cube([4, 8, 10], center = true);\n    }\n}\n\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h = 80, d = 90, center = false);\n        translate([0, 0, 5])\n            cylinder(h = 70, d = 86);\n    }\n    \n    // Jar handle\n    difference() {\n        translate([45, 0, 40])\n            rotate([90, 0, 0])\n                difference() {\n                    cylinder(h = 60, d = 20);\n                    translate([0, 0, 5])\n                        cylinder(h = 50, d = 14);\n                };\n        // Handle grip cutouts\n        for(z = [15:15:45]) {\n            translate([45, 0, z])\n                rotate([90, 0, 0])\n                    cube([20, 10, 3], center = true);\n        }\n    }\n    \n    // Measurement markings\n    for(h = [10:10:60]) {\n        translate([-43, 0, h])\n            cube([5, 1, 0.5]);\n    }\n}\n\nmodule lid() {\n    // Main lid\n    difference() {\n        cylinder(h = 5, d = 92);\n        translate([0, 0, 2])\n            cylinder(h = 5, d = 88);\n    }\n    \n    // Lid handle\n    translate([0, 0, 5])\n        cylinder(h = 15, d1 = 30, d2 = 20);\n    \n    // Pour spout\n    translate([-35, 0, 5])\n        rotate([0, -30, 0])\n            difference() {\n                cube([30, 20, 15]);\n                translate([0, 0, 7.5])\n                    cube([32, 22, 10], center = true);\n            }\n}\n\nmodule blades() {\n    // Blade assembly base\n    translate([0, 0, 100])\n        cylinder(h = 5, d = 25);\n    \n    // 4-blade configuration\n    for(i = [0:90:270]) {\n        rotate([0, 0, i])\n            translate([0, 0, 100])\n                cube([30, 2, 5], center = true);\n    }\n    \n    // Central shaft\n    translate([0, 0, 100])\n        cylinder(h = 20, d = 8);\n}\n\n// Main assembly\nunion() {\n    base();\n    control_panel();\n    jar_base();\n    \n    translate([0, 0, 80])\n        jar();\n    \n    translate([0, 0, 160])\n        lid();\n    \n    blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "grill",
    "openscad_code": "// Grill Kitchen Appliance - Medium Complexity Realistic Style\n// Compact countertop grill (approx 80x50x40mm)\n\n// Overall dimensions\ngrill_width = 80;\ngrill_depth = 50;\ngrill_height = 40;\n\n// Material thickness\nwall = 2;\n\nmodule base() {\n    // Main body - hollow box with rounded edges\n    difference() {\n        // Outer shell\n        minkowski() {\n            cube([grill_width, grill_depth, grill_height - 10], center=true);\n            sphere(3);\n        }\n        \n        // Inner cavity\n        minkowski() {\n            cube([grill_width - wall*2, grill_depth - wall*2, grill_height - 10 - wall], center=true);\n            sphere(2);\n        }\n    }\n    \n    // Rubber feet\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x * (grill_width/2 - 8), y * (grill_depth/2 - 8), -grill_height/2 + 2]) {\n                cylinder(h=2, r=4, $fn=16);\n            }\n        }\n    }\n}\n\nmodule lid() {\n    // Hinged lid\n    translate([0, 0, grill_height/2 - 5]) {\n        rotate([60, 0, 0]) {\n            difference() {\n                // Outer lid shell\n                minkowski() {\n                    cube([grill_width - 4, grill_depth - 4, 8], center=true);\n                    sphere(2);\n                }\n                \n                // Inner cavity\n                minkowski() {\n                    cube([grill_width - 8, grill_depth - 8, 6], center=true);\n                    sphere(1);\n                }\n            }\n            \n            // Handle\n            translate([0, grill_depth/2 - 8, 5]) {\n                difference() {\n                    cube([20, 8, 6], center=true);\n                    translate([0, 0, 2]) cube([18, 6, 4], center=true);\n                }\n            }\n            \n            // Vent holes\n            for(i = [-2:2]) {\n                translate([i * 10, 0, 4]) {\n                    cylinder(h=10, r=2, center=true, $fn=12);\n                }\n            }\n        }\n    }\n}\n\nmodule grill_plates() {\n    // Bottom grill plate\n    translate([0, 0, -grill_height/2 + 10]) {\n        difference() {\n            cube([grill_width - 12, grill_depth - 12, 4], center=true);\n            // Grill ridges\n            for(i = [-4:4]) {\n                translate([i * 8, 0, 2]) {\n                    cube([3, grill_depth - 14, 2], center=true);\n                }\n            }\n        }\n    }\n    \n    // Top grill plate (on lid)\n    translate([0, 0, grill_height/2 - 2]) {\n        rotate([60, 0, 0]) {\n            difference() {\n                cube([grill_width - 16, grill_depth - 16, 3], center=true);\n                // Matching ridges\n                for(i = [-3:3]) {\n                    translate([i * 9, 0, -1.5]) {\n                        cube([3, grill_depth - 18, 3], center=true);\n                    }\n                }\n            }\n        }\n    }\n}\n\nmodule controls() {\n    // Control panel\n    translate([grill_width/2 - 10, 0, -grill_height/2 + 15]) {\n        difference() {\n            cube([12, grill_depth - 10, 8], center=true);\n            translate([0, -grill_depth/4, 2]) {\n                rotate([90, 0, 0]) {\n                    cylinder(h=6, r=4, $fn=16);\n                }\n            }\n            translate([0, grill_depth/4, 2]) {\n                rotate([90, 0, 0]) {\n                    cylinder(h=6, r=3, $fn=16);\n                }\n            }\n        }\n        \n        // LED indicator\n        translate([0, -grill_depth/4, 5]) {\n            sphere(2, $fn=12);\n        }\n        \n        // Temperature dial\n        translate([0, grill_depth/4, 5]) {\n            cube([6, 1, 4], center=true);\n        }\n    }\n}\n\nmodule power_cord() {\n    // Power cord entry point\n    translate([-grill_width/2 + 6, 0, -grill_height/2 + 10]) {\n        difference() {\n            cylinder(h=8, r=5, center=true, $fn=12);\n            cylinder(h=10, r=3, center=true, $fn=12);\n        }\n        \n        // Strain relief\n        translate([-4, 0, 0]) {\n            rotate([0, 90, 0]) {\n                cylinder(h=15, r=3, $fn=12);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    lid();\n    grill_plates();\n    controls();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "fryer",
    "openscad_code": "// Counter-top electric fryer\n// Overall footprint ~ 90 mm Ã— 70 mm Ã— 110 mm\n\n$fa = 2;\n$fs = 0.5;\n\n// ---------- Parameters ----------\nwall = 2;              // 2 mm printable shell thickness\nbody_w = 90;\nbody_d = 70;\nbody_h = 70;\n\n// ---------- Main body (2 mm walls) ----------\nmodule fryer_body() {\n    difference() {\n        // outer shell\n        cube([body_w, body_d, body_h], center = true);\n        // hollow inside\n        translate([0, 0, wall])\n            cube([body_w - 2*wall, body_d - 2*wall, body_h - wall], center = true);\n    }\n}\n\n// ---------- Front control panel ----------\nmodule control_panel() {\n    translate([0, body_d/2 + wall/2, body_h/2 - 10])\n        cube([60, wall, 20], center = true);\n}\n\n// ---------- Dial / knob ----------\nmodule knob() {\n    translate([-20, body_d/2 + wall + 3, body_h/2 - 5])\n        rotate([90, 0, 0])\n            cylinder(h = 8, r1 = 5, r2 = 4);\n}\n\n// ---------- ON/OFF button ----------\nmodule button() {\n    translate([20, body_d/2 + wall + 1, body_h/2 - 5])\n        cube([8, 2, 6], center = true);\n}\n\n// ---------- Lid ----------\nmodule lid() {\n    translate([0, 0, body_h/2 + 1])\n        difference() {\n            cube([body_w - 4, body_d - 4, 3], center = true);\n            // handle cut-out\n            translate([0, 0, -1])\n                cube([body_w - 20, body_d - 20, 5], center = true);\n        }\n    // lid handle bar\n    translate([0, 0, body_h/2 + 4])\n        cube([30, 10, 3], center = true);\n}\n\n// ---------- Feet (4 small cylinders) ----------\nmodule feet() {\n    for(x = [-body_w/2 + 10, body_w/2 - 10])\n        for(y = [-body_d/2 + 10, body_d/2 - 10])\n            translate([x, y, -body_h/2 - 2])\n                cylinder(h = 4, r = 3);\n}\n\n// ---------- Oil basket (removable) ----------\nmodule basket() {\n    difference() {\n        // basket walls\n        translate([0, 0, -body_h/4])\n            cube([body_w - 10, body_d - 10, body_h/2], center = true);\n        // hollow\n        translate([0, 0, -body_h/4 + wall])\n            cube([body_w - 10 - 2*wall, body_d - 10 - 2*wall, body_h/2], center = true);\n    }\n    // handle\n    translate([0, -body_d/2 + 5, 0])\n        rotate([0, 90, 0])\n            cylinder(h = 30, r = 2);\n}\n\n// ---------- Assembly ----------\nunion() {\n    fryer_body();\n    control_panel();\n    knob();\n    button();\n    lid();\n    feet();\n    translate([0, 0, body_h/4 + 2])\n        basket();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "steamer",
    "openscad_code": "// Steamer kitchen appliance - medium complexity\n// Dimensions in mm, 3D-printable with 2 mm walls and no overhangs\n\n$fn = 36;\n\n// Overall scale factor to target ~120 mm height\nscale_factor = 1;\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        minkowski() {\n            cube([80, 90, 85], center = true);\n            cylinder(h = 2, r = 4, center = true);\n        }\n        \n        // Hollow interior\n        translate([0, 0, 5])\n            cube([76, 86, 83], center = true);\n        \n        // Top opening for steam\n        translate([0, 0, 42.5])\n            cylinder(h = 5, r = 28, center = true);\n    }\n}\n\n// Base with feet\nmodule base() {\n    difference() {\n        // Base plate\n        translate([0, 0, -45])\n            cube([84, 94, 8], center = true);\n        \n        // Recess for cable\n        translate([0, -45, -45])\n            cube([20, 10, 10], center = true);\n    }\n    \n    // Rubber feet\n    for (x = [-30, 30])\n        for (y = [-35, 35])\n            translate([x, y, -49])\n                cylinder(h = 4, r = 4, center = true);\n}\n\n// Water tank\nmodule water_tank() {\n    translate([0, 30, 10])\n        difference() {\n            // Tank body\n            cube([70, 25, 50], center = true);\n            \n            // Hollow\n            translate([0, 0, -2])\n                cube([66, 21, 50], center = true);\n                \n            // Fill opening\n            translate([0, 12.5, 23])\n                cylinder(h = 5, r = 12, center = true);\n        }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, -45, 15])\n        difference() {\n            // Panel plate\n            cube([60, 8, 35], center = true);\n            \n            // Button holes\n            for (i = [-1:1])\n                translate([i * 20, 0, 10])\n                    cylinder(h = 10, r = 6, center = true);\n                    \n            // Display window\n            translate([0, 0, -10])\n                cube([40, 10, 15], center = true);\n        }\n    \n    // Buttons\n    for (i = [-1:1])\n        translate([i * 20, -41, 15])\n            cylinder(h = 4, r = 5, center = true);\n            \n    // Display screen\n    translate([0, -41, 5])\n        cube([36, 2, 11], center = true);\n}\n\n// Steam basket\nmodule steam_basket() {\n    translate([0, 0, 50])\n        difference() {\n            // Basket body\n            cylinder(h = 30, r = 38, center = true);\n            \n            // Hollow\n            translate([0, 0, -5])\n                cylinder(h = 30, r = 34, center = true);\n                \n            // Bottom holes\n            for (r = [10:10:30])\n                for (a = [0:30:330])\n                    translate([r * cos(a), r * sin(a), -13])\n                        cylinder(h = 4, r = 2, center = true);\n        }\n    \n    // Rim\n    translate([0, 0, 65])\n        cylinder(h = 5, r = 40, center = true);\n        \n    // Handles\n    for (a = [0, 180])\n        rotate([0, 0, a])\n            translate([45, 0, 65])\n                cube([10, 8, 5], center = true);\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, 82])\n        difference() {\n            // Lid top\n            cylinder(h = 8, r = 42, center = true);\n            \n            // Inner lip\n            translate([0, 0, -2])\n                cylinder(h = 6, r = 38, center = true);\n        }\n    \n    // Handle\n    translate([0, 0, 90])\n        cylinder(h = 15, r = 8, center = true);\n}\n\n// Main assembly\nscale([scale_factor, scale_factor, scale_factor]) {\n    union() {\n        body();\n        base();\n        water_tank();\n        control_panel();\n        steam_basket();\n        lid();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "broiler",
    "openscad_code": "// Broiler Kitchen Appliance - Medium Complexity\n// Dimensions (mm): 80x60x90\n// Wall thickness: 2mm\n\n$fn = 32;\n\nmodule broilerBody() {\n    // Main body shell\n    difference() {\n        // Outer shell\n        cube([80, 60, 90], center = true);\n        \n        // Inner cavity\n        translate([0, 0, 5])\n            cube([76, 56, 84], center = true);\n    }\n}\n\nmodule door() {\n    // Hinged door assembly\n    translate([-41, 0, -15])\n        rotate([0, 90, 0])\n        difference() {\n            // Door frame\n            cube([50, 56, 4], center = true);\n            \n            // Window opening\n            translate([0, 0, 0])\n                cube([46, 52, 3], center = true);\n            \n            // Door handle slot\n            translate([20, 0, 0])\n                cube([8, 12, 5], center = true);\n        }\n}\n\nmodule windowGlass() {\n    // Glass window in door\n    translate([-41, 0, -15])\n        rotate([0, 90, 0])\n        scale([0.9, 0.9, 0.1])\n        cube([46, 52, 4], center = true);\n}\n\nmodule controlPanel() {\n    // Top control panel\n    translate([0, 30, 45])\n    union() {\n        // Panel base\n        cube([60, 8, 15], center = true);\n        \n        // Control knobs\n        for (i = [-20:20:20]) {\n            translate([i, 34, 52])\n                cylinder(h = 6, r1 = 3, r2 = 2);\n        }\n        \n        // Display window\n        translate([0, 34, 52])\n            cube([25, 2, 8], center = true);\n    }\n}\n\nmodule heatingElements() {\n    // Top and bottom heating elements\n    for (z = [-35, 35]) {\n        translate([0, 0, z])\n            difference() {\n                // Element housing\n                cube([70, 50, 3], center = true);\n                \n                // Heating coils pattern\n                for (x = [-30:15:30]) {\n                    for (y = [-20:10:20]) {\n                        translate([x, y, 0])\n                            cylinder(h = 4, r = 1);\n                    }\n                }\n            }\n    }\n}\n\nmodule supportFeet() {\n    // Four support feet\n    for (x = [-30, 30])\n        for (y = [-20, 20])\n            translate([x, y, -47])\n                cylinder(h = 6, r = 3);\n}\n\nmodule ventilationSlots() {\n    // Side ventilation slots\n    for (side = [-1, 1]) {\n        translate([side * 41, 0, 0])\n            rotate([0, 90, 0])\n            for (i = [-30:10:30]) {\n                translate([i, 0, 0])\n                    cube([6, 2, 1], center = true);\n            }\n    }\n}\n\nmodule powerCord() {\n    // Simple power cord representation\n    translate([40, -20, -40])\n        rotate([90, 0, 0])\n            cylinder(h = 30, r = 2);\n}\n\n// Assemble the broiler\nunion() {\n    broilerBody();\n    door();\n    windowGlass();\n    controlPanel();\n    heatingElements();\n    supportFeet();\n    ventilationSlots();\n    powerCord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "rotisserie",
    "openscad_code": "// Rotisserie Kitchen Appliance - Realistic Medium Complexity\n\n// Overall dimensions\nbody_w = 60;\nbody_d = 40;\nbody_h = 35;\nwall_t = 2;\n\n// Leg dimensions\nleg_w = 3;\nleg_h = 8;\n\n// Control panel\npanel_w = 20;\npanel_h = 12;\npanel_d = 3;\n\n// Door\ndoor_w = body_w - 4;\ndoor_h = body_h - 10;\ndoor_t = 2;\n\n// Rotisserie spit\nspit_len = body_d - 6;\nspit_dia = 3;\n\n// Handle\nhandle_len = 8;\nhandle_dia = 4;\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([body_w, body_d, body_h], center=true);\n        \n        // Inner cavity\n        translate([0, 0, -wall_t/2])\n            cube([body_w-wall_t*2, body_d-wall_t*2, body_h-wall_t], center=true);\n    }\n}\n\nmodule legs() {\n    for(x = [-body_w/2 + leg_w, body_w/2 - leg_w])\n        for(y = [-body_d/2 + leg_w, body_d/2 - leg_w])\n            translate([x, y, -body_h/2 - leg_h/2])\n                cube([leg_w, leg_w, leg_h], center=true);\n}\n\nmodule control_panel() {\n    translate([body_w/2 - panel_w/2, 0, body_h/2 - panel_h/2])\n        cube([panel_w, panel_d, panel_h], center=true);\n    \n    // Knobs\n    for(i = [-1, 1])\n        translate([body_w/2 - panel_w/2 + 5, panel_d/2 + 1, body_h/2 - panel_h/2 + i*4])\n            rotate([90, 0, 0])\n                cylinder(h=3, d=4, $fn=16);\n}\n\nmodule door() {\n    translate([0, body_d/2 - door_t/2 + 0.1, 0])\n        cube([door_w, door_t, door_h], center=true);\n    \n    // Door handle\n    translate([0, body_d/2 + door_t/2, 0])\n        rotate([90, 0, 0])\n            cylinder(h=handle_len, d=handle_dia, center=true);\n}\n\nmodule spit_assembly() {\n    // Spit rod\n    rotate([0, 90, 0])\n        translate([0, 0, 0])\n            cylinder(h=spit_len, d=spit_dia, center=true);\n    \n    // Spit forks (2 pieces)\n    for(pos = [-spit_len/3, spit_len/3]) {\n        translate([pos, 0, 0])\n            rotate([0, 90, 0])\n                cylinder(h=spit_dia+4, d=1, center=true);\n        \n        // Fork prongs\n        for(angle = [0:120:240])\n            rotate([0, 0, angle])\n                translate([pos, 0, 0])\n                    cube([spit_dia+6, 0.8, 0.8], center=true);\n    }\n    \n    // Motor housing\n    translate([-body_d/2 + 5, 0, 0])\n        rotate([0, 90, 0])\n            cylinder(h=8, d=8, center=true);\n}\n\nmodule ventilation_grill() {\n    // Top vents\n    for(y = [-body_d/2 + 6:4:body_d/2 - 6])\n        translate([0, y, body_h/2 - 1])\n            cube([body_w - 10, 2, 1], center=true);\n}\n\n// Main assembly\nunion() {\n    main_body();\n    legs();\n    control_panel();\n    door();\n    \n    translate([0, 0, body_h/2 - door_h/2])\n        spit_assembly();\n    \n    ventilation_grill();\n}\n\n// Base plate for stability\ntranslate([0, 0, -body_h/2 - leg_h - 1])\n    cube([body_w + 4, body_d + 4, 2], center=true);",
    "renders": true
  },
  {
    "kitchen_appliance": "skillet",
    "openscad_code": "// Skillet with handle and base\n// Overall size ~120 mm diameter, ~50 mm tall\n\nmodule skillet_body() {\n    // Main pan bowl\n    difference() {\n        // Outer bowl\n        cylinder(h = 25, d = 120, $fn = 64);\n        \n        // Inner cavity (leave 2 mm wall)\n        translate([0, 0, 2])\n            cylinder(h = 23, d = 116, $fn = 64);\n    }\n    \n    // Flat bottom base\n    translate([0, 0, -2])\n        cylinder(h = 4, d = 120, $fn = 64);\n}\n\nmodule handle() {\n    // Handle shaft\n    translate([60, 0, 12])\n        rotate([0, 90, 0])\n        cylinder(h = 70, d = 16, $fn = 32);\n    \n    // Handle grip rings\n    for (i = [0:3]) {\n        translate([60 + i * 15, 0, 12])\n            rotate([0, 90, 0])\n            cylinder(h = 4, d = 18, $fn = 32);\n    }\n    \n    // Handle end cap\n    translate([130, 0, 12])\n        rotate([0, 90, 0])\n        cylinder(h = 8, d = 20, $fn = 32);\n}\n\nmodule pour_spouts() {\n    // Left spout\n    translate([0, 58, 20])\n        rotate([0, 0, -30])\n        cube([20, 4, 6], center = true);\n    \n    // Right spout\n    translate([0, -58, 20])\n        rotate([0, 0, 30])\n        cube([20, 4, 6], center = true);\n}\n\nmodule heat_ring() {\n    // Raised ring on bottom for heat distribution\n    difference() {\n        translate([0, 0, -3])\n            cylinder(h = 2, d = 100, $fn = 64);\n        translate([0, 0, -2])\n            cylinder(h = 2, d = 80, $fn = 64);\n    }\n}\n\nmodule rivets() {\n    // Rivets attaching handle\n    for (a = [30, 150]) {\n        translate([55 * cos(a), 55 * sin(a), 25])\n            rotate([90, 0, 0])\n            cylinder(h = 4, d = 6, $fn = 16);\n    }\n}\n\n// Assemble all parts\nunion() {\n    skillet_body();\n    handle();\n    pour_spouts();\n    heat_ring();\n    rivets();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "griddle",
    "openscad_code": "// Electric Griddle - Medium Complexity\n// Approx 120 x 80 x 35 mm\n\n// Main body module\nmodule griddle_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 15])\n            cube([120, 80, 20], center=true);\n        \n        // Inner cavity for heating element\n        translate([0, 0, 15])\n            cube([116, 76, 18], center=true);\n    }\n}\n\n// Cooking plate with raised edges and grease channel\nmodule cooking_plate() {\n    difference() {\n        // Main plate\n        translate([0, 0, 26])\n            cube([110, 70, 4], center=true);\n        \n        // Cooking surface recess\n        translate([0, 0, 27])\n            cube([106, 66, 3], center=true);\n        \n        // Grease drain hole\n        translate([50, 30, 27])\n            cylinder(h=4, r=3, $fn=16);\n    }\n    \n    // Raised rim around plate\n    for(x = [-52, 52]) {\n        translate([x, 0, 26])\n            cube([6, 70, 4], center=true);\n    }\n    for(y = [-33, 33]) {\n        translate([0, y, 26])\n            cube([110, 4, 4], center=true);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel base\n    translate([-60, 0, 5])\n        cube([10, 40, 10], center=true);\n    \n    // Power button\n    translate([-60, -12, 11])\n        cylinder(h=2, r=4, $fn=20);\n    \n    // Temperature dial\n    translate([-60, 12, 11])\n        cylinder(h=3, r=5, $fn=20);\n    \n    // Dial indicator line\n    rotate([0, 90, 0])\n        translate([-60, 12, 11])\n            cube([6, 0.5, 1], center=true);\n}\n\n// Support legs\nmodule legs() {\n    positions = [[-50, -30], [50, -30], [-50, 30], [50, 30]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], 2])\n            cylinder(h=6, r=3, $fn=12);\n    }\n}\n\n// Grease trap drawer\nmodule grease_trap() {\n    // Drawer front\n    translate([55, 30, 15])\n        cube([8, 20, 6], center=true);\n    \n    // Drawer handle\n    translate([60, 30, 15])\n        cylinder(h=12, r=2, center=true, $fn=12);\n}\n\n// Power cord\nmodule power_cord() {\n    // Cord exit\n    translate([-60, -20, 15])\n        cylinder(h=5, r=3, center=true, $fn=12);\n    \n    // Cord\n    rotate([0, 90, 0])\n        translate([-60, -20, 15])\n            cylinder(h=30, r=1.5, center=true, $fn=8);\n}\n\n// Assembly\nunion() {\n    griddle_body();\n    cooking_plate();\n    control_panel();\n    legs();\n    grease_trap();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "smoker",
    "openscad_code": "// Realistic medium-complexity kitchen smoker (â‰ˆ90Ã—70Ã—100 mm)\n\n$fn = 24;               // Smoothed curves\nwall = 2;               // 3D-printable wall thickness\nbody_w = 90;            // Main body width\nbody_d = 70;            // Main body depth  \nbody_h = 90;            // Main body height\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        cube([body_w, body_d, body_h], center = true);\n        // Hollow inside\n        translate([0, 0, wall/2])\n            cube([body_w-wall*2, body_d-wall*2, body_h-wall], center = true);\n    }\n}\n\n// Front door with handle\nmodule door() {\n    translate([0, -body_d/2 - wall/2, 0])\n    rotate([90, 0, 0])\n    difference() {\n        // Door panel\n        translate([0, 0, -body_h/2 + 10])\n            cube([body_w-20, body_h-20, wall*2], center = true);\n        // Window\n        translate([0, 0, -wall])\n            cube([body_w-40, body_h-40, wall*2+1], center = true);\n    }\n    // Handle\n    translate([body_w/2-15, -body_d/2 - wall*2, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 10, d = 6);\n}\n\n// Side smoke stack\nmodule smoke_stack() {\n    translate([body_w/2 - 15, 0, body_h/2]) {\n        // Base\n        cylinder(h = 8, d1 = 20, d2 = 14);\n        // Pipe\n        translate([0, 0, 8])\n            cylinder(h = 25, d = 10);\n        // Cap\n        translate([0, 0, 33])\n            cylinder(h = 4, d1 = 14, d2 = 10);\n    }\n}\n\n// Control panel with knobs\nmodule control_panel() {\n    translate([body_w/2 + wall/2, 0, body_h/2 - 30])\n        rotate([0, 90, 0])\n            cube([body_d-10, 35, wall*2]);\n    // Knobs\n    for (i = [0:2]) {\n        translate([body_w/2 + wall*2, -20 + i*20, body_h/2 - 25])\n            rotate([0, 90, 0])\n                cylinder(h = 6, d = 10);\n    }\n}\n\n// Legs\nmodule legs() {\n    leg_x = body_w/2 - 10;\n    leg_y = body_d/2 - 10;\n    leg_z = -body_h/2 - 5;\n    for (x = [-leg_x, leg_x])\n        for (y = [-leg_y, leg_y])\n            translate([x, y, leg_z])\n                cube([8, 8, 10], center = true);\n}\n\n// Grill racks\nmodule grill_racks() {\n    rack_y = body_d/2 - 15;\n    for (z = [-20, 10]) {\n        translate([0, 0, z])\n            for (x = [-body_w/2+15 : 10 : body_w/2-15])\n                cube([2, body_d-30, 2], center = true);\n    }\n}\n\n// Temperature gauge\nmodule gauge() {\n    translate([0, body_d/2 - wall, body_h/2 - 10])\n        rotate([90, 0, 0]) {\n            cylinder(h = 8, d = 14);\n            translate([0, 0, 8])\n                cylinder(h = 2, d = 10);\n        }\n}\n\n// Assemble smoker\nunion() {\n    body_shell();\n    door();\n    smoke_stack();\n    control_panel();\n    legs();\n    grill_racks();\n    gauge();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "raclette",
    "openscad_code": "// Raclette Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: 170mm x 80mm x 90mm\n\n$fn = 32;\n\n// Main body module\nmodule raclette_body() {\n    // Base housing\n    difference() {\n        // Main housing block\n        translate([0, 0, 40]) {\n            cube([170, 80, 50], center = true);\n        }\n        \n        // Top recess for grill plate\n        translate([0, 0, 65]) {\n            cube([160, 70, 10], center = true);\n        }\n        \n        // Front display recess\n        translate([0, 35, 55]) {\n            cube([80, 5, 15], center = true);\n        }\n        \n        // Ventilation slots on sides\n        for (i = [-1, 1]) {\n            translate([i * 85, 0, 30]) {\n                for (j = [-20, 0, 20]) {\n                    translate([0, j, 0]) {\n                        cube([2, 10, 15], center = true);\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Display screen\n    color([0.2, 0.2, 0.2]) {\n        translate([0, 38, 55]) {\n            cube([60, 2, 8], center = true);\n        }\n    }\n    \n    // Control knobs\n    for (i = [-1, 1]) {\n        translate([i * 25, 38, 50]) {\n            cylinder(h = 5, r = 6, center = true);\n            translate([0, 3, 0]) {\n                cube([2, 6, 2], center = true);\n            }\n        }\n    }\n    \n    // Power indicator LED\n    translate([40, 38, 55]) {\n        color([1, 0, 0]) {\n            sphere(r = 3);\n        }\n    }\n}\n\n// Grill plate module\nmodule grill_plate() {\n    // Plate base\n    translate([0, 0, 70]) {\n        cube([160, 70, 5], center = true);\n    }\n    \n    // Grill ridges\n    for (i = [-5:5]) {\n        translate([0, i * 12 - 6, 73]) {\n            cube([150, 3, 2], center = true);\n        }\n    }\n    \n    // Drip edge\n    translate([0, 40, 70]) {\n        cube([160, 5, 8], center = true);\n    }\n}\n\n// Raclette pans module\nmodule raclette_pans() {\n    for (i = [-1.5, -0.5, 0.5, 1.5]) {\n        translate([i * 35, 0, 82]) {\n            // Pan base\n            difference() {\n                cube([30, 60, 8], center = true);\n                translate([0, 0, 4]) {\n                    cube([26, 56, 4], center = true);\n                }\n            }\n            \n            // Handle\n            translate([0, -35, 0]) {\n                rotate([90, 0, 0]) {\n                    cylinder(h = 15, r1 = 3, r2 = 3, center = true);\n                }\n            }\n        }\n    }\n}\n\n// Support feet module\nmodule support_feet() {\n    for (x = [-1, 1]) {\n        for (y = [-1, 1]) {\n            translate([x * 70, y * 30, 0]) {\n                cylinder(h = 8, r = 5, center = true);\n            }\n        }\n    }\n}\n\n// Power cable\nmodule power_cable() {\n    translate([-85, 0, 30]) {\n        rotate([0, 90, 0]) {\n            difference() {\n                cylinder(h = 30, r = 4, center = true);\n                cylinder(h = 30, r = 2, center = true);\n            }\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    color([0.9, 0.9, 0.9]) {\n        raclette_body();\n    }\n    \n    color([0.3, 0.3, 0.3]) {\n        control_panel();\n    }\n    \n    color([0.4, 0.4, 0.4]) {\n        grill_plate();\n    }\n    \n    color([0.8, 0.8, 0.8]) {\n        raclette_pans();\n    }\n    \n    color([0.2, 0.2, 0.2]) {\n        support_feet();\n    }\n    \n    color([0.1, 0.1, 0.1]) {\n        power_cable();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tandoor",
    "openscad_code": "// Tandoor Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: 80mm diameter, 120mm height\n\n// Base structure module\nmodule tandoor_base() {\n    // Bottom base plate\n    difference() {\n        cylinder(h=8, d=80, $fn=100);\n        translate([0, 0, -1])\n            cylinder(h=10, d=76, $fn=100);\n    }\n    \n    // Outer wall\n    difference() {\n        cylinder(h=100, d=80, $fn=100);\n        translate([0, 0, 2])\n            cylinder(h=96, d=76, $fn=100);\n    }\n    \n    // Inner insulation layer\n    translate([0, 0, 8])\n        difference() {\n            cylinder(h=92, d=76, $fn=100);\n            translate([0, 0, 2])\n                cylinder(h=88, d=60, $fn=100);\n        }\n}\n\n// Top rim module\nmodule top_rim() {\n    difference() {\n        cylinder(h=12, d=85, $fn=100);\n        translate([0, 0, 2])\n            cylinder(h=12, d=80, $fn=100);\n    }\n}\n\n// Lifting handles\nmodule handles() {\n    for(i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([42, 0, 55])\n                rotate([0, 90, 0])\n                    difference() {\n                        cylinder(h=15, d=10, $fn=20);\n                        translate([0, 0, 2])\n                            cylinder(h=15, d=6, $fn=20);\n                    }\n    }\n}\n\n// Air vents at bottom\nmodule air_vents() {\n    for(i = [0:3]) {\n        rotate([0, 0, i*90 + 45])\n            translate([35, 0, 6])\n                rotate([90, 0, 0])\n                    cube([15, 4, 2], center=true);\n    }\n}\n\n// Support legs\nmodule legs() {\n    for(i = [0:3]) {\n        rotate([0, 0, i*90 + 45])\n            translate([32, 0, -5])\n                cylinder(h=10, d=8, $fn=20);\n    }\n}\n\n// Control dial\nmodule control_dial() {\n    translate([0, 0, 115])\n        difference() {\n            cylinder(h=8, d=20, $fn=32);\n            translate([0, 0, 2])\n                cylinder(h=8, d=16, $fn=32);\n            translate([0, 0, 4])\n                cube([2, 12, 8], center=true);\n        }\n}\n\n// Temperature indicator\nmodule temp_indicator() {\n    translate([0, 0, 110])\n        difference() {\n            cylinder(h=3, d=10, $fn=32);\n            translate([0, 0, -1])\n                cylinder(h=5, d=8, $fn=32);\n        }\n}\n\n// Grill grate support ridges\nmodule support_ridges() {\n    for(i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([30, 0, 70])\n                cube([5, 2, 4], center=true);\n    }\n}\n\n// Main assembly\nunion() {\n    // Base structure\n    tandoor_base();\n    \n    // Top rim\n    translate([0, 0, 100])\n        top_rim();\n    \n    // Handles\n    handles();\n    \n    // Air vents\n    air_vents();\n    \n    // Support legs\n    legs();\n    \n    // Control dial\n    control_dial();\n    \n    // Temperature indicator\n    translate([15, 0, 0])\n        temp_indicator();\n    \n    // Grill grate supports\n    support_ridges();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "braiser",
    "openscad_code": "// Braiser Kitchen Appliance - Medium complexity realistic style\n// Overall dimensions: ~110mm wide x 90mm deep x 60mm tall\n\n// Main body module\nmodule main_body() {\n    difference() {\n        // Outer shell\n        translate([-55, -45, 0])\n            cube([110, 90, 50], center=false);\n        \n        // Inner cavity\n        translate([-53, -43, 2])\n            cube([106, 86, 48], center=false);\n    }\n}\n\n// Handles on sides\nmodule handles() {\n    // Left handle\n    translate([-57, 0, 25])\n        rotate([0, 90, 0])\n            cylinder(h=15, r=5, $fn=20);\n    \n    // Right handle\n    translate([57, 0, 25])\n        rotate([0, 90, 0])\n            cylinder(h=15, r=5, $fn=20);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([50, -35, 52])\n        cube([20, 15, 8]);\n    \n    // Knob 1\n    translate([55, -30, 61])\n        cylinder(h=3, r=4, $fn=16);\n    \n    // Knob 2\n    translate([62, -30, 61])\n        cylinder(h=3, r=4, $fn=16);\n    \n    // LED indicator\n    translate([58, -25, 61])\n        sphere(r=1.5, $fn=12);\n}\n\n// Lid\nmodule lid() {\n    // Main lid\n    difference() {\n        translate([-52, -42, 51])\n            cube([104, 84, 4], center=false);\n        \n        // Inner lip\n        translate([-50, -40, 51])\n            cube([100, 80, 2], center=false);\n    }\n    \n    // Handle on lid\n    translate([0, 0, 57])\n        cylinder(h=8, r=6, $fn=20);\n}\n\n// Feet\nmodule feet() {\n    // Front left\n    translate([-45, -35, -5])\n        cylinder(h=5, r=3, $fn=12);\n    \n    // Front right\n    translate([45, -35, -5])\n        cylinder(h=5, r=3, $fn=12);\n    \n    // Back left\n    translate([-45, 35, -5])\n        cylinder(h=5, r=3, $fn=12);\n    \n    // Back right\n    translate([45, 35, -5])\n        cylinder(h=5, r=3, $fn=12);\n}\n\n// Vent holes on back\nmodule vents() {\n    for(i = [-20:10:20]) {\n        translate([0, 44, 25+i])\n            cube([40, 2, 3]);\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    handles();\n    control_panel();\n    lid();\n    feet();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "crockpot",
    "openscad_code": "// Crockpot kitchen appliance - medium complexity realistic style\n// Overall dimensions: ~110mm x 85mm x 70mm\n\n$fn = 32;\nwall_thickness = 2;\n\n// Main body module\nmodule crockpot_body() {\n    // Base unit\n    difference() {\n        // Main housing\n        cube([100, 80, 60], center=true);\n        \n        // Hollow interior\n        translate([0, 0, -5])\n            cube([96, 76, 56], center=true);\n    }\n    \n    // Rounded top edge\n    translate([0, 0, 30])\n        cylinder(h=5, d1=100, d2=100, center=true);\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel base\n    translate([50, 0, 25])\n        cube([20, 40, 15], center=true);\n    \n    // Knobs\n    for(i=[-1:1]) {\n        translate([50, i*12, 33])\n            rotate([90, 0, 0])\n                cylinder(h=5, d=8);\n    }\n    \n    // Indicator lights\n    translate([50, 0, 33])\n        sphere(d=4);\n}\n\n// Handles module\nmodule handles() {\n    // Left handle\n    translate([-55, 0, 10])\n        rotate([0, 90, 0])\n            cylinder(h=20, d=10);\n    \n    // Right handle\n    translate([55, 0, 10])\n        rotate([0, 90, 0])\n            cylinder(h=20, d=10);\n}\n\n// Inner ceramic pot\nmodule ceramic_pot() {\n    difference() {\n        // Main pot body\n        translate([0, 0, 10])\n            cylinder(h=40, d=85);\n        \n        // Hollow interior\n        translate([0, 0, 12])\n            cylinder(h=40, d=75);\n    }\n    \n    // Pot lip\n    translate([0, 0, 50])\n        cylinder(h=5, d=90);\n}\n\n// Lid module\nmodule lid() {\n    // Main lid\n    translate([0, 0, 55])\n        cylinder(h=8, d=88);\n    \n    // Handle on top\n    translate([0, 0, 62])\n        cylinder(h=15, d=15);\n}\n\n// Feet module\nmodule feet() {\n    for(x=[-40:80:80]) {\n        for(y=[-30:60:60]) {\n            translate([x, y, -32])\n                cylinder(h=4, d=8);\n        }\n    }\n}\n\n// Power cord hole\nmodule power_cord() {\n    translate([50, -40, -20])\n        rotate([90, 0, 0])\n            cylinder(h=10, d=8);\n}\n\n// Assembly\nunion() {\n    // Base structure\n    crockpot_body();\n    \n    // Control panel\n    control_panel();\n    \n    // Handles\n    handles();\n    \n    // Feet\n    feet();\n    \n    // Power cord hole\n    power_cord();\n    \n    // Ceramic pot (removable)\n    translate([0, 0, 0])\n        ceramic_pot();\n    \n    // Lid (separate piece)\n    translate([0, 100, 0])\n        lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "dehydrator",
    "openscad_code": "// Dehydrator Kitchen Appliance - Medium Complexity\n// Overall dimensions: 80mm W x 80mm D x 100mm H\n\n$fn = 32;\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 50]) cube([80, 80, 100], center = true);\n        \n        // Hollow interior\n        translate([0, 0, 50]) cube([76, 76, 96], center = true);\n        \n        // Front opening for trays\n        translate([0, 38, 50]) cube([74, 4, 94], center = true);\n    }\n}\n\n// Base with feet\nmodule base() {\n    // Main base plate\n    translate([0, 0, 1]) cube([82, 82, 2], center = true);\n    \n    // Four rubber feet\n    for(x = [-35, 35])\n    for(y = [-35, 35])\n        translate([x, y, 0]) cylinder(h = 1, r = 3);\n}\n\n// Control panel\nmodule controls() {\n    // Control panel housing\n    translate([0, -30, 85]) cube([60, 12, 15], center = true);\n    \n    // Display screen\n    translate([0, -30, 93]) cube([40, 8, 3], center = true);\n    \n    // Control knob\n    translate([-20, -30, 93]) cylinder(h = 5, r = 5);\n    \n    // Buttons\n    for(i = [0:1])\n        translate([15 + i*10, -30, 93]) cylinder(h = 2, r = 3);\n}\n\n// Heating element at base\nmodule heating_element() {\n    translate([0, 0, 2]) cube([70, 70, 2], center = true);\n}\n\n// Ventilation slots\nmodule vents() {\n    for(i = [-3:3]) {\n        translate([0, 30, 15 + i*12]) cube([60, 2, 8], center = true);\n    }\n}\n\n// Tray support rails\nmodule rails() {\n    for(level = [1:4]) {\n        // Left rail\n        translate([-37, 0, 20 + level*15]) cube([4, 76, 2], center = true);\n        // Right rail\n        translate([37, 0, 20 + level*15]) cube([4, 76, 2], center = true);\n    }\n}\n\n// Dehydrator tray\nmodule tray() {\n    difference() {\n        // Tray base\n        translate([0, 0, 0]) cube([68, 68, 2], center = true);\n        \n        // Ventilation holes\n        for(x = [-25:10:25])\n        for(y = [-25:10:25])\n            translate([x, y, 0]) cylinder(h = 3, r = 3, center = true);\n    }\n    \n    // Tray rim\n    translate([0, 0, 1]) cube([72, 72, 2], center = true);\n    translate([0, 0, 1]) cube([64, 64, 2], center = true);\n}\n\n// Door\nmodule door() {\n    // Main door panel\n    translate([0, 39, 50]) cube([74, 2, 94], center = true);\n    \n    // Door handle\n    translate([0, 40.5, 70]) cube([20, 3, 10], center = true);\n    \n    // Window\n    translate([0, 40, 50]) cube([60, 1, 70], center = true);\n}\n\n// Assemble the dehydrator\nunion() {\n    base();\n    body();\n    controls();\n    heating_element();\n    vents();\n    rails();\n    \n    // Insert trays\n    for(level = [1:3]) {\n        translate([0, 0, 21 + level*15]) tray();\n    }\n    \n    door();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "salamander",
    "openscad_code": "// Salamander Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 120mm x 80mm x 60mm (suitable for 3D printing)\n\nmodule body() {\n    difference() {\n        // Main body\n        translate([0, 0, 30]) cube([120, 80, 60], center=true);\n        \n        // Front cavity for heating elements\n        translate([0, -35, 30]) cube([100, 10, 40], center=true);\n        \n        // Ventilation slots on top\n        for(x = [-50:10:50]) {\n            translate([x, 0, 60]) cube([6, 76, 2], center=true);\n        }\n    }\n}\n\nmodule top_panel() {\n    difference() {\n        // Top surface\n        translate([0, 0, 62]) cube([124, 84, 4], center=true);\n        \n        // Control panel cutout\n        translate([-30, 0, 64]) cube([40, 60, 4], center=true);\n    }\n}\n\nmodule control_panel() {\n    translate([-30, 0, 64]) {\n        // Panel base\n        cube([40, 60, 2], center=true);\n        \n        // Temperature dial\n        translate([-10, 15, 2]) {\n            cylinder(h=4, r=8, $fn=32);\n            translate([0, 0, 4]) cylinder(h=2, r=6, $fn=32);\n        }\n        \n        // Timer dial\n        translate([-10, -15, 2]) {\n            cylinder(h=4, r=8, $fn=32);\n            translate([0, 0, 4]) cylinder(h=2, r=6, $fn=32);\n        }\n        \n        // Power button\n        translate([10, 0, 2]) {\n            cylinder(h=3, r=5, $fn=32);\n            translate([0, 0, 3]) cylinder(h=1, r=4, $fn=32);\n        }\n    }\n}\n\nmodule heating_elements() {\n    // Heating element supports\n    for(y = [-30:20:30]) {\n        translate([y, -35, 30]) {\n            cube([4, 10, 4], center=true);\n            translate([0, 0, 22]) cube([4, 10, 40], center=true);\n        }\n    }\n    \n    // Heating rods\n    for(z = [10:10:50]) {\n        translate([0, -35, z]) {\n            rotate([90, 0, 0]) cylinder(h=100, r=2, center=true, $fn=16);\n        }\n    }\n}\n\nmodule feet() {\n    // Four support feet\n    for(x = [-50, 50]) {\n        for(y = [-30, 30]) {\n            translate([x, y, 0]) {\n                cylinder(h=4, r=4, $fn=16);\n                translate([0, 0, -2]) sphere(r=4, $fn=16);\n            }\n        }\n    }\n}\n\nmodule door_handle() {\n    translate([0, -70, 30]) {\n        // Handle base\n        cube([60, 8, 4], center=true);\n        \n        // Grip bar\n        translate([0, -6, 0]) {\n            rotate([0, 90, 0]) cylinder(h=60, r=3, center=true, $fn=16);\n        }\n    }\n}\n\nmodule side_ventilation() {\n    // Left side vents\n    for(z = [15:10:45]) {\n        translate([-60, 0, z]) {\n            cube([2, 60, 4], center=true);\n        }\n    }\n    \n    // Right side vents (mirror)\n    for(z = [15:10:45]) {\n        translate([60, 0, z]) {\n            cube([2, 60, 4], center=true);\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    body();\n    top_panel();\n    control_panel();\n    heating_elements();\n    feet();\n    door_handle();\n    side_ventilation();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "hibachi",
    "openscad_code": "// Hibachi Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: ~120mm wide x 80mm deep x 60mm tall\n\n$fn = 32;\n\nmodule hibachi_body() {\n    // Main body shell with wall thickness\n    difference() {\n        cube([120, 80, 60], center = true);\n        translate([0, 0, 2])\n            cube([116, 76, 58], center = true);\n    }\n}\n\nmodule grill_grate() {\n    // Cast iron grill grate pattern\n    translate([0, 0, 30])\n        difference() {\n            cube([114, 74, 3], center = true);\n            // Grill slots\n            for (x = [-55:10:55]) {\n                translate([x, 0, -1])\n                    cube([6, 76, 5], center = true);\n            }\n        }\n}\n\nmodule control_panel() {\n    // Front control panel with knobs\n    translate([0, -41, 10])\n        union() {\n            // Panel base\n            cube([60, 4, 20], center = true);\n            \n            // Control knobs\n            for (i = [-1:1]) {\n                translate([i * 20, -3, 0])\n                    rotate([90, 0, 0])\n                        cylinder(h = 4, r1 = 4, r2 = 3);\n            }\n            \n            // Temperature display\n            translate([0, -3, 8])\n                cube([25, 2, 8], center = true);\n        }\n}\n\nmodule legs() {\n    // Four supporting legs\n    for (x = [-50, 50])\n        for (y = [-30, 30]) {\n            translate([x, y, -35])\n                difference() {\n                    cylinder(h = 35, r = 4);\n                    translate([0, 0, 33])\n                        cylinder(h = 2, r1 = 4, r2 = 6);\n                }\n        }\n}\n\nmodule ventilation_slots() {\n    // Side ventilation slots\n    for (side = [-1, 1]) {\n        translate([side * 61, 0, 10])\n            rotate([0, 90, 0])\n                for (z = [-20:8:20]) {\n                    translate([0, 0, z])\n                        cube([30, 2, 4], center = true);\n                }\n    }\n}\n\nmodule ash_tray() {\n    // Removable ash collection tray\n    translate([0, 0, -28])\n        difference() {\n            // Tray body\n            cube([100, 60, 4], center = true);\n            // Inner cavity\n            translate([0, 0, 2])\n                cube([96, 56, 4], center = true);\n            // Handle\n            translate([0, 32, 0])\n                rotate([90, 0, 0])\n                    cylinder(h = 15, r = 3);\n        }\n}\n\nmodule heat_shield() {\n    // Bottom heat shield\n    translate([0, 0, -32])\n        cube([110, 70, 1], center = true);\n}\n\n// Assembly\nunion() {\n    hibachi_body();\n    grill_grate();\n    control_panel();\n    legs();\n    ventilation_slots();\n    ash_tray();\n    heat_shield();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "planchar",
    "openscad_code": "// Planchar (clothes iron) â€“ medium complexity, realistic style\n// Overall size â‰ˆ 110 mm Ã— 55 mm Ã— 45 mm (LÃ—WÃ—H)\n\n// Wall thickness 2 mm for 3D-printability\n// All angles â‰¤ 45Â°, no steep overhangs\n\n// Main body with sole-plate\nmodule body() {\n    difference() {\n        // Top shell\n        hull() {\n            translate([0, 0, 8]) cube([102, 50, 12], center=true);\n            translate([0, 0, 35]) cube([65, 35, 8], center=true);\n        }\n        // Hollow cavity\n        translate([0, 0, 8]) cube([98, 46, 12], center=true);\n    }\n}\n\n// Stainless-steel sole-plate\nmodule sole() {\n    translate([0, 0, -2]) {\n        difference() {\n            hull() {\n                cube([110, 55, 4], center=true);\n                translate([-35, 0, 0]) cube([40, 45, 4], center=true);\n            }\n            // Steam holes\n            for (y = [-20:10:20])\n                for (x = [-40:10:40]) {\n                    translate([x, y, 1.5]) cylinder(h=5, d=3, center=true);\n                }\n        }\n    }\n}\n\n// Handle\nmodule handle() {\n    difference() {\n        hull() {\n            translate([10, 0, 42]) cube([40, 30, 12], center=true);\n            translate([-5, 0, 48]) cube([10, 20, 8], center=true);\n        }\n        // Grip cavity\n        translate([10, 0, 42]) cube([36, 26, 8], center=true);\n    }\n}\n\n// Steam dial\nmodule steam_dial() {\n    translate([-45, 0, 42]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                cylinder(h=8, d=12, center=true);\n                cylinder(h=10, d=8, center=true);\n            }\n            // Knurling ridges\n            for (i = [0:15:359]) {\n                rotate([0, 0, i])\n                    translate([6, 0, 0]) cube([1, 0.5, 8], center=true);\n            }\n        }\n    }\n}\n\n// Temperature dial\nmodule temp_dial() {\n    translate([-45, 20, 42]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                cylinder(h=6, d=10, center=true);\n                cylinder(h=8, d=6, center=true);\n            }\n        }\n    }\n}\n\n// LED indicator\nmodule led() {\n    translate([-45, -20, 42]) {\n        cylinder(h=2, d=5, center=true);\n    }\n}\n\n// Water tank cap\nmodule water_cap() {\n    translate([-50, 0, 30]) {\n        rotate([0, 90, 0]) {\n            difference() {\n                cylinder(h=12, d=8, center=true);\n                cylinder(h=14, d=5, center=true);\n            }\n        }\n    }\n}\n\n// Cable tail\nmodule cable() {\n    translate([50, 0, 40]) {\n        rotate([0, -20, 0])\n            cylinder(h=35, d=6, center=false);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    sole();\n    handle();\n    steam_dial();\n    temp_dial();\n    led();\n    water_cap();\n    cable();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "comal",
    "openscad_code": "// Comal kitchen appliance - medium complexity realistic style\n// Traditional flat griddle for tortillas and cooking\n\n$fn = 50;\n\nmodule handle() {\n    // Metal handle with heat-resistant grip\n    translate([0, 0, 0]) {\n        // Handle grip\n        color([0.2, 0.2, 0.2]) \n        difference() {\n            cylinder(h=15, r1=6, r2=5);  // Tapered grip\n            translate([0, 0, 2])\n                cylinder(h=11, r1=4, r2=3);  // Hollow center\n        }\n        \n        // Metal support arm\n        translate([0, 0, -12])\n            color([0.7, 0.7, 0.7])\n            cube([8, 4, 12], center=true);\n    }\n}\n\nmodule comal_base() {\n    // Main cooking surface - cast iron with raised edges\n    difference() {\n        // Thick base with slight dome\n        translate([0, 0, 3])\n            scale([1, 1, 0.3])\n                sphere(d=120);\n        \n        // Flatten top surface\n        translate([0, 0, 9])\n            cube([130, 130, 20], center=true);\n        \n        // Hollow underside for weight reduction\n        translate([0, 0, 2])\n            sphere(d=110);\n    }\n    \n    // Raised rim around edge\n    translate([0, 0, 6])\n        difference() {\n            cylinder(h=4, d=120);\n            cylinder(h=4, d=110);\n        }\n}\n\nmodule support_feet() {\n    // Three support feet for stability\n    for(i=[0:120:359]) {\n        rotate([0, 0, i])\n            translate([45, 0, 0])\n                color([0.4, 0.4, 0.4])\n                cylinder(h=8, d1=12, d2=8);\n    }\n}\n\nmodule temperature_control() {\n    // Side-mounted temperature control knob\n    translate([60, 0, 8]) {\n        // Control housing\n        color([0.3, 0.3, 0.3])\n        cube([15, 12, 8], center=true);\n        \n        // Control knob\n        translate([8, 0, 0])\n            rotate([90, 0, 0])\n                color([0.1, 0.1, 0.1])\n                cylinder(h=4, r=5);\n        \n        // Indicator marks\n        for(j=[-30:30:30]) {\n            rotate([0, 0, j])\n                translate([9, 0, 0])\n                    color([1, 1, 1])\n                    cube([1, 0.5, 0.5], center=true);\n        }\n    }\n}\n\nmodule heat_distribution() {\n    // Concentric heat rings on underside\n    for(k=[20:15:60]) {\n        translate([0, 0, 5.5])\n            color([0.5, 0.3, 0.2])\n            difference() {\n                cylinder(h=0.5, d=k*2+4);\n                cylinder(h=0.5, d=k*2);\n            }\n    }\n}\n\n// Assembly\nunion() {\n    // Main comal body\n    color([0.4, 0.3, 0.25])  // Cast iron color\n    comal_base();\n    \n    // Support structure\n    translate([0, 0, 0])\n        support_feet();\n    \n    // Heat distribution pattern\n    heat_distribution();\n    \n    // Handle attachment\n    translate([58, 0, 8])\n        rotate([0, -30, 0])\n            handle();\n    \n    // Temperature control\n    temperature_control();\n    \n    // Surface texture - subtle machining marks\n    for(m=[-45:15:45]) {\n        rotate([0, 0, m])\n            translate([0, 0, 10.1])\n                color([0.5, 0.4, 0.35])\n                cube([120, 0.2, 0.1], center=true);\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tawa",
    "openscad_code": "// Realistic Tawa (Indian flat griddle) â€“ medium complexity\n// Overall Ã˜120 mm, ~25 mm thick, 2 mm wall thickness for 3D printing\n\n// Parameters\ndia = 120;          // tawa diameter\nh_wall = 2;         // wall thickness printable\nh_rim = 8;          // rim height\nh_base = 6;         // base stand height\ngrip_len = 40;\ngrip_d = 18;\nrivet_r = 2.5;\nrivet_h = 3;\nsegments = 64;\n\n// Main cooking plate\nmodule plate() {\n    difference() {\n        // solid disk\n        cylinder(h = h_wall, d = dia, $fn = segments);\n        // underside cavity (2 mm wall)\n        translate([0, 0, -0.01])\n            cylinder(h = h_wall + 0.02, d = dia - 2 * h_wall, $fn = segments);\n    }\n}\n\n// Raised rim\nmodule rim() {\n    difference() {\n        cylinder(h = h_rim, d = dia, $fn = segments);\n        translate([0, 0, h_wall])\n            cylinder(h = h_rim - h_wall + 0.1, d = dia - 2 * h_wall, $fn = segments);\n    }\n}\n\n// Base ring for stability\nmodule base_ring() {\n    difference() {\n        cylinder(h = h_base, d = dia, $fn = segments);\n        translate([0, 0, -0.01])\n            cylinder(h = h_base + 0.02, d = dia - 8, $fn = segments);\n    }\n}\n\n// Rivet helper\nmodule rivet() {\n    cylinder(h = rivet_h, r = rivet_r, $fn = 16);\n}\n\n// Handle with rivets\nmodule handle() {\n    // grip tube\n    translate([dia / 2 + grip_len / 2 - 5, 0, 0])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h = grip_len, d = grip_d, $fn = 32);\n                translate([0, 0, -0.01])\n                    cylinder(h = grip_len + 0.02, d = grip_d - 2 * h_wall, $fn = 32);\n            }\n    \n    // collar connecting to rim\n    translate([dia / 2 - 5, 0, 0])\n        hull() {\n            sphere(r = grip_d / 2, $fn = 32);\n            translate([10, 0, 0])\n                sphere(r = grip_d / 2, $fn = 32);\n        }\n    \n    // three rivets along grip\n    for (i = [-1:1])\n        translate([dia / 2 + grip_len / 2 - 5 + i * 10, 0, grip_d / 2])\n            rivet();\n}\n\n// Assembly\nunion() {\n    plate();\n    rim();\n    base_ring();\n    handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tagine",
    "openscad_code": "// Tagine Kitchen Appliance - Realistic Style, Medium Complexity\n\n$fn = 64;\n\n// Main dimensions\nbase_d = 90;\nbase_h = 25;\ncone_h = 60;\ncone_top_d = 25;\nhandle_d = 18;\nhandle_h = 12;\n\nmodule base() {\n    difference() {\n        // Main base\n        cylinder(h = base_h, d1 = base_d, d2 = base_d * 0.9);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h = base_h, d1 = base_d - 4, d2 = base_d * 0.9 - 4);\n        \n        // Rim detail\n        translate([0, 0, base_h - 3])\n            cylinder(h = 3, d1 = base_d + 2, d2 = base_d + 2);\n    }\n}\n\nmodule cone_lid() {\n    difference() {\n        // Main cone shape\n        cylinder(h = cone_h, d1 = base_d * 0.9, d2 = cone_top_d);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h = cone_h - 2, d1 = base_d * 0.9 - 4, d2 = cone_top_d - 4);\n    }\n}\n\nmodule handle() {\n    difference() {\n        // Main handle\n        translate([0, 0, cone_h])\n            cylinder(h = handle_h, d1 = handle_d, d2 = handle_d * 0.7);\n        \n        // Grip hole\n        translate([0, 0, cone_h + 2])\n            cylinder(h = handle_h - 4, d1 = handle_d * 0.6, d2 = handle_d * 0.4);\n    }\n}\n\nmodule steam_vent() {\n    // Small vent holes around lid\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([base_d * 0.35, 0, cone_h * 0.7])\n                cylinder(h = 3, d = 2);\n    }\n}\n\nmodule decorative_pattern() {\n    // Geometric pattern around base\n    for(i = [0:11]) {\n        rotate([0, 0, i * 30])\n            translate([base_d * 0.45, 0, 5])\n                cube([3, 2, 8], center = true);\n    }\n}\n\nmodule base_feet() {\n    // Support feet\n    for(i = [0:2]) {\n        rotate([0, 0, i * 120])\n            translate([base_d * 0.35, 0, -2])\n                cylinder(h = 4, d = 8);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    \n    translate([0, 0, base_h - 2])\n        cone_lid();\n    \n    handle();\n    \n    steam_vent();\n    \n    decorative_pattern();\n    \n    base_feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "donabe",
    "openscad_code": "// Donabe Clay Pot - Medium Complexity\n// Traditional Japanese earthenware pot with lid and handles\n\n// Main parameters\npot_diameter = 80;\npot_height = 60;\nwall_thickness = 2;\nlid_gap = 1;\n\n// Base module for the pot body\nmodule pot_body() {\n    difference() {\n        // Outer cylinder\n        cylinder(h=pot_height, d=pot_diameter, $fn=64);\n        \n        // Inner cavity\n        translate([0, 0, wall_thickness])\n        cylinder(h=pot_height-wall_thickness, d=pot_diameter-wall_thickness*2, $fn=64);\n    }\n    \n    // Bottom reinforcement ring\n    translate([0, 0, -0.5])\n    cylinder(h=wall_thickness*2, d=pot_diameter+4, $fn=64);\n}\n\n// Lid module with handle\nmodule lid() {\n    // Main lid disk\n    translate([0, 0, pot_height+lid_gap])\n    difference() {\n        cylinder(h=wall_thickness*2, d=pot_diameter-wall_thickness, $fn=64);\n        \n        // Inner relief\n        translate([0, 0, wall_thickness])\n        cylinder(h=wall_thickness, d=pot_diameter-wall_thickness*4, $fn=64);\n    }\n    \n    // Central handle - traditional knob shape\n    translate([0, 0, pot_height+lid_gap+wall_thickness*2])\n    difference() {\n        // Cylindrical base\n        cylinder(h=8, d=12, $fn=32);\n        \n        // Top sphere\n        translate([0, 0, 8])\n        sphere(d=12, $fn=32);\n    }\n    \n    // Steam vent hole\n    translate([0, 0, pot_height+lid_gap+wall_thickness])\n    cylinder(h=wall_thickness*2, d=3, $fn=16);\n}\n\n// Side handles module\nmodule side_handles() {\n    // Left handle\n    translate([-pot_diameter/2-8, 0, pot_height/2])\n    rotate([90, 0, 0])\n    difference() {\n        // Handle shape\n        union() {\n            // Main grip\n            cylinder(h=20, d=8, $fn=32);\n            \n            // Attachment flanges\n            for(i=[-8, 8]) {\n                translate([i, 0, -2])\n                cube([4, 16, 4], center=true);\n            }\n        }\n        \n        // Grip hole\n        cylinder(h=21, d=4, $fn=32);\n    }\n    \n    // Right handle (mirror of left)\n    mirror([1, 0, 0])\n    translate([-pot_diameter/2-8, 0, pot_height/2])\n    rotate([90, 0, 0])\n    difference() {\n        // Handle shape\n        union() {\n            // Main grip\n            cylinder(h=20, d=8, $fn=32);\n            \n            // Attachment flanges\n            for(i=[-8, 8]) {\n                translate([i, 0, -2])\n                cube([4, 16, 4], center=true);\n            }\n        }\n        \n        // Grip hole\n        cylinder(h=21, d=4, $fn=32);\n    }\n}\n\n// Decorative rings around the pot\nmodule decorative_rings() {\n    // Top ring\n    translate([0, 0, pot_height-wall_thickness])\n    cylinder(h=wall_thickness, d=pot_diameter+2, $fn=64);\n    \n    // Middle ring\n    translate([0, 0, pot_height/2])\n    cylinder(h=wall_thickness, d=pot_diameter+1, $fn=64);\n    \n    // Bottom ring\n    translate([0, 0, wall_thickness*2])\n    cylinder(h=wall_thickness, d=pot_diameter+2, $fn=64);\n}\n\n// Assembly\nunion() {\n    // Main pot\n    pot_body();\n    \n    // Side handles\n    side_handles();\n    \n    // Decorative elements\n    decorative_rings();\n    \n    // Lid (separate for printing)\n    lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kamado",
    "openscad_code": "// Kamado Grill - Realistic Style, Medium Complexity\n// Overall size ~100mm height\n\n// Parameters\nbody_d = 80;\nbody_h = 60;\nlid_h = 40;\nwall_t = 2;\nbase_h = 15;\nvent_w = 15;\nvent_h = 5;\nhandle_l = 30;\nhandle_d = 8;\nwheel_r = 8;\nleg_h = 20;\nfirebox_d = 60;\nfirebox_h = 30;\ngrate_t = 3;\ngrate_d = 58;\n\n// Colors for preview\ncolor_body = \"darkgreen\";\ncolor_trim = \"silver\";\ncolor_wood = \"saddlebrown\";\n\n// Main body module\nmodule kamado_body() {\n    difference() {\n        // Outer shell\n        cylinder(h=body_h, d1=body_d, d2=body_d*0.9, $fn=100);\n        \n        // Inner cavity\n        translate([0, 0, -1])\n            cylinder(h=body_h+2, d1=body_d-wall_t*2, d2=body_d*0.9-wall_t*2, $fn=100);\n    }\n}\n\n// Lid module\nmodule kamado_lid() {\n    difference() {\n        union() {\n            // Top dome\n            translate([0, 0, body_h])\n                cylinder(h=lid_h, d1=body_d*0.9, d2=body_d*0.7, $fn=100);\n            \n            // Vent cap\n            translate([0, body_d*0.35-vent_h/2, body_h+lid_h])\n                rotate([90, 0, 0])\n                    cylinder(h=vent_h, d=vent_w, $fn=32);\n        }\n        \n        // Inner cavity\n        translate([0, 0, body_h-1])\n            cylinder(h=lid_h+2, d1=body_d*0.9-wall_t*2, d2=body_d*0.7-wall_t*2, $fn=100);\n    }\n}\n\n// Handle module\nmodule handle() {\n    translate([0, body_d/2, body_h+lid_h/2])\n        rotate([0, 90, 0])\n            union() {\n                // Main grip\n                cylinder(h=handle_l, d=handle_d, $fn=32);\n                \n                // Mounting brackets\n                for(i = [-1, 1])\n                    translate([i*handle_l/4, 0, 0])\n                        cube([wall_t*2, handle_d/2, wall_t*2], center=true);\n            }\n}\n\n// Base with legs and wheels\nmodule kamado_base() {\n    union() {\n        // Base ring\n        difference() {\n            cylinder(h=base_h, d=body_d+20, $fn=100);\n            translate([0, 0, -1])\n                cylinder(h=base_h+2, d=body_d+20-wall_t*2, $fn=100);\n        }\n        \n        // Legs with wheels\n        for(i = [0:90:360]) {\n            rotate([0, 0, i])\n                translate([body_d/2+5, 0, -leg_h/2])\n                    union() {\n                        // Leg\n                        cube([wall_t*4, wall_t*3, leg_h], center=true);\n                        \n                        // Wheel\n                        translate([0, 0, -leg_h/2-wheel_r/2-2])\n                            rotate([90, 0, 0])\n                                cylinder(h=wall_t*3, d=wheel_r*2, $fn=32);\n                    }\n        }\n    }\n}\n\n// Firebox module\nmodule firebox() {\n    difference() {\n        // Outer firebox\n        cylinder(h=firebox_h, d=firebox_d, $fn=64);\n        \n        // Inner cavity\n        translate([0, 0, -1])\n            cylinder(h=firebox_h+2, d=firebox_d-wall_t*2, $fn=64);\n    }\n}\n\n// Grate module\nmodule cooking_grate() {\n    difference() {\n        // Grate disk\n        cylinder(h=grate_t, d=grate_d, $fn=64);\n        \n        // Ventilation holes\n        for(i = [0:45:360]) {\n            rotate([0, 0, i])\n                for(j = [grate_d/4, grate_d/3]) {\n                    translate([j, 0, -1])\n                        cube([grate_t*2, 4, grate_t+2], center=true);\n                }\n        }\n    }\n}\n\n// Side shelves\nmodule side_shelf() {\n    rotate([0, 90, 0])\n        difference() {\n            // Shelf top\n            translate([0, 0, body_d/2+20])\n                cube([30, body_d/2, wall_t*2], center=true);\n            \n            // Support brace\n            translate([0, body_d/4, body_d/2+10])\n                cube([wall_t*2, wall_t*2, 20], center=true);\n        }\n}\n\n// Assembly\nunion() {\n    // Color assignments\n    color(color_body) {\n        kamado_body();\n        kamado_lid();\n        firebox();\n    }\n    \n    color(color_trim) {\n        handle();\n        kamado_base();\n        cooking_grate();\n    }\n    \n    color(color_wood) {\n        translate([0, body_d/2+15, body_h/2])\n            side_shelf();\n        translate([0, -body_d/2-15, body_h/2])\n            mirror([0, 1, 0])\n                side_shelf();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "samovar",
    "openscad_code": "// Samovar Kitchen Appliance - Medium Complexity\n// Realistic style, 3D printable design\n\n// Overall dimensions\nsamovar_height = 120;\nsamovar_base_diameter = 80;\nwall_thickness = 2;\n\n// Main body module\nmodule samovar_body() {\n    difference() {\n        // Main cylindrical body\n        cylinder(h = samovar_height * 0.6, d = samovar_base_diameter, $fn = 64);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cylinder(h = samovar_height * 0.6 - wall_thickness, d = samovar_base_diameter - wall_thickness * 2, $fn = 64);\n        \n        // Top opening for water\n        translate([0, 0, samovar_height * 0.6 - wall_thickness])\n            cylinder(h = wall_thickness * 2, d = samovar_base_diameter * 0.4, $fn = 32);\n    }\n    \n    // Bottom base ring\n    translate([0, 0, -1])\n        cylinder(h = wall_thickness * 3, d = samovar_base_diameter + 10, $fn = 64);\n}\n\n// Spigot module\nmodule spigot() {\n    union() {\n        // Main spigot body\n        translate([samovar_base_diameter/2 + 5, 0, samovar_height * 0.3])\n            rotate([90, 0, 0])\n                cylinder(h = 20, d1 = 12, d2 = 8, $fn = 32);\n        \n        // Handle\n        translate([samovar_base_diameter/2 + 5, -8, samovar_height * 0.3 + 5])\n            rotate([0, 0, 90])\n                cube([16, 6, 6], center = true);\n    }\n}\n\n// Handles on sides\nmodule side_handles() {\n    for (angle = [0, 180]) {\n        rotate([0, 0, angle])\n            translate([0, samovar_base_diameter/2 + 5, samovar_height * 0.7])\n                difference() {\n                    // Handle bracket\n                    union() {\n                        cube([wall_thickness * 6, 20, wall_thickness * 4], center = true);\n                        translate([0, 10 - wall_thickness/2, 0])\n                            cube([wall_thickness * 6, wall_thickness, wall_thickness * 4], center = true);\n                    }\n                    // Screw hole\n                    translate([0, 8, 0])\n                        cylinder(h = wall_thickness * 6, d = 3, center = true, $fn = 16);\n                }\n    }\n}\n\n// Chimney tube\nmodule chimney() {\n    union() {\n        // Central chimney\n        translate([0, 0, samovar_height * 0.6])\n            cylinder(h = samovar_height * 0.4, d = samovar_base_diameter * 0.25, $fn = 32);\n        \n        // Chimney top cap\n        translate([0, 0, samovar_height * 0.6 + samovar_height * 0.4])\n            cylinder(h = 5, d = samovar_base_diameter * 0.3, $fn = 32);\n        \n        // Smoke holes\n        for (i = [1:4]) {\n            rotate([0, 0, i * 90])\n                translate([0, samovar_base_diameter * 0.125, samovar_height * 0.6 + samovar_height * 0.2])\n                    difference() {\n                        cube([wall_thickness * 2, 8, 6], center = true);\n                        translate([0, 0, -wall_thickness])\n                            cube([wall_thickness * 2 + 1, 8 + 1, 8], center = true);\n                    }\n        }\n    }\n}\n\n// Control dial\nmodule control_dial() {\n    translate([samovar_base_diameter/2 - 10, 0, samovar_height * 0.15])\n        difference() {\n            // Dial body\n            cylinder(h = 8, d = 16, $fn = 32);\n            // Indicator line\n            translate([0, 6, 4])\n                cube([1, 2, 8], center = true);\n            // Knurling\n            for (i = [1:20]) {\n                rotate([0, 0, i * 18])\n                    translate([7, 0, 4])\n                        cube([0.5, 1, 8], center = true);\n            }\n        }\n}\n\n// Legs\nmodule legs() {\n    for (i = [1:3]) {\n        rotate([0, 0, i * 120])\n            translate([samovar_base_diameter/2 - 10, 0, 0])\n                difference() {\n                    // Leg body\n                    cube([wall_thickness * 3, wall_thickness * 3, samovar_height * 0.15], center = true);\n                    // Taper bottom\n                    translate([0, 0, -samovar_height * 0.075 - 0.1])\n                        cube([wall_thickness * 4, wall_thickness * 4, 0.5], center = true);\n                }\n    }\n}\n\n// Tea glass holder\nmodule tea_glass_holder() {\n    translate([0, 0, samovar_height * 0.2])\n        difference() {\n            // Holder ring\n            cylinder(h = wall_thickness * 2, d = samovar_base_diameter * 0.8, $fn = 64);\n            // Inner hole\n            cylinder(h = wall_thickness * 3, d = samovar_base_diameter * 0.5, $fn = 32);\n        }\n}\n\n// Main assembly\nunion() {\n    samovar_body();\n    spigot();\n    side_handles();\n    chimney();\n    control_dial();\n    legs();\n    tea_glass_holder();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "spiralizer",
    "openscad_code": "// Spiralizer Kitchen Appliance - Realistic Style, Medium Complexity\n// Approximate size: 120mm x 80mm x 150mm\n\n// Main body parameters\nbody_width = 120;\nbody_depth = 80;\nbody_height = 40;\nwall_thickness = 2;\n\n// Handle parameters\nhandle_length = 60;\nhandle_diameter = 15;\n\n// Blade assembly parameters\nblade_diameter = 70;\nblade_thickness = 3;\nblade_teeth = 8;\n\n// Container parameters\ncontainer_width = 80;\ncontainer_depth = 70;\ncontainer_height = 45;\n\n// Suction base parameters\nbase_diameter = 100;\nbase_height = 8;\n\n// Control knob parameters\nknob_diameter = 18;\nknob_height = 10;\n\nmodule main_body() {\n    // Main housing\n    difference() {\n        cube([body_width, body_depth, body_height], center=true);\n        translate([0, 0, wall_thickness/2])\n            cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness], center=true);\n    }\n    \n    // Top surface with rounded edges\n    translate([0, 0, body_height/2])\n        difference() {\n            cube([body_width, body_depth, 5], center=true);\n            translate([0, 0, -2.5])\n                cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, 10], center=true);\n        }\n}\n\nmodule handle_assembly() {\n    // Crank handle\n    translate([-body_width/2 - handle_length/2, 0, 0])\n        rotate([90, 0, 0])\n            cylinder(h=handle_length, d=handle_diameter, center=true);\n    \n    // Handle grip\n    translate([-body_width/2 - handle_length - 10, 0, 0])\n        sphere(d=20);\n    \n    // Crank arm\n    translate([-body_width/2 - 5, 0, 0])\n        cube([10, 10, 20], center=true);\n}\n\nmodule blade_disc() {\n    // Main blade disc\n    rotate([0, 0, $t*360])\n    translate([0, 0, body_height/2 + 10])\n        difference() {\n            cylinder(h=blade_thickness, d=blade_diameter, center=true);\n            \n            // Central hole\n            cylinder(h=blade_thickness+1, d=15, center=true);\n            \n            // Cutting teeth\n            for(i=[0:blade_teeth-1]) {\n                rotate([0, 0, i*360/blade_teeth])\n                    translate([blade_diameter/2 - 8, 0, 0])\n                        cube([16, 3, blade_thickness+1], center=true);\n            }\n        }\n}\n\nmodule food_container() {\n    // Main container\n    difference() {\n        translate([0, body_depth/2 + container_depth/2 + 10, 0])\n            cube([container_width, container_depth, container_height], center=true);\n        translate([0, body_depth/2 + container_depth/2 + 10, -wall_thickness/2])\n            cube([container_width-wall_thickness*2, container_depth-wall_thickness*2, container_height-wall_thickness], center=true);\n    }\n    \n    // Container lip\n    translate([0, body_depth/2 + container_depth/2 + 10, container_height/2 + 2])\n        cube([container_width+4, container_depth+4, 4], center=true);\n}\n\nmodule suction_base() {\n    // Base with suction cups\n    translate([0, 0, -body_height/2 - base_height/2])\n        difference() {\n            cylinder(h=base_height, d=base_diameter, center=true);\n            \n            // Suction cup recesses\n            for(x=[-30, 30]) {\n                for(y=[-20, 20]) {\n                    translate([x, y, -1])\n                        cylinder(h=base_height+2, d=15, center=false);\n                }\n            }\n        }\n}\n\nmodule control_knob() {\n    // Speed control knob\n    translate([body_width/2 - 15, -body_depth/2 + 15, body_height/2 + 5])\n        difference() {\n            cylinder(h=knob_height, d=knob_diameter, center=false);\n            translate([0, 0, -1])\n                cylinder(h=knob_height+2, d=8, center=false);\n        }\n    \n    // Knob indicator mark\n    translate([body_width/2 - 15, -body_depth/2 + 15, body_height/2 + knob_height + 1])\n        cube([2, 6, 2], center=true);\n}\n\nmodule feed_tube() {\n    // Vertical feed tube\n    translate([-body_width/4, 0, body_height/2 + 25])\n        difference() {\n            cylinder(h=30, d=25, center=true);\n            cylinder(h=31, d=20, center=true);\n        }\n    \n    // Food pusher\n    translate([-body_width/4, 0, body_height/2 + 40])\n        cylinder(h=20, d=18, center=true);\n}\n\n// Assembly\nunion() {\n    main_body();\n    handle_assembly();\n    blade_disc();\n    food_container();\n    suction_base();\n    control_knob();\n    feed_tube();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coffeemaker",
    "openscad_code": "// Medium-complexity realistic coffeemaker model (â‰ˆ115 mm tall)\n// All dimensions in millimetres, 2 mm wall thickness for 3D printing\n// No overhangs >45Â°, all parts printable without supports\n\n$fn = 30;\n\n// Overall scale\nscale_factor = 1;\n\n/* Main body shell */\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([80, 90, 110], center = true);\n        // Hollow inside\n        translate([0, 0, 5])\n            cube([76, 86, 100], center = true);\n    }\n}\n\n/* Water reservoir on the back */\nmodule reservoir() {\n    difference() {\n        translate([0, -48, 25])\n            cube([60, 20, 70], center = true);\n        translate([0, -48, 27])\n            cube([56, 16, 66], center = true);\n    }\n}\n\n/* Shower head above filter basket */\nmodule shower_head() {\n    translate([0, 0, 35])\n        cylinder(h = 8, r1 = 18, r2 = 20, center = true);\n}\n\n/* Filter basket holder */\nmodule basket_holder() {\n    difference() {\n        translate([0, 0, 10])\n            cylinder(h = 20, r = 22, center = true);\n        translate([0, 0, 12])\n            cylinder(h = 16, r = 20, center = true);\n    }\n}\n\n/* Carafe plate with ribs for strength */\nmodule hotplate() {\n    difference() {\n        translate([0, 0, -53])\n            cube([60, 60, 6], center = true);\n        translate([0, 0, -50])\n            cube([56, 56, 2], center = true);\n    }\n    // Ribs for stiffness\n    for(i = [-20:10:20])\n        translate([i, 0, -50])\n            cube([2, 56, 4], center = true);\n}\n\n/* Control panel */\nmodule control_panel() {\n    difference() {\n        translate([0, 48, 20])\n            cube([70, 8, 30], center = true);\n        translate([0, 48, 22])\n            cube([66, 4, 26], center = true);\n    }\n    // Buttons\n    translate([-20, 52, 20])\n        cylinder(h = 4, r = 4);\n    translate([0, 52, 20])\n        cylinder(h = 4, r = 4);\n    translate([20, 52, 20])\n        cylinder(h = 4, r = 4);\n}\n\n/* Drip spout */\nmodule spout() {\n    translate([0, 0, 0])\n        cylinder(h = 15, r1 = 12, r2 = 8);\n}\n\n/* Handle for carafe */\nmodule handle() {\n    difference() {\n        translate([0, 35, -25])\n            cube([8, 60, 10], center = true);\n        translate([0, 35, -25])\n            cube([4, 56, 6], center = true);\n    }\n}\n\n/* Carafe body */\nmodule carafe() {\n    difference() {\n        translate([0, 0, -25])\n            cylinder(h = 50, r = 18);\n        translate([0, 0, -23])\n            cylinder(h = 46, r = 16);\n    }\n}\n\n/* Display window */\nmodule display() {\n    translate([0, 45, 30])\n        cube([30, 2, 15], center = true);\n}\n\n/* Ventilation slots */\nmodule vents() {\n    for(i = [-30:10:30])\n        translate([i, 0, 55])\n            cube([6, 90, 4], center = true);\n}\n\n/* Assembly */\nscale([scale_factor, scale_factor, scale_factor]) {\n    union() {\n        body();\n        reservoir();\n        shower_head();\n        basket_holder();\n        hotplate();\n        control_panel();\n        display();\n        vents();\n    }\n    // Carafe assembly\n    translate([0, 0, 0]) {\n        carafe();\n        handle();\n        spout();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "brewmaster",
    "openscad_code": "// Brewmaster Kitchen Appliance â€“ compact, medium-complexity, 3D-printable\n// Overall size: ~100 mm wide, 80 mm deep, 110 mm high\n\n// Global parameters\nwall = 2;           // 2 mm wall thickness for 3D printability\nr_base = 45;        // base radius\nh_tot  = 110;       // total height\nh_base = 25;        // base height\nh_body = 55;        // cylindrical body height\nr_body = 30;        // body radius\nr_knob = 8;         // knob radius\nh_knob = 5;         // knob height\nr_spout = 5;        // spout radius\nl_spout = 25;       // spout length\nleg_h = 3;          // foot height\nleg_r = 5;          // foot radius\n\n// Main body module\nmodule brewmaster() {\n    // Base\n    difference() {\n        cylinder(h=h_base, r=r_base, $fn=60);\n        translate([0,0,wall])\n            cylinder(h=h_base, r=r_base-wall, $fn=60);\n    }\n\n    // Cylindrical tank\n    translate([0,0,h_base])\n    difference() {\n        cylinder(h=h_body, r=r_body, $fn=60);\n        translate([0,0,wall])\n            cylinder(h=h_body, r=r_body-wall, $fn=60);\n    }\n\n    // Lid\n    translate([0,0,h_base+h_body])\n    difference() {\n        cylinder(h=wall, r=r_body, $fn=60);\n        translate([0,0,wall/2])\n            cylinder(h=wall, r=r_body-wall, $fn=60);\n    }\n\n    // Handle on lid (knob)\n    translate([0,0,h_base+h_body+h_knob])\n    difference() {\n        cylinder(h=h_knob, r=r_knob, $fn=30);\n        translate([0,0,wall])\n            cylinder(h=h_knob, r=r_knob-wall, $fn=30);\n    }\n\n    // Spout (hollow cylinder angled 30Â°)\n    translate([r_body,0,h_base+h_body/2])\n    rotate([0,30,0])\n    difference() {\n        cylinder(h=l_spout, r=r_spout, $fn=20);\n        translate([0,0,wall])\n            cylinder(h=l_spout, r=r_spout-wall, $fn=20);\n    }\n\n    // Simple control dial on front\n    translate([0,r_body-2,h_base+h_body/2])\n    rotate([90,0,0])\n    difference() {\n        cylinder(h=4, r=6, $fn=20);\n        translate([0,0,wall])\n            cylinder(h=4, r=6-wall, $fn=20);\n    }\n\n    // 4 support legs\n    for(a=[0,90,180,270])\n    rotate([0,0,a])\n    translate([r_base-leg_r-3,0,0])\n    difference() {\n        cylinder(h=leg_h, r=leg_r, $fn=20);\n        translate([0,0,wall])\n            cylinder(h=leg_h, r=leg_r-wall, $fn=20);\n    }\n}\n\n// Render\nbrewmaster();",
    "renders": true
  },
  {
    "kitchen_appliance": "steamkettle",
    "openscad_code": "// Steam Kettle\n// Dimensions in mm, wall thickness â‰ˆ 2 mm, 3D-printable\n\n// Overall size\nkettle_height = 120;\nkettle_width  = 90;\n\n// Wall thickness\nwall = 2;\n\n// Module for rounded cylinder (helps avoid overhangs)\nmodule rounded_cylinder(h, r, rounding=2) {\n    union() {\n        cylinder(h=h-2*rounding, r=r, $fn=48);\n        translate([0,0,h-rounding]) cylinder(h=rounding, r1=r, r2=r-rounding, $fn=48);\n        translate([0,0,0]) cylinder(h=rounding, r1=r-rounding, r2=r, $fn=48);\n    }\n}\n\n// Main kettle body\nmodule kettle_body() {\n    difference() {\n        rounded_cylinder(h=80, r=kettle_width/2);           // Outer shell\n        translate([0,0,wall]) rounded_cylinder(h=80-wall, r=kettle_width/2-wall); // Inner cavity\n    }\n}\n\n// Spout with gradual slope (no overhangs >45Â°)\nmodule spout() {\n    translate([kettle_width/2-10,0,50]) rotate([0,-30,0]) {\n        difference() {\n            cylinder(h=45, r1=10, r2=7, $fn=32);\n            translate([0,0,wall]) cylinder(h=45-wall, r1=10-wall, r2=7-wall, $fn=32);\n        }\n    }\n}\n\n// Handle loop\nmodule handle() {\n    translate([-kettle_width/2-15,0,50]) rotate([90,0,0]) {\n        difference() {\n            rounded_cylinder(h=70, r=8);\n            translate([0,0,wall]) rounded_cylinder(h=70, r=8-wall);\n        }\n    }\n}\n\n// Lid with knob\nmodule lid() {\n    difference() {\n        cylinder(h=8, r=kettle_width/2-1, $fn=48);               // Lid disc\n        translate([0,0,wall]) cylinder(h=8, r=kettle_width/2-1-wall, $fn=48);\n    }\n    // Knob\n    translate([0,0,8]) rounded_cylinder(h=10, r=8);\n}\n\n// Base with feet\nmodule base() {\n    union() {\n        // Heating plate ring\n        translate([0,0,-5]) rounded_cylinder(h=5, r=kettle_width/2+2);\n        // Four feet\n    for (a=[0:90:270]) rotate([0,0,a])\n        translate([kettle_width/2-5,0,-10]) rounded_cylinder(h=5, r=4);\n    }\n}\n\n// Power switch button\nmodule power_button() {\n    translate([-kettle_width/2+5,0,25]) {\n        difference() {\n            rounded_cylinder(h=10, r=6);\n            translate([0,0,wall]) rounded_cylinder(h=10-wall, r=6-wall);\n        }\n    }\n}\n\n// Water level indicator\nmodule water_level() {\n    translate([kettle_width/2-1,0,10]) {\n        for (i=[0:10:40])\n            translate([0,0,i]) cube([wall, 3, 2]);\n    }\n}\n\n// Assemble the kettle\nkettle_body();\nspout();\nhandle();\ntranslate([0,0,80]) lid();\nbase();\npower_button();\nwater_level();",
    "renders": true
  },
  {
    "kitchen_appliance": "citruspress",
    "openscad_code": "// Citrus press kitchen appliance\n// Medium complexity, realistic style\n\n// Main dimensions (mm)\nbase_d = 90;\nbase_h = 15;\ncone_h = 35;\ncone_d = 50;\nhandle_len = 70;\nhandle_d = 12;\ncontainer_d = 80;\ncontainer_h = 50;\nspout_len = 20;\nbutton_d = 8;\nbutton_h = 3;\n\n// Wall thickness\nwall = 2;\n\nmodule base() {\n    // Main base with rounded corners\n    difference() {\n        cylinder(h=base_h, d=base_d, $fn=60);\n        translate([0, 0, -0.1])\n            cylinder(h=base_h+0.2, d=base_d-wall*2, $fn=60);\n    }\n    \n    // Rubber feet\n    for(i=[0:3]) {\n        rotate([0, 0, i*90+45])\n        translate([base_d/2-10, 0, -0.1])\n            cylinder(h=2, d=6, $fn=20);\n    }\n}\n\nmodule reamer() {\n    // Conical reamer\n    difference() {\n        cylinder(h=cone_h, d1=cone_d, d2=cone_d*0.8, $fn=6);\n        translate([0, 0, -0.1])\n            cylinder(h=cone_h+0.2, d1=cone_d-wall*2, d2=cone_d*0.8-wall*2, $fn=6);\n    }\n    \n    // Reamer ridges\n    for(i=[0:11]) {\n        rotate([0, 0, i*30])\n        translate([0, 0, cone_h/2])\n            cube([wall, cone_d*0.4, cone_h], center=true);\n    }\n}\n\nmodule handle() {\n    // Pivot point\n    translate([base_d/2-5, 0, base_h/2])\n    rotate([0, 90, 0])\n    cylinder(h=10, d=8, $fn=20);\n    \n    // Handle arm\n    translate([base_d/2-5, 0, base_h+5])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=handle_len, d=handle_d, $fn=20);\n        translate([0, 0, -0.1])\n            cylinder(h=handle_len+0.2, d=handle_d-wall*2, $fn=20);\n    }\n    \n    // Handle grip\n    translate([base_d/2-5, 0, base_h+handle_len-15])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h=20, d=handle_d+4, $fn=20);\n        translate([0, 0, -0.1])\n            cylinder(h=20+0.2, d=handle_d+2, $fn=20);\n    }\n}\n\nmodule container() {\n    // Juice container\n    difference() {\n        cylinder(h=container_h, d=container_d, $fn=60);\n        translate([0, 0, -0.1])\n            cylinder(h=container_h+0.2, d=container_d-wall*2, $fn=60);\n    }\n    \n    // Spout\n    rotate([0, 0, -30])\n    translate([container_d/2-10, 0, container_h/2])\n    difference() {\n        cube([spout_len, 20, wall*2], center=true);\n        translate([-spout_len/2, 0, -wall-0.1])\n            cube([spout_len+0.2, 16, wall*2+0.2], center=true);\n    }\n    \n    // Handle hole\n    translate([base_d/2-5, 0, base_h+handle_len/2])\n    rotate([90, 0, 0])\n    cylinder(h=20, d=15, $fn=20);\n}\n\nmodule controls() {\n    // Power button\n    translate([0, -base_d/3, base_h/2])\n    cylinder(h=button_h, d=button_d, $fn=20);\n    \n    // Direction indicator\n    translate([0, -base_d/3-15, base_h/2])\n    cube([10, 5, button_h], center=true);\n}\n\n// Assembly\nbase();\ntranslate([0, 0, base_h])\n    reamer();\nhandle();\ntranslate([0, 0, base_h])\n    container();\ncontrols();",
    "renders": true
  },
  {
    "kitchen_appliance": "espressoforge",
    "openscad_code": "// EspressoForge â€“ compact lever espresso maker\n// Overall size: ~90 mm wide Ã— 110 mm deep Ã— 140 mm tall (3D-printable)\n\n$fn = 32;               // smooth curves\nwall = 2;               // printable wall thickness\nscaleFactor = 1;        // easy global rescale\n\n// ---------- helper ----------\nmodule shell(h, base, top, wall) {\n    difference() {\n        cylinder(h=h, r1=base/2, r2=top/2, center=true);\n        translate([0,0,-h/2-1]) cylinder(h=h+2, r1=base/2-wall, r2=top/2-wall, center=true);\n    }\n}\n\n// ---------- main body ----------\nmodule body() {\n    difference() {\n        // outer block\n        translate([0,0,65]) cube([75,90,130], center=true);\n        // hollow interior\n        translate([0,0,68]) cube([71-2*wall, 86-2*wall, 120-2*wall], center=true);\n    }\n    // rounded front face\n    translate([0,45,65]) rotate([90,0,0]) shell(90, 75, 75, wall);\n}\n\n// ---------- water tank ----------\nmodule tank() {\n    color(\"skyblue\")\n    difference() {\n        translate([0,0,120]) cube([65,35,50], center=true);\n        translate([0,0,122]) cube([61-2*wall, 31-2*wall, 46-2*wall], center=true);\n    }\n}\n\n// ---------- lever arm ----------\nmodule lever() {\n    color(\"silver\")\n    union() {\n        // vertical column\n        translate([0,-25,140]) rotate([0,0,0]) cylinder(h=60, r=5, center=true);\n        // handle\n        translate([0,-55,175]) rotate([90,0,0]) cylinder(h=40, r=6, center=true);\n    }\n}\n\n// ---------- group head ----------\nmodule group() {\n    color(\"silver\")\n    difference() {\n        // main cylinder\n        translate([0,0,60]) cylinder(h=25, r=25, center=true);\n        // shower screen cavity\n        translate([0,0,60]) cylinder(h=8, r=20, center=true);\n    }\n}\n\n// ---------- drip tray ----------\nmodule tray() {\n    color(\"dimgray\")\n    difference() {\n        translate([0,0,15]) cube([80,90,10], center=true);\n        translate([0,0,16]) cube([76-2*wall, 86-2*wall, 8-2*wall], center=true);\n    }\n}\n\n// ---------- control dial ----------\nmodule dial() {\n    color(\"black\")\n    for (a=[0:60:300])\n        rotate([0,0,a])\n            translate([28,0,95]) cylinder(h=5, r=8, center=true);\n    cylinder(h=6, r=3, center=true); // knob shaft\n}\n\n// ---------- feet ----------\nmodule feet() {\n    color(\"dimgray\")\n    for (x=[-30,30])\n        for (y=[-35,35])\n            translate([x,y,-1]) cylinder(h=4, r=4, center=false);\n}\n\n// ---------- final assembly ----------\nscale(scaleFactor) union() {\n    body();\n    tank();\n    lever();\n    group();\n    tray();\n    dial();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "boilbuddy",
    "openscad_code": "// BoilBuddy Kitchen Appliance - Medium Complexity\n// Realistic style with 2mm walls, 3D-printable\n\n$fn=64;\nwall=2;\n\nmodule roundedBox(x,y,z,r){\n    translate([r,r,0]) cube([x-2*r,y-2*r,z]);\n    translate([r,0,0]) cube([x-2*r,r,z]);\n    translate([r,y-r,0]) cube([x-2*r,r,z]);\n    translate([0,r,0]) cube([r,y-2*r,z]);\n    translate([x-r,r,0]) cube([r,y-2*r,z]);\n    translate([r,r,z-r]) sphere(r);\n    translate([x-r,r,z-r]) sphere(r);\n    translate([r,y-r,z-r]) sphere(r);\n    translate([x-r,y-r,z-r]) sphere(r);\n    translate([r,r,r]) sphere(r);\n    translate([x-r,r,r]) sphere(r);\n    translate([r,y-r,r]) sphere(r);\n    translate([x-r,y-r,r]) sphere(r);\n}\n\n// Main body\ndifference(){\n    roundedBox(70,50,80,8);\n    translate([wall,wall,wall]) roundedBox(70-2*wall,50-2*wall,80-wall,6);\n}\n\n// Handle\ntranslate([-10,15,60]) rotate([0,30,0]) difference(){\n    cube([20,20,10]);\n    translate([wall,wall,wall]) cube([20-2*wall,20-2*wall,10-wall]);\n    translate([2,2,10]) cube([16,16,10]);\n}\n\n// Lid\ntranslate([0,0,80]) difference(){\n    roundedBox(70,50,10,8);\n    translate([2,2,2]) roundedBox(70-4,50-4,10-wall,6);\n}\n\n// Display\ntranslate([10,52,60]) difference(){\n    cube([50,5,15]);\n    translate([wall,0,wall]) cube([50-2*wall,wall,15-2*wall]);\n}\n\n// Buttons\nfor(i=[0:2]){\n    translate([15+15*i,55,65]) difference(){\n        cylinder(h=3,r=4);\n        translate([0,0,wall]) cylinder(h=3-wall,r=4-wall);\n    }\n}\n\n// Water level window\ntranslate([65,10,20]) difference(){\n    cube([5,30,40]);\n    translate([wall,wall,wall]) cube([5-wall,30-2*wall,40-2*wall]);\n}\n\n// Base with feet\ntranslate([-5,-5,-5]) difference(){\n    roundedBox(80,60,5,5);\n    translate([wall,wall,wall]) roundedBox(80-2*wall,60-2*wall,5-wall,3);\n}\n\n// Vent holes\nfor(i=[0:4]){\n    for(j=[0:1]){\n        translate([10+12*i,5+40*j,78]) rotate([90,0,0]) cylinder(h=wall,r=2);\n    }\n}\n\n// Power cord exit\ntranslate([35,52,-5]) rotate([0,90,0]) difference(){\n    cylinder(h=15,r=4);\n    translate([0,0,wall]) cylinder(h=15,r=4-wall);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "fruitsqueeze",
    "openscad_code": "// Medium complexity realistic fruitsqueeze kitchen appliance\n// Size: ~100mm tall, 3D printable with 2mm walls\n\n$fn = 50;  // Smooth curves\n\n// Main body parameters\nbody_w = 80;\nbody_d = 70;\nbody_h = 90;\n\n// Juice container\ncontainer_h = 50;\ncontainer_r = 30;\n\n// Handle parameters\nhandle_l = 60;\nhandle_r = 5;\n\n// Base plate thickness\nbase_t = 4;\n\nmodule fruitsqueeze() {\n    union() {\n        // Main cylindrical body\n        translate([0, 0, base_t/2])\n            cylinder(h=body_h, r1=body_w/2, r2=body_w/2-10, center=true);\n        \n        // Base plate\n        translate([0, 0, 0])\n            cube([body_w+10, body_d+10, base_t], center=true);\n        \n        // Juice container cup\n        translate([0, 0, base_t])\n            cylinder(h=container_h, r=container_r, r1=container_r, r2=container_r-3);\n        \n        // Container rim lip\n        translate([0, 0, base_t+container_h])\n            cylinder(h=3, r=container_r+2, r2=container_r+2);\n        \n        // Press mechanism top\n        translate([0, 0, base_t+container_h+20])\n            cylinder(h=15, r=body_w/2-5, center=true);\n        \n        // Press handle\n        rotate([90, 0, 0])\n            translate([0, -body_w/2-10, base_t+container_h+30])\n                cylinder(h=handle_l, r=handle_r);\n        \n        // Handle support bars\n        for(i=[-1, 1]) {\n            translate([i*25, 0, base_t+container_h+25])\n                rotate([0, 90, 0])\n                    cylinder(h=30, r=3);\n        }\n        \n        // Juice spout\n        translate([container_r, 0, base_t+container_h/2])\n            rotate([90, 0, 0])\n                cylinder(h=15, r1=8, r2=4);\n        \n        // Control buttons\n        for(i=[0:2]) {\n            translate([-body_w/4 + i*15, body_d/2+5, base_t+body_h/2])\n                cube([8, 2, 6], center=true);\n        }\n        \n        // Vent slots\n        for(i=[-2:2]) {\n            translate([0, body_d/2+2, base_t+15+i*15])\n                cube([body_w-20, 4, 2], center=true);\n        }\n        \n        // Rubber feet\n        for(x=[-1, 1]) {\n            for(y=[-1, 1]) {\n                translate([x*body_w/2-5, y*body_d/2-5, -1])\n                    cylinder(h=2, r=5);\n            }\n        }\n    }\n}\n\n// Create the fruitsqueeze\nfruitsqueeze();",
    "renders": true
  },
  {
    "kitchen_appliance": "beanbrew",
    "openscad_code": "// Beanbrew Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 80mm x 120mm x 150mm (WxDxH)\n\n// Main body parameters\nbody_width = 80;\nbody_depth = 120;\nbody_height = 140;\n\n// Wall thickness\nwall_thick = 2;\n\n// Water tank\ntank_width = 30;\ntank_depth = 25;\ntank_height = 100;\n\n// Bean hopper\nhopper_dia = 40;\nhopper_height = 35;\n\n// Cup clearance\ncup_clearance = 60;\n\nmodule body() {\n    // Main housing\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height], center=false);\n        \n        // Hollow interior\n        translate([wall_thick, wall_thick, wall_thick])\n            cube([body_width-2*wall_thick, body_depth-2*wall_thick, body_height-wall_thick], center=false);\n    }\n    \n    // Front panel\n    translate([0, body_depth-wall_thick, 0])\n        difference() {\n            cube([body_width, wall_thick, body_height], center=false);\n            \n            // Display window\n            translate([10, 0, 110])\n                cube([60, wall_thick+0.1, 20], center=false);\n        }\n}\n\nmodule water_tank() {\n    // Tank body\n    translate([body_width-wall_thick-tank_width, wall_thick, 0])\n        difference() {\n            cube([tank_width, tank_depth, tank_height], center=false);\n            translate([wall_thick, wall_thick, wall_thick])\n                cube([tank_width-2*wall_thick, tank_depth-2*wall_thick, tank_height-wall_thick], center=false);\n        }\n    \n    // Tank lid\n    translate([body_width-wall_thick-tank_width+wall_thick, wall_thick+2, tank_height])\n        cylinder(h=wall_thick, d=tank_width-2*wall_thick-4);\n}\n\nmodule bean_hopper() {\n    // Hopper\n    translate([body_width/2, body_depth/2-10, body_height]) {\n        // Main cylinder\n        cylinder(h=hopper_height, d=hopper_dia);\n        \n        // Inner cavity\n        translate([0, 0, wall_thick])\n            cylinder(h=hopper_height-wall_thick, d=hopper_dia-2*wall_thick);\n        \n        // Top lid\n        translate([0, 0, hopper_height+0.1])\n            cylinder(h=wall_thick, d=hopper_dia);\n    }\n}\n\nmodule drip_tray() {\n    // Tray base\n    translate([wall_thick, wall_thick, cup_clearance])\n        difference() {\n            cube([body_width-2*wall_thick, 30, 5], center=false);\n            translate([5, 5, 0])\n                cube([body_width-2*wall_thick-10, 20, 6], center=false);\n        }\n}\n\nmodule control_panel() {\n    // Buttons\n    for(i=[0:2]) {\n        translate([15 + i*25, body_depth-wall_thick, 100])\n            cylinder(h=3, d=8);\n    }\n    \n    // Power button\n    translate([body_width-15, body_depth-wall_thick, 100])\n        cylinder(h=3, d=12);\n    \n    // Dial\n    translate([body_width/2, body_depth-wall_thick, 80])\n        cylinder(h=8, d=20);\n}\n\nmodule spout() {\n    // Main spout\n    translate([body_width/2, body_depth/2, body_height-40])\n        union() {\n            // Vertical tube\n            cylinder(h=40, d=8);\n            \n            // Horizontal nozzle\n            rotate([90, 0, 0])\n                translate([0, 0, -20])\n                    cylinder(h=20, d=6);\n        }\n}\n\n// Assembly\nunion() {\n    body();\n    water_tank();\n    bean_hopper();\n    drip_tray();\n    control_panel();\n    spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "hotwave",
    "openscad_code": "// Hotwave (mini food warmer / warming drawer) â€“ 3D-printable, realistic style\n// Outer shell: 120 mm wide Ã— 80 mm deep Ã— 90 mm high\n// Wall thickness â‰ˆ 2 mm everywhere\n// All overhangs â‰¤ 45Â° or printable without supports\n\n// Overall dimensions\nwidth  = 120;\ndepth  = 80;\nheight = 90;\n\n$fn = 32;\n\nmodule hotwave() {\n    // Main body shell\n    difference() {\n        // Outer block\n        cube([width, depth, height], center = true);\n        // Hollow cavity\n        translate([0, 0, 1])  // leave bottom thickness\n            cube([width - 4, depth - 4, height - 2], center = true);\n    }\n\n    // Front panel\n    translate([0, depth/2 - 1, 0]) {\n        difference() {\n            cube([width, 2, height], center = true);\n            // Door opening\n            translate([0, 1, 0])\n                cube([width - 10, 4, height - 20], center = true);\n        }\n    }\n\n    // Door\n    translate([0, depth/2 + 1, 0]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                // Door slab\n                translate([0, 0, 1])\n                    cube([width - 10, height - 20, 2], center = true);\n                // Handle recess\n                translate([width/2 - 15, 0, 0])\n                    cube([30, 10, 4], center = true);\n            }\n            // Door handle bar\n            translate([width/2 - 15, 0, 2])\n                rotate([0, 90, 0])\n                    cylinder(h = 30, r = 2, center = true);\n        }\n    }\n\n    // Feet\n    for (x = [-width/2 + 10, width/2 - 10])\n        for (y = [-depth/2 + 10, depth/2 - 10])\n            translate([x, y, -height/2 + 1])\n                cylinder(h = 5, r1 = 3, r2 = 2);\n\n    // Ventilation grille strips (horizontal slats)\n    translate([width/2 - 3, 0, -height/2 + 20]) {\n        for (i = [0:5]) {\n            translate([0, 0, i * 8])\n                cube([2, depth - 4, 3], center = true);\n        }\n    }\n\n    // Control panel\n    translate([0, depth/2 - 6, height/2 - 12]) {\n        difference() {\n            // Panel base\n            cube([width - 40, 10, 6], center = true);\n            // Indicator window\n            translate([0, 0, 1])\n                cube([width - 50, 6, 2], center = true);\n        }\n        // Knobs\n        for (k = [-1, 1]) {\n            translate([k * 15, 0, 4])\n                cylinder(h = 6, r = 4, center = true);\n            translate([k * 15, 0, 7])\n                sphere(r = 4);\n        }\n    }\n\n    // Internal rack support rails (printable as part of walls)\n    for (z = [-height/4, 0, height/4]) {\n        translate([0, 0, z]) {\n            // Left rail\n            translate([-width/2 + 4, 0, 0])\n                cube([2, depth - 8, 4], center = true);\n            // Right rail\n            translate([width/2 - 4, 0, 0])\n                cube([2, depth - 8, 4], center = true);\n        }\n    }\n}\n\nhotwave();",
    "renders": true
  },
  {
    "kitchen_appliance": "veggiesqueeze",
    "openscad_code": "// VeggieSqueeze Kitchen Appliance - Medium Complexity\n// A hand-powered spiralizer for turning vegetables into noodles\n// Overall dimensions: ~110mm tall x 80mm wide x 120mm deep\n\n$fn = 36;\n\n// Main parameters\nwall_thickness = 2;\nbase_h = 15;\nbody_h = 60;\nhopper_h = 25;\ncrank_radius = 25;\nfeed_tube_d = 40;\n\n// Base module with rubber feet\nmodule base() {\n    // Main base plate\n    difference() {\n        cube([80, 120, base_h], center=true);\n        \n        // Hollow out interior\n        translate([0, 0, -1])\n            cube([76, 116, base_h+2], center=true);\n        \n        // Cable channel\n        translate([0, -50, 0])\n            cube([10, 20, base_h+2], center=true);\n    }\n    \n    // Rubber feet (4 corners)\n    for(x = [-30, 30])\n    for(y = [-50, 50]) {\n        translate([x, y, -base_h/2 - 1])\n            cylinder(h=2, d=8);\n    }\n}\n\n// Main body with collection area\nmodule body() {\n    // Main body shell\n    difference() {\n        translate([0, 0, base_h + body_h/2])\n            cube([70, 110, body_h], center=true);\n        \n        // Hollow interior\n        translate([0, 0, base_h + body_h/2])\n            cube([66, 106, body_h+2], center=true);\n        \n        // Output chute\n        translate([0, 55, base_h + body_h/2])\n            cube([50, 10, 30], center=true);\n        \n        // Crank hole\n        translate([-35, 0, base_h + body_h/2])\n            rotate([0, 90, 0])\n                cylinder(h=40, d=10, center=true);\n    }\n    \n    // Collection drawer front\n    translate([0, 65, base_h + 15])\n        cube([60, 2, 30], center=true);\n    \n    // Drawer handle\n    translate([0, 68, base_h + 15])\n        cube([40, 5, 5], center=true);\n}\n\n// Vegetable hopper and feed tube\nmodule hopper() {\n    // Feed tube\n    difference() {\n        translate([0, 0, base_h + body_h + hopper_h/2])\n            cylinder(h=hopper_h, d=feed_tube_d, center=true);\n        \n        // Hollow\n        translate([0, 0, base_h + body_h + hopper_h/2])\n            cylinder(h=hopper_h+2, d=feed_tube_d-4, center=true);\n    }\n    \n    // Hopper funnel\n    difference() {\n        translate([0, 0, base_h + body_h + hopper_h])\n            cylinder(h1=hopper_h*1.5, h2=0, d1=feed_tube_d*1.5, d2=feed_tube_d, center=false);\n        \n        // Hollow funnel\n        translate([0, 0, base_h + body_h + hopper_h])\n            cylinder(h1=hopper_h*1.5+1, h2=0, d1=feed_tube_d*1.5-4, d2=feed_tube_d-4, center=false);\n    }\n}\n\n// Crank mechanism\nmodule crank() {\n    // Main crank shaft\n    rotate([0, 90, 0])\n    translate([-35, 0, base_h + body_h/2])\n        cylinder(h=70, d=8);\n    \n    // Handle\n    rotate([0, 90, 0])\n    translate([35, 0, base_h + body_h/2])\n    rotate([90, 0, 0])\n        cylinder(h=15, d=20);\n    \n    // Handle grip\n    rotate([0, 90, 0])\n    translate([42, 0, base_h + body_h/2])\n    rotate([90, 0, 0])\n        cylinder(h=20, d=12);\n}\n\n// Control dial\nmodule control_dial() {\n    translate([30, -45, base_h + body_h - 10])\n    difference() {\n        cylinder(h=5, d=20);\n        cylinder(h=6, d=16);\n    }\n    \n    // Dial indicator\n    translate([30, -35, base_h + body_h - 7.5])\n        cube([2, 5, 1], center=true);\n}\n\n// Suction cups for stability\nmodule suction_cups() {\n    for(x = [-25, 25])\n    for(y = [-40, 40]) {\n        translate([x, y, -base_h/2 - 3])\n            difference() {\n                cylinder(h=5, d=15);\n                translate([0, 0, -1])\n                    cylinder(h=7, d=11);\n            }\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    hopper();\n    crank();\n    control_dial();\n    suction_cups();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "grindbrew",
    "openscad_code": "// GrindBrew Coffee Machine\n// Realistic style, medium complexity\n\n// Overall dimensions\nmachine_w = 100;\nmachine_d = 120;\nmachine_h = 130;\nwall_t = 2;\n\nmodule base() {\n    // Main body\n    difference() {\n        cube([machine_w, machine_d, machine_h/2], center=true);\n        translate([0, 0, wall_t/2])\n            cube([machine_w-wall_t*2, machine_d-wall_t*2, machine_h/2], center=true);\n    }\n}\n\nmodule bean_hopper() {\n    // Bean container on top\n    translate([0, machine_d/3, machine_h/2+15])\n    difference() {\n        cylinder(h=40, r1=20, r2=15, center=true);\n        translate([0,0,5])\n            cylinder(h=50, r1=18, r2=13, center=true);\n    }\n}\n\nmodule grinder_section() {\n    grinder_w = 35;\n    grinder_d = 30;\n    grinder_h = 25;\n    \n    translate([0, -machine_d/4, machine_h/4])\n    difference() {\n        cube([grinder_w, grinder_d, grinder_h], center=true);\n        translate([0,0,wall_t/2])\n            cube([grinder_w-wall_t*2, grinder_d-wall_t*2, grinder_h], center=true);\n    }\n}\n\nmodule water_tank() {\n    tank_w = 25;\n    tank_d = 20;\n    tank_h = 60;\n    \n    translate([-machine_w/2+15, machine_d/2-15, 0])\n    difference() {\n        cube([tank_w, tank_d, tank_h], center=true);\n        translate([0,0,wall_t/2])\n            cube([tank_w-wall_t*2, tank_d-wall_t*2, tank_h], center=true);\n    }\n}\n\nmodule control_panel() {\n    panel_w = 60;\n    panel_h = 30;\n    \n    translate([0, machine_d/2-wall_t, machine_h/4])\n    difference() {\n        cube([panel_w, wall_t, panel_h], center=true);\n        // Button holes\n        for(i=[-1,0,1]) {\n            translate([i*15, 0, 5])\n                cylinder(h=wall_t+1, r=3, center=true);\n        }\n    }\n    \n    // Buttons\n    for(i=[-1,0,1]) {\n        translate([i*15, machine_d/2-wall_t/2, machine_h/4+5])\n            cylinder(h=2, r=2.5, center=false);\n    }\n}\n\nmodule drip_tray() {\n    tray_w = 70;\n    tray_d = 40;\n    tray_h = 8;\n    \n    translate([0, -machine_d/2+25, -machine_h/3])\n    difference() {\n        // Tray base\n        cube([tray_w, tray_d, tray_h], center=true);\n        translate([0,0,wall_t])\n            cube([tray_w-wall_t*2, tray_d-wall_t*2, tray_h], center=true);\n    }\n    \n    // Grid pattern\n    for(x=[-tray_w/2+10:10:tray_w/2-10])\n        for(y=[-tray_d/2+5:5:tray_d/2-5])\n            translate([x, y, -machine_h/3+tray_h/2])\n                cube([1, 1, 2], center=true);\n}\n\nmodule spout() {\n    // Coffee spout\n    translate([0, -machine_d/4, 0])\n    rotate([0,90,0])\n    difference() {\n        cylinder(h=20, r=5, center=true);\n        cylinder(h=21, r=3, center=true);\n    }\n}\n\nmodule feet() {\n    // Support feet\n    foot_r = 5;\n    foot_h = 8;\n    \n    for(x=[-machine_w/2+15, machine_w/2-15])\n        for(y=[-machine_d/2+15, machine_d/2-15])\n            translate([x, y, -machine_h/2-foot_h/2])\n                cylinder(h=foot_h, r=foot_r, center=true);\n}\n\nunion() {\n    base();\n    bean_hopper();\n    grinder_section();\n    water_tank();\n    control_panel();\n    drip_tray();\n    spout();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "quickboil",
    "openscad_code": "// QuickBoil Electric Kettle - Realistic Style, Medium Complexity\n// Dimensions: ~110mm tall, ~90mm diameter\n\n$fn = 50;  // Smooth curves for printing\n\n// Main parameters\nkettle_height = 110;\nkettle_diameter = 90;\nwall_thickness = 2;\nbase_height = 15;\nhandle_clearance = 25;\n\n// Base module with feet\nmodule kettle_base() {\n    difference() {\n        // Main base cylinder\n        cylinder(h=base_height, d=kettle_diameter+6, center=true);\n        \n        // Hollow interior\n        translate([0, 0, -wall_thickness/2])\n            cylinder(h=base_height+1, d=kettle_diameter+2, center=true);\n        \n        // Cable notch at back\n        translate([0, -kettle_diameter/2-3, 0])\n            cube([12, 6, base_height+1], center=true);\n    }\n    \n    // Four rubber feet\n    for(i=[-1, 1]) {\n        for(j=[-1, 1]) {\n            translate([i*30, j*30, -base_height/2-0.5])\n                cylinder(h=2, d=8);\n        }\n    }\n}\n\n// Main kettle body\nmodule kettle_body() {\n    difference() {\n        // Outer shell with curved profile\n        translate([0, 0, kettle_height/2])\n            scale([1, 1, 1.2])\n                cylinder(h=kettle_height, d=kettle_diameter);\n        \n        // Inner hollow\n        translate([0, 0, wall_thickness])\n            cylinder(h=kettle_height-wall_thickness*2, d=kettle_diameter-wall_thickness*2);\n        \n        // Water fill line indicator (groove)\n        translate([0, 0, kettle_height*0.7])\n            rotate([90, 0, 0])\n                cylinder(h=1, d=kettle_diameter+1);\n    }\n    \n    // Water level window\n    difference() {\n        translate([kettle_diameter/2-wall_thickness-1, 0, kettle_height*0.6])\n            cube([wall_thickness+2, 20, 30], center=true);\n        \n        translate([kettle_diameter/2+1, 0, kettle_height*0.6])\n            cube([0.5, 18, 28], center=true);\n    }\n}\n\n// Handle assembly\nmodule handle() {\n    // Main handle grip\n    translate([kettle_diameter/2+5, 0, kettle_height*0.6])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=handle_clearance, d=15);\n                cylinder(h=handle_clearance+1, d=11);\n            }\n    \n    // Handle supports\n    for(pos=[0.2, 0.8]) {\n        translate([kettle_diameter/2-2, 0, kettle_height*pos])\n            rotate([0, 90, 0])\n                cylinder(h=15, d=8);\n    }\n}\n\n// Lid and spout assembly\nmodule lid_and_spout() {\n    // Hinged lid\n    translate([0, 0, kettle_height-wall_thickness/2])\n        difference() {\n            cylinder(h=wall_thickness*2, d=kettle_diameter-wall_thickness);\n            cylinder(h=wall_thickness*2+1, d=kettle_diameter-wall_thickness*4);\n        }\n    \n    // Lid handle\n    translate([0, 0, kettle_height+wall_thickness])\n        cylinder(h=8, d=12);\n    \n    // Spout\n    translate([0, kettle_diameter/2-5, kettle_height*0.8])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=25, d1=25, d2=18);\n                translate([0, 0, wall_thickness])\n                    cylinder(h=25, d1=21, d2=14);\n            }\n    \n    // Spout mesh guard (simplified)\n    translate([0, kettle_diameter/2-5+25, kettle_height*0.8])\n        cube([20, 0.5, 15], center=true);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([kettle_diameter/2-10, 0, base_height+2])\n        cube([20, 30, 5], center=true);\n    \n    // Power button\n    translate([kettle_diameter/2-5, -8, base_height+7])\n        cylinder(h=3, d=8);\n    \n    // Temperature dial\n    translate([kettle_diameter/2-5, 8, base_height+7])\n        cylinder(h=2, d=12);\n    \n    // LED indicator\n    translate([kettle_diameter/2-5, 0, base_height+9])\n        sphere(d=4);\n}\n\n// Assembly\nunion() {\n    kettle_base();\n    translate([0, 0, base_height/2])\n        kettle_body();\n    handle();\n    lid_and_spout();\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "pulppress",
    "openscad_code": "// PulpPress Kitchen Appliance - Medium Complexity Realistic Style\n\n// Overall dimensions\nwidth = 120;\ndepth = 90;\nheight = 160;\n\n// Wall thickness\nwall = 2;\n\n// Main body module\nmodule body() {\n    // Base container\n    difference() {\n        // Outer shell\n        cube([width, depth, height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, wall/2])\n        cube([width-wall*2, depth-wall*2, height-wall], center=true);\n    }\n}\n\n// Press mechanism module\nmodule press() {\n    // Central shaft\n    translate([0, 0, height/2 + 20])\n    cylinder(h=40, r=15, center=true);\n    \n    // Press plate\n    translate([0, 0, height/2 - 20])\n    difference() {\n        cylinder(h=wall*2, r=width/2 - 10);\n        translate([0, 0, -1])\n        cylinder(h=wall*4, r=width/2 - 12);\n    }\n    \n    // Handle\n    translate([0, 0, height/2 + 40])\n    rotate([90, 0, 0])\n    cylinder(h=60, r=8);\n    \n    // Handle grip\n    translate([0, 30, height/2 + 40])\n    sphere(r=12);\n}\n\n// Collection container module\nmodule collection_bin() {\n    translate([0, 0, -(height/2 + 15)])\n    difference() {\n        // Outer container\n        cube([width - 20, depth - 20, 30], center=true);\n        \n        // Inner cavity\n        cube([width - 24, depth - 24, 28], center=true);\n        \n        // Pour spout\n        translate([width/2 - 10, 0, -15])\n        rotate([0, 0, -15])\n        cube([20, 30, 20]);\n    }\n}\n\n// Filter mesh module\nmodule filter() {\n    translate([0, 0, height/2 - 35])\n    difference() {\n        // Main filter plate\n        cylinder(h=wall, r=width/2 - 15);\n        \n        // Holes pattern\n        for(i = [-3:3]) {\n            for(j = [-3:3]) {\n                if(i*i + j*j < 9) {\n                    translate([i*10, j*10, -1])\n                    cylinder(h=wall+2, r=2);\n                }\n            }\n        }\n    }\n}\n\n// Control panel module\nmodule controls() {\n    translate([width/2 - 15, 0, height/2 - 10])\n    difference() {\n        // Panel base\n        cube([20, 40, wall*2], center=true);\n        \n        // Button holes\n        translate([-5, 10, -1])\n        cylinder(h=wall+2, r=4);\n        translate([-5, -10, -1])\n        cylinder(h=wall+2, r=4);\n    }\n    \n    // Buttons\n    translate([width/2 - 15, 10, height/2 - 10])\n    cylinder(h=3, r=3.5);\n    \n    translate([width/2 - 15, -10, height/2 - 10])\n    cylinder(h=3, r=3.5);\n}\n\n// Side supports\nmodule supports() {\n    // Left support\n    translate([-width/2 - 5, 0, 0])\n    cube([10, depth - 20, height], center=true);\n    \n    // Right support\n    translate([width/2 + 5, 0, 0])\n    cube([10, depth - 20, height], center=true);\n    \n    // Base reinforcement\n    translate([0, 0, -(height/2 + 5)])\n    cube([width + 20, depth + 10, 10], center=true);\n}\n\n// Assembly\nunion() {\n    body();\n    press();\n    collection_bin();\n    filter();\n    controls();\n    supports();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "aromacraft",
    "openscad_code": "// Aromacraft essential oil diffuser - realistic style, medium complexity\n// Overall footprint: 110 mm diameter, 150 mm height\n\n$fn = 64;\n\n// Main body module\nmodule aromacraft() {\n    // Base with rubber feet recesses\n    difference() {\n        cylinder(h = 15, d = 110);\n        translate([0, 0, 13]) cylinder(h = 5, d = 108);\n        \n        // Rubber feet cutouts\n        for (i = [0:3]) {\n            rotate([0, 0, i * 90])\n                translate([45, 0, 0]) cylinder(h = 2, d = 8);\n        }\n    }\n    \n    // Inner base cylinder for electronics housing\n    translate([0, 0, 15]) cylinder(h = 20, d = 106);\n    \n    // Outer shell with slight taper\n    translate([0, 0, 15]) cylinder(h1 = 85, h2 = 80, d1 = 108, d2 = 100);\n    \n    // Water reservoir\n    difference() {\n        translate([0, 0, 35]) cylinder(h = 65, d = 96);\n        translate([0, 0, 38]) cylinder(h = 60, d = 92);\n    }\n    \n    // Lid\n    difference() {\n        translate([0, 0, 100]) cylinder(h = 8, d = 102);\n        translate([0, 0, 105]) cylinder(h = 5, d = 98);\n    }\n    \n    // Vapor outlet\n    translate([0, 0, 108]) cylinder(h = 12, d1 = 30, d2 = 35);\n    \n    // Control panel\n    translate([-50, 0, 25]) cube([20, 30, 2]);\n    \n    // Buttons\n    for (i = [0:2]) {\n        translate([-45, -10 + i * 10, 27.5]) cylinder(h = 2, d = 6);\n    }\n    \n    // LED ring\n    translate([0, 0, 34]) difference() {\n        cylinder(h = 2, d = 104);\n        cylinder(h = 3, d = 100);\n    }\n    \n    // Power cable entry\n    rotate([90, 0, 0]) translate([0, -55, 10]) cylinder(h = 10, d = 12);\n    \n    // Structural ribs inside base\n    for (i = [0:3]) {\n        rotate([0, 0, i * 90 + 45])\n            translate([0, 0, 17]) cube([2, 70, 16], center = true);\n    }\n    \n    // Water level indicator window\n    translate([48, 0, 55]) difference() {\n        cube([4, 20, 25]);\n        translate([1, 2, 2]) cube([2, 16, 21]);\n    }\n    \n    // Essential oil dropper recess\n    translate([30, 48, 102]) difference() {\n        cylinder(h = 6, d = 15);\n        cylinder(h = 7, d = 12);\n    }\n}\n\n// Generate the aromacraft\naromacraft();",
    "renders": true
  },
  {
    "kitchen_appliance": "steamwhistle",
    "openscad_code": "// Steam whistle kitchen kettle module\n// Medium complexity realistic steam whistle kettle for 3D printing\n\n$fn = 36;\n\n// Main parameters\nkettle_height = 110;\nkettle_radius = 35;\nwall_thickness = 2;\n\nmodule kettle_body() {\n    difference() {\n        // Outer shell\n        cylinder(h = kettle_height, r = kettle_radius, center = false);\n        \n        // Inner cavity\n        translate([0, 0, wall_thickness])\n            cylinder(h = kettle_height - wall_thickness, r = kettle_radius - wall_thickness, center = false);\n    }\n}\n\nmodule base() {\n    // Bottom base ring\n    difference() {\n        cylinder(h = 8, r = kettle_radius + 5, center = false);\n        translate([0, 0, wall_thickness])\n            cylinder(h = 8, r = kettle_radius - 5, center = false);\n    }\n}\n\nmodule handle() {\n    // Main handle grip\n    translate([kettle_radius + 10, 0, kettle_height/2])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h = 40, r = 8, center = true);\n                cylinder(h = 45, r = 6, center = true);\n            }\n    \n    // Handle supports\n    translate([kettle_radius, 0, kettle_height*0.7])\n        rotate([90, 0, 0])\n            cylinder(h = 15, r = 4, center = false);\n            \n    translate([kettle_radius, 0, kettle_height*0.3])\n        rotate([90, 0, 0])\n            cylinder(h = 15, r = 4, center = false);\n}\n\nmodule spout() {\n    // Main spout\n    translate([0, -kettle_radius, kettle_height*0.6])\n        rotate([30, 0, 0])\n            difference() {\n                cylinder(h = 35, r1 = 12, r2 = 8, center = false);\n                translate([0, 0, wall_thickness])\n                    cylinder(h = 35, r1 = 10, r2 = 6, center = false);\n            }\n    \n    // Spout support\n    translate([0, -kettle_radius + 5, kettle_height*0.5])\n        cube([10, 10, 15], center = true);\n}\n\nmodule lid() {\n    // Lid disk\n    translate([0, 0, kettle_height])\n        difference() {\n            cylinder(h = 6, r = kettle_radius - 1, center = false);\n            translate([0, 0, wall_thickness])\n                cylinder(h = 8, r = kettle_radius - 3, center = false);\n        }\n    \n    // Lid handle\n    translate([0, 0, kettle_height + 8])\n        cylinder(h = 15, r = 5, center = false);\n    \n    // Steam vent holes\n    for(i = [0:5]) {\n        rotate([0, 0, i*60])\n            translate([kettle_radius/2, 0, kettle_height + 6])\n                cylinder(h = 3, r = 2, center = false);\n    }\n}\n\nmodule whistle_mechanism() {\n    // Whistle cap\n    translate([0, 0, kettle_height + 23])\n        difference() {\n            cylinder(h = 10, r = 10, center = false);\n            cylinder(h = 12, r = 8, center = false);\n        }\n    \n    // Whistle vents\n    for(i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([8, 0, kettle_height + 25])\n                cube([8, 2, 6], center = true);\n    }\n}\n\n// Button details\nmodule power_button() {\n    translate([kettle_radius - 5, 0, kettle_height*0.2])\n        difference() {\n            cylinder(h = 5, r = 6, center = false);\n            cylinder(h = 6, r = 4, center = false);\n        }\n}\n\n// Water level indicator\nmodule level_indicator() {\n    translate([kettle_radius - 1, 0, kettle_height*0.4])\n        difference() {\n            cube([4, 20, 25], center = true);\n            cube([5, 22, 27], center = true);\n        }\n}\n\n// Assembly\nunion() {\n    kettle_body();\n    base();\n    handle();\n    spout();\n    lid();\n    whistle_mechanism();\n    power_button();\n    level_indicator();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicejoy",
    "openscad_code": "// Juicejoy Kitchen Juicer - Realistic Style, Medium Complexity\n// Overall dimensions: ~110mm tall, ~90mm wide, ~90mm deep\n// Wall thickness: 2mm for 3D printability\n\n$fn = 50;\n\n// Main body module\nmodule juicer_body() {\n    // Base cylinder - main body\n    difference() {\n        cylinder(h = 60, r = 40);\n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h = 58, r = 38);\n    }\n    \n    // Top rim detail\n    translate([0, 0, 60])\n        cylinder(h = 5, r = 42);\n    \n    // Bottom feet (4 cylindrical feet)\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n            translate([30, 0, -3])\n                cylinder(h = 5, r = 5);\n    }\n}\n\n// Juice container - transparent part\nmodule juice_container() {\n    difference() {\n        // Main container\n        translate([0, 0, 65])\n            cylinder(h = 35, r1 = 35, r2 = 30);\n        // Hollow interior\n        translate([0, 0, 67])\n            cylinder(h = 33, r1 = 33, r2 = 28);\n    }\n    \n    // Pour spout\n    translate([0, 35, 82])\n        rotate([90, 0, 0])\n            cylinder(h = 15, r1 = 8, r2 = 5);\n}\n\n// Lid with pulp ejection chute\nmodule lid_with_chute() {\n    // Main lid\n    translate([0, 0, 100])\n        cylinder(h = 8, r = 35);\n    \n    // Pulp chute\n    translate([-20, 35, 100])\n        rotate([0, -30, 0])\n            cylinder(h = 25, r1 = 12, r2 = 10);\n    \n    // Feed tube\n    translate([0, 0, 108])\n        cylinder(h = 15, r = 15);\n    \n    // Feed tube inner hole\n    translate([0, 0, 110])\n        cylinder(h = 13, r = 12);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([40, 0, 30])\n        cube([8, 30, 15], center = true);\n    \n    // Power button\n    translate([44, -10, 37])\n        sphere(r = 4);\n    \n    // Speed dial\n    translate([44, 10, 37])\n        cylinder(h = 3, r = 6);\n    \n    // LED indicator\n    translate([44, 0, 37])\n        sphere(r = 2);\n}\n\n// Handle for juice container\nmodule handle() {\n    translate([25, 0, 82])\n        rotate([0, 90, 0])\n            difference() {\n                // Main handle\n                cylinder(h = 25, r = 5);\n                // Grip hole\n                translate([0, 0, 2])\n                    cylinder(h = 21, r = 3);\n            }\n}\n\n// Motor vent details\nmodule vents() {\n    for(i = [0:5]) {\n        translate([0, 0, i * 8 + 10])\n            difference() {\n                cylinder(h = 5, r = 40);\n                // Vent slots\n                for(j = [0:11]) {\n                    rotate([0, 0, j * 30])\n                        translate([35, 0, -1])\n                            cube([10, 2, 7]);\n                }\n            }\n    }\n}\n\n// Assembly\nunion() {\n    juicer_body();\n    juice_container();\n    lid_with_chute();\n    control_panel();\n    handle();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "dripmaster",
    "openscad_code": "// DripMaster Coffee Maker - Realistic Medium Complexity\n// Overall dimensions (mm): 120 x 100 x 160\n\n// Wall thickness constant\nwall = 2;\n\n// Main body module\nmodule main_body() {\n    difference() {\n        // Main chassis\n        cube([120, 100, 110], center=true);\n        // Hollow interior\n        translate([0, 0, 5])\n            cube([116, 96, 105], center=true);\n    }\n}\n\n// Water tank module\nmodule water_tank() {\n    translate([-30, 0, 75])\n    difference() {\n        // Tank body\n        cube([50, 70, 70], center=true);\n        // Tank hollow\n        translate([0, 0, -5])\n            cube([46, 66, 70], center=true);\n        // Water level window\n        translate([25, 0, 0])\n            cube([4, 40, 60], center=true);\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    translate([55, 0, 30])\n    difference() {\n        // Control surface\n        cube([8, 60, 30], center=true);\n        // Button holes\n        for (i = [-20, -10, 0, 10, 20]) {\n            translate([5, i, 5])\n                cylinder(h=10, r=3, center=true);\n        }\n    }\n}\n\n// Buttons module\nmodule buttons() {\n    for (i = [-20, -10, 0, 10, 20]) {\n        translate([60, i, 35])\n            cylinder(h=6, r=2.5, center=true);\n    }\n}\n\n// Carafe platform\nmodule carafe_platform() {\n    translate([0, 0, -55])\n    difference() {\n        // Platform base\n        cube([90, 90, 10], center=true);\n        // Drip tray recess\n        translate([0, 0, -2])\n            cube([86, 86, 6], center=true);\n    }\n}\n\n// Drip tray\nmodule drip_tray() {\n    translate([0, 0, -52])\n    difference() {\n        // Tray body\n        cube([84, 84, 4], center=true);\n        // Tray hollow\n        translate([0, 0, -1])\n            cube([80, 80, 4], center=true);\n    }\n}\n\n// Filter basket\nmodule filter_basket() {\n    translate([0, 0, 10])\n    difference() {\n        // Basket body\n        cylinder(h=20, r1=25, r2=20, center=true);\n        // Basket hollow\n        translate([0, 0, 0])\n            cylinder(h=22, r1=23, r2=18, center=true);\n    }\n}\n\n// Carafe\nmodule carafe() {\n    translate([0, 0, -35])\n    difference() {\n        // Carafe body\n        cylinder(h=35, r1=20, r2=15, center=true);\n        // Carafe hollow\n        translate([0, 0, 5])\n            cylinder(h=30, r1=18, r2=13, center=true);\n    }\n    \n    // Handle\n    translate([25, 0, -35])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h=25, r=5, center=true);\n        cylinder(h=25, r=3, center=true);\n    }\n}\n\n// Lid for water tank\nmodule tank_lid() {\n    translate([-30, 0, 115])\n    difference() {\n        cylinder(h=5, r=20, center=true);\n        cylinder(h=7, r=18, center=true);\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    water_tank();\n    control_panel();\n    buttons();\n    carafe_platform();\n    drip_tray();\n    filter_basket();\n    carafe();\n    tank_lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettleglow",
    "openscad_code": "// Kettleglow - a modern electric kettle with glowing LED ring\n// Overall height: 120mm, base diameter: 80mm\n\n// Parameters\nwall = 2;           // wall thickness for 3D printing\nbase_d = 80;        // base diameter\nbase_h = 20;        // base height\nbody_d = 70;        // main body diameter\nbody_h = 60;        // main body height\nneck_d = 50;        // neck diameter\nneck_h = 15;        // neck height\nlid_d = 52;         // lid diameter\nlid_h = 8;          // lid height\nspout_l = 35;       // spout length\nspout_d = 18;       // spout diameter\nhandle_w = 25;      // handle width\nhandle_h = 50;      // handle height\nglow_ring_h = 4;    // LED ring height\nbutton_size = 6;    // power button size\n\n// Main module\nmodule kettleglow() {\n    // Base with power button\n    union() {\n        // Main base cylinder\n        cylinder(h=base_h, d=base_d, $fn=64);\n        \n        // Power button\n        translate([base_d/2 - button_size/2 - 5, 0, base_h - button_size/2 - 2])\n            cube([button_size, button_size, button_size], center=true);\n    }\n    \n    // Main body\n    translate([0, 0, base_h])\n        cylinder(h=body_h, d=body_d, $fn=64);\n    \n    // Neck\n    translate([0, 0, base_h + body_h])\n        cylinder(h=neck_h, d1=body_d, d2=neck_d, $fn=64);\n    \n    // LED glow ring\n    translate([0, 0, base_h + body_h - glow_ring_h/2])\n        difference() {\n            cylinder(h=glow_ring_h, d=body_d + 4, $fn=64);\n            cylinder(h=glow_ring_h + 0.1, d=body_d, $fn=64);\n        }\n    \n    // Lid with knob\n    translate([0, 0, base_h + body_h + neck_h])\n        union() {\n            cylinder(h=lid_h, d=lid_d, $fn=64);\n            // Lid knob\n            translate([0, 0, lid_h])\n                cylinder(h=8, d=12, $fn=32);\n        }\n    \n    // Spout\n    translate([body_d/2 - 5, 0, base_h + body_h/2])\n        rotate([0, -30, 0])\n        union() {\n            // Spout body\n            cylinder(h=spout_l, d=spout_d, $fn=32);\n            // Spout opening\n            translate([0, 0, spout_l])\n                cylinder(h=spout_d, d1=spout_d, d2=spout_d - 4, $fn=32);\n        }\n    \n    // Handle\n    translate([-body_d/2 - 5, 0, base_h + body_h/2])\n        difference() {\n            // Main handle shape\n            rotate([0, 90, 0])\n                cylinder(h=handle_w, d=handle_h, $fn=32);\n            // Handle grip hole\n            rotate([0, 90, 0])\n                translate([0, 0, -1])\n                    cylinder(h=handle_w + 2, d=handle_h - 8, $fn=32);\n        }\n    \n    // Structural ribs inside body\n    for(i = [0:45:315]) {\n        rotate([0, 0, i])\n            translate([0, 0, base_h])\n                cube([wall, body_d/2 - 10, body_h], center=true);\n    }\n}\n\n// Render the kettle\nkettleglow();",
    "renders": true
  },
  {
    "kitchen_appliance": "fruitflow",
    "openscad_code": "// Realistic OpenSCAD model of a FruitFlow juicing appliance\n// Medium complexity, 3D-printable, ~110 mm tall\n\n$fn = 40; // smooth curves\n\n// Color definitions\ncolor_base = [0.9,0.9,0.9];\ncolor_body = [0.95,0.95,0.95];\ncolor_juice = [1,0.85,0.2];\ncolor_gray = [0.6,0.6,0.6];\n\nmodule main_body() {\n    difference() {\n        // Main shell\n        union() {\n            // Cylindrical body\n            translate([0,0,40])\n                cylinder(h=60, r1=35, r2=32);\n            // Base\n            translate([0,0,0])\n                cylinder(h=40, r1=40, r2=35);\n        }\n        // Hollow inside\n        translate([0,0,0])\n            cylinder(h=98, r1=32, r2=29);\n        // Top opening\n        translate([0,0,100])\n            cylinder(h=2, r=29);\n    }\n}\n\nmodule juice_container() {\n    difference() {\n        // Container body\n        translate([0,-45,30])\n            cube([35,50,40], center=true);\n        // Interior cavity\n        translate([0,-45,30])\n            cube([31,46,38], center=true);\n        // Spout\n        translate([17,-45,50])\n            rotate([0,90,0])\n            cylinder(h=10, r1=5, r2=0);\n    }\n}\n\nmodule feed_chute() {\n    // Feed chute tube\n    difference() {\n        translate([0,0,105])\n            cylinder(h=25, r1=15, r2=12);\n        translate([0,0,105])\n            cylinder(h=26, r1=12, r2=9);\n    }\n    // Chute lid\n    translate([0,0,130])\n    difference() {\n        cylinder(h=3, r=17);\n        translate([0,0,-1])\n            cylinder(h=5, r=14);\n    }\n    // Lid handle\n    translate([0,0,133])\n        cube([5,15,5], center=true);\n}\n\nmodule base_feet() {\n    for(i=[0:3]) {\n        rotate([0,0,i*90])\n        translate([30,0,0])\n            cylinder(h=5, r=5);\n    }\n}\n\nmodule control_panel() {\n    // Panel housing\n    translate([0,40,85])\n        cube([20,10,20], center=true);\n    \n    // Button 1\n    translate([-5,42,92])\n        cube([4,6,4], center=true);\n    \n    // Button 2\n    translate([5,42,92])\n        cube([4,6,4], center=true);\n    \n    // Power dial\n    translate([0,42,85])\n        cylinder(h=2, r=6);\n}\n\nmodule pulp_outlet() {\n    translate([-25,-40,55])\n    difference() {\n        cube([15,20,30]);\n        translate([1,1,1])\n            cube([13,18,28]);\n    }\n}\n\nmodule internal_filter() {\n    // Filter cone\n    translate([0,0,60])\n        cylinder(h=30, r1=25, r2=20);\n    \n    // Filter holes pattern\n    for(i=[0:5]) {\n        rotate([0,0,i*60])\n        for(j=[0:3]) {\n            translate([15+j*5,0,65+j*5])\n                rotate([90,0,0])\n                cylinder(h=2, r=1);\n        }\n    }\n}\n\n// Assembly\ncolor(color_base) base_feet();\ncolor(color_body) main_body();\ncolor(color_body) feed_chute();\ncolor(color_juice) juice_container();\ncolor(color_gray) control_panel();\ncolor(color_gray) pulp_outlet();\ncolor(color_gray) internal_filter();",
    "renders": true
  },
  {
    "kitchen_appliance": "beanbar",
    "openscad_code": "// Beanbar - compact single-serve bean-to-cup espresso appliance\n// Overall footprint 120 mm wide Ã— 90 mm deep Ã— 110 mm high\n// Wall thickness 2 mm throughout for FDM printing without supports\n\n$fn = 36;\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer rounded block\n        minkowski() {\n            cube([116, 86, 90], center = true);\n            sphere(4);\n        }\n        // Hollow cavity\n        translate([0, 0, 2])\n        scale([0.97, 0.97, 0.9])\n        minkowski() {\n            cube([116, 86, 90], center = true);\n            sphere(2);\n        }\n    }\n}\n\n// Front face panel with display, buttons and spout\nmodule front_panel() {\n    difference() {\n        // Panel plate\n        translate([0, 44, 10])\n        cube([110, 2, 80], center = true);\n        // Display cutout\n        translate([0, 45, 25])\n        cube([50, 2.1, 25], center = true);\n        // Spout slot\n        translate([0, 45, -25])\n        cube([18, 2.1, 12], center = true);\n    }\n    // Display screen\n    translate([0, 46, 25])\n    color(\"black\")\n    cube([46, 0.5, 22], center = true);\n    // Buttons\n    for (x = [-30, -15, 0, 15, 30]) {\n        translate([x, 46, 0])\n        cylinder(h = 2, d = 8);\n    }\n    // Spout nozzle\n    translate([0, 46, -25])\n    rotate([90, 0, 0])\n    cylinder(h = 12, d1 = 16, d2 = 10);\n}\n\n// Removable water tank on right side\nmodule water_tank() {\n    difference() {\n        // Tank body\n        translate([58, 0, 35])\n        cube([40, 70, 60], center = true);\n        // Inner cavity\n        translate([58, 0, 33])\n        cube([36, 66, 56], center = true);\n    }\n    // Fill lid\n    translate([58, 30, 60])\n    rotate([0, 0, 0])\n    cylinder(h = 3, d = 22);\n}\n\n// Bean hopper on top\nmodule bean_hopper() {\n    difference() {\n        // Hopper walls\n        cylinder(h = 30, d = 40);\n        // Inner cavity\n        translate([0, 0, 2])\n        cylinder(h = 28, d = 36);\n    }\n    // Lid with knob\n    translate([0, 0, 31])\n    cylinder(h = 4, d = 42);\n    translate([0, 0, 34])\n    cylinder(h = 6, d = 12);\n}\n\n// Drip tray base\nmodule drip_tray() {\n    difference() {\n        // Tray body\n        translate([0, 0, -50])\n        cube([100, 80, 4], center = true);\n        // Recess\n        translate([0, 0, -48])\n        cube([90, 70, 2], center = true);\n    }\n    // Grill plate\n    translate([0, 0, -46])\n    for (x = [-40:10:40]) {\n        cube([3, 70, 2], center = true);\n    }\n}\n\n// Power cord stub\nmodule power_cord() {\n    translate([-60, 0, -30])\n    rotate([90, 0, 0])\n    cylinder(h = 15, d = 8);\n}\n\n// Assembly\nbody();\nfront_panel();\nwater_tank();\ntranslate([0, 0, 55])\nbean_hopper();\ndrip_tray();\npower_cord();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlecore",
    "openscad_code": "// Kettlecore - Electric Kettle Heating Element Base\n// Medium complexity realistic 3D printable model\n\n$fn = 32;\n\n// Main dimensions\nbase_dia = 45;\nbase_height = 8;\ncore_dia = 35;\ncore_height = 12;\nhandle_width = 25;\nhandle_height = 15;\nhandle_thickness = 3;\nbutton_dia = 6;\nled_dia = 3;\nwall_thickness = 2;\n\n// Base structure\nmodule kettle_base() {\n    // Main circular base\n    difference() {\n        cylinder(h=base_height, d=base_dia, center=false);\n        // Hollow center\n        translate([0, 0, wall_thickness])\n            cylinder(h=base_height, d=base_dia - wall_thickness*2, center=false);\n    }\n    \n    // Bottom plate with feet\n    translate([0, 0, -wall_thickness])\n        difference() {\n            cylinder(h=wall_thickness, d=base_dia, center=false);\n            // Cable groove\n            translate([base_dia/2 - 8, 0, -1])\n                cube([16, 8, wall_thickness + 2], center=true);\n        }\n}\n\n// Heating core assembly\nmodule heating_core() {\n    // Central heating element\n    difference() {\n        cylinder(h=core_height, d=core_dia, center=false);\n        // Internal cavity\n        translate([0, 0, wall_thickness])\n            cylinder(h=core_height - wall_thickness, d=core_dia - wall_thickness*2, center=false);\n    }\n    \n    // Heating fins\n    for (i = [0:45:315]) {\n        rotate([0, 0, i])\n            translate([core_dia/2 - 2, -1.5, wall_thickness])\n                cube([6, 3, core_height - wall_thickness*2], center=false);\n    }\n}\n\n// Control handle\nmodule control_handle() {\n    // Main handle body\n    translate([base_dia/2 + 5, 0, base_height/2])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=handle_height, d=handle_thickness*2, center=true);\n                translate([0, 0, -handle_height/2])\n                    cube([handle_width, handle_thickness*2, handle_height], center=true);\n            }\n    \n    // Power button\n    translate([base_dia/2 + 12, -handle_width/3, base_height + 2])\n        cylinder(h=2, d=button_dia, center=false);\n    \n    // LED indicator\n    translate([base_dia/2 + 12, handle_width/3, base_height + 2])\n        cylinder(h=1, d=led_dia, center=false);\n}\n\n// Cable entry point\nmodule cable_port() {\n    translate([base_dia/2 - 5, 0, base_height/2])\n        rotate([90, 0, 90])\n            difference() {\n                cylinder(h=10, d=8, center=true);\n                cylinder(h=12, d=4, center=true);\n            }\n}\n\n// Mounting holes for assembly\nmodule mounting_holes() {\n    for (i = [0:120:240]) {\n        rotate([0, 0, i])\n            translate([base_dia/2 - 8, 0, -1])\n                cylinder(h=base_height + 2, d=3.2, center=false);\n    }\n}\n\n// Assembly\nunion() {\n    kettle_base();\n    translate([0, 0, base_height - wall_thickness]) {\n        heating_core();\n    }\n    control_handle();\n    cable_port();\n    \n    // Remove mounting holes\n    difference() {\n        children();\n        mounting_holes();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "greensqueeze",
    "openscad_code": "// Greensqueeze Kitchen Appliance - Medium Complexity\n// Realistic style with 3D print-friendly design\n\n// Overall dimensions\nbody_width = 80;\nbody_depth = 120;\nbody_height = 140;\nwall_thickness = 2;\n\n// Main body - housing\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness/2])\n            cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness], center=true);\n        \n        // Top opening for juicer\n        translate([0, -30, body_height/2-wall_thickness])\n            cylinder(h=wall_thickness*2, r=25, center=true);\n    }\n}\n\n// Juice container (removable)\nmodule juice_container() {\n    translate([0, 30, -body_height/4])\n    difference() {\n        // Outer container\n        cube([50, 50, 40], center=true);\n        // Hollow space\n        translate([0, 0, -wall_thickness])\n            cube([50-wall_thickness*2, 50-wall_thickness*2, 40-wall_thickness], center=true);\n    }\n}\n\n// Press mechanism\nmodule press_mechanism() {\n    // Central shaft\n    translate([0, -30, 0])\n    cylinder(h=body_height/2, r=10, center=false);\n    \n    // Press plate\n    translate([0, -30, body_height/2-10])\n    difference() {\n        cylinder(h=5, r=24);\n        // Juice holes\n        for(i=[-10:10:10])\n            for(j=[-10:10:10])\n                translate([i, j, -1])\n                    cylinder(h=7, r=2);\n    }\n    \n    // Handle\n    translate([0, -30, body_height/2+10])\n    union() {\n        cylinder(h=30, r=3);\n        translate([0, 0, 35])\n            rotate([90, 0, 0])\n                cylinder(h=40, r=5);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([body_width/2-wall_thickness, -20, 0])\n    difference() {\n        // Panel base\n        cube([10, 30, 15], center=true);\n        \n        // Buttons\n        translate([-2, -10, 0])\n            cylinder(h=3, r=3);\n        translate([-2, 0, 0])\n            cylinder(h=3, r=3);\n        translate([-2, 10, 0])\n            cylinder(h=3, r=3);\n    }\n}\n\n// Base with feet\nmodule base_with_feet() {\n    // Base plate\n    translate([0, 0, -body_height/2-wall_thickness])\n        cube([body_width+10, body_depth+10, wall_thickness*2], center=true);\n    \n    // Feet\n    for(x=[-1, 1])\n        for(y=[-1, 1])\n            translate([x*body_width/3, y*body_depth/3, -body_height/2-wall_thickness*2])\n                cylinder(h=5, r=4);\n}\n\n// Side ventilation slots\nmodule ventilation_slots() {\n    for(i=[-2:1:2]) {\n        translate([body_width/2-wall_thickness/2, i*20, 0])\n            rotate([0, 90, 0])\n                cube([30, 2, 5], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    main_body();\n    juice_container();\n    press_mechanism();\n    control_panel();\n    base_with_feet();\n    \n    // Features on right side\n    mirror([1, 0, 0]) {\n        ventilation_slots();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "roastright",
    "openscad_code": "// RoastRight Coffee Roaster - Medium Complexity\n// Dimensions in mm, designed for 3D printing\n\n$fn = 32;\n\n// Main module\nmodule roastright() {\n    // Main body\n    color(\"silver\") {\n        cube([80, 50, 60], center = true);\n        \n        // Front panel\n        translate([40, 0, 0])\n            cube([2, 46, 56], center = true);\n    }\n    \n    // Bean hopper\n    color(\"clear\")\n    translate([0, 0, 35])\n        cylinder(h = 25, r = 15, center = false);\n    \n    // Control panel\n    color(\"black\")\n    translate([41, 0, 15])\n        cube([1, 30, 20], center = true);\n    \n    // Buttons\n    for (i = [0:2]) {\n        translate([42, -10 + i * 10, 20])\n            rotate([90, 0, 0])\n                cylinder(h = 3, r = 3, center = false);\n    }\n    \n    // Roast chamber window\n    color(\"clear\")\n    translate([39, 0, 0])\n        cube([1, 20, 15], center = true);\n    \n    // Exhaust vent\n    color(\"silver\")\n    translate([-40, 0, 20])\n        cube([5, 30, 5], center = true);\n    \n    // Base legs\n    for (x = [-35, 35]) {\n        for (y = [-20, 20]) {\n            translate([x, y, -32])\n                cylinder(h = 4, r = 3, center = false);\n        }\n    }\n    \n    // Side handles\n    color(\"black\")\n    translate([0, 27, 0])\n        cube([70, 6, 10], center = true);\n    \n    translate([0, -27, 0])\n        cube([70, 6, 10], center = true);\n    \n    // Bean chute\n    color(\"silver\")\n    translate([0, 0, -35])\n        cylinder(h = 10, r1 = 12, r2 = 8, center = false);\n    \n    // Control dial\n    color(\"black\")\n    translate([42, 10, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 5, r = 5, center = false);\n    \n    // Indicator lights\n    for (i = [0:2]) {\n        color(\"red\")\n        translate([42, -15 + i * 15, 25])\n            sphere(r = 2);\n    }\n}\n\n// Generate the model\nroastright();",
    "renders": true
  },
  {
    "kitchen_appliance": "aquakettle",
    "openscad_code": "// AquaKettle - Medium complexity realistic style\n// Overall dimensions: ~120mm tall, ~90mm wide, ~140mm deep\n\n$fn = 36;\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Main cylindrical body\n        cylinder(h = 80, r = 45, center = false);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h = 78, r = 43, center = false);\n        \n        // Water level window\n        translate([0, 38, 30])\n            cube([35, 4, 20], center = true);\n        \n        // Handle attachment holes (left)\n        translate([-43, 5, 55])\n            rotate([0, 90, 0])\n                cylinder(h = 10, r = 3);\n        \n        // Handle attachment holes (right)\n        translate([-43, -5, 55])\n            rotate([0, 90, 0])\n                cylinder(h = 10, r = 3);\n    }\n}\n\n// Spout\nmodule spout() {\n    translate([0, 45, 65])\n        rotate([90, 0, 0])\n            difference() {\n                // Main spout shape\n                cylinder(h1 = 35, h2 = 25, r1 = 12, r2 = 8);\n                \n                // Hollow spout\n                translate([0, 0, 2])\n                    cylinder(h1 = 33, h2 = 23, r1 = 10, r2 = 6);\n            }\n}\n\n// Handle\nmodule handle() {\n    translate([-47, 0, 55])\n        rotate([0, 90, 0])\n            difference() {\n                // Handle grip\n                cylinder(h = 70, r = 6);\n                \n                // Grip hole\n                translate([0, 0, 2])\n                    cylinder(h = 66, r = 4);\n            }\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, 80])\n        difference() {\n            // Lid top\n            cylinder(h = 8, r = 48);\n            \n            // Lid bottom insert\n            translate([0, 0, 2])\n                cylinder(h = 6, r = 44);\n            \n            // Grip hole\n            translate([0, 0, 8])\n                cylinder(h = 5, r = 3);\n        }\n    \n    // Lid grip\n    translate([0, 0, 88])\n        rotate([0, 0, 45])\n            cube([30, 6, 8], center = true);\n}\n\n// Base with controls\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, 0])\n            cylinder(h = 15, r = 50);\n        \n        // Cable slot\n        translate([0, 45, 7.5])\n            rotate([90, 0, 0])\n                cylinder(h = 30, r = 8);\n    }\n    \n    // Control panel\n    translate([0, -35, 15])\n        cube([40, 15, 5], center = true);\n    \n    // Power button\n    translate([0, -35, 21])\n        cylinder(h = 3, r = 5);\n    \n    // LED indicators\n    for(i = [-1:1]) {\n        translate([i * 10, -35, 21])\n            cylinder(h = 1, r = 2);\n    }\n    \n    // Power connector pins\n    translate([0, 0, 15])\n        cylinder(h = 5, r = 20);\n    \n    // Heating element contacts\n    for(i = [-1, 1]) {\n        translate([i * 15, 0, 15])\n            cylinder(h = 5, r = 3);\n    }\n}\n\n// Water level markings\nmodule water_markings() {\n    for(i = [1:4]) {\n        translate([0, 38, 10 + i * 15])\n            cube([25, 1, 1], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    kettle_body();\n    spout();\n    handle();\n    lid();\n    base();\n    \n    // Details\n    water_markings();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "zestpress",
    "openscad_code": "// ZestPress Citrus Juicer â€“ Realistic, medium complexity\n// 100 mm tall, 3D-printable with 2 mm walls and no severe overhangs\n\n$fn = 36;\n\n// Overall scale factor â€“ change this to rescale the whole model\nunit = 1;\n\nmodule zestpress() {\n    /* Main body shell */\n    difference() {\n        // Outer shell\n        cylinder(h = 70*unit, d = 90*unit, center = true);\n        // Hollow cavity\n        translate([0,0,2*unit])\n            cylinder(h = 74*unit, d = 86*unit, center = true);\n    }\n\n    /* Top pressing cone */\n    translate([0,0,40*unit])\n    union() {\n        cylinder(h = 20*unit, d1 = 80*unit, d2 = 10*unit);   // cone\n        translate([0,0,-2*unit])\n            cylinder(h = 4*unit, d = 82*unit);                // collar\n    }\n\n    /* Juice spout */\n    rotate([0,-90,0])\n    translate([0, 0, 45*unit])\n    difference() {\n        cylinder(h = 20*unit, d = 16*unit);                   // spout tube\n        translate([0,0,-1*unit])\n            cylinder(h = 22*unit, d = 12*unit);               // bore\n    }\n\n    /* Handle */\n    translate([0,-55*unit,0])\n    rotate([90,0,0])\n    difference() {\n        union() {\n            // Handle grip\n            translate([0,0,0])\n                cylinder(h = 45*unit, d = 18*unit);\n            // Arched supports\n            for (y = [-20*unit, 20*unit])\n                translate([0,y,0])\n                    cube([12*unit, 2*unit, 45*unit], center = true);\n        }\n        // Hollow grip\n        translate([0,0,-1*unit])\n            cylinder(h = 47*unit, d = 12*unit);\n    }\n\n    /* Base ring for stability */\n    translate([0,0,-36*unit])\n    difference() {\n        cylinder(h = 8*unit, d = 95*unit);\n        translate([0,0,-1*unit])\n            cylinder(h = 10*unit, d = 85*unit);\n    }\n\n    /* Anti-skid pads */\n    for (a = [0:120:359])\n        rotate([0,0,a])\n        translate([35*unit,0,-40*unit])\n        cylinder(h = 2*unit, d = 8*unit);\n}\n\nzestpress();",
    "renders": true
  },
  {
    "kitchen_appliance": "cafegenie",
    "openscad_code": "// Cafegenie Kitchen Appliance - Realistic Style, Medium Complexity\n// A compact espresso machine with water tank, portafilter, and control panel\n\n// Overall dimensions: ~120mm wide, ~90mm deep, ~100mm tall\n\nmodule main_body() {\n    // Main chassis - hollow box with wall thickness 2mm\n    difference() {\n        cube([120, 90, 100], center = true);\n        translate([0, 0, -1])\n            cube([116, 86, 98], center = true);\n    }\n}\n\nmodule water_tank() {\n    // Clear water tank on right side\n    translate([50, 0, -30])\n        difference() {\n            cube([30, 50, 70], center = true);\n            translate([0, 0, -1])\n                cube([26, 46, 68], center = true);\n        }\n}\n\nmodule group_head() {\n    // Central brewing group head\n    translate([0, -30, 40])\n        cylinder(h = 15, r = 18, center = true);\n}\n\nmodule portafilter() {\n    // Detachable portafilter handle\n    translate([0, -50, 40])\n        union() {\n            // Handle\n            rotate([90, 0, 0])\n                cylinder(h = 40, r1 = 8, r2 = 6, center = true);\n            // Basket\n            translate([0, -25, 0])\n                cylinder(h = 10, r = 20, center = true);\n            // Spouts\n            translate([0, -30, 0])\n                cylinder(h = 5, r = 15, center = true);\n        }\n}\n\nmodule drip_tray() {\n    // Removable drip tray with grill\n    translate([0, 25, -45])\n        difference() {\n            cube([100, 20, 10], center = true);\n            translate([0, 0, 2])\n                cube([96, 16, 8], center = true);\n        }\n    \n    // Grill pattern\n    for(i = [-40:10:40]) {\n        translate([i, 25, -39])\n            cube([2, 18, 2], center = true);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons and dial\n    translate([-50, -45, 20])\n        cube([20, 10, 40], center = true);\n    \n    // Power button\n    translate([-50, -49, 30])\n        cylinder(h = 5, r = 6, center = true);\n    \n    // Brew button\n    translate([-50, -49, 20])\n        cylinder(h = 5, r = 6, center = true);\n    \n    // Steam dial\n    translate([-50, -49, 10])\n        rotate([90, 0, 0])\n            cylinder(h = 10, r = 8, center = true);\n}\n\nmodule steam_wand() {\n    // Articulated steam wand\n    translate([40, -30, 20])\n        rotate([0, 45, 45])\n        union() {\n            // Base\n            cylinder(h = 15, r = 10, center = true);\n            // Arm\n            translate([0, 0, -15])\n                cylinder(h = 40, r = 5, center = true);\n            // Steam tip\n            translate([0, 0, -35])\n                cylinder(h = 10, r = 3, center = true);\n        }\n}\n\nmodule feet() {\n    // Four rubber feet for stability\n    positions = [[-50, -40], [50, -40], [-50, 40], [50, 40]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], -52])\n            cylinder(h = 4, r1 = 6, r2 = 4);\n    }\n}\n\nmodule top_cover() {\n    // Curved top cover with cup warmer\n    translate([0, 0, 52])\n        scale([1, 0.8, 0.3])\n            sphere(r = 60, center = true);\n}\n\n// Assembly\nunion() {\n    main_body();\n    water_tank();\n    group_head();\n    portafilter();\n    drip_tray();\n    control_panel();\n    steam_wand();\n    feet();\n    top_cover();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettleflash",
    "openscad_code": "// Kettleflash â€“ mid-size, realistic, 3D-printable kitchen appliance\n// Overall height â‰ˆ 115 mm, wall thickness 2 mm\n\n$fn = 36;\n\n// Main body ---------------------------------------------------\nmodule body() {\n    difference() {\n        // Outer shell\n        cylinder(h=80, d1=60, d2=50);\n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h=78, d1=56, d2=46);\n    }\n}\n\n// Lid ---------------------------------------------------------\nmodule lid() {\n    translate([0, 0, 80])\n    difference() {\n        // Lid disc\n        cylinder(h=6, d=52);\n        // Grip recess\n        translate([0, 0, 2])\n            cylinder(h=4, d=48);\n    }\n}\n\n// Handle ------------------------------------------------------\nmodule handle() {\n    translate([30, 0, 45])\n    rotate([0, 90, 0])\n    difference() {\n        // Outer grip tube\n        cylinder(h=70, d=20);\n        // Inner hole\n        translate([0, 0, 2])\n            cylinder(h=66, d=16);\n    }\n}\n\n// Spout -------------------------------------------------------\nmodule spout() {\n    translate([-30, 0, 60])\n    rotate([-30, 0, 0])\n    difference() {\n        // Basic spout\n        cylinder(h=35, d1=18, d2=12);\n        // Inner bore\n        translate([0, 0, 2])\n            cylinder(h=33, d1=14, d2=8);\n    }\n}\n\n// Base plate --------------------------------------------------\nmodule base() {\n    difference() {\n        // Base disc\n        cylinder(h=8, d=70);\n        // Cable slot\n        translate([30, 0, 4])\n            rotate([90, 0, 0])\n            cylinder(h=15, d=6);\n    }\n}\n\n// Control dial ------------------------------------------------\nmodule dial() {\n    translate([0, -28, 8])\n    rotate([90, 0, 0])\n    difference() {\n        // Dial knob\n        cylinder(h=8, d=16);\n        // Indicator slot\n        translate([0, 4, 4])\n            cube([1, 8, 2], center=true);\n    }\n}\n\n// Indicator LEDs (small cylinders) ---------------------------\nmodule leds() {\n    for (a = [0, 120, 240])\n        rotate([0, 0, a])\n        translate([20, 0, 82])\n            cylinder(h=2, d=4);\n}\n\n// Assembly ----------------------------------------------------\nunion() {\n    body();\n    lid();\n    handle();\n    spout();\n    base();\n    dial();\n    leds();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "grindguru",
    "openscad_code": "// GrindGuru Kitchen Coffee Grinder\n// Medium-complexity, realistic style, 3D-printable\n// Overall size ~110 mm tall\n\n$fn = 36; // smooth curves\n\n// ---- Main body ----\nmodule body() {\n    difference() {\n        // outer shell 2 mm thick\n        minkowski() {\n            cube([60, 80, 90], center=true);\n            sphere(d=2);\n        }\n        // hollow inside (leave 2 mm walls)\n        translate([0,0,-1])\n            cube([56, 76, 88], center=true);\n    }\n}\n\n// ---- Bean hopper ----\nmodule hopper() {\n    difference() {\n        // tapered cylinder\n        cylinder(h1=40, h2=35, r1=25, r2=15, center=false);\n        // hollow\n        translate([0,0,2])\n            cylinder(h1=36, h2=31, r1=23, r2=13, center=false);\n    }\n}\n\n// ---- Ground-coffee container / cup ----\nmodule cup() {\n    difference() {\n        // cup body\n        translate([0,0,10])\n            cylinder(h=30, r1=30, r2=28, center=false);\n        // cavity\n        translate([0,0,12])\n            cylinder(h=26, r1=26, r2=24, center=false);\n    }\n}\n\n// ---- Adjustment dial ----\nmodule dial() {\n    // ring\n    difference() {\n        cylinder(h=8, r=18, center=true);\n        cylinder(h=10, r=14, center=true);\n    }\n    // knurls\n    for(i=[0:15]) {\n        rotate([0,0,i*360/16])\n            translate([16,0,0])\n                cube([4,2,8], center=true);\n    }\n}\n\n// ---- Buttons ----\nmodule buttons() {\n    // power button\n    translate([-25, 30, 48])\n        cube([10,6,3], center=true);\n    // grind-size fine/coarse button pair\n    translate([25, 30, 48])\n        cube([10,6,3], center=true);\n    translate([25, 22, 48])\n        cube([10,6,3], center=true);\n}\n\n// ---- Vent slots ----\nmodule vents() {\n    for(i=[0:3]) {\n        translate([-40+i*10, 0, 30])\n            cube([6,2,20], center=true);\n    }\n}\n\n// ---- Assembly ----\nunion() {\n    // main body centered\n    body();\n\n    // hopper on top\n    translate([0,0,50])\n        hopper();\n\n    // cup slides in front\n    translate([0,-40,0])\n        cup();\n\n    // dial under hopper\n    translate([0,0,40])\n        dial();\n\n    // buttons on front face\n    buttons();\n\n    // vents at back\n    rotate([0,0,180])\n        vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlerapid",
    "openscad_code": "// Kettlerapid Electric Kettle - Realistic Medium Complexity\n// Approximate dimensions: 110mm height, 80mm diameter\n\n// Main kettle body\nmodule kettle_body() {\n    difference() {\n        // Outer shell\n        cylinder(h = 70, r1 = 38, r2 = 40, $fn = 48);\n        \n        // Inner cavity with 2mm walls\n        translate([0, 0, 2])\n            cylinder(h = 68, r1 = 34, r2 = 36, $fn = 48);\n    }\n}\n\n// Base with heating element\nmodule kettle_base() {\n    difference() {\n        // Base cylinder\n        cylinder(h = 8, r = 40, $fn = 48);\n        \n        // Power connector hole\n        cylinder(h = 10, r = 12, $fn = 32);\n        \n        // Ventilation holes\n        for(i = [0:7]) {\n            rotate([0, 0, i * 45])\n                translate([28, 0, -1])\n                    cube([2, 4, 10], center = true);\n        }\n    }\n}\n\n// Handle assembly\nmodule handle() {\n    union() {\n        // Main handle grip\n        translate([42, 0, 35])\n            rotate([0, 90, 0])\n                cylinder(h = 50, r = 6, $fn = 20);\n        \n        // Handle supports\n        translate([40, 0, 60])\n            rotate([0, 90, 0])\n                cylinder(h = 12, r = 4, $fn = 16);\n                \n        translate([40, 0, 10])\n            rotate([0, 90, 0])\n                cylinder(h = 12, r = 4, $fn = 16);\n    }\n}\n\n// Spout with lid\nmodule spout() {\n    union() {\n        // Spout body\n        translate([-40, 0, 55])\n            rotate([0, -30, 0])\n                cylinder(h = 25, r1 = 12, r2 = 8, $fn = 24);\n        \n        // Spout opening\n        difference() {\n            translate([-40, 0, 55])\n                rotate([0, -30, 0])\n                    cylinder(h = 25, r1 = 10, r2 = 6, $fn = 24);\n                    \n            // Internal channel\n            translate([-40, 0, 55])\n                rotate([0, -30, 0])\n                    cylinder(h = 30, r1 = 6, r2 = 4, $fn = 16);\n        }\n    }\n}\n\n// Lid with handle\nmodule kettle_lid() {\n    union() {\n        // Lid disk\n        translate([0, 0, 70])\n            cylinder(h = 3, r = 35, $fn = 48);\n        \n        // Lid handle\n        translate([0, 0, 75])\n            cylinder(h = 15, r1 = 8, r2 = 6, $fn = 20);\n        \n        // Steam vent\n        translate([0, 0, 75])\n            cylinder(h = 15, r = 2, $fn = 16);\n    }\n}\n\n// Power indicator light\nmodule indicator_light() {\n    translate([35, 0, 5])\n        cylinder(h = 3, r = 4, $fn = 16);\n}\n\n// Control button\nmodule power_button() {\n    translate([45, 0, 25])\n        cube([8, 6, 4], center = true);\n}\n\n// Water level window\nmodule water_window() {\n    difference() {\n        // Window frame\n        translate([0, 38, 35])\n            cube([20, 2, 25]);\n            \n        // Window glass area\n        translate([0, 39, 35])\n            cube([16, 1, 20]);\n    }\n}\n\n// Scale markings\nmodule scale_marks() {\n    for(i = [0:3]) {\n        translate([0, 39, 15 + i * 10])\n            cube([2, 1, 1]);\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    kettle_body();\n    kettle_base();\n    translate([0, 0, 0])\n        kettle_lid();\n    \n    // Attachments\n    handle();\n    spout();\n    \n    // Details\n    indicator_light();\n    power_button();\n    water_window();\n    scale_marks();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "vitapress",
    "openscad_code": "// Vitapress Kitchen Appliance - Realistic Style\n// Medium complexity 3D printable model\n\n// Overall dimensions (mm)\nwidth = 100;\ndepth = 120;\nheight = 180;\n\n// Base module\nmodule base() {\n    difference() {\n        // Main base body\n        cube([width, depth, 15], center=true);\n        // Rounded edges\n        translate([0, 0, -7])\n            minkowski() {\n                cube([width-6, depth-6, 10], center=true);\n                cylinder(h=1, r=3, center=true);\n            }\n    }\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0, 0, 15+40]) {\n        difference() {\n            // Main housing\n            cube([width-20, depth-20, 80], center=true);\n            // Top rounded edges\n            translate([0, 0, 40])\n                minkowski() {\n                    cube([width-26, depth-26, 2], center=true);\n                    cylinder(h=1, r=5, center=true);\n                }\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, depth/2-20, 15+50]) {\n        // Panel surface\n        cube([width-40, 8, 25], center=true);\n        \n        // Buttons\n        for(i=[-1, 0, 1]) {\n            translate([i*20, 0, 13])\n                cylinder(h=3, r=5, center=true);\n        }\n        \n        // Power LED\n        translate([width/2-30, 0, 13])\n            color(\"red\")\n            cylinder(h=1, r=3, center=true);\n    }\n}\n\n// Juice container\nmodule juice_container() {\n    translate([0, -depth/4, 15+5]) {\n        difference() {\n            // Container body\n            cylinder(h=50, r=35, center=false);\n            // Inside cavity\n            translate([0, 0, 2])\n                cylinder(h=46, r=33, center=false);\n        }\n        // Handle\n        translate([40, 0, 25])\n            rotate([90, 0, 0])\n                cylinder(h=30, r=5, center=false);\n    }\n}\n\n// Feeding chute\nmodule feeding_chute() {\n    translate([0, depth/4, 15+100]) {\n        // Main chute\n        cylinder(h=40, r=15, center=false);\n        \n        // Chute opening\n        translate([0, 0, 40])\n            cylinder(h=20, r=25, center=false);\n        \n        // Pusher\n        translate([0, 0, 60])\n            cylinder(h=30, r=14, center=false);\n    }\n}\n\n// Juice spout\nmodule juice_spout() {\n    translate([0, -depth/2+10, 15+20]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                // Spout body\n                cylinder(h=25, r=8, center=false);\n                // Hollow center\n                cylinder(h=25, r=6, center=false);\n            }\n        }\n    }\n}\n\n// Base feet\nmodule feet() {\n    for(x=[-1, 1])\n        for(y=[-1, 1])\n            translate([x*width/3, y*depth/3, -7.5])\n                cylinder(h=5, r=8, center=false);\n}\n\n// Assembly\nunion() {\n    base();\n    feet();\n    motor_housing();\n    control_panel();\n    juice_container();\n    feeding_chute();\n    juice_spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "brewsense",
    "openscad_code": "// BrewSense Coffee Maker â€“ realistic, medium complexity\n// Overall size: 110 mm (W) Ã— 150 mm (H) Ã— 100 mm (D)\n// Wall thickness: 2 mm for 3D-printability\n\n$fn = 36;\n\n// Dimensions --------------------------------------------------------------\nbody_w = 110; body_d = 100; body_h = 90;\nbase_h = 8;\ntank_w = 40; tank_h = 70; tank_d = 70;\ncup_w = 50; cup_d = 40; cup_h = 50;\nbutton_r = 4; button_h = 3;\ndial_r = 10; dial_h = 5;\nspout_l = 30; spout_r = 5;\n\n// Main body ---------------------------------------------------------------\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, base_h + body_h/2])\n            cube([body_w, body_d, body_h], center = true);\n        // Hollow cavity\n        translate([0, 0, base_h + body_h/2])\n            cube([body_w - 4, body_d - 4, body_h - 2], center = true);\n    }\n}\n\n// Base plate --------------------------------------------------------------\nmodule base() {\n    translate([0, 0, base_h/2])\n        cube([body_w + 4, body_d + 4, base_h], center = true);\n}\n\n// Water tank on the back --------------------------------------------------\nmodule tank() {\n    translate([body_w/2 - tank_w/2 - 2, 0, base_h + tank_h/2])\n        cube([tank_w, tank_d, tank_h], center = true);\n}\n\n// Control panel -----------------------------------------------------------\nmodule controls() {\n    // Buttons\n    for (x = [-30, -15, 0])\n        translate([x, body_d/2 + 1, base_h + 55])\n            cylinder(h = button_h, r = button_r, center = true);\n    // Dial\n    translate([25, body_d/2 + 1, base_h + 55])\n        cylinder(h = dial_h, r = dial_r, center = true);\n}\n\n// Coffee outlet spout -----------------------------------------------------\nmodule spout() {\n    rotate([90, 0, 0])\n        translate([0, 0, -spout_l/2])\n            cylinder(h = spout_l, r1 = spout_r, r2 = spout_r/2, center = true);\n}\n\n// Drip tray grate ---------------------------------------------------------\nmodule grate() {\n    difference() {\n        translate([0, 0, base_h + 2])\n            cube([cup_w + 10, cup_d + 10, 3], center = true);\n        // Holes\n        for (i = [-2:2])\n            translate([i * 10, 0, base_h + 2])\n                cube([4, cup_d + 10, 4], center = true);\n    }\n}\n\n// Cup placeholder ---------------------------------------------------------\nmodule cup() {\n    translate([0, 0, base_h + 5 + cup_h/2])\n        difference() {\n            cube([cup_w, cup_d, cup_h], center = true);\n            translate([0, 0, 5])\n                cube([cup_w - 4, cup_d - 4, cup_h - 2], center = true);\n        }\n}\n\n// Assembly ----------------------------------------------------------------\nunion() {\n    base();\n    body();\n    tank();\n    controls();\n    // Position spout under the front edge\n    translate([0, body_d/2 - spout_r - 2, base_h + 60])\n        spout();\n    grate();\n    // Uncomment next line to see a demo cup\n    // cup();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "heathaven",
    "openscad_code": "// Heathaven Kitchen Appliance - Realistic Style (Medium Complexity)\n// A compact countertop blender with distinctive Heathaven styling\n\n$fn = 50;\n\n// Main dimensions\nbase_w = 70;\nbase_d = 70;\nbase_h = 25;\nmotor_h = 45;\njar_h = 110;\njar_d = 55;\ntotal_h = base_h + motor_h + jar_h + 5;\n\nmodule base() {\n    // Main base body\n    difference() {\n        cube([base_w, base_d, base_h], center=true);\n        \n        // Top chamfer\n        translate([0, 0, base_h/2 - 2])\n        cylinder(h=4, r1=base_w/2 - 2, r2=base_w/2, center=true);\n        \n        // Bottom chamfer\n        translate([0, 0, -base_h/2 + 2])\n        cylinder(h=4, r1=base_w/2, r2=base_w/2 - 2, center=true);\n    }\n    \n    // Rubber feet\n    for(x=[-1, 1])\n    for(y=[-1, 1])\n    translate([x * 27, y * 27, -base_h/2 - 1])\n    cylinder(h=2, r=4, center=true);\n    \n    // Power cord exit\n    translate([base_w/2, 0, -base_h/2 + 8])\n    rotate([0, 90, 0])\n    cylinder(h=15, r=4);\n}\n\nmodule motor_housing() {\n    // Main housing\n    translate([0, 0, base_h + motor_h/2])\n    difference() {\n        cylinder(h=motor_h, r=base_w/2 - 5);\n        \n        // Ventilation slots\n        for(i=[0:15:345])\n        rotate([0, 0, i])\n        translate([base_w/2 - 8, 0, 5])\n        cube([12, 2, motor_h - 10]);\n    }\n    \n    // Control panel\n    translate([base_w/2 - 15, 0, base_h + motor_h - 20])\n    rotate([0, 90, 0])\n    difference() {\n        cube([20, 35, 6], center=true);\n        \n        // Power button\n        translate([-3, 8, 0])\n        cylinder(h=8, r=6);\n        \n        // Speed dial\n        translate([-3, -8, 0])\n        cylinder(h=8, r=8);\n        \n        // LED indicator\n        translate([0, 0, 4])\n        cylinder(h=1, r=3);\n    }\n}\n\nmodule coupling() {\n    // Drive coupling\n    translate([0, 0, base_h + motor_h])\n    difference() {\n        cylinder(h=8, r=12);\n        \n        // Drive teeth\n        for(i=[0:45:315])\n        rotate([0, 0, i])\n        translate([0, 0, -1])\n        cube([4, 6, 10], center=true);\n    }\n}\n\nmodule blender_jar() {\n    // Jar body\n    translate([0, 0, base_h + motor_h + 4 + jar_h/2])\n    difference() {\n        cylinder(h=jar_h, r=jar_d/2);\n        \n        // Handle cavity\n        translate([jar_d/2 - 10, 0, 0])\n        cube([20, 15, jar_h], center=true);\n    }\n    \n    // Handle grip\n    translate([jar_d/2 + 5, 0, jar_h/2])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h=jar_h - 10, r=6);\n        \n        // Grip texture\n        for(z=[5:10:jar_h - 15])\n        translate([0, 0, z])\n        rotate([90, 0, 0])\n        cylinder(h=8, r=6.5);\n    }\n    \n    // Jar base (threads)\n    translate([0, 0, base_h + motor_h + 4])\n    difference() {\n        cylinder(h=8, r=jar_d/2);\n        \n        // Thread grooves\n        for(z=[0:2:6])\n        translate([0, 0, z])\n        cylinder(h=1, r=jar_d/2 - 2);\n    }\n    \n    // Lid\n    translate([0, 0, base_h + motor_h + 8 + jar_h])\n    difference() {\n        cylinder(h=8, r=jar_d/2 - 2);\n        \n        // Pour spout\n        translate([0, jar_d/2 - 8, 4])\n        rotate([90, 0, 0])\n        cylinder(h=15, r=10);\n        \n        // Center cap\n        translate([0, 0, 4])\n        cylinder(h=3, r=8);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    motor_housing();\n    coupling();\n    blender_jar();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "beanburst",
    "openscad_code": "// Beanburst kitchen appliance - medium complexity realistic style\n// Overall size ~120mm x 90mm x 160mm\n\n$fn = 32;\n\n// Main body module\nmodule body() {\n    difference() {\n        // Outer shell\n        union() {\n            // Main housing\n            translate([0, 0, 80])\n                cube([110, 80, 160], center = true);\n            \n            // Front control panel area\n            translate([0, -40, 140])\n                cube([90, 10, 60], center = true);\n        }\n        \n        // Top opening for beans\n        translate([0, 0, 155])\n            cylinder(h = 10, r = 35);\n        \n        // Front display cutout\n        translate([0, -44, 140])\n            cube([70, 2, 40], center = true);\n        \n        // Bean container window\n        translate([40, 0, 120])\n            cube([20, 78, 80], center = true);\n    }\n}\n\n// Bean container module\nmodule bean_container() {\n    difference() {\n        // Main container\n        translate([0, 0, 120])\n            cylinder(h = 70, r = 33, center = true);\n        \n        // Hollow inside\n        translate([0, 0, 120])\n            cylinder(h = 72, r = 30, center = true);\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Base panel\n    translate([0, -44, 140])\n        cube([70, 2, 40], center = true);\n    \n    // Display screen\n    translate([0, -45, 155])\n        cube([50, 1, 20], center = true);\n    \n    // Buttons\n    for (i = [-1:1]) {\n        translate([i * 20, -45, 130])\n            cylinder(h = 2, r = 5);\n    }\n    \n    // Dial\n    translate([25, -45, 140])\n        cylinder(h = 3, r = 8);\n}\n\n// Base module\nmodule base() {\n    // Main base\n    translate([0, 0, 10])\n        cube([120, 90, 20], center = true);\n    \n    // Feet\n    for (x = [-45, 45])\n        for (y = [-35, 35]) {\n            translate([x, y, 5])\n                cylinder(h = 10, r = 8);\n        }\n}\n\n// Handle module\nmodule handle() {\n    // Side handle\n    translate([-55, 0, 120])\n        rotate([0, 90, 0])\n            cylinder(h = 30, r = 8);\n    \n    // Handle grip\n    translate([-55, 0, 120])\n        rotate([0, 90, 0])\n            cylinder(h = 30, r = 5);\n}\n\n// Water reservoir module\nmodule water_reservoir() {\n    difference() {\n        // Reservoir body\n        translate([0, 35, 100])\n            cube([60, 20, 50], center = true);\n        \n        // Hollow inside\n        translate([0, 35, 100])\n            cube([56, 16, 46], center = true);\n        \n        // Water level window\n        translate([30, 35, 100])\n            cube([2, 16, 40], center = true);\n    }\n}\n\n// Coffee spout module\nmodule spout() {\n    // Main spout\n    difference() {\n        translate([0, 40, 40])\n            cube([30, 15, 30], center = true);\n        \n        // Hollow channel\n        translate([0, 47, 40])\n            cube([20, 2, 30], center = true);\n    }\n    \n    // Drip tray\n    translate([0, 45, 15])\n        cube([80, 60, 5], center = true);\n}\n\n// Assemble the complete beanburst\nunion() {\n    base();\n    body();\n    bean_container();\n    control_panel();\n    handle();\n    water_reservoir();\n    spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlequick",
    "openscad_code": "// KettleQuick - Medium Complexity Kitchen Appliance\n// Overall dimensions: ~110mm x 85mm x 140mm\n\n$fn = 32;\n\nmodule kettle_body() {\n    difference() {\n        // Main body cylinder\n        cylinder(h = 85, r = 40, center = true);\n        \n        // Hollow interior\n        translate([0, 0, -2])\n            cylinder(h = 89, r = 38, center = true);\n            \n        // Spout hole\n        translate([38, 0, 20])\n            rotate([0, 90, 0])\n            cylinder(h = 20, r = 10, center = true);\n    }\n}\n\nmodule handle() {\n    // Handle base left\n    translate([-40, -10, 20])\n        rotate([0, 90, 0])\n        cylinder(h = 20, r = 5);\n    \n    // Handle base right\n    translate([-40, 10, 20])\n        rotate([0, 90, 0])\n        cylinder(h = 20, r = 5);\n        \n    // Handle grip\n    translate([-55, 0, 20])\n        rotate([90, 0, 0])\n        cylinder(h = 20, r = 5);\n}\n\nmodule spout() {\n    // Main spout tube\n    translate([40, 0, 20])\n        rotate([0, 90, 0])\n        cylinder(h = 30, r1 = 12, r2 = 8);\n        \n    // Spout tip\n    translate([65, 0, 20])\n        rotate([0, 90, 0])\n        cylinder(h = 5, r = 8);\n}\n\nmodule lid() {\n    // Lid disc\n    translate([0, 0, 44])\n        cylinder(h = 3, r = 39);\n        \n    // Lid handle\n    translate([0, 0, 48])\n        cylinder(h = 8, r1 = 8, r2 = 5);\n}\n\nmodule base() {\n    // Base platform\n    translate([0, 0, -44])\n        cube([90, 90, 10], center = true);\n        \n    // Power cord hole\n    translate([-45, 0, -44])\n        rotate([0, 90, 0])\n        cylinder(h = 10, r = 3);\n        \n    // Control buttons\n    for(i = [0:1]) {\n        translate([25 + i*15, -25, -38])\n            cube([8, 8, 3], center = true);\n    }\n    \n    // LED indicator\n    translate([25, -40, -38])\n        cylinder(h = 2, r = 3);\n}\n\nmodule power_switch() {\n    // Switch base\n    translate([-25, -40, -38])\n        cube([15, 5, 8], center = true);\n        \n    // Switch lever\n    translate([-25, -38, -34])\n        cube([8, 2, 4], center = true);\n}\n\n// Assembly\nunion() {\n    // Main body\n    kettle_body();\n    \n    // Handle attached to body\n    handle();\n    \n    // Spout attached to body\n    spout();\n    \n    // Lid on top\n    lid();\n    \n    // Base platform\n    base();\n    \n    // Power switch\n    power_switch();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "citrusspin",
    "openscad_code": "// CitrusSpin Kitchen Appliance - Realistic Style\n// A compact citrus juicer with integrated spin mechanism\n\n// Overall dimensions: 100x100x120mm\n\n$fn = 32;  // Smooth curves\n\n// Main body parameters\nbody_width = 80;\nbody_depth = 80;\nbody_height = 60;\nwall_thickness = 2;\n\n// Juice container\ncontainer_diameter = 70;\ncontainer_height = 40;\n\n// Cone dimensions\ncone_base = 35;\ncone_height = 30;\n\n// Lid parameters\nlid_diameter = 75;\nlid_height = 15;\n\n// Handle dimensions\nhandle_length = 60;\nhandle_diameter = 8;\n\n// Control button\nbutton_diameter = 12;\nbutton_height = 5;\n\n// Motor housing\nmotor_width = 50;\nmotor_depth = 50;\nmotor_height = 25;\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness/2])\n            cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness], center=true);\n    }\n}\n\nmodule juice_container() {\n    // Container with pour spout\n    difference() {\n        cylinder(h=container_height, d=container_diameter, center=false);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n            cylinder(h=container_height-wall_thickness, d=container_diameter-wall_thickness*2, center=false);\n            \n        // Pour spout cut\n        translate([container_diameter/2-5, 0, container_height/2])\n            rotate([0, 90, 0])\n                cylinder(h=15, d=8, center=true);\n    }\n    \n    // Pour spout addition\n    translate([container_diameter/2-5, 0, container_height-5])\n        rotate([0, 90, 0])\n            cylinder(h=10, d1=8, d2=12, center=false);\n}\n\nmodule juicing_cone() {\n    // Main cone\n    cylinder(h=cone_height, d1=cone_base, d2=5, center=false);\n    \n    // Ribs for juicing\n    for(i=[0:7]) {\n        rotate([0, 0, i*45])\n            translate([0, 0, 0])\n                cube([1, cone_base/2-5, cone_height], center=true);\n    }\n}\n\nmodule lid() {\n    difference() {\n        // Main lid\n        cylinder(h=lid_height, d=lid_diameter, center=false);\n        \n        // Center hole for cone\n        translate([0, 0, -1])\n            cylinder(h=lid_height+2, d=cone_base+5, center=false);\n            \n        // Grip handle\n        translate([0, lid_diameter/2-10, lid_height/2])\n            rotate([90, 0, 0])\n                cylinder(h=20, d=8, center=true);\n    }\n}\n\nmodule motor_housing() {\n    translate([0, 0, -body_height/2-motor_height/2]) {\n        difference() {\n            cube([motor_width, motor_depth, motor_height], center=true);\n            \n            // Hollow interior\n            translate([0, 0, wall_thickness/2])\n                cube([motor_width-wall_thickness*2, motor_depth-wall_thickness*2, motor_height-wall_thickness], center=true);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Button panel\n    translate([body_width/2-5, 0, body_height/2-button_height/2-2]) {\n        cube([button_diameter+4, button_diameter*2+4, button_height+2], center=true);\n        \n        // Power button\n        translate([0, -button_diameter/2-2, button_height/2+1])\n            cylinder(h=button_height, d=button_diameter);\n            \n        // Speed button\n        translate([0, button_diameter/2+2, button_height/2+1])\n            cylinder(h=button_height, d=button_diameter);\n    }\n}\n\nmodule stability_feet() {\n    // Four rubber feet\n    for(x=[-1, 1])\n        for(y=[-1, 1])\n            translate([x*body_width/3, y*body_depth/3, -body_height/2-motor_height-3])\n                cylinder(h=3, d=8, center=false);\n}\n\n// Assembly\nunion() {\n    // Base structure\n    main_body();\n    \n    // Motor below\n    motor_housing();\n    \n    // Juice container on top\n    translate([0, 0, body_height/2])\n        juice_container();\n    \n    // Cone inside container\n    translate([0, 0, body_height/2+wall_thickness])\n        juicing_cone();\n    \n    // Lid\n    translate([0, 0, body_height/2+container_height-5])\n        lid();\n    \n    // Control panel\n    control_panel();\n    \n    // Stability feet\n    stability_feet();\n    \n    // Power cord\n    translate([-body_width/2-15, 0, -body_height/2-motor_height/2])\n        rotate([90, 0, 90])\n            cylinder(h=20, d=5);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "steamcraft",
    "openscad_code": "// SteamCraft Coffee Maker - Realistic Kitchen Appliance\n// Medium complexity 3D printable model\n\n$fn = 30;\n\n// Main dimensions\nbase_width = 80;\nbase_depth = 60;\nbase_height = 15;\n\n// Water tank\ntank_width = 25;\ntank_depth = 50;\ntank_height = 70;\n\n// Boiler assembly\nboiler_diameter = 35;\nboiler_height = 40;\n\n// Filter basket\nbasket_diameter = 30;\nbasket_height = 25;\n\n// Cup platform\nplatform_width = 50;\nplatform_depth = 40;\nplatform_height = 8;\n\nmodule base() {\n    // Main base with rounded corners\n    difference() {\n        minkowski() {\n            cube([base_width-6, base_depth-6, base_height], center=true);\n            cylinder(r=3, h=0.1);\n        }\n        translate([0, 0, 2])\n            cube([base_width-10, base_depth-10, base_height+2], center=true);\n    }\n}\n\nmodule water_tank() {\n    // Transparent water tank with level indicator\n    difference() {\n        translate([-base_width/2 + tank_width/2 + 5, 0, tank_height/2 + base_height/2])\n            color([0.8, 0.9, 1, 0.6])\n            cube([tank_width, tank_depth, tank_height], center=true);\n        \n        // Hollow interior\n        translate([-base_width/2 + tank_width/2 + 5, 0, tank_height/2 + base_height/2 + 2])\n            cube([tank_width-4, tank_depth-4, tank_height], center=true);\n        \n        // Water level window\n        translate([-base_width/2 + 5, tank_depth/2 + 1, tank_height/2 + base_height/2])\n            cube([tank_width-10, 2, tank_height-10], center=true);\n    }\n}\n\nmodule boiler() {\n    // Central boiler with pipes\n    translate([0, 0, boiler_height/2 + base_height/2 + 5])\n    union() {\n        // Main boiler cylinder\n        difference() {\n            cylinder(d=boiler_diameter, h=boiler_height);\n            translate([0, 0, 2])\n                cylinder(d=boiler_diameter-4, h=boiler_height+1);\n        }\n        \n        // Pressure gauge\n        translate([boiler_diameter/2 + 5, 0, boiler_height - 10])\n        rotate([90, 0, 0])\n        union() {\n            cylinder(d=8, h=6);\n            sphere(d=8);\n        }\n        \n        // Steam pipes\n        for(i = [0:45:315]) {\n            rotate([0, 0, i])\n            translate([boiler_diameter/2 - 2, 0, boiler_height - 15])\n                rotate([90, 0, 0])\n                cylinder(d=4, h=20);\n        }\n    }\n}\n\nmodule filter_basket() {\n    // Removable filter basket assembly\n    translate([base_width/2 - basket_diameter/2 - 10, 0, basket_height/2 + base_height/2 + 2])\n    difference() {\n        // Basket body\n        cylinder(d=basket_diameter, h=basket_height);\n        \n        // Tapered interior\n        translate([0, 0, 2])\n            cylinder(d=basket_diameter-6, h=basket_height);\n        \n        // Drain holes\n        for(i = [0:30:330]) {\n            rotate([0, 0, i])\n            translate([basket_diameter/2 - 4, 0, 2])\n                cylinder(d=3, h=basket_height-2);\n        }\n        \n        // Handle\n        translate([basket_diameter/2 + 10, 0, basket_height - 15])\n            cube([15, 8, 5], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons and display\n    translate([0, base_depth/2 - 5, base_height + 5])\n    union() {\n        // Panel face\n        cube([40, 2, 20], center=true);\n        \n        // LCD display\n        translate([0, 1.5, 5])\n            color([0.2, 0.2, 0.2])\n            cube([25, 0.5, 8], center=true);\n        \n        // Buttons\n        for(pos = [[-15, 0], [-5, 0], [5, 0], [15, 0]]) {\n            translate([pos[0], 2, pos[1]])\n                cylinder(d=4, h=3);\n        }\n        \n        // Power indicator\n        translate([0, 2, -5])\n            sphere(d=3);\n    }\n}\n\nmodule cup_platform() {\n    // Drip tray and cup platform\n    translate([0, 0, base_height/2])\n    difference() {\n        // Platform with grid pattern\n        cube([platform_width, platform_depth, platform_height], center=true);\n        \n        // Drain grate\n        translate([0, 0, platform_height/2 - 2])\n            cube([platform_width-10, platform_depth-10, 4], center=true);\n        \n        // Grid holes\n        for(x = [-20:5:20]) {\n            for(y = [-15:5:15]) {\n                translate([x, y, 0])\n                    cylinder(d=2, h=platform_height+1, center=true);\n            }\n        }\n    }\n}\n\nmodule feet() {\n    // Rubber feet for stability\n    for(pos = [[-30, -20], [30, -20], [-30, 20], [30, 20]]) {\n        translate([pos[0], pos[1], -base_height/2 - 3])\n            cylinder(d=6, h=3);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    water_tank();\n    boiler();\n    filter_basket();\n    control_panel();\n    cup_platform();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "brewhaven",
    "openscad_code": "// Brewhaven Coffee Maker - Realistic Style, Medium Complexity\n// Overall dimensions: 80mm W x 120mm D x 150mm H\n\n$fn = 32;\n\n// Main body\nmodule body() {\n    difference() {\n        // Main housing\n        cube([80, 120, 100], center=true);\n        \n        // Top opening for filter basket\n        translate([0, 20, 50])\n            cube([60, 40, 10], center=true);\n        \n        // Back opening for water tank\n        translate([0, -55, 30])\n            cube([70, 15, 60], center=true);\n    }\n}\n\n// Water tank\nmodule water_tank() {\n    translate([0, -60, 30])\n        cube([65, 10, 60], center=true);\n}\n\n// Filter basket assembly\nmodule filter_basket() {\n    translate([0, 20, 40])\n        difference() {\n            // Basket housing\n            cylinder(h=20, r1=28, r2=25);\n            \n            // Inner cavity\n            cylinder(h=18, r1=24, r2=21);\n        }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, 45, 40])\n        difference() {\n            // Panel base\n            cube([50, 15, 8], center=true);\n            \n            // Button holes\n            for(i = [-1, 0, 1]) {\n                translate([i * 12, 0, 4])\n                    cylinder(h=10, r=3, center=true);\n            }\n        }\n}\n\n// Buttons\nmodule buttons() {\n    for(i = [-1, 0, 1]) {\n        translate([i * 12, 45, 44])\n            cylinder(h=3, r=3);\n    }\n}\n\n// Carafe base\nmodule carafe_base() {\n    translate([0, 20, -45])\n        difference() {\n            // Base platform\n            cube([70, 60, 10], center=true);\n            \n            // Heating plate\n            translate([0, 0, 5])\n                cylinder(h=5, r=25);\n        }\n}\n\n// Carafe\nmodule carafe() {\n    translate([0, 20, -25])\n        difference() {\n            // Main body\n            cylinder(h=40, r1=20, r2=22);\n            \n            // Inner cavity\n            translate([0, 0, 2])\n                cylinder(h=38, r=18);\n            \n            // Handle cutout\n            translate([22, 0, 15])\n                rotate([90, 0, 0])\n                    cylinder(h=30, r=5);\n        }\n    \n    // Handle\n    translate([22, 0, 15])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=30, r=7);\n                cylinder(h=30, r=5);\n            }\n    \n    // Spout\n    translate([0, 22, -10])\n        difference() {\n            rotate([0, -30, 0])\n                cube([10, 15, 5], center=true);\n            rotate([0, -30, 0])\n                translate([0, 0, 2])\n                    cube([6, 15, 5], center=true);\n        }\n}\n\n// Water level indicator\nmodule water_indicator() {\n    translate([35, -60, 30])\n        difference() {\n            // Indicator housing\n            cube([4, 12, 60], center=true);\n            \n            // Window\n            translate([1, 0, 0])\n                cube([2, 10, 58], center=true);\n        }\n}\n\n// Drip tray\nmodule drip_tray() {\n    translate([0, 20, -55])\n        difference() {\n            // Tray base\n            cube([65, 55, 5], center=true);\n            \n            // Recess\n            translate([0, 0, 1])\n                cube([60, 50, 4], center=true);\n        }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-40, -50, -45])\n        rotate([90, 0, 0])\n            cylinder(h=30, r=3);\n}\n\n// Assembly\nunion() {\n    body();\n    water_tank();\n    filter_basket();\n    control_panel();\n    buttons();\n    carafe_base();\n    carafe();\n    water_indicator();\n    drip_tray();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlestream",
    "openscad_code": "// Kettlestream appliance - a compact electric kettle with water stream feature\n// Overall dimensions: 120mm x 90mm x 180mm\n\n$fn = 32;\n\n// Main body parameters\nwall_thickness = 2;\nbody_width = 80;\nbody_depth = 70;\nbody_height = 150;\n\n// Base parameters\nbase_width = 90;\nbase_depth = 80;\nbase_height = 15;\n\n// Handle parameters\nhandle_radius = 8;\nhandle_height = 100;\n\n// Spout parameters\nspout_length = 60;\nspout_radius = 6;\n\n// Water level window parameters\nwindow_width = 40;\nwindow_height = 80;\n\n// Button and LED parameters\nbutton_radius = 8;\nbutton_height = 3;\nled_radius = 3;\n\n// Main assembly\nmodule kettlestream() {\n    union() {\n        // Base with power connector\n        translate([0, 0, base_height/2])\n            base();\n        \n        // Main body\n        translate([0, 0, base_height + body_height/2])\n            body();\n        \n        // Handle on right side\n        translate([body_width/2 + handle_radius, 0, base_height + body_height/2])\n            handle();\n        \n        // Spout on left front\n        translate([-body_width/2 - spout_length/2, body_depth/2 - 10, base_height + body_height - 30])\n            rotate([0, -30, 0])\n            spout();\n        \n        // Control panel on front\n        translate([0, body_depth/2 + button_height/2, base_height + body_height - 40])\n            control_panel();\n        \n        // Lid on top\n        translate([0, 0, base_height + body_height + 5])\n            lid();\n    }\n}\n\n// Base with power connector\nmodule base() {\n    difference() {\n        // Main base\n        cube([base_width, base_depth, base_height], center=true);\n        \n        // Power cord hole in back\n        translate([0, -base_depth/2 - 1, -base_height/4])\n            rotate([90, 0, 0])\n            cylinder(h=10, r=5, center=true);\n    }\n}\n\n// Main body with water window\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, -wall_thickness/2])\n            cube([body_width - 2*wall_thickness, body_depth - 2*wall_thickness, body_height - wall_thickness], center=true);\n        \n        // Water level window\n        translate([0, body_depth/2, 0])\n            cube([window_width, wall_thickness + 1, window_height], center=true);\n        \n        // Steam vent holes on top\n        for(x = [-20, 0, 20]) {\n            translate([x, 0, body_height/2 - 5])\n                cylinder(h=10, r=2, center=true);\n        }\n    }\n}\n\n// Handle with ergonomic grip\nmodule handle() {\n    difference() {\n        // Main handle loop\n        rotate([90, 0, 0])\n            cylinder(h=handle_height, r=handle_radius, center=true);\n        \n        // Grip indentations\n        for(h = [-40, -20, 0, 20, 40]) {\n            translate([0, 0, h])\n                scale([0.8, 0.8, 1])\n                cylinder(h=5, r=handle_radius + 1, center=true);\n        }\n    }\n}\n\n// Spout with stream opening\nmodule spout() {\n    difference() {\n        // Main spout\n        cylinder(h=spout_length, r1=spout_radius, r2=spout_radius/2, center=true);\n        \n        // Hollow center\n        translate([0, 0, -spout_length/2])\n            cylinder(h=spout_length + 1, r1=spout_radius - wall_thickness, r2=spout_radius/2 - wall_thickness, center=false);\n    }\n}\n\n// Control panel with button and LED\nmodule control_panel() {\n    union() {\n        // Panel base\n        cube([50, button_height, 30], center=true);\n        \n        // Main power button\n        translate([0, button_height/2 + button_height/2, 0])\n            cylinder(h=button_height, r=button_radius, center=true);\n        \n        // LED indicator\n        translate([20, button_height/2 + button_height/2, 0])\n            cylinder(h=button_height, r=led_radius, center=true);\n        \n        // Small indicator lines\n        for(i = [-15, -5, 5, 15]) {\n            translate([i, button_height/2 + 1, 10])\n                cube([2, 2, 5], center=true);\n        }\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        cylinder(h=10, r=body_width/2, center=true);\n        \n        // Inner cavity\n        translate([0, 0, -5])\n            cylinder(h=12, r=body_width/2 - wall_thickness, center=true);\n        \n        // Steam release hole\n        translate([0, 0, 5])\n            cylinder(h=10, r=3, center=true);\n    }\n    \n    // Lid handle\n    translate([0, 0, 10])\n        cylinder(h=15, r=8, center=false);\n}\n\n// Render the complete kettlestream\nkettlestream();",
    "renders": true
  },
  {
    "kitchen_appliance": "squeezecraft",
    "openscad_code": "// Squeezecraft citrus press - medium complexity realistic style\n// Overall size: 120mm x 160mm x 220mm\n\n$fn = 32;\nwall_thickness = 2;\n\nmodule base() {\n    // Main base with rounded edges\n    difference() {\n        minkowski() {\n            cube([100, 140, 40], center=true);\n            sphere(r=5);\n        }\n        // Hollow interior\n        translate([0, 0, 2])\n        scale([0.9, 0.9, 0.9])\n        minkowski() {\n            cube([100, 140, 40], center=true);\n            sphere(r=4);\n        }\n    }\n}\n\nmodule juice_container() {\n    // Conical juice collector\n    difference() {\n        cylinder(h1=30, h2=0, r1=45, r2=40);\n        translate([0, 0, -1])\n        cylinder(h1=32, h2=0, r1=43, r2=38);\n    }\n}\n\nmodule cone_press() {\n    // Main pressing cone with ribs\n    union() {\n        // Central cone\n        cylinder(h=60, r1=0, r2=35);\n        // Pressing ribs\n        for (i = [0:11]) {\n            rotate([0, 0, i*30])\n            translate([-2, 0, 0])\n            cube([4, 35, 60]);\n        }\n        // Top ring\n        translate([0, 0, 60])\n        cylinder(h=10, r1=35, r2=32);\n    }\n}\n\nmodule handle_assembly() {\n    // Pivoting handle\n    translate([0, 0, 80]) {\n        // Handle arm\n        rotate([0, -20, 0]) {\n            difference() {\n                // Main arm\n                translate([0, 0, 20])\n                cube([15, 20, 100], center=true);\n                // Hollow\n                translate([0, 0, 20])\n                cube([11, 16, 96], center=true);\n            }\n            // Handle grip\n            translate([0, 0, 70])\n            rotate([90, 0, 0])\n            difference() {\n                cylinder(h=80, r=12);\n                cylinder(h=82, r=10);\n            }\n        }\n        // Pivot joints\n        translate([-40, 0, 0])\n        sphere(r=8);\n        translate([40, 0, 0])\n        sphere(r=8);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons\n    translate([0, -75, 0])\n    union() {\n        // Panel base\n        cube([60, 8, 30], center=true);\n        // Power button\n        translate([-20, -5, 0])\n        cylinder(h=5, r=6);\n        // Speed dial\n        translate([0, -5, 0])\n        cylinder(h=8, r=8);\n        // Indicator LED\n        translate([20, -5, 5])\n        sphere(r=3);\n    }\n}\n\nmodule spout() {\n    // Pouring spout\n    translate([0, 55, -5])\n    rotate([0, 20, 0])\n    difference() {\n        hull() {\n            cube([30, 10, 5], center=true);\n            translate([0, 20, 5])\n            cube([20, 8, 3], center=true);\n        }\n        // Hollow channel\n        translate([0, 0, -1])\n        scale([0.8, 0.8, 0.8])\n        hull() {\n            cube([30, 10, 7], center=true);\n            translate([0, 20, 5])\n            cube([20, 8, 5], center=true);\n        }\n    }\n}\n\nmodule lid() {\n    // Hinged lid for cone access\n    translate([0, 0, 30])\n    rotate([0, 0, 0])\n    difference() {\n        // Lid body\n        cylinder(h=5, r=48);\n        // Hole for cone\n        cylinder(h=6, r=36);\n        // Hinge\n        translate([45, 0, 2.5])\n        rotate([90, 0, 0])\n        cylinder(h=10, r=3);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    translate([0, 0, 20])\n    juice_container();\n    translate([0, 0, 50])\n    lid();\n    translate([0, 0, 55])\n    cone_press();\n    handle_assembly();\n    control_panel();\n    spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "roastrush",
    "openscad_code": "// Roastrush Kitchen Appliance - Realistic Medium Complexity\n// Overall dimensions: 80mm x 60mm x 110mm (LxWxH)\n\n// Main body module\nmodule roastrush_body() {\n    // Base frame\n    difference() {\n        cube([80, 60, 100], center=true);\n        translate([0, 0, 5]) cube([76, 56, 96], center=true);\n    }\n    \n    // Front panel with controls\n    translate([0, 30, 10]) {\n        // Control panel face\n        color(\"lightgray\")\n        cube([70, 2, 40], center=true);\n        \n        // Display screen\n        translate([-20, 2, 15])\n        color(\"black\")\n        cube([25, 1, 12], center=true);\n        \n        // Control buttons\n        for(i=[0:2]) {\n            translate([15 + i*12, 2, 15])\n            color(\"darkgray\")\n            cylinder(h=2, r=4, center=true);\n        }\n        \n        // Rotary dial\n        translate([15, 2, 0])\n        color(\"silver\")\n        cylinder(h=3, r=6, center=true);\n    }\n}\n\n// Top lid assembly\nmodule roastrush_lid() {\n    // Hinge\n    translate([0, -30, 50])\n    rotate([90, 0, 0])\n    cylinder(h=60, r=2, center=true);\n    \n    // Lid\n    translate([0, -30, 60])\n    rotate([-30, 0, 0]) {\n        difference() {\n            cube([70, 55, 4], center=true);\n            translate([0, 0, 2])\n            cube([66, 51, 4], center=true);\n        }\n        \n        // Lid handle\n        translate([0, 25, 2])\n        color(\"black\")\n        cube([40, 8, 8], center=true);\n    }\n}\n\n// Bean container\nmodule bean_container() {\n    translate([0, 0, 20]) {\n        // Container body\n        difference() {\n            cylinder(h=30, r=25, center=true);\n            translate([0, 0, 2])\n            cylinder(h=30, r=23, center=true);\n        }\n        \n        // Container lid\n        translate([0, 0, 17])\n        color(\"darkgray\")\n        cylinder(h=3, r=26, center=true);\n        \n        // Container handle\n        translate([25, 0, 0])\n        rotate([90, 0, 0])\n        cylinder(h=15, r=3, center=true);\n    }\n}\n\n// Ventilation slots\nmodule ventilation_slots() {\n    for(i=[-30:10:30]) {\n        translate([i, 30, 30])\n        rotate([90, 0, 0])\n        cube([8, 1, 2], center=true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    color(\"black\")\n    translate([-40, -30, -48])\n    rotate([0, 90, 0])\n    cylinder(h=30, r=3, center=true);\n}\n\n// Feet\nmodule feet() {\n    for(x=[-30, 30]) {\n        for(y=[-20, 20]) {\n            translate([x, y, -50])\n            color(\"black\")\n            cylinder(h=4, r=4, center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    roastrush_body();\n    roastrush_lid();\n    bean_container();\n    ventilation_slots();\n    power_cord();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettleburst",
    "openscad_code": "// Kettleburst Kitchen Appliance - Realistic Style\n// Medium complexity, 3D printable kettle design\n\n$fn = 50;\n\n// Main parameters\nkettle_height = 120;\nkettle_width = 90;\nkettle_depth = 120;\nwall_thickness = 2;\nbase_height = 15;\n\n// Main body module\nmodule kettle_body() {\n    difference() {\n        // Main kettle body - rounded cylinder shape\n        union() {\n            translate([0, 0, base_height + kettle_height/2])\n                scale([kettle_width/2, kettle_depth/2, kettle_height/2])\n                sphere(1);\n            \n            // Cylindrical base\n            translate([0, 0, base_height/2])\n                cylinder(h = base_height, r1 = kettle_width/2 - 5, r2 = kettle_width/2, center = true);\n        }\n        \n        // Hollow interior\n        translate([0, 0, base_height + kettle_height/2])\n            scale([kettle_width/2 - wall_thickness, kettle_depth/2 - wall_thickness, kettle_height/2 - wall_thickness])\n            sphere(1);\n    }\n}\n\n// Handle module\nmodule handle() {\n    translate([kettle_width/2 + 5, 0, base_height + kettle_height/2])\n    rotate([0, 90, 0])\n    difference() {\n        // Handle grip\n        cylinder(h = kettle_depth/2 + 10, r = 6, center = true);\n        \n        // Hollow handle\n        cylinder(h = kettle_depth/2 + 12, r = 4, center = true);\n    }\n}\n\n// Spout module\nmodule spout() {\n    translate([-kettle_width/2 + 5, 0, base_height + kettle_height - 20])\n    rotate([0, -30, 0])\n    union() {\n        // Main spout\n        cylinder(h = 30, r1 = 12, r2 = 8);\n        \n        // Spout opening\n        translate([0, 0, 30])\n            cylinder(h = 5, r1 = 8, r2 = 6);\n    }\n}\n\n// Lid module\nmodule lid() {\n    translate([0, 0, base_height + kettle_height + 2])\n    difference() {\n        // Lid body\n        cylinder(h = 8, r = kettle_width/2 - 8);\n        \n        // Lid grip indentation\n        translate([0, 0, 4])\n            cylinder(h = 4, r = kettle_width/2 - 12);\n    }\n    \n    // Lid handle\n    translate([0, 0, base_height + kettle_height + 10])\n        cylinder(h = 8, r = 5);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([kettle_width/2 - 15, 0, base_height + 10])\n    union() {\n        // Panel base\n        cube([20, 30, 5], center = true);\n        \n        // Power button\n        translate([5, -8, 3])\n            cylinder(h = 3, r = 4);\n        \n        // Temperature dial\n        translate([5, 8, 3])\n            cylinder(h = 2, r = 6);\n        \n        // LED indicator\n        translate([5, 0, 3])\n            cylinder(h = 1, r = 2);\n    }\n}\n\n// Water level indicator\nmodule water_indicator() {\n    translate([0, kettle_depth/2 - 1, base_height + 20])\n    difference() {\n        // Indicator window\n        cube([30, 2, 60], center = true);\n        \n        // Clear window\n        cube([26, 1, 56], center = true);\n    }\n}\n\n// Base module with feet\nmodule base() {\n    union() {\n        // Main base\n        translate([0, 0, base_height/2])\n            cylinder(h = base_height, r = kettle_width/2 + 5, center = true);\n        \n        // Feet\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n        translate([kettle_width/2 - 10, 0, 0])\n            cylinder(h = 5, r = 3);\n    }\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    kettle_body();\n    handle();\n    spout();\n    lid();\n    control_panel();\n    water_indicator();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "fruitfountain",
    "openscad_code": "// FruitFountain Kitchen Appliance - Medium Complexity\n// Realistic style with 3D-printable design\n\n// Overall dimensions\nbase_diameter = 80;\nbase_height = 15;\nbody_height = 100;\nbody_diameter = 70;\ncone_height = 40;\noutlet_height = 20;\noutlet_diameter = 12;\nbutton_diameter = 8;\nbutton_height = 3;\ncontainer_height = 80;\ncontainer_diameter = 75;\ncontainer_wall = 2;\n\n// Base module\nmodule base() {\n    difference() {\n        cylinder(h=base_height, d=base_diameter, $fn=60);\n        // Cable hole\n        translate([0, -base_diameter/2 + 8, base_height/2])\n            rotate([90, 0, 0])\n                cylinder(h=20, d=8, $fn=20);\n    }\n}\n\n// Main body cylinder\nmodule body() {\n    translate([0, 0, base_height])\n        cylinder(h=body_height, d=body_diameter, $fn=60);\n}\n\n// Control panel with buttons\nmodule control_panel() {\n    translate([body_diameter/2 + 2, 0, base_height + 20])\n        rotate([0, 0, 90])\n            cube([40, 20, 2], center=true);\n    \n    // Power button\n    translate([body_diameter/2 + 12, 0, base_height + 25])\n        cylinder(h=button_height, d=button_diameter, $fn=20);\n    \n    // Speed button\n    translate([body_diameter/2 + 12, -15, base_height + 25])\n        cylinder(h=button_height, d=button_diameter, $fn=20);\n}\n\n// Juicing cone\nmodule cone() {\n    translate([0, 0, base_height + body_height])\n        cylinder(h=cone_height, d1=body_diameter - 10, d2=20, $fn=60);\n    \n    // Cone ridges\n    for(i=[1:6]) {\n        rotate([0, 0, i * 60])\n            translate([0, 10, base_height + body_height + cone_height/2])\n                cube([2, 20, cone_height], center=true);\n    }\n}\n\n// Juice outlet\nmodule outlet() {\n    translate([0, body_diameter/2 - 5, base_height + body_height/2])\n        rotate([0, 90, 0])\n            cylinder(h=outlet_height, d=outlet_diameter, $fn=20);\n    \n    // Outlet support\n    translate([0, body_diameter/2 - 5, base_height + body_height/2 - 10])\n        cube([outlet_diameter, 10, 20], center=true);\n}\n\n// Fruit container\nmodule container() {\n    difference() {\n        translate([0, 0, base_height + body_height + cone_height])\n            cylinder(h=container_height, d=container_diameter, $fn=60);\n        \n        // Hollow interior\n        translate([0, 0, base_height + body_height + cone_height + container_wall])\n            cylinder(h=container_height - container_wall, d=container_diameter - 2*container_wall, $fn=60);\n    }\n    \n    // Container handle\n    translate([container_diameter/2 + 5, 0, base_height + body_height + cone_height + container_height/2])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=30, d=12, $fn=20);\n                cylinder(h=30, d=8, $fn=20);\n            }\n}\n\n// Locking tabs for container\nmodule locking_tabs() {\n    for(i=[1:4]) {\n        rotate([0, 0, i * 90])\n            translate([body_diameter/2 + 3, 0, base_height + body_height + cone_height - 5])\n                cube([6, 10, 4], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    control_panel();\n    cone();\n    outlet();\n    container();\n    locking_tabs();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "javagenie",
    "openscad_code": "// JavaGenie Single-Serve Coffee Maker (Medium Complexity, Realistic Style)\n// Overall footprint: ~90 mm wide Ã— 130 mm deep Ã— 150 mm high\n// Wall thickness: 2 mm everywhere for 3D-printability\n\n$fn = 36;\n\n// Helper to round edges for realism\nmodule roundedCube(size, r) {\n    hull() {\n        translate([r, r, r]) sphere(r);\n        translate([size.x - r, r, r]) sphere(r);\n        translate([size.x - r, size.y - r, r]) sphere(r);\n        translate([r, size.y - r, r]) sphere(r);\n        translate([r, r, size.z - r]) sphere(r);\n        translate([size.x - r, r, size.z - r]) sphere(r);\n        translate([size.x - r, size.y - r, size.z - r]) sphere(r);\n        translate([r, size.y - r, size.z - r]) sphere(r);\n    }\n}\n\n// Main body shell\nmodule bodyShell() {\n    difference() {\n        roundedCube([90, 130, 120], 5); // main body\n        translate([2, 2, 2]) roundedCube([86, 126, 118], 3); // hollow inside\n    }\n}\n\n// Water reservoir on back\nmodule waterTank() {\n    translate([5, 100, 20]) difference() {\n        cube([80, 20, 70]); // tank body\n        translate([2, 2, 2]) cube([76, 18, 68]); // void\n    }\n}\n\n// Drip tray & grill\nmodule dripTray() {\n    translate([10, 10, 0]) difference() {\n        cube([70, 70, 10]); // tray\n        translate([2, 2, 2]) cube([66, 66, 8]);\n    }\n    translate([12, 12, 10]) for (x = [0:6:60], y = [0:6:60]) {\n        cube([4, 4, 2]); // grill slats\n    }\n}\n\n// Control panel\nmodule controlPanel() {\n    translate([5, 75, 125]) difference() {\n        cube([80, 50, 5]); // panel face\n        translate([2, 2, 2]) cube([76, 46, 3]);\n    }\n    // Buttons\n    for (i = [0:1]) {\n        translate([15 + i * 20, 85, 131]) cylinder(h = 3, r = 4);\n    }\n    // LED indicator\n    translate([65, 90, 131]) cylinder(h = 1, r = 3);\n}\n\n// Pod holder / brew chamber\nmodule podHolder() {\n    translate([35, 40, 25]) difference() {\n        cylinder(h = 40, r1 = 25, r2 = 25);\n        translate([0, 0, 2]) cylinder(h = 36, r1 = 23, r2 = 23);\n    }\n    translate([0, 0, 0]) cylinder(h = 2, r = 25); // bottom plate\n}\n\n// Top lid (hinge implied)\nmodule lid() {\n    translate([45, 65, 120]) rotate([0, 0, 0]) difference() {\n        roundedCube([50, 60, 8], 4); // lid shell\n        translate([2, 2, 2]) roundedCube([46, 56, 6], 2);\n    }\n}\n\n// Outlet spout\nmodule spout() {\n    translate([45, 30, 65]) rotate([-90, 0, 0]) cylinder(h = 25, r1 = 6, r2 = 2);\n}\n\n// Legs for clearance\nmodule legs() {\n    for (x = [5, 85], y = [5, 125]) {\n        translate([x, y, -2]) cylinder(h = 4, r = 3);\n    }\n}\n\n// Assembly\nunion() {\n    bodyShell();\n    waterTank();\n    dripTray();\n    controlPanel();\n    podHolder();\n    lid();\n    spout();\n    legs();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlewave",
    "openscad_code": "// KettleWave â€“ compact kettle + microwave combo (3D-printable, ~110 mm tall)\n// All walls 2 mm thick, no severe overhangs.\n\n// Overall dimensions\ntotal_w = 70;   // width\ntotal_d = 60;   // depth\ntotal_h = 110;  // height\n\n// Wall thickness\nwall = 2;\n\n// Base plinth\nmodule base() {\n    difference() {\n        cube([total_w, total_d, 8], center = true);\n        translate([0, 0, 1])\n            cube([total_w - wall*2, total_d - wall*2, 8], center = true);\n    }\n}\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // outer box\n        cube([total_w, total_d, total_h], center = true);\n        // inner cavity\n        translate([0, 0, wall/2])\n            cube([total_w - wall*2, total_d - wall*2, total_h - wall], center = true);\n    }\n}\n\n// Microwave door (hinged at bottom)\nmodule door() {\n    difference() {\n        // door panel\n        translate([0, total_d/2 - wall/2, 0])\n            cube([total_w - 12, wall, total_h*0.6], center = true);\n        // window\n        translate([0, total_d/2 + wall/2, 5])\n            cube([total_w - 20, wall + 0.2, total_h*0.6 - 10], center = true);\n    }\n}\n\n// Handle for door\nmodule door_handle() {\n    translate([total_w/2 - 10, total_d/2 + wall, 0])\n        rotate([90, 0, 0])\n            cylinder(h = 30, d = 6, $fn = 16);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([total_w/2 - wall/2, 0, total_h*0.75])\n        cube([wall, total_d*0.6, 15], center = true);\n}\n\n// Two knobs on panel\nmodule knobs() {\n    for (y = [-12, 12]) {\n        translate([total_w/2 + wall/2, y, total_h*0.75 + 5])\n            rotate([90, 0, 0])\n                cylinder(h = 6, d1 = 8, d2 = 6, $fn = 20);\n    }\n}\n\n// Kettle part (top cylinder)\nmodule kettle_top() {\n    difference() {\n        // kettle body\n        translate([0, 0, total_h/2 - 10])\n            cylinder(h = 25, d = total_w - 20, $fn = 60);\n        // inner cavity (2 mm walls)\n        translate([0, 0, total_h/2 - 10 + 2])\n            cylinder(h = 25 - 2, d = total_w - 20 - 2*2, $fn = 60);\n    }\n}\n\n// Lid\nmodule kettle_lid() {\n    translate([0, 0, total_h/2 - 10 + 25 + 2])\n        cylinder(h = 3, d = total_w - 20 + 2, $fn = 60);\n}\n\n// Spout\nmodule spout() {\n    translate([total_w/2 - 10, 0, total_h/2 - 10 + 15])\n        rotate([0, 90, 0])\n            cylinder(h = 20, d1 = 12, d2 = 8, $fn = 20);\n}\n\n// Feet (simple cylinders)\nmodule feet() {\n    for (x = [-total_w/2 + 5, total_w/2 - 5])\n        for (y = [-total_d/2 + 5, total_d/2 - 5])\n            translate([x, y, -4 - 8/2])\n                cylinder(h = 4, d = 6, $fn = 16);\n}\n\n// Assembly\nunion() {\n    base();\n    body_shell();\n    door();\n    door_handle();\n    control_panel();\n    knobs();\n    kettle_top();\n    kettle_lid();\n    spout();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "pressright",
    "openscad_code": "// PressRight Kitchen Appliance (Medium Complexity)\n// Dimensions: ~90mm x 70mm x 120mm\n\n// Wall thickness constant\nwall = 2;\n\n// Main body module\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 60])\n            cube([90, 70, 120], center=true);\n        \n        // Hollow inside\n        translate([0, 0, 60])\n            cube([90-wall*2, 70-wall*2, 120-wall], center=true);\n        \n        // Top opening\n        translate([0, 0, 120-wall/2])\n            cube([40, 40, wall+1], center=true);\n    }\n}\n\n// Base/feet module\nmodule feet() {\n    for(x = [-30, 30])\n    for(y = [-25, 25]) {\n        translate([x, y, 0])\n            cylinder(h=5, r=5, $fn=16);\n    }\n}\n\n// Handle module\nmodule handle() {\n    translate([0, -35-wall, 120])\n    rotate([90, 0, 0])\n    difference() {\n        // Handle grip\n        cylinder(h=50, r=6, $fn=32);\n        \n        // Hollow grip\n        cylinder(h=50, r=4, $fn=32);\n    }\n}\n\n// Button panel\nmodule button_panel() {\n    translate([35, 0, 90])\n    cube([10, 50, 5]);\n    \n    // Buttons\n    for(i = [0, 1, 2]) {\n        translate([35+wall, -15+i*15, 92.5])\n            cylinder(h=2, r=3, $fn=16);\n    }\n}\n\n// Press mechanism\nmodule press() {\n    translate([0, 0, 100])\n    difference() {\n        // Press plate\n        cylinder(h=5, r=18, $fn=32);\n        \n        // Slots for drainage\n        for(a = [0:45:135]) {\n            rotate([0, 0, a])\n            translate([0, 10, -1])\n                cube([3, 20, 7]);\n        }\n    }\n}\n\n// Side ventilation slots\nmodule vents() {\n    for(i = [0:5]) {\n        translate([45-wall/2, -30+i*10, 40])\n            cube([wall, 5, 20]);\n    }\n}\n\n// Power cord\nmodule cord() {\n    translate([-45, 0, 30])\n    rotate([90, 0, 0])\n    cylinder(h=30, r=3, $fn=16);\n}\n\n// Assembly\nunion() {\n    body();\n    feet();\n    handle();\n    button_panel();\n    press();\n    vents();\n    cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "aromawave",
    "openscad_code": "// AROMAWAVE essential-oil diffuser / aroma-wave kitchen appliance  \n// Realistic style, medium complexity, 3D-printable  \n// External size ~110 mm tall, 90 mm diameter  \n\n// ----- PARAMETERS ----------------------------------------------------------\n$fn = 36;                 // smooth curves\nwall = 2;                 // 3D-print friendly wall thickness\nbaseH = 25;               // foot height\nbodyH = 55;               // main body height\nlidH  = 15;               // top lid height\ndia   = 90;               // outer diameter\nspoutW = 8;               // vapor spout width\nbuttonD = 3;              // push-button depth\n\n// ----- MODULES -------------------------------------------------------------\n\nmodule footRing(h, rOut, rIn){\n    difference(){\n        cylinder(h = h, r = rOut, center = true);\n        translate([0,0,-h/2])\n            cylinder(h = h+0.1, r = rIn, center = true);\n    }\n}\n\nmodule sideButtons(){\n    // three identical buttons around the front\n    for(a=[-45, 0, 45]){\n        rotate([0,0,a])\n            translate([dia/2+0.5,0,baseH+bodyH/2])\n                rotate([-90,0,0])\n                    cube([6,3,buttonD], center=true);\n    }\n}\n\nmodule spout(){\n    // chimney-like vapor exit on top\n    difference(){\n        // main spout tube\n        translate([0,dia/4,lidH-2])\n            rotate([90,0,0])\n                cylinder(h=15, r1=spoutW/2, r2=spoutW/2+2, center=false);\n        // hollow core\n        translate([0,dia/4+0.1,lidH-2])\n            rotate([90,0,0])\n                cylinder(h=16, r1=spoutW/2-2, r2=spoutW/2, center=false);\n    }\n}\n\nmodule gridVents(){\n    // vertical slots around body for air intake\n    slotH = 10;\n    slotW = 2;\n    slots = 12;\n    for(i=[0:slots-1])\n        rotate([0,0,i*360/slots])\n            translate([dia/2-wall, 0, baseH+bodyH/2-slotH/2])\n                cube([wall+0.1, slotW, slotH], center=true);\n}\n\n// ----- MAIN BODY -----------------------------------------------------------\n\n// 1. Anti-slip rubber foot (solid ring)\nfootRing(baseH, dia/2, dia/2-wall);\n\n// 2. Main cylindrical body with air vents\ndifference(){\n    cylinder(h=bodyH, r=dia/2, center=false);\n    // center hollow for water tank\n    translate([0,0,baseH+wall])\n        cylinder(h=bodyH-wall, r=dia/2-wall, center=false);\n    // cut vents\n    gridVents();\n}\n\n// 3. Control buttons on front\nsideButtons();\n\n// 4. Top lid with spout\ndifference(){\n    // lid disc\n    translate([0,0,baseH+bodyH])\n        cylinder(h=lidH, r1=dia/2, r2=dia/2-2, center=false);\n    // hollow cone inside\n    translate([0,0,baseH+bodyH])\n        cylinder(h=lidH+0.1, r1=dia/2-wall, r2=dia/2-wall-2, center=false);\n}\n\n// 5. Vapor spout\nspout();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlesteam",
    "openscad_code": "// Kettlesteam â€“ medium-detail, 3D-printable electric kettle\n// Overall ~100 mm high, all walls 2 mm thick, no steep overhangs\n\n$fn = 48;               // smooth curves\n\n// ---------------- Parameters ----------------\nwall = 2;               // uniform wall thickness\nh_body = 75;            // main kettle height\nr_body = 45;            // kettle radius\nh_base = 12;            // base stand height\nr_base = 50;            // base radius\nh_lid = 8;              // lid height\nr_lid = r_body - wall;  // lid fits inside rim\nh_spout = 35;           // spout tip height\nl_spout = 40;           // spout forward reach\nr_spout = 6;            // spout radius\nr_handle = 7;           // handle tube radius\nh_handle = 60;          // handle height\nw_handle = 50;          // handle width\nr_switch = 4;           // on/off switch radius\nh_switch = 6;           // switch protrusion\nr_led = 2;              // indicator LED radius\n\n// ---------------- Modules ----------------\nmodule kettle_body() {\n    difference() {\n        // outer skin\n        cylinder(h = h_body, r1 = r_body, r2 = r_body - 5);\n        // hollow cavity\n        translate([0, 0, wall])\n            cylinder(h = h_body - wall, r1 = r_body - wall, r2 = r_body - wall - 5);\n    }\n}\n\nmodule lid() {\n    difference() {\n        union() {\n            // lid disc\n            cylinder(h = h_lid, r = r_lid);\n            // knob\n            translate([0, 0, h_lid])\n                sphere(d = 12);\n        }\n        // recess knob base for printability\n        translate([0, 0, h_lid - 1])\n            sphere(d = 10);\n    }\n}\n\nmodule spout() {\n    translate([r_body - 10, 0, h_body - 10])\n        rotate([0, -25, 0])\n            hull() {\n                cylinder(h = 5, r = r_spout);\n                translate([l_spout, 0, h_spout - (h_body - 10)])\n                    cylinder(h = 3, r = r_spout - 1);\n            }\n}\n\nmodule handle() {\n    translate([-r_body - 2, 0, 0])\n        rotate([90, 0, 0])\n            difference() {\n                // outer tube\n                cylinder(h = w_handle, r = r_handle);\n                // inner hole\n                cylinder(h = w_handle + 1, r = r_handle - wall);\n            }\n}\n\nmodule base() {\n    difference() {\n        cylinder(h = h_base, r = r_base);\n        translate([0, 0, wall])\n            cylinder(h = h_base, r = r_base - wall);\n    }\n}\n\nmodule switch() {\n    translate([r_base - 15, 0, h_base + h_switch/2])\n        rotate([90, 0, 0])\n            cylinder(h = h_switch, r = r_switch);\n}\n\nmodule led_indicator() {\n    translate([r_base - 8, 0, h_base + 0.5])\n        sphere(r = r_led);\n}\n\n// ---------------- Assembly ----------------\nunion() {\n    color(\"silver\") base();\n    color(\"gainsboro\") kettle_body();\n    color(\"white\") translate([0, 0, h_body]) lid();\n    color(\"gainsboro\") spout();\n    color(\"black\") handle();\n    color(\"red\") switch();\n    color(\"lime\") led_indicator();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "dripgenie",
    "openscad_code": "// DripGenie coffee dripper appliance (realistic, medium complexity)\n// Overall size: 120mm x 80mm x 140mm\n\n$fn = 32; // Smooth curves\n\n// Main body module\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([120, 80, 100], center = true);\n        \n        // Hollow interior\n        translate([0, 0, 5])\n            cube([116, 76, 90], center = true);\n    }\n}\n\n// Water reservoir\nmodule reservoir() {\n    difference() {\n        // Tank walls\n        translate([0, 25, 40])\n            cube([110, 30, 60], center = true);\n        \n        // Inner cavity\n        translate([0, 25, 45])\n            cube([106, 26, 55], center = true);\n    }\n    \n    // Fill lid\n    translate([0, 25, 70])\n        cube([60, 26, 6], center = true);\n}\n\n// Drip head assembly\nmodule drip_head() {\n    // Main housing\n    translate([0, -25, 30])\n        cube([80, 30, 20], center = true);\n    \n    // Shower head pattern\n    for (x = [-30:10:30]) {\n        for (y = [-10:5:10]) {\n            translate([x, -25, 20])\n                cylinder(h = 5, r = 2);\n        }\n    }\n}\n\n// Control panel\nmodule controls() {\n    // Panel base\n    translate([0, -40, 60])\n        cube([100, 15, 30], center = true);\n    \n    // Power button\n    translate([-30, -40, 75])\n        cylinder(h = 5, r = 8);\n    \n    // Brew strength dial\n    translate([0, -40, 75])\n        cylinder(h = 5, r = 10);\n    \n    // Timer display\n    translate([30, -40, 75])\n        cube([25, 10, 8], center = true);\n}\n\n// Drip tray\nmodule drip_tray() {\n    difference() {\n        // Tray base\n        translate([0, 0, -45])\n            cube([100, 80, 10], center = true);\n        \n        // Drain area\n        translate([0, 0, -40])\n            cube([80, 60, 5], center = true);\n    }\n    \n    // Support rails\n    for (x = [-40:80:40]) {\n        translate([x, 0, -35])\n            cube([5, 76, 5], center = true);\n    }\n}\n\n// Feet\nmodule feet() {\n    for (x = [-50:100:100]) {\n        for (y = [-30:60:60]) {\n            translate([x, y, -50])\n                cylinder(h = 10, r = 5);\n        }\n    }\n}\n\n// Carafe holder\nmodule carafe_holder() {\n    // Ring support\n    translate([0, 0, -25])\n        difference() {\n            cylinder(h = 8, r = 35);\n            cylinder(h = 10, r = 30);\n        }\n    \n    // Support arms\n    for (angle = [0:120:240]) {\n        rotate([0, 0, angle])\n            translate([25, 0, -25])\n                cube([50, 8, 8], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    reservoir();\n    drip_head();\n    controls();\n    drip_tray();\n    feet();\n    carafe_holder();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "citruscraft",
    "openscad_code": "// CitrusCraft Electric Citrus Juicer\n// Overall dimensions: ~110mm x 120mm x 180mm (fits typical countertop appliance)\n\n$fn = 32;  // Smooth curves for 3D printing\n\nmodule main_body() {\n    // Central body housing motor and cone\n    difference() {\n        // Main rounded body\n        cylinder(h = 85, r1 = 45, r2 = 48, center = false);\n        \n        // Hollow interior\n        translate([0, 0, 5])\n            cylinder(h = 75, r1 = 42, r2 = 45, center = false);\n    }\n}\n\nmodule juice_container() {\n    // Detachable juice collection cup\n    difference() {\n        // Outer container with slight taper\n        translate([0, 0, -25])\n            cylinder(h = 40, r1 = 50, r2 = 48, center = false);\n        \n        // Hollow interior\n        translate([0, 0, -23])\n            cylinder(h = 36, r1 = 46, r2 = 44, center = false);\n        \n        // Pour spout\n        translate([48, 0, -15])\n            rotate([0, 90, 0])\n                cylinder(h = 15, r = 8, center = false);\n    }\n    \n    // Handle for juice container\n    translate([50, 0, -15])\n        rotate([90, 0, 0])\n            difference() {\n                // Handle grip\n                torus(8, 3);\n                // Hollow handle\n                torus(7, 2);\n            }\n}\n\nmodule juicing_cone() {\n    // Reamed cone for juicing\n    translate([0, 0, 90])\n        cylinder(h = 35, r1 = 22, r2 = 8, center = false);\n    \n    // Cone ridges for better grip\n    for(i = [0:11]) {\n        rotate([0, 0, i * 30])\n            translate([18, 0, 91])\n                cube([4, 1.5, 33], center = true);\n    }\n}\n\nmodule base() {\n    // Stable weighted base\n    difference() {\n        // Main base shape\n        cylinder(h = 15, r = 52, center = false);\n        \n        // Recessed bottom for weight\n        translate([0, 0, 2])\n            cylinder(h = 10, r = 48, center = false);\n    }\n    \n    // Rubber feet\n    for(angle = [45, 135, 225, 315]) {\n        rotate([0, 0, angle])\n            translate([40, 0, 0])\n                cylinder(h = 3, r = 5, center = false);\n    }\n}\n\nmodule power_cord() {\n    // Realistic power cord exit\n    translate([-50, 0, 10])\n        rotate([0, 90, 0])\n            cylinder(h = 25, r = 4, center = false);\n}\n\nmodule control_panel() {\n    // Control area with button and LED\n    translate([0, 45, 70])\n        difference() {\n            // Panel housing\n            cube([25, 10, 15], center = true);\n            // Button recess\n            translate([0, 0, 7])\n                cube([12, 8, 8], center = true);\n        }\n    \n    // Power button\n    translate([0, 45, 78])\n        cylinder(h = 3, r = 5, center = false);\n    \n    // LED indicator\n    translate([-8, 45, 78])\n        sphere(r = 2);\n}\n\nmodule lid() {\n    // Protective lid for storage\n    difference() {\n        // Main lid dome\n        translate([0, 0, 125])\n            sphere(r = 55);\n        // Hollow interior\n        translate([0, 0, 130])\n            sphere(r = 50);\n    }\n    \n    // Lid handle\n    translate([0, 0, 170])\n        cylinder(h = 15, r = 8, center = false);\n}\n\n// Assembly\nunion() {\n    base();\n    translate([0, 0, 15]) main_body();\n    juice_container();\n    translate([0, 0, 15]) juicing_cone();\n    control_panel();\n    power_cord();\n    // Uncomment for storage configuration\n    // lid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "beancraft",
    "openscad_code": "// BeanCraft Coffee Grinder â€“ realistic, medium-complexity appliance\n// Overall footprint â‰ˆ 100 mm Ã— 80 mm Ã— 130 mm\n// Wall thickness 2 mm throughout\n\n$fn = 32;\n\nmodule shell() {\n    // Main body â€“ hollow box\n    difference() {\n        cube([100, 80, 110], center = true);\n        translate([0, 0, 2])\n            cube([96, 76, 110], center = true);\n    }\n}\n\nmodule hopper() {\n    // Tapered bean hopper on top\n    difference() {\n        cylinder(h1 = 40, r1 = 35, r2 = 20);\n        translate([0, 0, 2])\n            cylinder(h1 = 40, r1 = 33, r2 = 18);\n    }\n}\n\nmodule grind_adjust() {\n    // Rotary grind-size dial on front face\n    translate([0, 42, 30])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h = 8, r = 12);\n        translate([0, 0, 6])\n            cylinder(h = 2, r = 10);\n    }\n    // Indicator knob\n    translate([0, 46, 30])\n        rotate([90, 0, 0])\n        cube([2, 8, 2], center = true);\n}\n\nmodule power_button() {\n    // Push button top surface\n    translate([-40, 0, 57])\n    cube([12, 8, 4], center = true);\n}\n\nmodule spout() {\n    // Ground coffee outlet chute\n    translate([30, 42, -50])\n    rotate([0, 35, 0])\n    difference() {\n        cube([20, 18, 30]);\n        translate([2, 2, 2])\n            cube([16, 14, 30]);\n    }\n}\n\nmodule base() {\n    // Bottom plate with feet\n    difference() {\n        cube([104, 84, 6], center = true);\n        translate([0, 0, 2])\n            cube([100, 80, 6], center = true);\n    }\n    // Four rubber feet\n    for(x = [-40, 40], y = [-30, 30])\n        translate([x, y, -55])\n            cylinder(h = 4, r = 5);\n}\n\nmodule body_assembly() {\n    union() {\n        shell();\n        translate([0, 0, 55])\n            hopper();\n        grind_adjust();\n        power_button();\n        translate([0, 0, -55])\n            spout();\n        translate([0, 0, -58])\n            base();\n    }\n}\n\n// Display model upright on print bed\nrotate([180, 0, 0])\n    body_assembly();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlerise",
    "openscad_code": "// Kettlerise kitchen appliance - medium complexity realistic style\n// Overall dimensions: 120mm x 80mm x 100mm\n\n// Base module for the main body\nmodule base_body() {\n    difference() {\n        // Main rounded rectangular body\n        translate([0, 0, 40])\n            minkowski() {\n                cube([100, 70, 60], center=true);\n                sphere(5);\n            }\n        \n        // Hollow interior\n        translate([0, 0, 40])\n            minkowski() {\n                cube([94, 64, 60], center=true);\n                sphere(3);\n            }\n    }\n}\n\n// Water tank module\nmodule water_tank() {\n    color(\"lightblue\", 0.8)\n    translate([0, 0, 75])\n        difference() {\n            // Tank body\n            cylinder(h=40, r1=25, r2=28, center=true);\n            // Hollow interior\n            cylinder(h=42, r1=22, r2=25, center=true);\n        }\n}\n\n// Handle module\nmodule handle() {\n    translate([30, 0, 75])\n        rotate([0, 90, 0])\n            difference() {\n                // Main handle shape\n                cylinder(h=30, r1=8, r2=8);\n                // Grip hole\n                cylinder(h=32, r1=5, r2=5);\n            }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, -35, 55])\n        difference() {\n            // Panel base\n            cube([40, 5, 20], center=true);\n            // Button holes\n            for(i = [-1:1]) {\n                translate([i*12, -2.5, 5])\n                    cylinder(h=6, r=3);\n            }\n        }\n}\n\n// Buttons\nmodule buttons() {\n    for(i = [-1:1]) {\n        translate([i*12, -37, 60])\n            color(\"darkgray\")\n                cylinder(h=3, r=3);\n    }\n}\n\n// Power indicator light\nmodule indicator_light() {\n    translate([35, -37, 60])\n        color(\"red\")\n            sphere(2);\n}\n\n// Ventilation slots\nmodule vents() {\n    for(i = [0:3]) {\n        translate([40, -30 + i*20, 40])\n            rotate([0, 90, 0])\n                cube([20, 2, 10]);\n    }\n}\n\n// Base feet\nmodule feet() {\n    for(x = [-40, 40]) {\n        for(y = [-25, 25]) {\n            translate([x, y, 5])\n                color(\"black\")\n                    cylinder(h=5, r1=5, r2=3);\n        }\n    }\n}\n\n// Power cord stub\nmodule power_cord() {\n    translate([-50, 0, 15])\n        rotate([90, 0, 0])\n            cylinder(h=20, r1=3, r2=3);\n}\n\n// Water spout\nmodule spout() {\n    translate([-40, 0, 65])\n        rotate([0, -30, 0])\n            difference() {\n                // Main spout\n                cylinder(h=25, r1=8, r2=5);\n                // Hollow channel\n                cylinder(h=27, r1=5, r2=2);\n            }\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, 95])\n        difference() {\n            // Lid top\n            cylinder(h=5, r1=30, r2=28);\n            // Steam vent\n            translate([0, 15, 2])\n                cylinder(h=5, r=3);\n        }\n}\n\n// Lid handle\nmodule lid_handle() {\n    translate([0, 0, 102])\n        color(\"darkgray\")\n            rotate([90, 0, 0])\n                scale([1, 1, 0.5])\n                    cylinder(h=15, r1=5, r2=5);\n}\n\n// Assembly\nunion() {\n    // Main components\n    base_body();\n    water_tank();\n    handle();\n    control_panel();\n    buttons();\n    indicator_light();\n    vents();\n    feet();\n    power_cord();\n    spout();\n    lid();\n    lid_handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "squeezefresh",
    "openscad_code": "// SqueezeFresh Citrus Juicer - Realistic mid-size kitchen appliance\n// Approx. 120 mm tall, 90 mm wide, 80 mm deep\n// Wall thickness: 2 mm throughout\n\n$fn = 50;\n\n// Main body module\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 30]) {\n            minkowski() {\n                cube([86, 76, 60], center = true);\n                sphere(4);\n            }\n        }\n        // Inner cavity\n        translate([0, 0, 30]) {\n            minkowski() {\n                cube([82, 72, 56], center = true);\n                sphere(4);\n            }\n        }\n    }\n}\n\n// Juice container (clear bowl)\nmodule juice_bowl() {\n    color([0.9, 0.9, 0.9, 0.7]) {\n        difference() {\n            cylinder(h = 35, d = 70);\n            cylinder(h = 36, d = 66);\n        }\n    }\n}\n\n// Reamer head module\nmodule reamer() {\n    union() {\n        // Base cone\n        cylinder(h = 25, d1 = 55, d2 = 45);\n        \n        // Reamer ribs\n        for (rot = [0 : 30 : 330]) {\n            rotate([0, 0, rot]) {\n                translate([0, 17, 12]) {\n                    rotate([90, 0, 0]) {\n                        cylinder(h = 20, d = 3);\n                    }\n                }\n            }\n        }\n        \n        // Center spike\n        translate([0, 0, 25]) {\n            cylinder(h = 15, d1 = 12, d2 = 6);\n        }\n    }\n}\n\n// Motor base module\nmodule motor_base() {\n    difference() {\n        // Base shape\n        translate([0, 0, 15]) {\n            cube([90, 80, 30], center = true);\n        }\n        \n        // Ventilation slots\n        for (i = [-3 : 1 : 3]) {\n            translate([i * 12, 0, 29]) {\n                cube([8, 76, 4]);\n            }\n        }\n        \n        // Power cord hole\n        translate([-45, 0, 15]) {\n            rotate([0, 90, 0]) {\n                cylinder(h = 5, d = 8);\n            }\n        }\n    }\n}\n\n// Control buttons module\nmodule buttons() {\n    // On/off button\n    translate([30, 30, 31]) {\n        cylinder(h = 8, d = 15);\n    }\n    \n    // Direction switch\n    translate([30, -30, 31]) {\n        cube([15, 15, 8], center = true);\n    }\n}\n\n// Anti-slip feet\nmodule feet() {\n    for (x = [-35, 35]) {\n        for (y = [-30, 30]) {\n            translate([x, y, 0]) {\n                cylinder(h = 3, d = 10);\n            }\n        }\n    }\n}\n\n// Assembly\nfeet();\nmotor_base();\nbody();\ntranslate([0, 0, 60]) {\n    juice_bowl();\n}\ntranslate([0, 0, 60]) {\n    reamer();\n}\nbuttons();",
    "renders": true
  },
  {
    "kitchen_appliance": "brewwave",
    "openscad_code": "// Brewwave Coffee Maker - Realistic Medium Complexity\n// Overall dimensions: 120mm W x 100mm D x 180mm H\n// Wall thickness: 2mm throughout\n\n$fn = 32;\n\n// Main body module\nmodule body() {\n    difference() {\n        // Main housing\n        translate([0, 0, 90]) cube([120, 100, 180], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 90]) cube([116, 96, 176], center=true);\n        \n        // Water reservoir opening\n        translate([0, 0, 170]) cylinder(h=20, r1=40, r2=35);\n        \n        // Coffee basket opening\n        translate([0, 0, 130]) cylinder(h=15, r1=30, r2=28);\n    }\n}\n\n// Water reservoir\nmodule reservoir() {\n    difference() {\n        translate([0, 0, 160]) cylinder(h=35, r=38, r1=38, r2=33);\n        translate([0, 0, 162]) cylinder(h=35, r=36, r1=36, r2=31);\n    }\n}\n\n// Coffee basket\nmodule basket() {\n    difference() {\n        translate([0, 0, 120]) cylinder(h=20, r=29);\n        translate([0, 0, 122]) cylinder(h=20, r=27);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([50, 0, 40]) {\n        difference() {\n            cube([15, 80, 30], center=true);\n            cube([13, 78, 28], center=true);\n        }\n        \n        // Buttons\n        for(i = [-1:1]) {\n            translate([0, i * 20, 16]) \n                cylinder(h=2, r=5);\n        }\n        \n        // LED indicator\n        translate([0, -30, 16])\n            cylinder(h=1, r=3);\n    }\n}\n\n// Drip tray\nmodule drip_tray() {\n    difference() {\n        translate([0, 0, 15]) cube([110, 90, 30], center=true);\n        translate([0, 0, 17]) cube([108, 88, 28], center=true);\n        translate([0, 0, 30]) cube([106, 86, 2], center=true);\n    }\n}\n\n// Back vents\nmodule vents() {\n    for(i = [1:3:12]) {\n        translate([-59, 0, 20 + i * 10])\n            cube([2, 80, 5]);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-60, 30, 5]) {\n        rotate([90, 0, 0])\n            cylinder(h=40, r=5);\n        translate([0, 0, 40])\n            sphere(r=5);\n    }\n}\n\n// Legs\nmodule legs() {\n    for(x = [-50:100:50])\n    for(y = [-40:80:80]) {\n        translate([x, y, 0]) {\n            cylinder(h=8, r1=5, r2=3);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    reservoir();\n    basket();\n    control_panel();\n    drip_tray();\n    vents();\n    power_cord();\n    legs();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlespark",
    "openscad_code": "// Kettlespark â€“ a compact, electric kettle / pour-over station hybrid\n// Overall footprint â‰ˆ 120 mm deep Ã— 110 mm wide Ã— 150 mm high\n// Wall thickness â‰ˆ 2 mm throughout for reliable FDM printing â€“ no overhangs >45Â°\n\n$fn = 40;               // smooth curves without huge STL\n\n//---------------- Main assembly ----------------\nkettlespark();\n\nmodule kettlespark(){\n    union(){\n        base_chassis();           // lower body + control panel\n        water_tank();             // main kettle body\n        lid();                    // hinged lid\n        handle();                 // side grip\n        buttons();                // front controls\n        spout();                  // narrow pour spout\n        feet();                   // four rubber feet\n    }\n}\n\n// Lower chassis with electronics cavity\nmodule base_chassis(){\n    difference(){\n        // outer shell\n        translate([0,0,15]) cube([110,120,30], center=true);\n\n        // hollow interior\n        translate([0,0,17]) cube([106,116,26], center=true);\n\n        // rectangular cutout for buttons\n        translate([0,-58,30]) cube([60,4,10], center=true);\n    }\n}\n\n// Cylindrical kettle body\nmodule water_tank(){\n    difference(){\n        union(){\n            // main cylinder\n            cylinder(h = 90, d = 90);\n            // rounded shoulder\n            translate([0,0,90]) cylinder(h = 10, d1 = 90, d2 = 80);\n        }\n        // inner cavity\n        cylinder(h = 98, d = 86);\n    }\n}\n\n// Lid with small grip knob\nmodule lid(){\n    translate([0,0,100]) rotate([0,0,0])   // rotate later for hinge\n    difference(){\n        union(){\n            cylinder(h = 4, d = 80);\n            translate([0,0,4]) cylinder(h = 6, d1 = 80, d2 = 76);\n            // knob\n            translate([0,0,10]) cylinder(h = 8, d = 12);\n        }\n        // inner recess\n        cylinder(h = 10, d = 76);\n    }\n}\n\n// Side handle\nmodule handle(){\n    translate([45,0,55]) rotate([0,90,0])\n    difference(){\n        // outer sweep shape\n        rotate_extrude(angle = 70)\n            translate([50,0,0]) circle(r = 5);\n\n        // inner hollow\n        rotate_extrude(angle = 70)\n            translate([52,0,0]) circle(r = 3);\n    }\n}\n\n// Simple push buttons on front face\nmodule buttons(){\n    for (x = [-20, 0, 20])\n        translate([x, -59, 35])\n            cylinder(h = 5, d = 8);\n}\n\n// Tapered spout â€“ printed as integral part of tank\nmodule spout(){\n    translate([0,45,90])\n    rotate([90,0,0])\n    difference(){\n        union(){\n            cylinder(h = 40, d1 = 20, d2 = 12);\n            translate([0,0,40]) cylinder(h = 10, d = 12);\n        }\n        // drain hole\n        cylinder(h = 50, d = 8);\n    }\n}\n\n// Four small feet\nmodule feet(){\n    for (y = [-45, 45])\n    for (x = [-45, 45])\n        translate([x,y,0])\n            cylinder(h = 5, d = 10);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "fruitpure",
    "openscad_code": "// Fruitpure kitchen appliance - realistic style, medium complexity\n// Overall dimensions: 120mm x 90mm x 160mm\n\n// Main parameters\nwall_thickness = 2;\nbase_width = 90;\nbase_depth = 90;\nbase_height = 160;\njar_diameter = 70;\njar_height = 110;\nmotor_housing_height = 50;\n\n// Base housing\nmodule base_housing() {\n    difference() {\n        // Main body\n        cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 5])\n            cube([base_width-wall_thickness*2, base_depth-wall_thickness*2, base_height-wall_thickness*2], center=true);\n        \n        // Top opening for jar\n        translate([0, 0, base_height/2 - 1])\n            cylinder(h=wall_thickness*2, d=jar_diameter+4, center=true);\n    }\n}\n\n// Motor housing on top\nmodule motor_housing() {\n    translate([0, 0, base_height/2 + motor_housing_height/2 - 5])\n    difference() {\n        // Main housing\n        cube([base_width-20, base_depth-20, motor_housing_height], center=true);\n        \n        // Cutout for jar\n        translate([0, 0, -motor_housing_height/2])\n            cylinder(h=motor_housing_height+1, d=jar_diameter+2, center=false);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([base_width/2 - 15, 0, base_height/2 - 20])\n    difference() {\n        // Panel housing\n        cube([30, 60, 15], center=true);\n        \n        // Button holes\n        for(i = [0:2]) {\n            translate([0, -20 + i*20, 0])\n                cylinder(h=16, d=8, center=true);\n        }\n    }\n}\n\n// Buttons\nmodule buttons() {\n    for(i = [0:2]) {\n        translate([base_width/2 - 15, -20 + i*20, base_height/2 - 20 + 8])\n            cylinder(h=5, d=6, center=true);\n    }\n}\n\n// Jar\nmodule jar() {\n    translate([0, 0, base_height + jar_height/2 - 10])\n    difference() {\n        // Main jar body\n        cylinder(h=jar_height, d=jar_diameter, center=true);\n        \n        // Hollow interior\n        translate([0, 0, -5])\n            cylinder(h=jar_height-wall_thickness*2, d=jar_diameter-wall_thickness*2, center=true);\n        \n        // Top opening\n        translate([0, 0, jar_height/2 - 1])\n            cylinder(h=2, d=60, center=true);\n    }\n}\n\n// Jar lid\nmodule jar_lid() {\n    translate([0, 0, base_height + jar_height - 5])\n    difference() {\n        // Lid body\n        cylinder(h=15, d=65, center=true);\n        \n        // Handle\n        translate([0, 0, 7])\n            cylinder(h=10, d=20, center=true);\n    }\n}\n\n// Blades assembly\nmodule blades() {\n    translate([0, 0, base_height - 5])\n    union() {\n        // Central hub\n        cylinder(h=10, d=15, center=true);\n        \n        // Blades\n        for(i = [0:3]) {\n            rotate([0, 0, i*90])\n                translate([20, 0, 0])\n                    cube([40, 3, 1], center=true);\n        }\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-1:1:1]) {\n        for(y = [-1:1:1]) {\n            translate([x*35, y*35, -base_height/2 - 5])\n                cylinder(h=10, d=10, center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Base components\n    base_housing();\n    motor_housing();\n    control_panel();\n    buttons();\n    feet();\n    \n    // Jar components\n    jar();\n    jar_lid();\n    blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "grindpress",
    "openscad_code": "// GrindPress Kitchen Appliance (Coffee Grinder + French Press combo)\n// Realistic style, medium complexity, 3D-printable\n\n// Overall dimensions: ~120mm tall, ~80mm diameter\n\n$fn=32;\n\nmodule grindpress() {\n    // Main body cylinder (French Press part)\n    difference() {\n        cylinder(h=100, d=78, center=false);\n        // Inner chamber (2mm wall thickness)\n        translate([0,0,10])\n            cylinder(h=85, d=74, center=false);\n    }\n    \n    // Base with feet\n    difference() {\n        cylinder(h=10, d=82, center=false);\n        // Hollow base\n        translate([0,0,2])\n            cylinder(h=8, d=78, center=false);\n    }\n    \n    // Grinder top section\n    translate([0,0,100])\n    union() {\n        // Grinder housing\n        cylinder(h=25, d=80, center=false);\n        \n        // Hopper\n        translate([0,0,25])\n        difference() {\n            cylinder(h=15, d1=80, d2=60, center=false);\n            // Hopper cavity\n            translate([0,0,2])\n                cylinder(h=13, d1=76, d2=56, center=false);\n        }\n        \n        // Lid\n        translate([0,0,40])\n        difference() {\n            cylinder(h=5, d=60, center=false);\n            translate([0,0,2])\n                cylinder(h=3, d=58, center=false);\n        }\n        \n        // Grinder handle\n        translate([0,0,45])\n        rotate([90,0,0])\n        union() {\n            // Handle shaft\n            cylinder(h=30, d=5, center=true);\n            // Handle knob\n            translate([0,0,15])\n                sphere(d=10);\n        }\n    }\n    \n    // French Press plunger assembly\n    translate([0,0,100])\n    rotate([0,0,0])\n    union() {\n        // Plunger rod\n        cylinder(h=90, d=8, center=false);\n        \n        // Plunger top\n        translate([0,0,90])\n        difference() {\n            cylinder(h=12, d=25, center=false);\n            // Finger grip\n            translate([0,0,2])\n                cylinder(h=10, d=20, center=false);\n        }\n        \n        // Plunger filter (bottom)\n        translate([0,0,10])\n        difference() {\n            cylinder(h=5, d=74, center=false);\n            // Filter holes pattern\n            for(i=[-25:10:25])\n                for(j=[-25:10:25]) {\n                    translate([i,j,2])\n                        cylinder(h=3, d=2, center=false);\n                }\n        }\n    }\n    \n    // Control buttons\n    translate([40,0,50])\n    union() {\n        // Power button\n        difference() {\n            cylinder(h=8, d=12, center=false);\n            translate([0,0,2])\n                cylinder(h=6, d=10, center=false);\n        }\n        \n        // Grind size dial\n        translate([15,0,0])\n        union() {\n            cylinder(h=5, d=20, center=false);\n            // Dial indicator\n            translate([8,0,2.5])\n                cube([6,2,3], center=true);\n        }\n    }\n    \n    // Spout for pouring\n    translate([39,0,90])\n    rotate([0,90,0])\n    difference() {\n        // Spout body\n        cylinder(h=20, d=20, center=false);\n        // Spout hole\n        translate([0,0,2])\n            cylinder(h=18, d=16, center=false);\n    }\n    \n    // Handle\n    translate([0,50,50])\n    union() {\n        // Handle mount points\n        translate([0,-2,0])\n            cube([10,4,15], center=true);\n        translate([0,-2,-20])\n            cube([10,4,15], center=true);\n        \n        // Handle grip\n        translate([0,-20,-10])\n            difference() {\n                cylinder(h=40, d=12, center=false);\n                // Grip hole\n                translate([0,0,2])\n                    cylinder(h=36, d=8, center=false);\n            }\n    }\n}\n\n// Render the complete grindpress\ngrindpress();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettleflow",
    "openscad_code": "// KettleFlow â€“ realistic, medium-complexity kitchen appliance\n// Overall printable envelope â‰ˆ 100 mm tall\n\n$fn = 32;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer rounded shell\n        minkowski() {\n            cube([65, 40, 75], center = true);\n            sphere(5);\n        }\n        // Hollow interior\n        minkowski() {\n            translate([0, 0, 3])\n                cube([61, 36, 71], center = true);\n            sphere(3);\n        }\n    }\n}\n\n// Water window\nmodule water_window() {\n    translate([0, 20.1, 8])\n        scale([1, 0.05, 1])\n            cylinder(h = 40, d = 25, center = true);\n}\n\n// Handle on the right\nmodule handle() {\n    difference() {\n        hull() {\n            translate([36, -8, 30])\n                sphere(4);\n            translate([36, 8, 30])\n                sphere(4);\n            translate([36, -8, 55])\n                sphere(4);\n            translate([36, 8, 55])\n                sphere(4);\n        }\n        // Hand clearance\n        translate([36, 0, 42.5])\n            rotate([0, 90, 0])\n                cylinder(h = 18, d = 12, center = true);\n    }\n}\n\n// Lid assembly\nmodule lid() {\n    translate([0, 0, 42]) {\n        difference() {\n            // Lid disk\n            cylinder(h = 4, d = 68);\n            // Grip hole\n            translate([0, 0, 2])\n                cylinder(h = 6, d = 30);\n        }\n        // Grip handle\n        translate([0, 0, 8])\n            cylinder(h = 15, d1 = 28, d2 = 20);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([-26, 0, 10]) {\n        difference() {\n            // Panel block\n            cube([12, 28, 6], center = true);\n            // Button recesses\n            for (i = [-1:1])\n                translate([0, i * 8, -2])\n                    cylinder(h = 4, d = 6, center = true);\n        }\n        // Buttons\n        for (i = [-1:1])\n            translate([0, i * 8, 0])\n                cylinder(h = 3, d = 5);\n    }\n}\n\n// Spout\nmodule spout() {\n    hull() {\n        translate([-34, 0, 38])\n            rotate([0, 90, 0])\n                cylinder(h = 25, d = 15);\n        translate([-40, 0, 50])\n            rotate([0, 90, 0])\n                cylinder(h = 30, d = 10);\n    }\n}\n\n// Base ring with power socket\nmodule base_ring() {\n    difference() {\n        cylinder(h = 5, d = 70);\n        cylinder(h = 6, d = 60);\n    }\n    translate([0, 0, 2.5])\n        cube([12, 20, 5], center = true);\n}\n\n// Assembly\nunion() {\n    body_shell();\n    water_window();\n    handle();\n    lid();\n    control_panel();\n    spout();\n    translate([0, 0, -40])\n        base_ring();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "zestcraft",
    "openscad_code": "// Zestcraft citrus zester appliance\n// Overall dimensions: 90mm x 50mm x 110mm (L x W x H)\n\n// Wall thickness constant\nwall_thickness = 2;\n\n// Main housing\nmodule main_housing() {\n    difference() {\n        // Outer shell with rounded edges\n        minkowski() {\n            cube([90, 50, 80]);\n            sphere(r=3);\n        }\n        \n        // Hollow interior\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            cube([90 - 2*wall_thickness, 50 - 2*wall_thickness, 80 - wall_thickness]);\n    }\n}\n\n// Collection container\nmodule collection_container() {\n    difference() {\n        // Container body\n        translate([5, 5, 5])\n        cube([80, 40, 30]);\n        \n        // Hollow interior\n        translate([5 + wall_thickness, 5 + wall_thickness, 5])\n        cube([80 - 2*wall_thickness, 40 - 2*wall_thickness, 30 - wall_thickness]);\n    }\n}\n\n// Zesting head assembly\nmodule zesting_head() {\n    // Main head support\n    difference() {\n        translate([15, 15, 80])\n            cube([60, 20, 25]);\n        \n        // Zesting holes pattern\n        for (x = [20:8:70])\n            for (y = [18:4:32]) {\n                translate([x, y, 80 + wall_thickness])\n                    cylinder(r=1.5, h=25 - wall_thickness, $fn=8);\n            }\n    }\n    \n    // Raised zesting ridges\n    for (x = [25:10:65]) {\n        translate([x, 17, 105])\n            cube([6, 1, 1]);\n        translate([x, 32, 105])\n            cube([6, 1, 1]);\n    }\n}\n\n// Control dial\nmodule control_dial() {\n    rotate([90, 0, 0])\n    translate([75, 25, 5])\n    difference() {\n        cylinder(r=8, h=3, $fn=32);\n        cylinder(r=6, h=4, $fn=32);\n    }\n    \n    // Dial indicator line\n    translate([75, 25, 8])\n    cube([1, 8, 0.5]);\n}\n\n// Rubber feet\nmodule rubber_feet() {\n    foot_positions = [[5,5], [5,45], [85,5], [85,45]];\n    for (pos = foot_positions) {\n        translate([pos[0], pos[1], 0])\n        cylinder(r=3, h=2, $fn=16);\n    }\n}\n\n// Power button\nmodule power_button() {\n    translate([45, 25, 85])\n    difference() {\n        cylinder(r=5, h=3, $fn=20);\n        cylinder(r=3, h=4, $fn=20);\n    }\n}\n\n// Assembly\nunion() {\n    main_housing();\n    collection_container();\n    zesting_head();\n    control_dial();\n    rubber_feet();\n    power_button();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "roastcraft",
    "openscad_code": "// Roastcraft Coffee Roaster - Realistic Style\n// Medium complexity kitchen appliance model\n\n$fn = 50;\n\n// Main body dimensions\nbody_width = 80;\nbody_depth = 60;\nbody_height = 90;\n\n// Wall thickness\nwall = 2;\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height]);\n        \n        // Hollow interior\n        translate([wall, wall, wall])\n        cube([body_width-2*wall, body_depth-2*wall, body_height-wall]);\n    }\n}\n\nmodule roasting_chamber() {\n    // Glass chamber cylinder\n    translate([body_width/2, body_depth/2, body_height-25])\n    rotate([0, 0, 0])\n    cylinder(h=20, r1=22, r2=22);\n    \n    // Chamber base\n    translate([body_width/2-20, body_depth/2-20, body_height-30])\n    cube([40, 40, 5]);\n}\n\nmodule control_panel() {\n    // Panel base\n    translate([5, body_depth+1, body_height-40])\n    cube([body_width-10, 8, 30]);\n    \n    // LCD display\n    translate([10, body_depth+2, body_height-25])\n    cube([body_width-20, 6, 12]);\n    \n    // Control buttons\n    for(i=[0:3]) {\n        translate([15 + i*15, body_depth+2, body_height-40])\n        cylinder(h=2, r=3);\n    }\n    \n    // Rotary dial\n    translate([body_width-20, body_depth+5, body_height-35])\n    rotate([90, 0, 0])\n    cylinder(h=8, r=5);\n}\n\nmodule bean_hopper() {\n    // Hopper base\n    translate([body_width/2-12, body_depth/2-12, body_height+5])\n    cylinder(h=15, r1=12, r2=12);\n    \n    // Hopper lid\n    translate([body_width/2-8, body_depth/2-8, body_height+20])\n    cylinder(h=2, r1=8, r2=8);\n    \n    // Handle\n    translate([body_width/2+6, body_depth/2, body_height+21])\n    cube([10, 2, 1]);\n}\n\nmodule exhaust_vent() {\n    // Vent on top\n    translate([body_width-25, body_depth-15, body_height+5])\n    rotate([90, 0, 0])\n    cylinder(h=10, r=5);\n    \n    // Vent slots\n    for(i=[0:3]) {\n        translate([body_width-27, body_depth-15, body_height+7+i*2])\n        cube([4, 1, 0.5]);\n    }\n}\n\nmodule feet() {\n    // Four rubber feet\n    positions = [[5, 5], [body_width-10, 5], [body_width-10, body_depth-10], [5, body_depth-10]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], 0])\n        cylinder(h=3, r=3);\n    }\n}\n\nmodule power_cord() {\n    // Cord exit point\n    translate([wall, body_depth/2, 10])\n    rotate([0, 90, 0])\n    cylinder(h=15, r=2);\n}\n\n// Assemble the roastcraft\nunion() {\n    main_body();\n    roasting_chamber();\n    control_panel();\n    bean_hopper();\n    exhaust_vent();\n    feet();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettleswift",
    "openscad_code": "// Kettleswift - Medium complexity electric kettle\n// Total height ~110mm, base ~80mm diameter\n\n// Main body parameters\nkettle_height = 85;\nkettle_radius = 40;\nwall_thickness = 2;\n\n// Handle parameters\nhandle_height = 70;\nhandle_width = 25;\nhandle_thickness = 4;\n\n// Spout parameters\nspout_length = 35;\nspout_radius = 8;\n\n// Base parameters\nbase_height = 15;\nbase_radius = 42;\n\n// Lid parameters\nlid_height = 8;\nlid_radius = 38;\n\n// Control panel parameters\npanel_width = 20;\npanel_height = 15;\npanel_depth = 3;\n\n// Water level window\nwindow_height = 30;\nwindow_width = 15;\n\nmodule kettle_body() {\n    // Main kettle cylinder with hollow interior\n    difference() {\n        cylinder(h = kettle_height, r = kettle_radius, $fn = 64);\n        translate([0, 0, wall_thickness])\n            cylinder(h = kettle_height, r = kettle_radius - wall_thickness, $fn = 64);\n    }\n    \n    // Rounded top edge\n    translate([0, 0, kettle_height])\n        cylinder(h = 5, r1 = kettle_radius, r2 = kettle_radius - 2, $fn = 64);\n}\n\nmodule handle() {\n    // Main handle grip\n    translate([kettle_radius - 5, -handle_width/2, kettle_height - handle_height]) {\n        // Handle sides\n        for(side = [-1, 1]) {\n            translate([0, side * handle_width/2, 0])\n                cube([handle_thickness, handle_thickness, handle_height]);\n        }\n        \n        // Handle top curve\n        translate([handle_thickness/2, 0, handle_height])\n            rotate([0, 90, 0])\n                cylinder(h = handle_width - handle_thickness, r = handle_thickness/2, $fn = 16);\n    }\n    \n    // Handle supports\n    translate([kettle_radius - 5, 0, kettle_height - 20])\n        cube([handle_thickness * 2, handle_width, 5]);\n}\n\nmodule spout() {\n    // Main spout tube\n    translate([0, kettle_radius, kettle_height - 10]) {\n        rotate([-30, 0, 0])\n            cylinder(h = spout_length, r = spout_radius, $fn = 32);\n        \n        // Spout tip\n        translate([0, 0, spout_length])\n            cylinder(h = 5, r1 = spout_radius, r2 = spout_radius - 2, $fn = 32);\n    }\n    \n    // Spout base reinforcement\n    translate([0, kettle_radius - 5, kettle_height - 15])\n        rotate([-30, 0, 0])\n            cylinder(h = 10, r = spout_radius + 3, $fn = 32);\n}\n\nmodule base() {\n    // Main base cylinder\n    cylinder(h = base_height, r = base_radius, $fn = 64);\n    \n    // Base bottom ring\n    translate([0, 0, -1])\n        cylinder(h = 3, r = base_radius - 2, $fn = 64);\n    \n    // Power cord notch\n    translate([base_radius - 10, 0, 0])\n        cube([20, 10, base_height + 2], center = true);\n}\n\nmodule lid() {\n    // Main lid\n    translate([0, 0, kettle_height + 2])\n        cylinder(h = lid_height, r = lid_radius, $fn = 64);\n    \n    // Lid knob\n    translate([0, 0, kettle_height + lid_height + 3])\n        sphere(r = 8, $fn = 32);\n}\n\nmodule control_panel() {\n    // Panel housing\n    translate([kettle_radius - panel_depth/2, -kettle_radius + 10, base_height + 5]) {\n        cube([panel_depth, panel_width, panel_height], center = true);\n        \n        // Buttons\n        for(i = [0:2]) {\n            translate([panel_depth/2 + 1, -panel_width/2 + 5 + i * 5, 0])\n                sphere(r = 2, $fn = 16);\n        }\n        \n        // LED indicator\n        translate([panel_depth/2 + 1, 0, panel_height/2 - 2])\n            sphere(r = 1.5, $fn = 16);\n    }\n}\n\nmodule water_window() {\n    // Water level indicator window\n    translate([kettle_radius - wall_thickness/2, -window_width/2, base_height + 5]) {\n        cube([wall_thickness, window_width, window_height]);\n        \n        // Window markings\n        for(level = [0:2]) {\n            translate([-1, 0, level * 10 + 5])\n                cube([wall_thickness + 2, window_width, 1]);\n        }\n    }\n}\n\n// Assemble the kettle\nunion() {\n    // Main components\n    kettle_body();\n    handle();\n    spout();\n    base();\n    lid();\n    \n    // Details\n    control_panel();\n    water_window();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "brewcore",
    "openscad_code": "// BrewCore â€“ medium-complexity realistic coffee appliance\n// External dimensions: ~100 mm (W) Ã— 110 mm (D) Ã— 140 mm (H)\n// Wall thickness: 2 mm throughout for 3D-printability\n\nmodule brewcore() {\n    // Main body shell\n    difference() {\n        // Outer block\n        cube([100, 110, 140], center=true);\n        // Inner hollow\n        translate([0, 0, 2])\n            cube([96, 106, 136], center=true);\n    }\n\n    // Front face panel\n    difference() {\n        translate([0, 55, 0])\n            cube([104, 4, 144], center=true);\n        // Display recess\n        translate([0, 57, 45])\n            cube([50, 1, 30], center=true);\n    }\n\n    // Top water reservoir lid\n    difference() {\n        translate([0, 0, 70])\n            cube([96, 106, 8], center=true);\n        // Finger slot\n        translate([0, 40, 74])\n            cube([40, 5, 4], center=true);\n    }\n\n    // Front drip tray\n    difference() {\n        translate([0, 50, -65])\n            cube([90, 90, 10], center=true);\n        // Tray cavity\n        translate([0, 50, -60])\n            cube([86, 86, 8], center=true);\n    }\n\n    // Control knob\n    translate([-35, 57, 45])\n        rotate([90, 0, 0])\n        cylinder(h=10, r=8, center=true);\n    translate([-35, 59, 45])\n        cube([4, 2, 4], center=true);\n\n    // Push button\n    translate([35, 57, 15])\n        rotate([90, 0, 0])\n        cylinder(h=8, r=6, center=true);\n\n    // Rear power cord\n    union() {\n        translate([0, -55, -40])\n            rotate([0, 0, 0])\n            cylinder(h=30, r=5, center=true);\n        translate([0, -55, -25])\n            rotate([-90, 0, 0])\n            cylinder(h=25, r=3, center=true);\n    }\n\n    // LED indicator light\n    translate([0, 57, 65])\n        sphere(r=3);\n\n    // Ventilation slots â€“ generated with loop\n    for (i = [-40:10:40]) {\n        translate([i, 57, -20])\n            cube([8, 1, 20], center=true);\n    }\n\n    // Feet â€“ four small cylinders\n    module foot(x, y) {\n        translate([x, y, -69])\n            cylinder(h=4, r=4, center=true);\n    }\n    foot(-40, -45);\n    foot(40, -45);\n    foot(-40, 45);\n    foot(40, 45);\n}\n\nbrewcore();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlemax",
    "openscad_code": "// KettleMAX Kitchen Appliance - Realistic Medium Complexity\n// Dimensions: ~100mm tall, 150mm wide, 120mm deep\n$fn = 30;\n\n// Main body dimensions\nbase_width = 150;\nbase_depth = 120;\nbase_height = 80;\nwall_thickness = 2;\n\n// Spout dimensions\nspout_length = 50;\nspout_diameter = 20;\nspout_angle = 30;\n\n// Handle dimensions\nhandle_width = 20;\nhandle_height = 60;\nhandle_thickness = 8;\n\n// Lid dimensions\nlid_diameter = 80;\nlid_height = 15;\n\n// Control panel dimensions\npanel_width = 40;\npanel_height = 25;\npanel_depth = 5;\n\n// Feet dimensions\nfoot_size = 8;\nfoot_height = 5;\n\nmodule feet() {\n    for (x = [-base_width/2 + foot_size*1.5, base_width/2 - foot_size*1.5])\n        for (y = [-base_depth/2 + foot_size*1.5, base_depth/2 - foot_size*1.5]) {\n            translate([x, y, -foot_height/2])\n                cube([foot_size, foot_size, foot_height], center = true);\n        }\n}\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([base_width, base_depth, base_height], center = true);\n        \n        // Inner cavity\n        translate([0, 0, -wall_thickness/2])\n            cube([base_width - wall_thickness*2, base_depth - wall_thickness*2, \n                  base_height - wall_thickness], center = true);\n    }\n}\n\nmodule spout() {\n    translate([base_width/2 - spout_length/2, 0, base_height/2 - spout_diameter/2])\n        rotate([0, spout_angle, 0])\n            cylinder(h = spout_length, r = spout_diameter/2, center = true);\n    \n    // Spout opening\n    translate([base_width/2 + spout_length/2 - 2, 0, base_height/2 - spout_diameter/2])\n        rotate([0, spout_angle, 0])\n            cylinder(h = spout_diameter, r = spout_diameter/2 - wall_thickness, center = true);\n}\n\nmodule handle() {\n    // Handle base\n    translate([-base_width/2 + handle_thickness/2, 0, base_height/2])\n        cube([handle_thickness, handle_width, handle_height], center = true);\n    \n    // Handle grip\n    translate([-base_width/2 - handle_thickness, 0, base_height/2 + handle_height/2])\n        rotate([90, 0, 0])\n            cylinder(h = handle_width*1.5, r = handle_thickness/2, center = true);\n}\n\nmodule lid() {\n    translate([0, 0, base_height/2 + lid_height/2])\n        difference() {\n            // Lid top\n            cylinder(h = lid_height, r = lid_diameter/2);\n            \n            // Handle on lid\n            translate([0, 0, lid_height])\n                cylinder(h = 15, r = 8);\n            \n            // Lid inner cavity\n            translate([0, 0, -1])\n                cylinder(h = lid_height + 2, r = lid_diameter/2 - wall_thickness);\n        }\n}\n\nmodule control_panel() {\n    translate([0, -base_depth/2 + panel_depth/2, base_height/4])\n        difference() {\n            // Panel base\n            cube([panel_width, panel_depth, panel_height], center = true);\n            \n            // Buttons\n            for (i = [-1, 0, 1]) {\n                translate([i * 10, 0, panel_height/2 + 1])\n                    cylinder(h = 3, r = 4);\n            }\n            \n            // Display\n            translate([0, panel_depth/2 + 0.5, panel_height/3])\n                cube([panel_width - 10, 1, panel_height/3], center = true);\n        }\n}\n\n// Assembly\nunion() {\n    // Base structure\n    feet();\n    \n    // Main components\n    main_body();\n    spout();\n    handle();\n    \n    // Top and controls\n    lid();\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "pressjoy",
    "openscad_code": "// PressJoy Juicer - Realistic Medium Complexity\n// Overall size: 120mm x 110mm x 240mm\n\n// Main parameters\nbody_w = 100;\nbody_d = 90;\nbody_h = 180;\nwall_t = 2;\nbase_h = 15;\n\n// Base with feet\nmodule base() {\n    // Main base\n    difference() {\n        cube([body_w, body_d, base_h], center=true);\n        // Cable channel\n        translate([0, body_d/2 - 5, -base_h/2])\n            cube([30, 10, base_h + 2], center=true);\n    }\n    \n    // Rubber feet (4)\n    for(x = [-body_w/2 + 15, body_w/2 - 15])\n        for(y = [-body_d/2 + 15, body_d/2 - 15])\n            translate([x, y, -base_h - 1])\n                cylinder(h=3, d=10, $fn=20);\n}\n\n// Main body housing\nmodule body() {\n    // Outer shell\n    difference() {\n        // Main body - rounded top\n        union() {\n            cube([body_w, body_d, body_h - 20], center=true);\n            translate([0, 0, body_h/2 - 10])\n                scale([1, 1, 0.4])\n                    sphere(d=body_w, $fn=50);\n        }\n        \n        // Motor cavity\n        translate([0, 0, -body_h/2 + 10])\n            cube([body_w - wall_t*2, body_d - wall_t*2, body_h - 25], center=true);\n        \n        // Top opening for shaft\n        translate([0, 0, body_h/2 - 10])\n            cylinder(h=20, d=25, $fn=30);\n        \n        // Button holes\n        translate([-body_w/2 + 15, 0, body_h/2 - 30])\n            cube([wall_t + 1, 12, 8], center=true);\n        translate([-body_w/2 + 15, 0, body_h/2 - 45])\n            cube([wall_t + 1, 12, 8], center=true);\n    }\n    \n    // Control panel\n    translate([-body_w/2 - wall_t/2, 0, body_h/2 - 35])\n        cube([wall_t, 30, 20], center=true);\n}\n\n// Motor shaft\nmodule shaft() {\n    translate([0, 0, body_h/2 - 5])\n        cylinder(h=45, d=10, $fn=20);\n}\n\n// Strainer basket\nmodule strainer() {\n    // Basket body\n    difference() {\n        cylinder(h=40, d=80, $fn=50);\n        translate([0, 0, -1])\n            cylinder(h=42, d=76, $fn=50);\n        // Juice holes\n        for(i = [1:8])\n            rotate([0, 0, i*45])\n                for(j = [0:2])\n                    translate([30 + j*10, 0, 15])\n                        cylinder(h=10, d=3, $fn=12);\n    }\n    \n    // Bottom cone\n    translate([0, 0, -5])\n        cylinder(h1=10, h2=0, d1=76, d2=60, $fn=50);\n}\n\n// Lid with feeder tube\nmodule lid() {\n    // Main lid\n    difference() {\n        cylinder(h=8, d=90, $fn=50);\n        translate([0, 0, -1])\n            cylinder(h=10, d=86, $fn=50);\n    }\n    \n    // Feeder tube\n    translate([0, 25, 8])\n        cylinder(h=50, d1=60, d2=45, $fn=40);\n    \n    // Pusher\n    translate([0, 25, 65])\n        cylinder(h=45, d=42, $fn=40);\n}\n\n// Juice container\nmodule container() {\n    difference() {\n        // Main container\n        union() {\n            translate([body_w/2 + 35, 0, -body_h/2 + 15])\n                cube([60, 70, 100], center=true);\n            translate([body_w/2 + 35, 0, body_h/2 - 35])\n                scale([1, 1, 0.3])\n                    sphere(d=60, $fn=40);\n        }\n        \n        // Hollow\n        translate([body_w/2 + 35, 0, -body_h/2 + 15])\n            cube([56, 66, 95], center=true);\n    }\n    \n    // Handle\n    translate([body_w/2 + 70, 0, 0])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=70, d=15, $fn=20);\n                translate([0, 0, -1])\n                    cylinder(h=72, d=11, $fn=20);\n            }\n}\n\n// Buttons\nmodule controls() {\n    // Power button\n    translate([-body_w/2 - wall_t/2, 0, body_h/2 - 30])\n        cube([wall_t + 2, 10, 6], center=true);\n    \n    // Speed button\n    translate([-body_w/2 - wall_t/2, 0, body_h/2 - 45])\n        cube([wall_t + 2, 10, 6], center=true);\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    shaft();\n    strainer();\n    lid();\n    container();\n    controls();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "aromapress",
    "openscad_code": "// AromaPress Kitchen Appliance - Medium Complexity Model\n// Realistic style with 3D-printable design\n\n$fn = 50;\n\nmodule aromaPress() {\n    // Main body cylinder\n    difference() {\n        cylinder(h = 80, d1 = 70, d2 = 65);\n        // Hollow interior\n        translate([0, 0, 5])\n            cylinder(h = 75, d1 = 66, d2 = 61);\n    }\n    \n    // Water reservoir on top\n    translate([0, 0, 80])\n    difference() {\n        cylinder(h = 25, d = 60);\n        translate([0, 0, 5])\n            cylinder(h = 25, d = 56);\n    }\n    \n    // Base platform\n    translate([0, 0, -5])\n        cylinder(h = 5, d = 80);\n    \n    // Drip tray\n    translate([0, 0, -3])\n    difference() {\n        cylinder(h = 8, d = 85);\n        translate([0, 0, 2])\n            cylinder(h = 8, d = 70);\n    }\n    \n    // Handle\n    translate([35, 0, 40])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h = 15, d = 12);\n        translate([0, 0, 2])\n            cylinder(h = 15, d = 8);\n    }\n    \n    // Control panel\n    translate([-30, 0, 50])\n    difference() {\n        cube([15, 30, 8], center = true);\n        translate([-2, 0, 0])\n            cube([11, 26, 9], center = true);\n    }\n    \n    // Buttons on panel\n    for(i = [-10, 0, 10]) {\n        translate([-33, i, 54])\n            cylinder(h = 3, d = 5);\n    }\n    \n    // Display screen\n    translate([-33, 0, 58])\n        cube([3, 20, 10], center = true);\n    \n    // Coffee outlet\n    translate([0, 25, 10])\n    difference() {\n        rotate([90, 0, 0])\n            cylinder(h = 25, d1 = 12, d2 = 8);\n        rotate([90, 0, 0])\n            translate([0, 0, 2])\n                cylinder(h = 25, d1 = 8, d2 = 4);\n    }\n    \n    // Support ribs\n    for(angle = [0:45:315]) {\n        rotate([0, 0, angle])\n        translate([0, 30, 40])\n            cube([4, 10, 80], center = true);\n    }\n    \n    // Rubber feet\n    for(x = [-30, 30]) {\n        for(y = [-30, 30]) {\n            translate([x, y, -8])\n                cylinder(h = 3, d = 8);\n        }\n    }\n    \n    // Lid for water reservoir\n    translate([0, 0, 110])\n    difference() {\n        cylinder(h = 5, d = 62);\n        translate([0, 0, 2])\n            cylinder(h = 5, d = 58);\n    }\n    \n    // Lid handle\n    translate([0, 25, 112.5])\n        rotate([90, 0, 0])\n            cylinder(h = 15, d = 8);\n}\n\naromaPress();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettleheat",
    "openscad_code": "// KettleHeat - Electric Kettle for 3D printing\n// Medium complexity realistic style\n\n$fn = 50;\n\n// Main parameters\nkettle_height = 100;\nkettle_radius = 40;\nwall_thickness = 2;\nbase_height = 8;\nhandle_clearance = 25;\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Outer shell\n        cylinder(h=kettle_height, r=kettle_radius, center=false);\n        \n        // Inner cavity\n        translate([0, 0, wall_thickness])\n            cylinder(h=kettle_height-wall_thickness, r=kettle_radius-wall_thickness, center=false);\n        \n        // Top opening\n        translate([0, 0, kettle_height-wall_thickness])\n            cylinder(h=wall_thickness+1, r=kettle_radius-10, center=false);\n    }\n}\n\n// Base with heating element\nmodule kettle_base() {\n    union() {\n        // Bottom base\n        cylinder(h=base_height, r=kettle_radius+2, center=false);\n        \n        // Heating plate indicator\n        translate([0, 0, base_height])\n            cylinder(h=1, r=kettle_radius-5, center=false);\n        \n        // Power connector\n        translate([kettle_radius-5, 0, base_height/2])\n            rotate([90, 0, 0])\n                cylinder(h=10, r=4, center=false);\n    }\n}\n\n// Handle assembly\nmodule kettle_handle() {\n    // Handle grip\n    translate([kettle_radius+5, 0, kettle_height*0.6])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=handle_clearance, r=5, center=false);\n                translate([0, 0, -1])\n                    cylinder(h=handle_clearance+2, r=3, center=false);\n            }\n    \n    // Handle supports\n    for(i = [0, 1]) {\n        translate([kettle_radius, 0, kettle_height*0.4 + i*30])\n            rotate([0, 90, 0])\n                cylinder(h=5, r=5, center=false);\n    }\n}\n\n// Spout\nmodule kettle_spout() {\n    // Main spout tube\n    translate([0, kettle_radius-5, kettle_height-20])\n        rotate([30, 0, 0])\n            difference() {\n                cylinder(h=30, r1=8, r2=5, center=false);\n                translate([0, 0, -1])\n                    cylinder(h=32, r1=6, r2=3, center=false);\n            }\n    \n    // Spout base reinforcement\n    translate([0, kettle_radius-5, kettle_height-35])\n        cylinder(h=15, r1=10, r2=8, center=false);\n}\n\n// Lid assembly\nmodule kettle_lid() {\n    // Lid top\n    translate([0, 0, kettle_height-wall_thickness])\n        cylinder(h=5, r=kettle_radius-10, center=false);\n    \n    // Lid handle\n    translate([0, 0, kettle_height+3])\n        cylinder(h=10, r=5, center=false);\n    \n    // Lid rim\n    translate([0, 0, kettle_height-2])\n        cylinder(h=5, r=kettle_radius-8, center=false);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([kettle_radius-15, 0, base_height+5])\n        cube([30, 20, 3], center=true);\n    \n    // Power button\n    translate([kettle_radius-10, -5, base_height+9])\n        cylinder(h=2, r=3, center=false);\n    \n    // Temperature dial\n    translate([kettle_radius-10, 5, base_height+9])\n        cylinder(h=2, r=4, center=false);\n    \n    // LED indicator\n    translate([kettle_radius-5, 0, base_height+9])\n        sphere(r=1.5, center=false);\n}\n\n// Water level indicator\nmodule water_indicator() {\n    // Transparent window\n    translate([kettle_radius-1, 0, 30])\n        cube([2, 15, 40], center=true);\n    \n    // Min/Max marks\n    for(level = [35, 65]) {\n        translate([kettle_radius+1, -7, level])\n            cube([1, 14, 1], center=false);\n    }\n}\n\n// Assembly\nunion() {\n    kettle_base();\n    translate([0, 0, base_height])\n        kettle_body();\n    kettle_handle();\n    kettle_spout();\n    water_indicator();\n}\n\n// Separate lid for printing\ntranslate([kettle_radius*2+20, 0, 0])\n    kettle_lid();\n\n// Control panel attached to base\ncontrol_panel();",
    "renders": true
  },
  {
    "kitchen_appliance": "veggiepress",
    "openscad_code": "// Realistic Medium-Complexity 3D-Printable Vegetable Press\n// Overall height ~110 mm, footprint ~90 x 120 mm\n// Wall thickness 2 mm everywhere, no large overhangs\n\n$fn = 50;\n\nmodule body() {\n    // Main housing â€“ hollow box with rounded top\n    difference() {\n        hull() {\n            translate([0, 0, 45]) cube([90, 120, 70], center = true);\n            translate([0, 0, 85]) cube([80, 110, 20], center = true);\n        }\n        // Hollow cavity\n        hull() {\n            translate([0, 0, 45]) cube([86, 116, 66], center = true);\n            translate([0, 0, 85]) cube([76, 106, 16], center = true);\n        }\n    }\n}\n\nmodule handle() {\n    // Lever arm with ergonomic grip\n    difference() {\n        union() {\n            translate([-15, 0, 95]) rotate([0, 90, 0]) cylinder(h = 80, d = 12, center = true);\n            translate([-55, 0, 95]) sphere(d = 14);\n            translate([25, 0, 95]) sphere(d = 14);\n        }\n        translate([-55, 0, 95]) sphere(d = 10);\n    }\n}\n\nmodule press_plate() {\n    // Perforated pressing disk\n    difference() {\n        cylinder(h = 4, d = 76, center = true);\n        for (i = [-2:2])\n            for (j = [-2:2])\n                translate([i * 10, j * 10, 0])\n                    cylinder(h = 5, d = 3, center = true);\n    }\n}\n\nmodule shaft() {\n    // Central threaded rod\n    difference() {\n        cylinder(h = 70, d = 8, center = true);\n        translate([0, 0, 35]) cylinder(h = 35, d = 4, center = true);\n    }\n}\n\nmodule juice_outlet() {\n    // Spout for juice\n    difference() {\n        hull() {\n            translate([0, 60, 30]) cube([20, 10, 10], center = true);\n            translate([0, 75, 30]) cube([20, 10, 5], center = true);\n        }\n        translate([0, 67.5, 30]) rotate([0, 90, 0]) cylinder(h = 30, d = 6, center = true);\n    }\n}\n\nmodule base() {\n    // Stable bottom plate\n    difference() {\n        cube([100, 130, 8], center = true);\n        translate([0, 0, 4]) cube([96, 126, 8], center = true);\n    }\n}\n\nmodule feet() {\n    // Non-slip pads\n    for (x = [-35, 35])\n        for (y = [-45, 45])\n            translate([x, y, -4])\n                cylinder(h = 8, d = 10, center = true);\n}\n\nmodule control_knob() {\n    // Small dial on front\n    difference() {\n        cylinder(h = 6, d = 16, center = true);\n        translate([0, 8, 0]) cube([3, 4, 7], center = true);\n    }\n}\n\n// Assembly\ntranslate([0, 0, 0]) {\n    base();\n    feet();\n    translate([0, 0, 4]) body();\n    translate([0, 0, 4]) juice_outlet();\n    translate([0, 0, 4]) control_knob();\n    translate([0, 0, 70]) press_plate();\n    translate([0, 0, 70]) shaft();\n    handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "beanpress",
    "openscad_code": "// BeanPress Kitchen Appliance - Medium Complexity\n// A small countertop bean press for making single servings of bean-based drinks\n\n// Overall dimensions: 100mm wide x 120mm deep x 130mm tall\n\nmodule base() {\n    // Main base with rounded corners\n    difference() {\n        minkowski() {\n            cube([80, 90, 15], center=true);\n            sphere(5);\n        }\n        \n        // Cable channel underneath\n        translate([0, 35, -8])\n            cube([20, 15, 10], center=true);\n    }\n}\n\nmodule body() {\n    // Main body housing\n    difference() {\n        translate([0, 0, 32.5])\n            minkowski() {\n                cube([70, 80, 35], center=true);\n                sphere(3);\n            }\n        \n        // Front control panel recess\n        translate([0, -42, 32.5])\n            cube([50, 5, 25], center=true);\n            \n        // Top opening for bean hopper\n        translate([0, 10, 55])\n            cylinder(h=10, r=15);\n    }\n}\n\nmodule control_panel() {\n    // Control panel with buttons and display\n    translate([0, -39, 32.5]) {\n        // Panel face\n        cube([45, 2, 20], center=true);\n        \n        // Power button\n        translate([-15, 1, 5])\n            cylinder(h=3, r=5);\n            \n        // Mode button\n        translate([0, 1, 5])\n            cylinder(h=3, r=5);\n            \n        // Start button\n        translate([15, 1, 5])\n            cylinder(h=3, r=5);\n            \n        // LCD display frame\n        translate([0, 1, -5])\n            cube([30, 1, 8], center=true);\n    }\n}\n\nmodule bean_hopper() {\n    // Bean container on top\n    translate([0, 10, 65]) {\n        // Hopper body\n        cylinder(h=25, r1=20, r2=15);\n        \n        // Lid\n        translate([0, 0, 27])\n            cylinder(h=3, r=22);\n            \n        // Handle\n        translate([0, 25, 27])\n            rotate([90, 0, 0])\n                cylinder(h=15, r=2);\n    }\n}\n\nmodule press_mechanism() {\n    // Press arm assembly\n    translate([0, 20, 55]) {\n        // Main arm pivot\n        rotate([0, 90, 0])\n            cylinder(h=60, r=5);\n            \n        // Press lever\n        translate([0, 0, 30])\n            rotate([0, 90, 0])\n                cube([5, 8, 60], center=true);\n                \n        // Handle grip\n        translate([0, 0, 60])\n            rotate([0, 90, 0])\n                cylinder(h=20, r=8);\n                \n        // Press plate\n        translate([0, -20, 0])\n            cylinder(h=3, r=12);\n    }\n}\n\nmodule drip_tray() {\n    // Removable drip tray\n    translate([0, 35, 15]) {\n        difference() {\n            // Tray base\n            cube([60, 40, 5], center=true);\n            \n            // Recess for liquid\n            translate([0, 0, 2])\n                cube([55, 35, 3], center=true);\n        }\n        \n        // Front pull tab\n        translate([0, 42, 2.5])\n            cube([20, 5, 2], center=true);\n    }\n}\n\nmodule feet() {\n    // Rubber feet\n    positions = [[-30, -35], [30, -35], [-30, 35], [30, 35]];\n    \n    for(pos = positions) {\n        translate([pos[0], pos[1], -10])\n            cylinder(h=5, r=3);\n    }\n}\n\nmodule bean_outlet() {\n    // Spout for pressed liquid\n    translate([0, 40, 45]) {\n        // Main spout\n        rotate([90, 0, 0])\n            cylinder(h=20, r1=8, r2=5);\n            \n        // Drip prevention lip\n        translate([0, 0, -2])\n            rotate([90, 0, 0])\n                cylinder(h=2, r=10);\n    }\n}\n\n// Main assembly\nunion() {\n    base();\n    body();\n    control_panel();\n    bean_hopper();\n    press_mechanism();\n    drip_tray();\n    feet();\n    bean_outlet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlezest",
    "openscad_code": "// KettleZest Kitchen Appliance - Realistic Medium Complexity\n\n// Main body dimensions\nbody_w = 60;\nbody_d = 70;\nbody_h = 80;\n\n// Handle dimensions\nhandle_r = 5;\nhandle_w = 30;\nhandle_gap = 20;\n\n// Spout dimensions\nspout_r = 8;\nspout_l = 35;\nspout_h = 25;\n\n// Base dimensions\nbase_w = 65;\nbase_d = 75;\nbase_h = 15;\n\n// Lid dimensions\nlid_r = 28;\nlid_h = 8;\n\n// Button dimensions\nbtn_r = 6;\nbtn_h = 3;\n\n// Main body with rounded top\nmodule kettle_body() {\n    difference() {\n        // Main rounded body\n        union() {\n            // Lower cylindrical part\n            cylinder(h=body_h-lid_h, r1=body_w/2, r2=body_w/2, $fn=32);\n            // Upper dome\n            translate([0, 0, body_h-lid_h])\n            sphere(r=body_w/2, $fn=32);\n        }\n        \n        // Hollow interior\n        translate([0, 0, 2])\n        cylinder(h=body_h-2, r1=body_w/2-2, r2=body_w/2-2, $fn=32);\n        \n        // Spout hole\n        translate([body_w/2-2, 0, spout_h])\n        rotate([0, 0, 30])\n        cylinder(h=spout_l+10, r=spout_r-1, $fn=16);\n    }\n}\n\n// Handle assembly\nmodule handle() {\n    // Mounting bracket\n    translate([-body_w/2-2, 0, body_h/2])\n    cube([4, handle_w, 2]);\n    \n    // Handle grip\n    translate([-body_w/2-handle_gap/2-2, 0, body_h/2])\n    rotate([90, 0, 0])\n    cylinder(h=handle_w, r=handle_r, $fn=16);\n    \n    // Support struts\n    for(y = [-handle_w/2+5, handle_w/2-5]) {\n        translate([-body_w/2-2, y, body_h/2])\n        cube([handle_gap/2, 2, 2]);\n    }\n}\n\n// Spout\nmodule spout() {\n    // Main spout tube\n    translate([body_w/2-2, 0, spout_h])\n    rotate([0, 0, 30])\n    cylinder(h=spout_l, r=spout_r, $fn=16);\n    \n    // Spout tip\n    translate([body_w/2-2+spout_l*cos(30), 0, spout_h+spout_l*sin(30)])\n    rotate([0, 0, 30])\n    cylinder(h=10, r1=spout_r, r2=spout_r-3, $fn=16);\n}\n\n// Base with feet\nmodule base() {\n    // Main base\n    difference() {\n        translate([0, 0, -base_h])\n        cube([base_w, base_d, base_h], center=true);\n        \n        // Recessed bottom\n        translate([0, 0, -base_h+2])\n        cube([base_w-4, base_d-4, base_h-2], center=true);\n    }\n    \n    // Feet\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*base_w/3, y*base_d/3, -base_h])\n            cylinder(h=3, r=5, $fn=16);\n        }\n    }\n}\n\n// Lid with knob\nmodule lid() {\n    // Lid body\n    translate([0, 0, body_h-lid_h/2])\n    cylinder(h=lid_h, r=lid_r, $fn=32);\n    \n    // Lid knob\n    translate([0, 0, body_h+2])\n    cylinder(h=10, r=8, $fn=16);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel surface\n    translate([body_w/2-5, 0, body_h/3])\n    rotate([0, 0, 15])\n    cube([10, 20, 2]);\n    \n    // LED indicator\n    translate([body_w/2-2, -5, body_h/3+3])\n    sphere(r=2, $fn=16);\n    \n    // Power button\n    translate([body_w/2-2, 5, body_h/3+2])\n    cylinder(h=btn_h, r=btn_r, $fn=16);\n}\n\n// Assemble the KettleZest\nunion() {\n    base();\n    \n    translate([0, 0, base_h])\n    kettle_body();\n    \n    translate([0, 0, base_h])\n    handle();\n    \n    translate([0, 0, base_h])\n    spout();\n    \n    lid();\n    \n    translate([0, 0, base_h])\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "fruitrush",
    "openscad_code": "// Fruitrush Kitchen Appliance - Realistic Style\n// Medium complexity 3D printable model\n\n// Main parameters\nbase_width = 80;\nbase_depth = 60;\nbase_height = 25;\nwall_thickness = 2;\n\n// Container parameters\ncontainer_width = 70;\ncontainer_depth = 50;\ncontainer_height = 40;\ncontainer_thickness = 2;\n\n// Lid parameters\nlid_diameter = 72;\nlid_height = 8;\nhandle_diameter = 20;\nhandle_height = 15;\n\n// Motor housing\nmotor_width = 35;\nmotor_depth = 35;\nmotor_height = 30;\n\n// Control panel\npanel_width = 30;\npanel_height = 20;\npanel_depth = 5;\nbutton_diameter = 6;\nbutton_height = 3;\n\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, base_height/2])\n            cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow out base\n        translate([0, 0, -wall_thickness/2])\n            cube([base_width-wall_thickness*2, base_depth-wall_thickness*2, base_height], center=true);\n    }\n    \n    // Feet\n    for(x = [-1, 1])\n        for(y = [-1, 1])\n            translate([x*30, y*22, 0])\n                cylinder(h=5, d=8, center=true);\n}\n\nmodule container() {\n    difference() {\n        // Main container\n        translate([0, 0, container_height/2])\n            cube([container_width, container_depth, container_height], center=true);\n        \n        // Hollow container\n        translate([0, 0, -container_thickness/2])\n            cube([container_width-container_thickness*2, container_depth-container_thickness*2, container_height+1], center=true);\n    }\n    \n    // Pouring spout\n    translate([container_width/2, 0, container_height-5])\n        rotate([0, 90, 0])\n            cylinder(h=15, d1=15, d2=8);\n}\n\nmodule blades() {\n    // Central hub\n    cylinder(h=8, d=12);\n    \n    // Blades\n    for(i = [0:3]) {\n        rotate([0, 0, i*90])\n            translate([15, 0, 4])\n                cube([30, 3, 1], center=true);\n    }\n}\n\nmodule lid() {\n    // Main lid\n    translate([0, 0, lid_height/2])\n        cylinder(h=lid_height, d=lid_diameter);\n    \n    // Handle\n    translate([0, 0, lid_height+handle_height/2])\n        cylinder(h=handle_height, d=handle_diameter);\n    \n    // Locking tabs\n    for(i = [0:3]) {\n        rotate([0, 0, i*90+45])\n            translate([lid_diameter/2-3, 0, lid_height/2])\n                cube([6, 3, lid_height], center=true);\n    }\n}\n\nmodule motor_housing() {\n    difference() {\n        // Main housing\n        translate([0, 0, motor_height/2])\n            cube([motor_width, motor_depth, motor_height], center=true);\n        \n        // Ventilation holes\n        for(i = [0:2]) {\n            translate([motor_width/2-2, (i-1)*10, motor_height/2])\n                rotate([0, 90, 0])\n                    cylinder(h=5, d=3);\n        }\n    }\n    \n    // Power cord\n    translate([-motor_width/2-10, 0, 5])\n        rotate([0, 90, 0])\n            cylinder(h=20, d=4);\n}\n\nmodule control_panel() {\n    // Panel\n    translate([base_width/2+panel_depth/2, 0, base_height+panel_height/2])\n        cube([panel_depth, panel_width, panel_height], center=true);\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([base_width/2+panel_depth, (i-1)*8, base_height+panel_height-5])\n            cylinder(h=button_height, d=button_diameter);\n    }\n    \n    // LED indicator\n    translate([base_width/2+panel_depth, -12, base_height+panel_height-5])\n        sphere(d=4);\n}\n\n// Assembly\nunion() {\n    // Base assembly\n    base();\n    \n    // Container assembly\n    translate([0, 0, base_height])\n        container();\n    \n    // Blades (inside container)\n    translate([0, 0, base_height+5])\n        blades();\n    \n    // Motor housing\n    translate([0, 0, base_height+container_height+5])\n        motor_housing();\n    \n    // Lid (slightly offset for visibility)\n    translate([0, 0, base_height+container_height+lid_height/2])\n        lid();\n    \n    // Control panel\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "steampress",
    "openscad_code": "// ===========================\n// Steampress Kitchen Appliance\n// Medium complexity, realistic style\n// 3D-printable, ~100 mm tall\n// ===========================\n\n// Overall scale factor (mm)\nscale_total = 1;\n\n// Dimensions\nbody_w = 60 * scale_total;\nbody_d = 45 * scale_total;\nbody_h = 35 * scale_total;\n\nlid_w = body_w;\nlid_d = body_d;\nlid_h = 12 * scale_total;\nhinge_r = 2 * scale_total;\nhinge_l = 5 * scale_total;\n\nhandle_r = 6 * scale_total;\nhandle_len = 30 * scale_total;\nhandle_grip_r = 3 * scale_total;\n\nreservoir_w = body_w * 0.8;\nreservoir_d = body_d * 0.7;\nreservoir_h = 25 * scale_total;\n\nbutton_r = 3 * scale_total;\nbutton_h = 4 * scale_total;\ndial_r = 5 * scale_total;\ndial_h = 3 * scale_total;\n\n// Wall thickness\nwall = 2 * scale_total;\n\n// Base assembly\nmodule base() {\n    difference() {\n        // Main body block\n        cube([body_w, body_d, body_h], center = true);\n        // Hollow cavity\n        translate([0, 0, -wall/2])\n            cube([body_w - 2*wall, body_d - 2*wall, body_h], center = true);\n    }\n}\n\n// Lid with hinge pins\nmodule lid() {\n    // Hinge cylinders\n    for (x = [-lid_w/2 + hinge_l, lid_w/2 - hinge_l]) {\n        translate([x, lid_d/2, 0])\n            rotate([90, 0, 0])\n                cylinder(r = hinge_r, h = hinge_l, center = true);\n    }\n\n    // Lid plate\n    translate([0, 0, lid_h/2])\n        difference() {\n            cube([lid_w, lid_d, lid_h], center = true);\n            translate([0, 0, wall/2])\n                cube([lid_w - 2*wall, lid_d - 2*wall, lid_h], center = true);\n        }\n}\n\n// Handle attached to lid\nmodule handle() {\n    translate([0, -lid_d/2 - handle_len/2, lid_h])\n        rotate([90, 0, 0])\n            cylinder(r = handle_grip_r, h = handle_len, center = true);\n\n    // Brackets\n    for (x = [-lid_w/4, lid_w/4])\n        translate([x, -lid_d/2, lid_h/2])\n            cube([wall*2, wall*2, lid_h], center = true);\n}\n\n// Water reservoir insert\nmodule reservoir() {\n    translate([0, 0, -body_h/2 + reservoir_h/2])\n        difference() {\n            cube([reservoir_w, reservoir_d, reservoir_h], center = true);\n            translate([0, 0, wall])\n                cube([reservoir_w - 2*wall, reservoir_d - 2*wall, reservoir_h - wall], center = true);\n        }\n}\n\n// Control panel with buttons and dial\nmodule controls() {\n    // Panel block\n    translate([body_w/2 + wall/2, 0, 0])\n        cube([wall*2, body_d*0.6, body_h*0.5], center = true);\n\n    // Power button\n    translate([body_w/2 + wall*1.5, -body_d/4, body_h/4])\n        cylinder(r = button_r, h = button_h);\n\n    // Steam dial\n    translate([body_w/2 + wall*1.5, body_d/4, body_h/4])\n        cylinder(r = dial_r, h = dial_h);\n}\n\n// Feet for stability\nmodule feet() {\n    for (x = [-body_w/3, body_w/3])\n        for (y = [-body_d/3, body_d/3])\n            translate([x, y, -body_h/2 - wall])\n                cylinder(r = wall, h = wall*2);\n}\n\n// Assembly\nunion() {\n    // Base and internals\n    color(\"silver\") base();\n    color(\"lightgray\") reservoir();\n    color(\"darkgray\") controls();\n    color(\"black\") feet();\n\n    // Lid and handle (open 30Â°)\n    translate([0, lid_d/2, body_h/2])\n        rotate([30, 0, 0]) {\n            color(\"silver\") lid();\n            color(\"black\") handle();\n        }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "brewspark",
    "openscad_code": "// BrewSpark 3D printable coffee-brewing appliance â€“ realistic style, medium complexity\n// Overall footprint: 100 Ã— 80 Ã— 110 mm (LÃ—WÃ—H)\n\n// Wall thickness for 3D-printing\n$wall = 2;\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([100, 80, 110], center = true);\n        // Hollow interior\n        translate([0, 0, 5])\n            cube([100 - 2*$wall, 80 - 2*$wall, 110 - 2*$wall], center = true);\n    }\n}\n\n// Front control panel\nmodule control_panel() {\n    difference() {\n        translate([0, 40 - $wall/2, 20])\n            cube([60, $wall, 25], center = true);\n        // Button holes (Ã˜6 mm, 8 mm apart)\n        for (x = [-12, -4, 4, 12])\n            translate([x, 40, 25])\n                rotate([90, 0, 0])\n                    cylinder(h = $wall + 1, d = 6, center = true);\n    }\n    // Buttons\n    color(\"lightblue\")\n        for (x = [-12, -4, 4, 12])\n            translate([x, 40 + $wall/2, 25])\n                cylinder(h = 3, d = 6, $fn = 20);\n    // Dial\n    translate([30, 40 + $wall/2, 30])\n        rotate([90, 0, 0])\n            cylinder(h = 10, d1 = 12, d2 = 8, $fn = 32);\n}\n\n// Water reservoir (removable)\nmodule reservoir() {\n    difference() {\n        translate([0, -25, 45])\n            cube([45, 35, 50], center = true);\n        translate([0, -25, 50])\n            cube([45 - 2*$wall, 35 - 2*$wall, 50 - 2*$wall], center = true);\n    }\n    // Handle\n    translate([-45/2 - 5, -25, 60])\n        rotate([0, 90, 0])\n            cylinder(h = 10, d = 6, $fn = 20);\n}\n\n// Drip tray\nmodule drip_tray() {\n    difference() {\n        translate([0, 0, -50 + $wall/2])\n            cube([80, 70, $wall], center = true);\n        // Grill slots\n        for (x = [-30:10:30])\n            translate([x, 0, -50 + $wall/2 - 0.1])\n                cube([8, 70 + 0.2, $wall + 0.2], center = true);\n    }\n    // Tray walls\n    color(\"gray\")\n        for (s = [-1, 1])\n            translate([0, s*(70/2 - $wall/2), -50 + 10])\n                cube([80, $wall, 20], center = true);\n}\n\n// Coffee outlet spout\nmodule spout() {\n    translate([0, 0, 0])\n        rotate([45, 0, 0])\n            cylinder(h = 30, d1 = 12, d2 = 8, $fn = 32);\n}\n\n// Assembly\nunion() {\n    body();\n    control_panel();\n    reservoir();\n    drip_tray();\n    spout();\n}\n// Optional: add text labels (commented for pure geometry)\n// translate([30, 40 + $wall/2, 35]) rotate([90, 0, 0]) linear_extrude(1) text(\"BrewSpark\");",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlepure",
    "openscad_code": "// Kettlepure water kettle â€“ mediumâ€“complexity, 3-D-printable, 2 mm walls\n// Overall height â‰ˆ 125 mm, base Ã˜ 110 mm\n$fa = 2; $fs = 0.5;\n\n// Main module\nmodule kettlepure() {\n    // ---------- BODY ----------\n    difference() {\n        // outer kettle shell\n        cylinder(h = 90, d = 110, center = false);\n        // inner void (2 mm wall)\n        translate([0, 0, 2])\n            cylinder(h = 88, d = 106, center = false);\n    }\n\n    // ---------- BASE ----------\n    difference() {\n        // base ring\n        translate([0, 0, -10])\n            cylinder(h = 10, d = 120, center = false);\n        // cable cavity\n        translate([0, 0, -9])\n            cylinder(h = 9, d = 100, center = false);\n    }\n\n    // ---------- LID ----------\n    translate([0, 0, 90]) {\n        difference() {\n            cylinder(h = 12, d = 106, center = false);\n            translate([0, 0, 2])\n                cylinder(h = 11, d = 102, center = false);\n        }\n        // lid handle\n        translate([0, 0, 12])\n            cylinder(h = 15, d1 = 20, d2 = 12, center = false);\n    }\n\n    // ---------- SPOUT ----------\n    translate([55, 0, 50]) {\n        rotate([0, -30, 0]) {\n            difference() {\n                hull() {\n                    sphere(d = 30);\n                    translate([0, 0, 30])\n                        sphere(d = 20);\n                }\n                // hollow spout\n                translate([0, 0, 0])\n                    scale([0.8, 0.8, 0.8]) {\n                    hull() {\n                        sphere(d = 30);\n                        translate([0, 0, 30])\n                            sphere(d = 20);\n                    }\n                }\n            }\n        }\n    }\n\n    // ---------- HANDLE ----------\n    translate([-55, 0, 45]) {\n        rotate([0, 15, 0]) {\n            difference() {\n                hull() {\n                    sphere(d = 18);\n                    translate([0, 0, 50])\n                        sphere(d = 18);\n                }\n                // hand grip void\n                translate([0, 0, 0])\n                    scale([0.7, 0.7, 0.7]) {\n                    hull() {\n                        sphere(d = 18);\n                        translate([0, 0, 50])\n                            sphere(d = 18);\n                    }\n                }\n            }\n            // handle base\n            translate([0, 0, -5])\n                cylinder(h = 10, d = 25, center = true);\n            translate([0, 0, 55])\n                cylinder(h = 10, d = 25, center = true);\n        }\n    }\n\n    // ---------- CONTROL PANEL ----------\n    translate([0, 55, 15]) {\n        difference() {\n            // panel block\n            cube([40, 8, 25], center = true);\n            // recess\n            translate([0, 1, 0])\n                cube([36, 6, 21], center = true);\n        }\n        // on/off button\n        translate([0, 5, 5])\n            cylinder(h = 4, d = 10);\n        // LED ring\n        translate([0, 5.5, 5])\n            cylinder(h = 1, d = 14);\n    }\n\n    // ---------- WATER LEVEL WINDOWS ----------\n    for (z = [30, 50, 70]) {\n        translate([0, 54.8, z])\n            scale([1, 0.05, 0.3])\n                sphere(d = 10);\n    }\n}\n\n// Render the kettle\nkettlepure();",
    "renders": true
  },
  {
    "kitchen_appliance": "squeezemax",
    "openscad_code": "$fn = 50;\n\n// Overall appliance dimensions\nbody_w = 80;\nbody_d = 70;\nbody_h = 110;\n\n// Wall thickness\nwall_t = 2;\n\nmodule squeezemax() {\n    // Main body shell\n    difference() {\n        cube([body_w, body_d, body_h], center = true);\n        translate([0, 0, wall_t])\n            cube([body_w - 2*wall_t, body_d - 2*wall_t, body_h - wall_t], center = true);\n    }\n    \n    // Front panel with buttons and display\n    translate([0, body_d/2, body_h/2 - 15])\n        cube([body_w - 8, wall_t, 30], center = true);\n    \n    // Display screen\n    translate([0, body_d/2 + 1, body_h/2 - 5])\n        color(\"black\")\n        cube([40, 0.5, 15], center = true);\n    \n    // Control buttons\n    for (i = [-1:1]) {\n        translate([i*15, body_d/2 + 1, body_h/2 - 20])\n            cylinder(h = 2, r = 4);\n    }\n    \n    // Juice container (cylinder on top)\n    translate([0, 0, body_h/2 + 15])\n        cylinder(h = 30, r = 25);\n    \n    // Container lid\n    translate([0, 0, body_h/2 + 45])\n        difference() {\n            cylinder(h = 5, r = 27);\n            translate([0, 0, 2])\n                cylinder(h = 5, r = 23);\n        }\n    \n    // Handle on lid\n    translate([0, 15, body_h/2 + 47])\n        cube([20, 10, 3], center = true);\n    \n    // Fruit chute (angled tube)\n    translate([-body_w/2 - 15, 0, body_h/2])\n        rotate([0, 45, 0])\n            cylinder(h = 35, r = 12);\n    \n    // Pulp outlet (small spout at bottom)\n    translate([body_w/2 - 15, 0, -body_h/2 + 10])\n        rotate([0, -30, 0])\n            cylinder(h = 15, r1 = 8, r2 = 5);\n    \n    // Rubber feet (4 corners)\n    for (x = [-1, 1])\n        for (y = [-1, 1])\n            translate([x*(body_w/2 - 10), y*(body_d/2 - 10), -body_h/2 - 1])\n                cylinder(h = 2, r = 4);\n    \n    // Side ventilation slots\n    for (i = [0:4]) {\n        translate([-body_w/2, -body_d/2 + 10 + i*12, body_h/2 - 40 - i*5])\n            cube([wall_t, 8, 3]);\n        translate([body_w/2 - wall_t, -body_d/2 + 10 + i*12, body_h/2 - 40 - i*5])\n            cube([wall_t, 8, 3]);\n    }\n    \n    // Power cord exit\n    translate([body_w/2 - 20, -body_d/2 + 5, -body_h/2 + 20])\n        rotate([0, 90, 0])\n            cylinder(h = 8, r = 3);\n}\n\n// Render the complete appliance\nsqueezemax();",
    "renders": true
  },
  {
    "kitchen_appliance": "roastpress",
    "openscad_code": "// Realistic RoastPress Kitchen Appliance - Medium Complexity\n// Dimensions: 100mm x 80mm x 120mm (L x W x H)\n\n// Main body module\nmodule roastpress_body() {\n    // Base frame\n    difference() {\n        cube([100, 80, 15], center=true);\n        translate([0, 0, 7.5]) cube([96, 76, 15], center=true);\n    }\n    \n    // Main housing\n    translate([0, 0, 7.5]) {\n        difference() {\n            cube([90, 70, 100], center=true);\n            translate([0, 0, 50]) cube([86, 66, 100], center=true);\n        }\n    }\n}\n\n// Top lid with hinge\nmodule lid() {\n    translate([0, -35, 107.5]) {\n        rotate([0, 15, 0]) {\n            difference() {\n                cube([90, 70, 10], center=true);\n                translate([0, 0, 5]) cube([86, 66, 10], center=true);\n            }\n            \n            // Handle on lid\n            translate([0, 30, 5]) \n                cylinder(h=20, r1=5, r2=5, center=true);\n            translate([0, 30, 15]) \n                sphere(5);\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([45, 0, 60]) {\n        difference() {\n            cube([10, 60, 20], center=true);\n            translate([5, 0, 0]) cube([2, 56, 16], center=true);\n        }\n        \n        // Buttons\n        for(i = [-20:10:20]) {\n            translate([5, i, 5])\n                cylinder(h=3, r=4, center=true);\n        }\n        \n        // Dial\n        translate([5, 0, -5])\n            cylinder(h=5, r=8, center=true);\n        translate([5, 0, -7.5])\n            cylinder(h=2, r=6, center=true);\n    }\n}\n\n// Coffee bean container\nmodule bean_container() {\n    translate([0, 0, 120]) {\n        difference() {\n            cylinder(h=30, r=20, center=true);\n            translate([0, 0, 15]) \n                cylinder(h=30, r=18, center=true);\n        }\n        \n        // Container lid\n        translate([0, 0, 135]) {\n            cylinder(h=5, r=21, center=true);\n            translate([0, 15, 0])\n                cube([5, 20, 5], center=true);\n        }\n    }\n}\n\n// Drip tray\nmodule drip_tray() {\n    translate([0, 0, -5]) {\n        difference() {\n            cube([80, 60, 5], center=true);\n            translate([0, 0, 2.5]) \n                cube([76, 56, 5], center=true);\n        }\n    }\n}\n\n// Side vents\nmodule side_vents() {\n    for(side = [-1, 1]) {\n        translate([side * 45, 0, 50]) {\n            for(i = [-30:10:30]) {\n                translate([0, i, 0])\n                    cube([2, 5, 10], center=true);\n            }\n        }\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-40:80:80]) {\n        for(y = [-30:60:60]) {\n            translate([x, y, -12.5]) {\n                difference() {\n                    cylinder(h=5, r=5, center=true);\n                    translate([0, 0, 2.5]) \n                        cylinder(h=5, r=3, center=true);\n                }\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    roastpress_body();\n    lid();\n    control_panel();\n    bean_container();\n    drip_tray();\n    side_vents();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlefresh",
    "openscad_code": "// Kettlefresh Kitchen Appliance - Realistic Style with Medium Complexity\n// Overall dimensions: 120mm width x 90mm depth x 160mm height\n\n$fn = 32;\n\n// Main body module\nmodule kettlefresh_body() {\n    // Base structure\n    difference() {\n        // Main body block\n        translate([0, 0, 45])\n            cube([120, 90, 90], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 45])\n            cube([116, 86, 86], center=true);\n    }\n    \n    // Front panel with display\n    translate([0, 45.5, 90])\n        cube([100, 2, 40], center=true);\n    \n    // Display screen\n    translate([0, 47, 95])\n        color(\"black\")\n        cube([60, 1, 15], center=true);\n    \n    // Control buttons\n    for(i = [-1, 0, 1]) {\n        translate([i * 15, 47, 75])\n            cylinder(h=2, r=5);\n    }\n}\n\n// Water tank module\nmodule water_tank() {\n    // Tank container\n    difference() {\n        translate([0, 0, 125])\n            cylinder(h=60, r=35);\n        \n        // Inner cavity\n        translate([0, 0, 125])\n            cylinder(h=58, r=33);\n    }\n    \n    // Tank lid\n    translate([0, 0, 188])\n    difference() {\n        cylinder(h=8, r=35);\n        translate([0, 0, 2])\n            cylinder(h=8, r=30);\n    }\n    \n    // Handle on lid\n    translate([0, 25, 192])\n        rotate([90, 0, 0])\n            cylinder(h=20, r=3);\n}\n\n// Drip tray module\nmodule drip_tray() {\n    // Tray base\n    difference() {\n        translate([0, -30, 25])\n            cube([100, 60, 5], center=true);\n        \n        // Recessed area\n        translate([0, -30, 25])\n            cube([90, 50, 3], center=true);\n    }\n    \n    // Support rails\n    for(x = [-40, 40]) {\n        translate([x, -30, 12.5])\n            cube([5, 60, 25], center=true);\n    }\n}\n\n// Coffee pod holder module\nmodule pod_holder() {\n    // Holder mechanism\n    translate([0, 0, 70])\n    difference() {\n        cylinder(h=15, r=25);\n        // Pod insertion slot\n        translate([-15, 0, 7.5])\n            cube([30, 8, 15], center=true);\n    }\n    \n    // Ejection lever\n    translate([30, 0, 77.5])\n    union() {\n        rotate([0, 90, 0])\n            cylinder(h=20, r=3);\n        translate([10, 0, 0])\n            sphere(r=4);\n    }\n}\n\n// Power cable\nmodule power_cable() {\n    // Cable entry point\n    translate([60, -45, 40])\n        rotate([0, 90, 0])\n            cylinder(h=15, r=3);\n    \n    // Cable\n    hull() {\n        translate([60, -45, 40])\n            sphere(r=3);\n        translate([60, -60, 30])\n            sphere(r=2);\n    }\n}\n\n// Legs\nmodule legs() {\n    for(x = [-50, 50]) {\n        for(y = [-35, 35]) {\n            translate([x, y, 5])\n                cylinder(h=10, r=4);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    kettlefresh_body();\n    water_tank();\n    drip_tray();\n    pod_holder();\n    power_cable();\n    legs();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cafepress",
    "openscad_code": "// French Press Coffee Maker (Cafepress) - 3D Printable\n// Overall dimensions: ~90mm diameter x ~140mm height\n// Wall thickness: 2mm for printability\n\n$fn = 32; // Smooth curves\n\n// Main body assembly\nmodule cafepress() {\n    // Glass beaker\n    union() {\n        // Outer glass cylinder\n        difference() {\n            cylinder(h = 100, d1 = 80, d2 = 82); // Slight taper\n            translate([0, 0, 2])\n                cylinder(h = 96, d1 = 76, d2 = 78); // Hollow inside\n        }\n        \n        // Glass bottom\n        translate([0, 0, 0])\n            difference() {\n                cylinder(h = 2, d = 80);\n                cylinder(h = 2, d = 76);\n            }\n    }\n    \n    // Plastic frame base\n    difference() {\n        cylinder(h = 20, d = 85);\n        translate([0, 0, 2])\n            cylinder(h = 18, d = 82);\n    }\n    \n    // Frame legs (3x supports)\n    for (i = [0:120:240]) {\n        rotate([0, 0, i])\n            translate([40, 0, -5])\n                cube([8, 4, 25], center = true);\n    }\n    \n    // Handle assembly\n    translate([45, 0, 50]) {\n        // Handle grip\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h = 50, d = 12);\n                cylinder(h = 50, d = 8);\n            }\n        \n        // Handle mount brackets (2x)\n        for (z = [30, 70]) {\n            translate([0, 0, z - 50])\n                difference() {\n                    cube([20, 8, 4], center = true);\n                    translate([0, 0, -1])\n                        cube([16, 4, 6], center = true);\n                }\n        }\n    }\n    \n    // Lid assembly\n    translate([0, 0, 100]) {\n        // Lid top\n        difference() {\n            cylinder(h = 8, d = 84);\n            cylinder(h = 8, d = 78);\n        }\n        \n        // Lid knob\n        translate([0, 0, 8]) {\n            cylinder(h = 12, d = 20);\n            translate([0, 0, 12])\n                sphere(d = 16);\n        }\n        \n        // Plunger rod hole\n        translate([0, 0, -2])\n            cylinder(h = 20, d = 10);\n    }\n    \n    // Plunger assembly\n    translate([0, 0, 108]) {\n        // Rod\n        cylinder(h = 90, d = 6);\n        \n        // Press disk\n        translate([0, 0, 90]) {\n            difference() {\n                cylinder(h = 8, d = 74);\n                translate([0, 0, 2])\n                    cylinder(h = 6, d = 70);\n                \n                // Filter holes pattern\n                for (r = [20, 30]) {\n                    for (a = [0:30:330]) {\n                        translate([r * cos(a), r * sin(a), -1])\n                            cylinder(h = 10, d = 2);\n                    }\n                }\n            }\n        }\n        \n        // Handle\n        translate([0, 0, 100])\n            sphere(d = 16);\n    }\n    \n    // Spout\n    rotate([0, 0, -30])\n        translate([40, 0, 70]) {\n            difference() {\n                // Spout body\n                rotate([0, -30, 0])\n                    union() {\n                        cube([20, 30, 8], center = true);\n                        translate([10, 0, 0])\n                            sphere(d = 30);\n                    }\n                \n                // Hollow channel\n                rotate([0, -30, 0])\n                    translate([0, 0, -1])\n                        cube([16, 26, 6], center = true);\n            }\n        }\n}\n\n// Render the complete model\ncafepress();",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlerush",
    "openscad_code": "// Kettlerush Kitchen Appliance - Realistic Style (Medium Complexity)\n\n// Overall dimensions (mm)\nwidth = 80;\ndepth = 60;\nheight = 120;\n\n// Wall thickness\nwall = 2;\n\nmodule body() {\n    difference() {\n        // Main body\n        translate([0, 0, height/2])\n            cube([width, depth, height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, height/2])\n            cube([width-wall*2, depth-wall*2, height-wall*2], center=true);\n    }\n}\n\nmodule base() {\n    // Bottom base plate\n    translate([0, 0, wall/2])\n        cube([width+4, depth+4, wall], center=true);\n    \n    // Rubber feet\n    for(x = [-width/3, width/3])\n        for(y = [-depth/3, depth/3])\n            translate([x, y, 0])\n                cylinder(h=wall*1.5, r=3, $fn=16);\n}\n\nmodule handle() {\n    // Handle base\n    translate([0, -depth/2-5, height-15])\n        cube([20, 10, 5], center=true);\n    \n    // Handle grip\n    translate([0, -depth/2-10, height-10])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=30, r=4, center=true, $fn=16);\n                translate([0, 0, -2])\n                    cylinder(h=34, r=2.5, center=true, $fn=16);\n            }\n}\n\nmodule spout() {\n    // Spout base\n    translate([width/2+2, 0, height-25])\n        rotate([0, 0, 90])\n            cylinder(h=15, r=8, $fn=16);\n    \n    // Spout tip\n    translate([width/2+17, 0, height-25])\n        rotate([0, 0, 90])\n            cylinder(h=8, r=5, $fn=16);\n    \n    // Spout opening\n    translate([width/2+20, 0, height-25])\n        rotate([0, 0, 90])\n            cylinder(h=5, r=3, $fn=16);\n}\n\nmodule lid() {\n    // Lid top\n    translate([0, 0, height])\n        difference() {\n            cylinder(h=5, r=width/2-2, $fn=32);\n            translate([0, 0, -1])\n                cylinder(h=7, r=width/2-4, $fn=32);\n        }\n    \n    // Lid handle\n    translate([0, 0, height+7])\n        cylinder(h=8, r=5, $fn=16);\n}\n\nmodule control_panel() {\n    // Panel base\n    translate([0, depth/2+2, height/2])\n        cube([40, 4, 25], center=true);\n    \n    // Power button\n    translate([-10, depth/2+4, height/2])\n        cylinder(h=2, r=5, $fn=16);\n    \n    // LED indicator\n    translate([10, depth/2+4, height/2])\n        cylinder(h=1, r=3, $fn=16);\n    \n    // Temperature dial\n    translate([0, depth/2+4, height/2+15])\n        rotate([90, 0, 0])\n            cylinder(h=8, r=6, $fn=16);\n}\n\nmodule vents() {\n    // Side vents\n    for(i = [1:3]) {\n        translate([width/2+1, -depth/4 + i*10, height/3])\n            rotate([0, 90, 0])\n                cube([2, 15, 3]);\n    }\n}\n\n// Main assembly\nunion() {\n    color(\"silver\") body();\n    color(\"gray\") base();\n    color(\"black\") handle();\n    color(\"silver\") spout();\n    color(\"silver\") lid();\n    color(\"black\") control_panel();\n    color(\"gray\") vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "citrusrush",
    "openscad_code": "// CitrusRush Electric Citrus Juicer\n// Medium-complexity 3D-printable model\n\n// Overall dimensions: 120 x 110 x 180 mm\n\n$fn = 32;\n\n// Main body module\nmodule body() {\n    difference() {\n        // Main housing\n        union() {\n            // Base cylinder\n            cylinder(h = 40, r = 55, center = true);\n            // Top dome\n            translate([0, 0, 20])\n                scale([1, 1, 0.7])\n                    sphere(r = 55);\n        }\n        // Central hole for cone\n        translate([0, 0, -5])\n            cylinder(h = 50, r = 20);\n    }\n}\n\n// Juice collection container\nmodule juice_container() {\n    difference() {\n        // Outer container\n        translate([0, 0, -30])\n            cylinder(h = 35, r = 45, center = true);\n        // Inner cavity\n        translate([0, 0, -30])\n            cylinder(h = 35, r = 43, center = true);\n        // Pour spout\n        translate([43, 0, -30])\n            rotate([90, 0, 0])\n                cylinder(h = 10, r1 = 8, r2 = 5);\n    }\n}\n\n// Juicing cone\nmodule cone() {\n    // Lower cone\n    cylinder(h = 30, r1 = 20, r2 = 15);\n    // Upper cone\n    translate([0, 0, 30])\n        cylinder(h = 25, r1 = 15, r2 = 5);\n    // Ribs for grip\n    for(i = [0:11]) {\n        rotate([0, 0, i * 30])\n            translate([12, -1.5, 0])\n                cube([5, 3, 55]);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 55])\n            cylinder(h = 8, r = 40);\n        // Center hole\n        translate([0, 0, 55])\n            cylinder(h = 10, r = 6);\n    }\n    // Handle\n    translate([0, 0, 63])\n        cylinder(h = 25, r = 5);\n    // Handle grip\n    translate([0, 0, 75])\n        sphere(r = 8);\n}\n\n// Power button\nmodule power_button() {\n    translate([45, 0, 20])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 8, r = 6);\n                translate([0, 0, 2])\n                    cylinder(h = 10, r = 4);\n            }\n}\n\n// Control dial\nmodule control_dial() {\n    translate([-45, 0, 25])\n        rotate([90, 0, 0])\n            union() {\n                cylinder(h = 10, r = 8);\n                // Grip ridges\n                for(i = [0:7]) {\n                    rotate([0, 0, i * 45])\n                        translate([6, -1, 0])\n                            cube([3, 2, 10]);\n                }\n            }\n}\n\n// Feet\nmodule feet() {\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90 + 45])\n            translate([40, 0, -20])\n                cylinder(h = 5, r = 6);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    juice_container();\n    cone();\n    lid();\n    power_button();\n    control_dial();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "steambrew",
    "openscad_code": "// Steambrew Kitchen Appliance - Realistic Medium Complexity\n// Dimensions: 100x80x120mm (WxDxH)\n\n$fn = 50;\n\n// Main body\nmodule main_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 60]) cube([100, 80, 120], center=true);\n        \n        // Inner chamber\n        translate([0, 0, 60]) cube([96, 76, 116], center=true);\n    }\n}\n\n// Water tank at rear\nmodule water_tank() {\n    translate([0, 35, 100]) {\n        difference() {\n            cube([40, 20, 60], center=true);\n            translate([0, 0, 5]) cube([36, 16, 50], center=true);\n        }\n    }\n}\n\n// Filter basket\nmodule filter_basket() {\n    translate([0, -20, 70]) {\n        difference() {\n            cylinder(h=25, r=20);\n            cylinder(h=25, r=17);\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([-45, 0, 115]) {\n        // Panel base\n        cube([10, 70, 15], center=true);\n        \n        // Buttons\n    for(i=[0:2]) {\n        translate([0, -20 + i*20, 5])\n            cylinder(h=3, r=5);\n    }\n    \n        // LED indicator\n        translate([0, 20, 5])\n            cylinder(h=2, r=3);\n    }\n}\n\n// Steam nozzle\nmodule steam_nozzle() {\n    translate([30, 0, 40]) {\n        // Base\n        cylinder(h=10, r=8);\n        rotate([90, 0, 0])\n            translate([0, 0, 5])\n                cylinder(h=30, r=4);\n    }\n}\n\n// Drip tray\nmodule drip_tray() {\n    translate([0, 0, 10]) {\n        difference() {\n            cube([90, 70, 8], center=true);\n            translate([0, 0, 2]) cube([86, 66, 6], center=true);\n        }\n    }\n}\n\n// Side handles\nmodule side_handles() {\n    for(side=[-1, 1]) {\n        translate([side*50, 0, 60]) {\n            rotate([0, 90, 0])\n                difference() {\n                    cylinder(h=30, r=8);\n                    translate([0, 0, -1]) cylinder(h=32, r=5);\n                }\n        }\n    }\n}\n\n// Top lid\nmodule top_lid() {\n    translate([0, 0, 120]) {\n        difference() {\n            cube([100, 80, 4], center=true);\n            translate([0, -20, -3]) cylinder(h=10, r=22);\n        }\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x=[-40, 40]) {\n        for(y=[-30, 30]) {\n            translate([x, y, 0]) {\n                cylinder(h=5, r=5);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    water_tank();\n    filter_basket();\n    control_panel();\n    steam_nozzle();\n    drip_tray();\n    side_handles();\n    top_lid();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlecraft",
    "openscad_code": "// KettleCraft Kitchen Kettle - Realistic Style, Medium Complexity\n// Designed for 3D printing with 2mm wall thickness\n\n// Main dimensions (mm)\nkettle_height = 120;\nkettle_width = 85;\nkettle_depth = 65;\n\n// Wall thickness\nwall = 2;\n\nmodule kettle_body() {\n    difference() {\n        // Outer body - rounded cuboid\n        minkowski() {\n            cube([kettle_width, kettle_depth, kettle_height * 0.7], center = true);\n            sphere(5);\n        }\n        \n        // Inner cavity\n        translate([0, 0, -2])\n        minkowski() {\n            cube([kettle_width - wall*2, kettle_depth - wall*2, kettle_height * 0.7 - wall], center = true);\n            sphere(3);\n        }\n        \n        // Spout hole\n        translate([kettle_width/2 - 5, 0, kettle_height * 0.4])\n        rotate([0, 90, 0])\n        cylinder(h=20, r=8, center = true);\n        \n        // Handle mounting holes\n        translate([-kettle_width/2 + 10, 0, kettle_height * 0.5])\n        cylinder(h=10, r=3, center = true);\n        \n        translate([-kettle_width/2 + 10, 0, kettle_height * 0.3])\n        cylinder(h=10, r=3, center = true);\n    }\n}\n\nmodule spout() {\n    difference() {\n        // Main spout tube\n        translate([kettle_width/2 - 5, 0, kettle_height * 0.4])\n        rotate([0, 90, 0])\n        cylinder(h=35, r1=10, r2=6, center = false);\n        \n        // Inner spout cavity\n        translate([kettle_width/2 - 5, 0, kettle_height * 0.4])\n        rotate([0, 90, 0])\n        cylinder(h=35, r1=8, r2=4, center = false);\n    }\n    \n    // Spout tip detail\n    translate([kettle_width/2 + 25, 0, kettle_height * 0.4])\n    rotate([0, 90, 0])\n    cylinder(h=5, r=6, center = true);\n}\n\nmodule handle() {\n    // Handle grip\n    difference() {\n        rotate([0, 90, 0])\n        translate([-kettle_width/2, 0, kettle_height * 0.4])\n        rotate_extrude(angle = 180, $fn = 20)\n        translate([25, 0, 0])\n        circle(r = 5);\n        \n        // Inner cavity for grip\n        rotate([0, 90, 0])\n        translate([-kettle_width/2, 0, kettle_height * 0.4])\n        rotate_extrude(angle = 180, $fn = 20)\n        translate([25, 0, 0])\n        circle(r = 3);\n    }\n    \n    // Mounting brackets\n    translate([-kettle_width/2 + 10, 0, kettle_height * 0.5])\n    cylinder(h=10, r=3);\n    \n    translate([-kettle_width/2 + 10, 0, kettle_height * 0.3])\n    cylinder(h=10, r=3);\n}\n\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, kettle_height * 0.7 + 5])\n        minkowski() {\n            cube([kettle_width - 4, kettle_depth - 4, 8], center = true);\n            sphere(2);\n        }\n        \n        // Inner cavity\n        translate([0, 0, kettle_height * 0.7 + 4])\n        minkowski() {\n            cube([kettle_width - 8, kettle_depth - 8, 6], center = true);\n            sphere(1);\n        }\n    }\n    \n    // Handle on lid\n    translate([0, 0, kettle_height * 0.7 + 13])\n    cylinder(h=15, r=5);\n    \n    // Steam vent\n    translate([0, 0, kettle_height * 0.7 + 28])\n    cylinder(h=5, r=2);\n}\n\nmodule control_panel() {\n    // Base panel\n    translate([0, -kettle_depth/2 - 5, kettle_height * 0.2])\n    cube([40, 10, 30], center = true);\n    \n    // Power button\n    translate([-10, -kettle_depth/2 - 5.5, kettle_height * 0.2 + 5])\n    cylinder(h=5, r=4);\n    \n    // Temperature dial\n    translate([10, -kettle_depth/2 - 5.5, kettle_height * 0.2 + 5])\n    cylinder(h=5, r=4);\n    \n    // LED indicator\n    translate([0, -kettle_depth/2 - 6, kettle_height * 0.2 + 15])\n    sphere(2);\n}\n\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, -5])\n        cube([kettle_width + 10, kettle_depth + 10, 10], center = true);\n        \n        // Cable hole\n        translate([kettle_width/2 + 5, 0, -5])\n        rotate([0, 90, 0])\n        cylinder(h=10, r=5, center = true);\n    }\n    \n    // Support feet\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x * (kettle_width/2 - 15), y * (kettle_depth/2 - 15), -10])\n            cylinder(h=5, r=3);\n        }\n    }\n}\n\n// Assemble the kettle\nunion() {\n    kettle_body();\n    spout();\n    handle();\n    lid();\n    control_panel();\n    base();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "squeezewave",
    "openscad_code": "// SqueezyWave Kitchen Appliance - a hand-held citrus squeezer with stylish base\n// Overall size: 110 mm tall, 90 mm wide, 90 mm deep\n\n// Base module â€“ hollow cylinder with chamfer\nmodule base() {\n    difference() {\n        cylinder(h = 20, d1 = 90, d2 = 85, $fn = 60); // slight taper\n        translate([0, 0, 2])\n            cylinder(h = 18, d = 86, $fn = 60); // hollow\n    }\n}\n\n// Juice collector bowl â€“ sits in base\nmodule bowl() {\n    difference() {\n        cylinder(h = 35, d = 80, $fn = 60);\n        translate([0, 0, 5])\n            cylinder(h = 30, d = 76, $fn = 60);\n    }\n}\n\n// Pour spout\nmodule spout() {\n    translate([40, 0, 30])\n        rotate([90, 0, 0])\n            cylinder(h = 15, r1 = 8, r2 = 4, $fn = 20);\n}\n\n// Strainer plate â€“ perforated top of bowl\nmodule strainer() {\n    difference() {\n        cylinder(h = 2, d = 80, $fn = 60);\n        // Central cone for fruit halves\n        translate([0, 0, -1])\n            cylinder(h = 4, d1 = 20, d2 = 25, $fn = 40);\n        // Holes\n        for (a = [0:30:330]) {\n            rotate([0, 0, a])\n                translate([30, 0, 1])\n                    cylinder(h = 3, d = 4, $fn = 8);\n        }\n    }\n}\n\n// Handle â€“ ergonomic grip\nmodule handle() {\n    difference() {\n        // main grip\n        hull() {\n            translate([0, 0, 0])\n                sphere(d = 20, $fn = 30);\n            translate([0, 0, 80])\n                sphere(d = 22, $fn = 30);\n        }\n        // finger grooves\n        for (z = [20:20:60]) {\n            translate([0, 0, z])\n                rotate([0, 90, 0])\n                    cylinder(h = 24, r = 5, $fn = 16);\n        }\n    }\n}\n\n// Connection pivot between arms\nmodule pivot() {\n    cylinder(h = 15, d = 8, $fn = 20);\n}\n\n// Upper arm assembly\nmodule upperArm() {\n    translate([0, 0, 120])\n        rotate([10, 0, 0])\n            handle();\n}\n\n// Lower arm assembly\nmodule lowerArm() {\n    translate([0, 0, 50])\n        handle();\n}\n\n// Control button on upper arm\nmodule button() {\n    translate([0, 12, 120])\n        difference() {\n            sphere(d = 12, $fn = 20);\n            sphere(d = 8, $fn = 20);\n        }\n}\n\n// Assemble the appliance\nunion() {\n    // Base and bowl assembly\n    base();\n    translate([0, 0, 20])\n        bowl();\n    translate([0, 0, 55])\n        strainer();\n    spout();\n\n    // Arms\n    lowerArm();\n    upperArm();\n    // pivot\n    translate([0, 0, 100])\n        pivot();\n\n    // Details\n    button();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "beanbrewer",
    "openscad_code": "// BeanBrewer Coffee Maker - Realistic Style, Medium Complexity\n\n// Overall dimensions: 90mm W x 120mm D x 140mm H\n\nmodule body() {\n    difference() {\n        // Main body shell\n        translate([0, 0, 70])\n            cube([90, 120, 140], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 70])\n            cube([86, 116, 136], center=true);\n    }\n}\n\nmodule water_tank() {\n    // Water reservoir\n    translate([-35, 0, 110])\n        difference() {\n            cube([25, 30, 40], center=true);\n            translate([0, 0, -2])\n                cube([21, 26, 38], center=true);\n        }\n    \n    // Tank handle\n    translate([-47, 0, 110])\n        difference() {\n            rotate([90, 0, 0])\n                cylinder(h=20, r=4, center=true);\n            rotate([90, 0, 0])\n                cylinder(h=20, r=2.5, center=true);\n        }\n}\n\nmodule drip_tray() {\n    // Base drip tray\n    translate([0, 0, 15])\n        difference() {\n            cube([70, 80, 8], center=true);\n            translate([0, 0, 2])\n                cube([66, 76, 6], center=true);\n        }\n    \n    // Tray grill\n    for (i = [-3:3]) {\n        translate([i*10, 0, 23])\n            cube([2, 72, 2], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Panel face\n    translate([0, 55, 100])\n        cube([60, 4, 30], center=true);\n    \n    // Buttons\n    for (i = [-1:1]) {\n        translate([i*15, 57, 105])\n            cylinder(h=3, r=5, center=true);\n    }\n    \n    // Power button\n    translate([25, 57, 105])\n        cylinder(h=4, r=6, center=true);\n    \n    // LED indicator\n    translate([-25, 57, 105])\n        cylinder(h=2, r=3, center=true);\n}\n\nmodule brew_group() {\n    // Brew head\n    translate([0, 0, 120])\n        difference() {\n            cylinder(h=20, r=15, center=true);\n            cylinder(h=22, r=12, center=true);\n        }\n    \n    // Coffee outlet spouts\n    translate([-8, 0, 110])\n        cylinder(h=15, r=3, center=true);\n    translate([8, 0, 110])\n        cylinder(h=15, r=3, center=true);\n    \n    // Filter basket holder\n    translate([0, 0, 90])\n        difference() {\n            cylinder(h=5, r=20, center=true);\n            cylinder(h=7, r=18, center=true);\n        }\n}\n\nmodule base() {\n    // Main base\n    translate([0, 0, 5])\n        cube([90, 120, 10], center=true);\n    \n    // Feet\n    for (x = [-35:35:70])\n        for (y = [-45:45:90]) {\n            translate([x, y, 2])\n                cylinder(h=4, r=4, center=true);\n        }\n}\n\nmodule power_cord() {\n    translate([45, 0, 5])\n        rotate([0, 90, 0])\n            cylinder(h=30, r=3, center=true);\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    water_tank();\n    drip_tray();\n    control_panel();\n    brew_group();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlejoy",
    "openscad_code": "// KettleJoy â€“ medium-complexity realistic electric kettle\n// Overall height â‰ˆ 110 mm â€“ prints upright with no critical overhangs\n// Wall thickness 2 mm throughout, all parts fused with unions\n\n$fn=36;               // smooth curves without excess polygons\nwall = 2;             // constant wall thickness for 3D printing\nscale = 1;            // global scale if needed\n\n// Main kettle body\nmodule kettle_body(){\n    difference(){\n        // outer shell\n        cylinder(h=70, d=60, center=false);\n        // inner cavity\n        translate([0,0,wall])\n            cylinder(h=68, d=60-2*wall, center=false);\n    }\n}\n\n// Base station with cord-storage ring\nmodule base(){\n    difference(){\n        union(){\n            // lower platform\n            cylinder(h=8, d=65);\n            // upper collar that mates with kettle\n            translate([0,0,8])\n                cylinder(h=5, d=62);\n        }\n        // central recess for heating plate\n        translate([0,0,wall])\n            cylinder(h=13, d=55-2*wall);\n    }\n}\n\n// Handle â€“ C-shaped, printed in place\nmodule handle(){\n    difference(){\n        union(){\n            // left upright\n            translate([-28, 0, 0])\n                cube([wall, 12, 65]);\n            // right upright\n            translate([28-wall, 0, 0])\n                cube([wall, 12, 65]);\n            // top bar\n            translate([-28, 0, 65-wall])\n                cube([56, 12, wall]);\n            // front grip bar\n            translate([-28, 12-wall, 0])\n                cube([56, wall, 65]);\n        }\n        // finger cavity\n        translate([-20, wall, 15])\n            cube([40, 10, 35]);\n    }\n}\n\n// Lid with knob\nmodule lid(){\n    difference(){\n        union(){\n            // lid disk\n            cylinder(h=5, d=58);\n            // knob\n            translate([0,0,5])\n                cylinder(h=8, d1=12, d2=8, center=false);\n        }\n        // steam hole\n        translate([0, 0, 2.5])\n            cylinder(h=5, d=3);\n    }\n}\n\n// Water-level window (stylised)\nmodule window(){\n    color(\"cyan\")\n    for(i=[1:3]){\n        translate([30, 0, 10 + i*15])\n            rotate([0,90,0])\n                cylinder(h=15, d=wall);\n    }\n}\n\n// Power switch on handle\nmodule power_switch(){\n    translate([0, 14, 40])\n        cube([8, wall+2, 5]);\n}\n\n// LED indicator ring on base\nmodule led_ring(){\n    color(\"red\")\n    translate([0,0,12.5])\n        cylinder(h=1, d=60);\n}\n\n// Assembly\nunion(){\n    // base station\n    base();\n    led_ring();\n\n    // kettle proper â€“ lifted to sit on base collar\n    translate([0,0,13])\n    union(){\n        kettle_body();\n        handle();\n        window();\n        power_switch();\n        // lid is separate printable part sitting on top\n        translate([0,0,70])\n            lid();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "fruitmax",
    "openscad_code": "// FruitMax Juicer Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: ~120mm wide x 110mm deep x 180mm tall\n\n$fn = 32;\nwall_thickness = 2;\n\nmodule rounded_cube(size, radius) {\n    hull() {\n        for(dx=[0,1], dy=[0,1], dz=[0,1]) {\n            translate([dx*size[0]-radius*dx, dy*size[1]-radius*dy, dz*size[2]-radius*dz])\n                sphere(r=radius);\n        }\n    }\n}\n\nmodule main_body() {\n    difference() {\n        // Main housing\n        rounded_cube([110, 100, 140], 5);\n        \n        // Hollow interior\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            rounded_cube([110-2*wall_thickness, 100-2*wall_thickness, 140-2*wall_thickness], 3);\n            \n        // Top opening for juicing mechanism\n        translate([40, 30, 120])\n            cube([30, 40, 25]);\n    }\n}\n\nmodule juice_container() {\n    difference() {\n        // Container body\n        translate([10, 10, 15])\n            cylinder(h=80, r1=30, r2=28);\n        \n        // Hollow interior\n        translate([10, 10, 17])\n            cylinder(h=76, r1=28, r2=26);\n            \n        // Pour spout\n        translate([35, 10, 85])\n            rotate([0, 90, 0])\n                cylinder(h=8, r1=6, r2=8);\n    }\n    \n    // Handle\n    translate([-20, 10, 55])\n        rotate([0, 90, 0])\n            difference() {\n                torus(10, 3);\n                translate([0, 0, -15])\n                    cube([40, 30, 30], center=true);\n            }\n}\n\nmodule pulp_container() {\n    difference() {\n        // Main pulp bin\n        translate([65, 10, 15])\n            rounded_cube([40, 80, 60], 3);\n        \n        // Hollow interior\n        translate([67, 12, 17])\n            rounded_cube([36, 76, 56], 2);\n    }\n}\n\nmodule juicing_cone() {\n    // Cone base\n    translate([55, 50, 120])\n        cylinder(h=20, r1=25, r2=20);\n    \n    // Cone ridges\n    for(i=[0:11]) {\n        rotate([0, 0, i*30])\n            translate([55, 50, 120])\n                linear_extrude(height=20, twist=0)\n                    polygon(points=[[0, 25], [2, 20], [0, 15], [-2, 20]]);\n    }\n}\n\nmodule control_panel() {\n    // Panel background\n    translate([95, 20, 100])\n        rounded_cube([15, 60, 10], 2);\n    \n    // Buttons\n    for(i=[0:2]) {\n        translate([100, 25 + i*18, 105])\n            cylinder(h=2, r=4);\n    }\n    \n    // Power dial\n    translate([100, 50, 112])\n        cylinder(h=8, r=6);\n}\n\nmodule base() {\n    difference() {\n        // Base platform\n        rounded_cube([120, 110, 10], 3);\n        \n        // Ventilation slots\n        for(i=[0:4]) {\n            translate([20 + i*20, 5, 0])\n                cube([10, 2, 10]);\n        }\n    }\n    \n    // Rubber feet\n    for(x=[20, 100], y=[20, 90]) {\n        translate([x, y, -2])\n            cylinder(h=3, r=4);\n    }\n}\n\nmodule motor_housing() {\n    difference() {\n        // Motor cover\n        translate([50, 50, 130])\n            rounded_cube([60, 60, 50], 5);\n        \n        // Air vents\n        for(i=[0:3]) {\n            translate([45 + i*15, 45, 150])\n                cube([5, 10, 20]);\n        }\n    }\n}\n\n// Assembly\nbase();\nmain_body();\njuice_container();\npulp_container();\njuicing_cone();\ncontrol_panel();\nmotor_housing();",
    "renders": true
  },
  {
    "kitchen_appliance": "grindcraft",
    "openscad_code": "// Grindcraft Coffee Grinder - Realistic Style\n// Overall dimensions: 120mm width x 180mm height x 160mm depth\n\n// Main body parameters\nbody_width = 100;\nbody_depth = 140;\nbody_height = 120;\nwall_thickness = 2;\n\n// Hopper parameters\nhopper_top = 80;\nhopper_bottom = 40;\nhopper_height = 60;\n\n// Base parameters\nbase_width = 120;\nbase_depth = 160;\nbase_height = 15;\n\n// Controls\ndial_radius = 15;\ndial_height = 5;\nbutton_width = 12;\nbutton_height = 8;\n\n// Spout parameters\nspout_length = 30;\nspout_diameter = 25;\n\n// Leg parameters\nleg_width = 10;\nleg_height = 15;\n\nmodule main_body() {\n    difference() {\n        // Main body shell\n        cube([body_width, body_depth, body_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness/2])\n            cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness], center=true);\n    }\n}\n\nmodule hopper() {\n    // Hopper base\n    translate([0, 0, body_height/2 + hopper_height/2])\n        cylinder(h=hopper_height, r1=hopper_bottom/2, r2=hopper_top/2, center=true);\n    \n    // Hopper lid\n    translate([0, 0, body_height/2 + hopper_height + 2])\n        cylinder(h=2, r=hopper_top/2 + 2, center=true);\n}\n\nmodule base() {\n    // Main base\n    translate([0, 0, -body_height/2 - base_height/2])\n        cube([base_width, base_depth, base_height], center=true);\n    \n    // Legs\n    for(x=[-1, 1])\n        for(y=[-1, 1])\n            translate([x*(base_width/2 - leg_width), y*(base_depth/2 - leg_width), -body_height/2 - base_height - leg_height/2])\n                cube([leg_width, leg_width, leg_height], center=true);\n}\n\nmodule control_panel() {\n    // Control panel surface\n    translate([body_width/2 + 1, 0, 0])\n        cube([2, body_depth/2, 30], center=true);\n    \n    // Grind size dial\n    translate([body_width/2 + 2, -20, body_height/4])\n        rotate([90, 0, 0])\n            cylinder(h=dial_height, r=dial_radius, center=true);\n    \n    // Power button\n    translate([body_width/2 + 2, 20, body_height/4])\n        cube([button_width, button_width, button_height], center=true);\n}\n\nmodule spout() {\n    // Main spout\n    translate([-body_width/2 - spout_length/2, 0, -body_height/4])\n        rotate([0, 90, 0])\n            cylinder(h=spout_length, r=spout_diameter/2, center=true);\n    \n    // Spout support\n    translate([-body_width/2 - spout_length/4, 0, -body_height/4 - spout_diameter/2 - 5])\n        cube([spout_length/2, 5, 5], center=true);\n}\n\nmodule coffee_container() {\n    // Container rim\n    translate([-body_width/2 - spout_length - 30, 0, -body_height/2 - base_height - leg_height - 20])\n        cylinder(h=5, r=30, center=true);\n    \n    // Container body\n    translate([-body_width/2 - spout_length - 30, 0, -body_height/2 - base_height - leg_height - 35])\n        cylinder(h=25, r1=30, r2=28, center=true);\n}\n\n// Assembly\nunion() {\n    main_body();\n    hopper();\n    base();\n    control_panel();\n    spout();\n    coffee_container();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlepress",
    "openscad_code": "// KettlePress - A compact French-press style electric kettle\n// Overall size: ~110 mm wide Ã— 110 mm deep Ã— 160 mm high\n// 2 mm wall thickness throughout for FDM printing\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Outer cylinder\n        cylinder(h = 110, d = 90, $fn = 64);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n            cylinder(h = 108, d = 86, $fn = 64);\n    }\n}\n\n// Handle\nmodule handle() {\n    // Handle grip\n    translate([50, 0, 60])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 60, d = 20, $fn = 32);\n                translate([0, 0, -1])\n                    cylinder(h = 62, d = 16, $fn = 32);\n            }\n    \n    // Handle mount left\n    translate([45, 0, 85])\n        rotate([0, 90, 0])\n            cube([10, 10, 20], center = true);\n    \n    // Handle mount right\n    translate([45, 0, 35])\n        rotate([0, 90, 0])\n            cube([10, 10, 20], center = true);\n}\n\n// Lid assembly\nmodule lid() {\n    // Lid disk\n    translate([0, 0, 110])\n        difference() {\n            cylinder(h = 5, d = 92, $fn = 64);\n            translate([0, 0, -1])\n                cylinder(h = 7, d = 86, $fn = 64);\n        }\n    \n    // Lid knob\n    translate([0, 0, 118])\n        difference() {\n            cylinder(h = 15, d = 25, $fn = 32);\n            translate([0, 0, -1])\n                cylinder(h = 17, d = 20, $fn = 32);\n        }\n}\n\n// Plunger rod\nmodule plunger_rod() {\n    // Rod\n    translate([0, 0, 125])\n        difference() {\n            cylinder(h = 70, d = 8, $fn = 16);\n            translate([0, 0, -1])\n                cylinder(h = 72, d = 4, $fn = 16);\n        }\n    \n    // Press knob\n    translate([0, 0, 195])\n        difference() {\n            cylinder(h = 10, d = 30, $fn = 32);\n            translate([0, 0, -1])\n                cylinder(h = 12, d = 24, $fn = 32);\n        }\n}\n\n// Plunger mesh disk\nmodule plunger_disk() {\n    translate([0, 0, 120])\n        difference() {\n            // Outer ring\n            cylinder(h = 5, d = 84, $fn = 64);\n            \n            // Remove center\n            translate([0, 0, -1])\n                cylinder(h = 7, d = 78, $fn = 64);\n            \n            // Create mesh pattern\n            for(a = [0:30:330]) {\n                rotate([0, 0, a])\n                    translate([0, 0, 2])\n                        cube([2, 78, 1.5], center = true);\n            }\n            for(a = [0:30:330]) {\n                rotate([0, 0, a])\n                    translate([0, 0, 2])\n                        rotate([0, 0, 90])\n                            cube([2, 78, 1.5], center = true);\n            }\n        }\n}\n\n// Power base\nmodule power_base() {\n    difference() {\n        // Base cylinder\n        cylinder(h = 15, d = 100, $fn = 64);\n        \n        // Wire channel\n        translate([0, -45, -1])\n            cube([15, 20, 17]);\n    }\n    \n    // Feet\n    for(a = [45:90:315]) {\n        rotate([0, 0, a])\n            translate([42, 0, -2])\n                cylinder(h = 3, d = 8, $fn = 16);\n    }\n}\n\n// Power button\nmodule power_button() {\n    translate([-40, -40, 15])\n        difference() {\n            cube([12, 12, 5]);\n            translate([2, 2, -1])\n                cube([8, 8, 7]);\n        }\n}\n\n// Main assembly\nunion() {\n    // Body\n    kettle_body();\n    \n    // Handle\n    handle();\n    \n    // Lid\n    lid();\n    \n    // Plunger assembly\n    plunger_rod();\n    plunger_disk();\n    \n    // Base\n    power_base();\n    \n    // Button\n    power_button();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "zestmax",
    "openscad_code": "// ZestMax Kitchen Blender - Medium Complexity\n// Realistic style with 3D printable features\n// Overall size: ~100mm tall\n\n// Main parameters\nwall_thickness = 2;\nbase_diameter = 60;\nbase_height = 15;\nmotor_housing_diameter = 45;\nmotor_housing_height = 25;\njar_diameter = 40;\njar_height = 50;\njar_wall = 2;\nblade_clearance = 5;\n\n// Base module with rubber feet\nmodule base() {\n    // Main base cylinder\n    difference() {\n        cylinder(h=base_height, d=base_diameter, $fn=64);\n        // Hollow center for weight reduction\n        translate([0, 0, wall_thickness])\n            cylinder(h=base_height, d=base_diameter - 8, $fn=64);\n    }\n    \n    // Rubber feet (4 pieces)\n    for(i=[0:3]) {\n        rotate([0, 0, i*90])\n            translate([base_diameter/2 - 5, 0, -0.1])\n                cylinder(h=3, d=6, $fn=16);\n    }\n    \n    // Ventilation slots\n    for(i=[0:7]) {\n        rotate([0, 0, i*45])\n            translate([base_diameter/2 - 4, 0, base_height/2])\n                cube([8, 1, base_height - 4], center=true);\n    }\n}\n\n// Motor housing with control panel\nmodule motor_housing() {\n    // Main cylinder\n    difference() {\n        cylinder(h=motor_housing_height, d=motor_housing_diameter, $fn=64);\n        // Internal cavity\n        translate([0, 0, wall_thickness])\n            cylinder(h=motor_housing_height, d=motor_housing_diameter - 4, $fn=64);\n    }\n    \n    // Control panel protrusion\n    translate([motor_housing_diameter/2 - 5, 0, motor_housing_height/2])\n        rotate([0, 90, 0])\n            cube([15, 25, 8], center=true);\n    \n    // Buttons (3 speed settings)\n    for(i=[0:2]) {\n        translate([motor_housing_diameter/2 + 3, -8 + i*8, motor_housing_height - 8 - i*5])\n            cube([6, 6, 2]);\n    }\n    \n    // Power button\n    translate([motor_housing_diameter/2 + 3, 10, motor_housing_height - 15])\n        cylinder(h=3, d=8, $fn=32);\n}\n\n// Blender jar with handle\nmodule jar() {\n    // Main jar body\n    difference() {\n        cylinder(h=jar_height, d=jar_diameter, $fn=64);\n        translate([0, 0, jar_wall])\n            cylinder(h=jar_height, d=jar_diameter - 2*jar_wall, $fn=64);\n    }\n    \n    // Jar lid\n    translate([0, 0, jar_height])\n        difference() {\n            cylinder(h=5, d=jar_diameter + 2, $fn=64);\n            translate([0, 0, 2])\n                cylinder(h=5, d=jar_diameter - 2, $fn=64);\n        }\n    \n    // Handle\n    translate([jar_diameter/2 - 3, 0, jar_height/2])\n        rotate([0, 90, 0])\n            difference() {\n                cylinder(h=30, d=12, $fn=32);\n                translate([0, 0, 2])\n                    cylinder(h=30, d=8, $fn=32);\n            }\n    \n    // Pour spout\n    translate([0, jar_diameter/2, jar_height - 10])\n        cube([10, 5, 10], center=true);\n}\n\n// Blade assembly\nmodule blades() {\n    // Central hub\n    cylinder(h=5, d=10, $fn=32);\n    \n    // Blades (4 pieces)\n    for(i=[0:3]) {\n        rotate([0, 0, i*90])\n            translate([0, 5, 2.5])\n                cube([15, 2, 1], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Base at origin\n    base();\n    \n    // Motor housing on base\n    translate([0, 0, base_height])\n        motor_housing();\n    \n    // Jar on motor housing\n    translate([0, 0, base_height + motor_housing_height + blade_clearance])\n        jar();\n    \n    // Blade assembly inside jar\n    translate([0, 0, base_height + motor_housing_height + blade_clearance])\n        blades();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "brewrush",
    "openscad_code": "// Brewrush - Coffee/Tea Brewing Brush appliance\n// 3D printable, medium complexity, realistic style\n\n// Overall dimensions\nbase_w = 85;\nbase_d = 65;\nbase_h = 12;\n\nbody_w = 75;\nbody_d = 55;\nbody_h = 90;\n\nhandle_l = 60;\nhandle_h = 15;\nhandle_w = 12;\n\n$fn = 30;\n\n// Main body\nmodule brewrush_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, base_h/2 + body_h/2])\n            rounded_box(body_w, body_d, body_h, 5);\n        \n        // Inner cavity for electronics\n        translate([0, 0, base_h/2 + body_h/2 + 2])\n            rounded_box(body_w - 4, body_d - 4, body_h - 6, 3);\n    }\n}\n\n// Rounded box helper\nmodule rounded_box(w, d, h, r) {\n    hull() {\n        for(x = [-w/2 + r, w/2 - r])\n            for(y = [-d/2 + r, d/2 - r])\n                translate([x, y, 0])\n                    cylinder(r=r, h=h);\n    }\n}\n\n// Base with feet\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, base_h/2])\n            rounded_box(base_w, base_d, base_h, 3);\n        \n        // Feet holes\n        for(x = [-base_w/2 + 15, base_w/2 - 15])\n            for(y = [-base_d/2 + 15, base_d/2 - 15])\n                translate([x, y, -1])\n                    cylinder(r=4, h=base_h + 2);\n    }\n}\n\n// Brush handle\nmodule handle() {\n    // Main handle\n    translate([body_w/2 + handle_l/2, 0, base_h + body_h/2])\n        rotate([0, -10, 0])\n            rounded_box(handle_l, handle_w, handle_h, 2);\n    \n    // Handle grip\n    translate([body_w/2 + handle_l - 10, 0, base_h + body_h/2])\n        rotate([0, -10, 0])\n            cylinder(r=handle_w/2 - 2, h=handle_h + 2);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, body_d/2 + 2, base_h + body_h - 20])\n        difference() {\n            // Panel base\n            cube([40, 4, 25], center=true);\n            \n            // Buttons\n            for(i = [-1:1]) {\n                translate([i * 12, -1, 0])\n                    cylinder(r=4, h=5);\n            }\n            \n            // LED indicator\n            translate([15, 1, 8])\n                sphere(r=3);\n        }\n}\n\n// Water tank\nmodule water_tank() {\n    translate([-body_w/2 + 15, 0, base_h + body_h/2 + 10])\n        difference() {\n            // Tank body\n            cylinder(r=18, h=50);\n            \n            // Inner cavity\n            cylinder(r=16, h=48);\n            \n            // Fill opening\n            translate([0, 0, 48])\n                cylinder(r=8, h=5);\n        }\n}\n\n// Brush head\nmodule brush_head() {\n    translate([body_w/2 + handle_l + 5, 0, base_h + body_h/2])\n        rotate([0, -10, 0])\n            difference() {\n                // Head base\n                cube([20, 12, 8], center=true);\n                \n                // Bristle holes\n                for(x = [-7:7:14])\n                    for(y = [-3:3:6])\n                        translate([x, y, 4])\n                            cylinder(r=1, h=4);\n            }\n}\n\n// Assembly\nunion() {\n    base();\n    brewrush_body();\n    handle();\n    control_panel();\n    water_tank();\n    brush_head();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "kettlespin",
    "openscad_code": "// Kettlespin Kitchen Appliance (Medium Complexity)\n// A modern electric kettle with rotating base and ergonomic handle\n\n$fn = 32;\n\n// Overall dimensions\nkettle_height = 120;\nkettle_width = 90;\nbase_diameter = 70;\n\n// Wall thickness\nwall_thickness = 2;\n\n// Main kettle body\nmodule kettle_body() {\n    // Main cylindrical body\n    difference() {\n        cylinder(h=kettle_height * 0.7, d=kettle_width, center=false);\n        // Inner cavity\n        translate([0, 0, wall_thickness])\n            cylinder(h=kettle_height * 0.7 - wall_thickness, d=kettle_width - 2*wall_thickness, center=false);\n    }\n}\n\n// Spout\nmodule spout() {\n    translate([kettle_width/2 - 5, 0, kettle_height * 0.5])\n        rotate([0, -30, 0])\n            union() {\n                // Spout neck\n                cylinder(h=25, d1=15, d2=8, center=false);\n                // Spout tip\n                translate([0, 0, 25])\n                    sphere(d=8);\n            }\n}\n\n// Handle\nmodule handle() {\n    translate([-kettle_width/2 - 10, 0, kettle_height * 0.4])\n        rotate([0, 15, 0])\n            difference() {\n                // Handle grip\n                cylinder(h=40, d=12, center=true);\n                // Grip hole\n                cylinder(h=42, d=8, center=true);\n            }\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, kettle_height * 0.7])\n        union() {\n            // Lid disk\n            cylinder(h=wall_thickness * 2, d=kettle_width - 4, center=false);\n            // Lid knob\n            translate([0, 0, wall_thickness * 2])\n                cylinder(h=8, d=15, center=false);\n        }\n}\n\n// Water level indicator\nmodule water_indicator() {\n    translate([kettle_width/2 - 1, 0, kettle_height * 0.2])\n        scale([0.5, 1, 1])\n            difference() {\n                cylinder(h=kettle_height * 0.3, d=20, center=false);\n                // Transparent window\n                translate([0, 0, wall_thickness])\n                    cylinder(h=kettle_height * 0.3 - 2*wall_thickness, d=20 - 2*wall_thickness, center=false);\n            }\n}\n\n// Control buttons\nmodule controls() {\n    translate([-kettle_width/2 - 5, 0, kettle_height * 0.15])\n        for(i = [0:2]) {\n            translate([0, i*12 - 12, 0])\n                union() {\n                    // Button base\n                    cube([8, 8, 3], center=true);\n                    // Button top\n                    translate([0, 0, 2])\n                        cube([6, 6, 2], center=true);\n                }\n        }\n}\n\n// Rotating base\nmodule base() {\n    translate([0, 0, -5])\n        union() {\n            // Base platform\n            cylinder(h=10, d=base_diameter, center=false);\n            // Power connector ring\n            translate([0, 0, 10])\n                cylinder(h=3, d=base_diameter * 0.3, center=false);\n            // Power cord\n            translate([base_diameter/2, 0, 5])\n                rotate([90, 0, 0])\n                    cylinder(h=30, d=8, center=false);\n        }\n}\n\n// Feet for stability\nmodule feet() {\n    for(a = [0:90:270]) {\n        rotate([0, 0, a])\n            translate([base_diameter/2 - 8, 0, 0])\n                cylinder(h=3, d=10, center=false);\n    }\n}\n\n// Main assembly\nunion() {\n    // Kettle components\n    kettle_body();\n    spout();\n    handle();\n    lid();\n    water_indicator();\n    controls();\n    \n    // Base components\n    base();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "juicewave",
    "openscad_code": "// JuiceWave Juicer - 3D Printable Kitchen Appliance (Medium Complexity)\n// Overall dimensions: 120mm x 90mm x 200mm\n\n$fn = 32;\nwall_thickness = 2;\n\n// Main body module\nmodule juicer_base() {\n    // Main housing\n    difference() {\n        // Outer shell\n        rounded_cube([120, 90, 140], 5);\n        \n        // Inner hollow space\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            rounded_cube([120-wall_thickness*2, 90-wall_thickness*2, 140-wall_thickness], 5);\n    }\n    \n    // Bottom feet\n    for(x = [-50, 50])\n        for(y = [-35, 35])\n            translate([x+60, y+45, -3])\n                cylinder(h=5, d1=12, d2=8);\n}\n\n// Rounded cube helper function\nmodule rounded_cube(size, radius) {\n    hull() {\n        for(dx = [0, 1])\n            for(dy = [0, 1])\n                for(dz = [0, 1])\n                    translate([\n                        dx * (size[0] - radius*2) + radius,\n                        dy * (size[1] - radius*2) + radius,\n                        dz * (size[2] - radius*2) + radius\n                    ])\n                        sphere(r=radius);\n    }\n}\n\n// Motor housing top\nmodule motor_housing() {\n    // Main dome\n    translate([60, 45, 140])\n        scale([1, 0.8, 0.7])\n            sphere(d=60);\n    \n    // Cooling vents\n    for(angle = [0:30:330]) {\n        rotate([0, 0, angle])\n            translate([60, 45+30, 160])\n                cube([2, 15, 8], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([110, 45, 100])\n        rotate([0, -15, 0])\n            rounded_cube([15, 60, 30], 3);\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([112, 30+i*15, 100])\n            cylinder(h=3, d=8);\n    }\n    \n    // LED indicator\n    translate([112, 60, 100])\n        sphere(d=6);\n}\n\n// Juice container\nmodule juice_container() {\n    // Main pitcher\n    translate([60, 45, 50])\n        difference() {\n            // Outer\n            cylinder(h=80, d=65);\n            // Inner\n            translate([0, 0, wall_thickness])\n                cylinder(h=80-wall_thickness, d=65-wall_thickness*2);\n        }\n    \n    // Handle\n    translate([60+32.5+10, 45, 90])\n        rotate([0, 90, 0])\n            difference() {\n                torus(ri=6, ro=25);\n                translate([0, -25, 0])\n                    cube([50, 50, 12], center=true);\n            }\n    \n    // Spout\n    translate([60, 45-32.5-10, 90])\n        rotate([0, 0, 90])\n            difference() {\n                cylinder(h=20, d=30);\n                translate([0, -10, 0])\n                    cube([40, 20, 30], center=true);\n            }\n}\n\n// Torus helper module\nmodule torus(ri, ro) {\n    rotate_extrude()\n        translate([ro, 0, 0])\n            circle(r=ri);\n}\n\n// Feeding chute\nmodule feeding_chute() {\n    // Main tube\n    translate([60, 45+30, 200])\n        cylinder(h=40, d=60);\n    \n    // Safety pusher\n    translate([60, 45+30, 240])\n        cylinder(h=60, d1=58, d2=55);\n    \n    // Chute lid\n    translate([60, 45+30, 245])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=5, d=70);\n                translate([0, 0, -1])\n                    cylinder(h=7, d=55);\n            }\n}\n\n// Power cord\nmodule power_cord() {\n    // Cable exit\n    translate([5, 45, 20])\n        rotate([0, 90, 0])\n            cylinder(h=15, d=8);\n    \n    // Cable\n    hull() {\n        translate([5, 45, 20])\n            sphere(d=8);\n        translate([-50, 45, 20])\n            sphere(d=8);\n    }\n}\n\n// Assembly\nunion() {\n    juicer_base();\n    motor_housing();\n    control_panel();\n    juice_container();\n    feeding_chute();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "heater",
    "openscad_code": "// Compact 3D-printable kitchen space heater\n// Approx. 120 mm tall, 100 mm deep, 80 mm wide\n// All walls 2 mm thick, no steep overhangs\n\n$fn = 32;\n\nmodule heater_body() {\n    difference() {\n        // Main enclosure\n        cube([80, 100, 120], center = true);\n\n        // Hollow cavity\n        translate([0, 0, 2])\n            cube([76, 96, 114], center = true);\n    }\n}\n\nmodule front_panel() {\n    translate([41, 0, 30]) {\n        // Control panel plate\n        cube([2, 60, 40], center = true);\n\n        // Rotary thermostat knob\n        translate([1, 0, 15])\n            rotate([90, 0, 0])\n            cylinder(h = 6, d = 16, center = true);\n\n        // Indicator light\n        translate([1, 20, -10])\n            sphere(d = 6);\n    }\n}\n\nmodule air_outlet() {\n    translate([0, 0, 45]) {\n        // Outer frame\n        difference() {\n            cube([76, 8, 50], center = true);\n            translate([0, 1, 0])\n                cube([72, 6, 46], center = true);\n        }\n\n        // Horizontal louvers\n        for (z = [-20:10:20]) {\n            translate([0, 0, z])\n                cube([70, 1, 2], center = true);\n        }\n    }\n}\n\nmodule air_inlet() {\n    translate([0, 0, -45]) {\n        // Outer frame\n        difference() {\n            cube([76, 8, 50], center = true);\n            translate([0, -1, 0])\n                cube([72, 6, 46], center = true);\n        }\n\n        // Perforated grid\n        for (x = [-30:6:30])\n            for (y = [-20:6:20])\n                translate([x, 0, y])\n                    cylinder(h = 2, d = 3, center = true);\n    }\n}\n\nmodule feet() {\n    for (pos = [[-28, 38, -61], [28, 38, -61], [-28, -38, -61], [28, -38, -61]])\n        translate(pos)\n            cylinder(h = 6, d = 12, center = true);\n}\n\nmodule handle() {\n    translate([0, 55, 50]) {\n        difference() {\n            // Handle arch\n            rotate([90, 0, 0])\n                cylinder(h = 60, d = 12, center = true);\n\n            // Hollow grip\n            rotate([90, 0, 0])\n                cylinder(h = 65, d = 8, center = true);\n        }\n\n        // Side supports\n        translate([-30, 0, 0])\n            cube([12, 12, 30], center = true);\n        translate([30, 0, 0])\n            cube([12, 12, 30], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    heater_body();\n    front_panel();\n    air_outlet();\n    air_inlet();\n    feet();\n    handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "radiator",
    "openscad_code": "// Radiator kitchen appliance - OpenSCAD\n// Medium complexity, realistic style, 3D printable\n\n$fn = 32;\n\n// Main dimensions\nradiator_width = 80;\nradiator_height = 60;\nradiator_depth = 20;\nwall_thickness = 2;\n\n// Fin dimensions\nfin_count = 11;\nfin_thickness = 1.5;\nfin_gap = 4;\n\n// Feet dimensions\nfoot_height = 8;\nfoot_width = 6;\n\n// Control knob\nknob_diameter = 6;\nknob_height = 4;\n\n// Side panel thickness\npanel_thickness = 3;\n\n// Base plate\nmodule base_plate() {\n    difference() {\n        // Main base\n        translate([0, 0, foot_height/2])\n            cube([radiator_width + 4, radiator_depth + 4, wall_thickness], center=true);\n        \n        // Mounting holes\n        for (x = [-radiator_width/2 + 10, radiator_width/2 - 10])\n            translate([x, 0, foot_height/2])\n                cylinder(h=wall_thickness+1, r=1.5, center=true);\n    }\n}\n\n// Heating fins\nmodule heating_fins() {\n    for (i = [0:fin_count-1]) {\n        translate([\n            -radiator_width/2 + 2 + i * (fin_thickness + fin_gap),\n            0,\n            radiator_height/2\n        ])\n            cube([fin_thickness, radiator_depth - 4, radiator_height - 4], center=true);\n    }\n}\n\n// Top cross braces\nmodule top_braces() {\n    for (y = [-radiator_depth/2 + 5, radiator_depth/2 - 5]) {\n        translate([0, y, radiator_height - 2])\n            cube([radiator_width - 4, wall_thickness, wall_thickness], center=true);\n    }\n}\n\n// Side panels\nmodule side_panels() {\n    // Left panel\n    translate([-radiator_width/2 - panel_thickness/2, 0, radiator_height/2])\n        cube([panel_thickness, radiator_depth, radiator_height - 4], center=true);\n    \n    // Right panel\n    translate([radiator_width/2 + panel_thickness/2, 0, radiator_height/2])\n        cube([panel_thickness, radiator_depth, radiator_height - 4], center=true);\n}\n\n// Front panel with control knob\nmodule front_panel() {\n    // Panel\n    translate([0, radiator_depth/2 + 1, radiator_height/2 - 8])\n        cube([radiator_width - 10, 2, 16], center=true);\n    \n    // Control knob\n    translate([radiator_width/2 - 15, radiator_depth/2 + 2.5, radiator_height/2 - 8])\n        rotate([90, 0, 0])\n            cylinder(h=knob_height, r=knob_diameter/2, center=true);\n}\n\n// Feet\nmodule feet() {\n    for (x = [-radiator_width/2 + 15, radiator_width/2 - 15]) {\n        // Front foot\n        translate([x, radiator_depth/2 - foot_width/2, foot_height/2])\n            cube([foot_width, foot_width, foot_height], center=true);\n        \n        // Back foot\n        translate([x, -radiator_depth/2 + foot_width/2, foot_height/2])\n            cube([foot_width, foot_width, foot_height], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Base components\n    base_plate();\n    feet();\n    \n    // Main body\n    translate([0, 0, foot_height + wall_thickness/2])\n        cube([radiator_width, radiator_depth, wall_thickness], center=true);\n    \n    // Heating elements\n    heating_fins();\n    top_braces();\n    \n    // Structural panels\n    side_panels();\n    \n    // Controls\n    front_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "furnace",
    "openscad_code": "// OpenSCAD Furnace Kitchen Appliance (Medium Complexity, Realistic Style)\n// Approximate overall size: 80 mm wide x 70 mm deep x 100 mm high\n// Wall thickness is 2 mm throughout for 3D-printability\n\n$fn = 36;   // Smooth curves\n\nmodule furnace() {\n    difference() {\n        // Main body shell\n        translate([0, 0, 50])\n            cube([80, 70, 100], center=true);\n\n        // Hollow interior\n        translate([0, 0, 51])\n            cube([76, 66, 96], center=true);\n    }\n\n    // Base plinth\n    translate([0, 0, 4])\n        cube([84, 74, 8], center=true);\n\n    // Front door\n    translate([0, 37, 50])\n        rotate([0, 0, 0])\n        difference() {\n            cube([74, 2, 94], center=true);   // door panel\n            translate([0, 0, 35])             // window cut-out\n                cube([50, 2.2, 40], center=true);\n        }\n\n    // Window glass (thin inset)\n    translate([0, 36.5, 50])\n        color(\"lightblue\", 0.6)\n        cube([48, 1, 38], center=true);\n\n    // Door handle bar\n    translate([25, 38, 50])\n        rotate([90, 0, 0])\n        cylinder(h=40, d=4, center=true);\n\n    // Control panel top\n    translate([0, 0, 101])\n        cube([80, 70, 6], center=true);\n\n    // Control knobs\n    for (x = [-30, -15, 0, 15, 30])\n        translate([x, 0, 104])\n            cylinder(h=6, d=8, center=true);\n\n    // Ventilation slots on sides\n    for (h = [20, 35, 50, 65, 80]) {\n        translate([-41, 0, h])\n            cube([2, 60, 8], center=true);\n    }\n\n    // Feet\n    module foot() {\n        translate([0, 0, -2])\n        cylinder(h=4, d=8, center=true);\n    }\n\n    translate([35, 30, 0]) foot();\n    translate([-35, 30, 0]) foot();\n    translate([35, -30, 0]) foot();\n    translate([-35, -30, 0]) foot();\n\n    // Rear connection box (simulated utility housing)\n    translate([0, -40, 60])\n        cube([50, 12, 30], center=true);\n}\n\n// Render the furnace\nfurnace();",
    "renders": true
  },
  {
    "kitchen_appliance": "boiler",
    "openscad_code": "// Electric kettle / boiler - realistic style, medium complexity\n// Approx. 110 mm tall, 90 mm wide, 140 mm deep â€“ fits on most FDM beds\n\n$fa = 2; $fs = 0.5;\n\n// Overall dimensions\nkettle_h = 110;\nkettle_w = 90;\nkettle_d = 140;\n\n// Wall thickness for 3D printing\nwall = 2;\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Outer shell â€“ slightly curved sides\n        hull() {\n            translate([0, 0, 0])\n                cylinder(h = kettle_h, d1 = kettle_w, d2 = kettle_w - 8, $fn = 48);\n            translate([0, 0, kettle_h])\n                cylinder(h = 2, d = kettle_w - 8, $fn = 48);\n        }\n\n        // Hollow inside\n        translate([0, 0, wall])\n            cylinder(h = kettle_h - wall, d1 = kettle_w - 2 * wall, d2 = kettle_w - 8 - 2 * wall, $fn = 48);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Lid disc\n        translate([0, 0, kettle_h + 1])\n            cylinder(h = 4, d = kettle_w - 8, $fn = 48);\n\n        // Small vent holes\n        for (a = [0:120:359])\n            rotate([0, 0, a])\n                translate([kettle_w / 2 - 12, 0, kettle_h + 1])\n                    cylinder(h = 5, d = 2, $fn = 8);\n    }\n\n    // Lid knob / handle\n    translate([0, 0, kettle_h + 6])\n        cylinder(h = 12, d1 = 12, d2 = 8, $fn = 24);\n}\n\n// Spout\nmodule spout() {\n    translate([kettle_w / 2 - 5, 0, 70])\n        rotate([90, 0, 0])\n            difference() {\n                // Outer cone\n                cylinder(h = 35, d1 = 20, d2 = 8, $fn = 32);\n\n                // Inner bore\n                translate([0, 0, wall])\n                    cylinder(h = 35, d1 = 20 - 2 * wall, d2 = 8 - 2 * wall, $fn = 32);\n            }\n}\n\n// Handle\nmodule handle() {\n    // Attach points\n    translate([-kettle_w / 2 + 6, 0, 30])\n        sphere(d = 10, $fn = 16);\n    translate([-kettle_w / 2 + 6, 0, 80])\n        sphere(d = 10, $fn = 16);\n\n    // Grip\n    hull() {\n        translate([-kettle_w / 2 - 15, 0, 30])\n            sphere(d = 8, $fn = 16);\n        translate([-kettle_w / 2 - 15, 0, 80])\n            sphere(d = 8, $fn = 16);\n    }\n}\n\n// Base with power connector\nmodule base() {\n    difference() {\n        // Base plate\n        translate([0, 0, -2])\n            cube([kettle_w + 10, kettle_d + 10, 4], center = true);\n\n        // Cable recess\n        translate([0, kettle_d / 2 + 2, -2])\n            cube([20, 10, 8], center = true);\n    }\n\n    // Central ring contact\n    translate([0, 0, -1])\n        cylinder(h = 2, d = 30, $fn = 48);\n}\n\n// Control panel (buttons, LEDs)\nmodule controls() {\n    // Panel plate on side\n    translate([0, kettle_d / 2 + 1, 50])\n        rotate([90, 0, 0])\n            cube([40, 15, 2], center = true);\n\n    // On/off button\n    translate([0, kettle_d / 2 + 3, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 3, d = 8, $fn = 24);\n\n    // Indicator LEDs\n    for (i = [-1, 1])\n        translate([i * 12, kettle_d / 2 + 3, 50])\n            rotate([90, 0, 0])\n                cylinder(h = 1.5, d = 4, $fn = 12);\n}\n\n// Water-level window\nmodule water_window() {\n    translate([kettle_w / 2 - 1, 0, 40])\n        cube([2, 40, 40], center = true);\n}\n\n// Assembly\nunion() {\n    kettle_body();\n    lid();\n    spout();\n    handle();\n    base();\n    controls();\n    water_window();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "bainmarie",
    "openscad_code": "// Bain-marie kitchen appliance â€“ medium-complexity realistic style\n// 3D-printable, ~100 mm wide\n\n$fn = 36;     // smooth curves\n\n// overall scale\nscale = 1;    // 1:1 gives ~100 mm\n\nmodule bainMarie(){\n    // main body shell\n    difference(){\n        // outer rounded box\n        translate([0,0,15])\n        minkowski(){\n            cube([100,60,30], center=true);\n            sphere(3);\n        }\n        // hollow interior\n        translate([0,0,15])\n        minkowski(){\n            cube([96,56,26], center=true);\n            sphere(2);\n        }\n    }\n\n    // top rim lip\n    translate([0,0,30])\n    difference(){\n        cube([102,62,4], center=true);\n        cube([98,58,4], center=true);\n    }\n\n    // front control panel\n    translate([-51,0,15])\n    rotate([0,90,0])\n    cylinder(h=20, d=40);\n\n    // control knobs\n    for(y = [-15, 0, 15]){\n        translate([-55,y,15])\n        rotate([0,90,0])\n        cylinder(h=8, d1=6, d2=4);\n    }\n\n    // water bath cavity\n    translate([0,0,14])\n    difference(){\n        cylinder(h=28, d=90);\n        // leave 2 mm wall thickness\n        cylinder(h=30, d=86);\n    }\n\n    // GN 1/3 dish (half-length) insert\n    color(\"silver\")\n    translate([0,0,16])\n    difference(){\n        // outside\n        translate([0,0,0])\n        cube([85,55,20], center=true);\n        // inside\n        translate([0,0,-1])\n        cube([81,51,22], center=true);\n    }\n\n    // handles left & right\n    for(x = [-55, 55]){\n        translate([x,0,15])\n        rotate([0,90,0])\n        difference(){\n            cylinder(h=25, d=12);\n            cylinder(h=26, d=8);\n        }\n    }\n\n    // feet\n    for(x = [-45, 45])\n    for(y = [-25, 25]){\n        translate([x,y,-3])\n        cylinder(h=6, d=10);\n    }\n}\n\nbainMarie();",
    "renders": true
  },
  {
    "kitchen_appliance": "arcticvault",
    "openscad_code": "// ArcticVault Kitchen Appliance - Medium Complexity\n// A compact food-storage freezer unit with realistic proportions\n\n// Overall dimensions\n$fn=32;\nlength = 90;\nwidth = 70;\nheight = 110;\n\n// Wall thickness\nwall = 2;\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([length, width, height], center=true);\n        \n        // Hollow interior\n        translate([0,0,wall])\n            cube([length-2*wall, width-2*wall, height-2*wall], center=true);\n    }\n}\n\n// Door\nmodule door() {\n    difference() {\n        // Door panel\n        translate([0, -width/2 - wall/2, 0])\n            cube([length-2*wall, wall, height-2*wall], center=true);\n        \n        // Handle recess\n        translate([length/2 - 15, -width/2 - wall/2 - 0.1, 0])\n            cube([20, wall+0.2, 10], center=true);\n    }\n    \n    // Handle\n    translate([length/2 - 15, -width/2 - wall - 5, 0])\n        rotate([90,0,0])\n            cylinder(h=10, d=8);\n}\n\n// Condenser coils on back\nmodule coils() {\n    for(i=[-length/2+10:length/10:length/2-10]) {\n        translate([i, width/2 + 2, -height/2+20])\n            rotate([90,0,0])\n                cylinder(h=20, d=4);\n    }\n}\n\n// Adjustable feet\nmodule feet() {\n    for(x=[-length/2+15, length/2-15])\n        for(y=[-width/2+15, width/2-15])\n            translate([x, y, -height/2-5])\n                cylinder(h=10, d1=10, d2=8);\n}\n\n// Control panel\nmodule controls() {\n    // Panel base\n    translate([0, -width/2 - 2, height/2 - 15])\n        cube([length-20, 4, 10], center=true);\n    \n    // Temperature dial\n    translate([-length/4, -width/2 - 4.1, height/2 - 10])\n        rotate([90,0,0])\n            cylinder(h=6, d=12);\n    \n    // LED indicator\n    translate([length/4, -width/2 - 4.1, height/2 - 10])\n        sphere(d=6);\n}\n\n// Ventilation slots\nmodule vents() {\n    for(i=[-height/2+30:10:height/2-20]) {\n        translate([length/2+0.1, 0, i])\n            cube([0.1, width-20, 2]);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    door();\n    coils();\n    feet();\n    controls();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frosthive",
    "openscad_code": "// Frosthive Kitchen Appliance - Realistic Style, Medium Complexity\n// A compact countertop frosthive freezer unit\n\n// Overall dimensions\nunit_width = 80;\nunit_depth = 60;\nunit_height = 100;\nwall_thickness = 2;\n\n// Main body shell\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([unit_width, unit_depth, unit_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness])\n        cube([unit_width-wall_thickness*2, unit_depth-wall_thickness*2, unit_height-wall_thickness*2], center=true);\n    }\n}\n\n// Front door with handle\nmodule door() {\n    door_thickness = 3;\n    door_gap = 1;\n    \n    translate([0, unit_depth/2 - door_thickness/2 + door_gap, 0])\n    difference() {\n        // Door panel\n        cube([unit_width-wall_thickness*2, door_thickness, unit_height-wall_thickness*2], center=true);\n        \n        // Window\n        translate([0, 0, 10])\n        cube([unit_width-wall_thickness*6, door_thickness+1, unit_height-wall_thickness*6-20], center=true);\n    }\n}\n\n// Door handle\nmodule handle() {\n    handle_width = 30;\n    handle_diameter = 6;\n    \n    translate([unit_width/2 - 10, unit_depth/2 + 3, 0])\n    rotate([90, 0, 0])\n    cylinder(h=handle_width, d=handle_diameter, center=true);\n}\n\n// Control panel with buttons\nmodule control_panel() {\n    panel_width = 40;\n    panel_height = 20;\n    panel_depth = 2;\n    \n    translate([unit_width/2 - panel_width/2 - 5, -unit_depth/2 + panel_depth, unit_height/2 - panel_height - 5])\n    cube([panel_width, panel_depth, panel_height]);\n    \n    // Buttons\n    for(i=[0:2]) {\n        translate([unit_width/2 - 15 - i*8, -unit_depth/2 + panel_depth + 1, unit_height/2 - 12])\n        cylinder(h=2, d=4, $fn=16);\n    }\n}\n\n// Ventilation grill\nmodule vents() {\n    vent_width = 50;\n    vent_height = 8;\n    \n    translate([0, unit_depth/2 - 1, -unit_height/2 + 10])\n    for(i=[0:5]) {\n        translate([-vent_width/2 + i*8 + 4, 0, 0])\n        cube([6, wall_thickness, vent_height]);\n    }\n}\n\n// Feet\nmodule feet() {\n    foot_size = 5;\n    foot_height = 4;\n    \n    for(x=[-1, 1]) {\n        for(y=[-1, 1]) {\n            translate([x*unit_width/3, y*unit_depth/3, -unit_height/2 - foot_height/2])\n            cylinder(h=foot_height, d=foot_size, $fn=16);\n        }\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    cord_radius = 2;\n    \n    translate([-unit_width/2 - 5, unit_depth/4, -unit_height/2 + 10])\n    rotate([90, 0, 90])\n    cylinder(h=15, r=cord_radius, $fn=8);\n}\n\n// Assemble all parts\nunion() {\n    main_body();\n    door();\n    handle();\n    control_panel();\n    vents();\n    feet();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chillcore",
    "openscad_code": "// ChillCore Counter-top Ice Maker\n// Realistic style, medium complexity, printable with no overhangs\n\n$fn = 32;  // smooth curves\nwall = 2;  // 2 mm shell thickness\n\n// overall proportions\nbody_w = 80;\nbody_d = 90;\nbody_h = 110;\n\nmodule shell() {\n    difference() {\n        // outer shell\n        cube([body_w, body_d, body_h], center = true);\n        // hollow cavity\n        translate([0, 0, -wall])\n            cube([body_w - 2*wall, body_d - 2*wall, body_h - wall], center = true);\n    }\n}\n\nmodule base() {\n    // bottom stand with vents\n    translate([0, 0, -body_h/2 - 3])\n        difference() {\n            cube([body_w + 4, body_d + 4, 6], center = true);\n            // vent slots\n            for(y = [-30:10:30])\n                translate([0, y, 0])\n                    cube([body_w + 8, 4, 7], center = true);\n        }\n}\n\nmodule control_panel() {\n    // top panel with buttons and display\n    translate([0, body_d/2 - 8, body_h/2 - 12])\n        difference() {\n            cube([body_w - 10, 16, 12], center = true);\n            // display recess\n            translate([0, 0, 3])\n                cube([body_w - 20, 12, 1], center = true);\n        }\n    \n    // three push buttons\n    for(x = [-20, 0, 20])\n        translate([x, body_d/2 - 8, body_h/2 - 6])\n            cylinder(h = 2, r = 4, center = true);\n    \n    // small power LED\n    translate([body_w/2 - 8, body_d/2 - 8, body_h/2 - 3])\n        cylinder(h = 1, r = 2, center = true);\n}\n\nmodule ice_bin() {\n    // removable ice basket\n    translate([0, -body_d/4, -body_h/4])\n        difference() {\n            // bin body\n            cube([body_w - 10, body_d/2, body_h/2], center = true);\n            // thin wall\n            translate([0, 0, 2])\n                cube([body_w - 10 - 2*wall, body_d/2 - 2*wall, body_h/2 - wall], center = true);\n        }\n    \n    // handle bar\n    translate([0, -body_d/4 - body_d/4 - 2, -body_h/4])\n        rotate([90, 0, 0])\n            cylinder(h = body_w - 10, r = 3, center = true);\n}\n\nmodule lid() {\n    // top flip-up lid\n    translate([0, -body_d/2 + 4, body_h/2 - 2])\n        rotate([90, 0, 0])\n        difference() {\n            cylinder(h = body_d - 10, r1 = body_w/2 - 5, r2 = body_w/2 - 5, center = true);\n            // inner recess\n            cylinder(h = body_d - 12, r1 = body_w/2 - 7, r2 = body_w/2 - 7, center = true);\n        }\n    \n    // lid handle ridge\n    translate([0, -body_d/2 + 2, body_h/2 + 15])\n        cube([body_w/3, 6, 4], center = true);\n}\n\nmodule water_tank() {\n    // rear water reservoir\n    translate([0, body_d/2 - 8, body_h/4])\n        difference() {\n            cube([body_w - 20, 12, body_h/2], center = true);\n            // inner tank cavity\n            translate([0, 0, 2])\n                cube([body_w - 20 - 2*wall, 12 - 2*wall, body_h/2 - wall], center = true);\n        }\n}\n\n// assembly\nunion() {\n    base();\n    shell();\n    control_panel();\n    ice_bin();\n    lid();\n    water_tank();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "glacierbin",
    "openscad_code": "// GlacierBin Kitchen Appliance - Medium Complexity\n// A compact countertop ice storage bin with realistic styling\n\n// Overall dimensions (mm)\nbin_width = 100;\nbin_depth = 80;\nbin_height = 120;\nwall_thickness = 2.5;\n\n// Main body module\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([bin_width, bin_depth, bin_height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, wall_thickness/2])\n        cube([bin_width-wall_thickness*2, bin_depth-wall_thickness*2, bin_height-wall_thickness], center=true);\n    }\n}\n\n// Curved top lid\nmodule curved_lid() {\n    difference() {\n        // Main lid shape\n        translate([0, 0, bin_height/2-2])\n        scale([1, 0.9, 0.3])\n        sphere(d=bin_width);\n        \n        // Flatten bottom\n        translate([0, 0, -5])\n        cube([bin_width, bin_depth, 20], center=true);\n        \n        // Handle cutout\n        translate([0, 0, -2])\n        cube([50, 30, 10], center=true);\n    }\n}\n\n// Handle on lid\nmodule lid_handle() {\n    translate([0, 0, bin_height/2+12])\n    difference() {\n        // Handle base\n        cube([50, 25, 8], center=true);\n        \n        // Grip hole\n        translate([0, 0, -1])\n        cube([40, 15, 10], center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Base panel\n    translate([bin_width/2-wall_thickness/2, 0, 0])\n    rotate([0, 90, 0])\n    cube([40, 25, wall_thickness], center=true);\n    \n    // Power button\n    for(i = [-1, 1]) {\n        translate([bin_width/2+1, i*8, 10])\n        rotate([0, 90, 0])\n        cylinder(h=wall_thickness+0.5, d=6, center=true);\n    }\n    \n    // LED indicator\n    translate([bin_width/2+1, 0, -10])\n    rotate([0, 90, 0])\n    cylinder(h=wall_thickness+0.5, d=4, center=true);\n}\n\n// Base with feet\nmodule base_with_feet() {\n    // Base platform\n    translate([0, 0, -bin_height/2-5])\n    cube([bin_width+4, bin_depth+4, 5], center=true);\n    \n    // Feet (4 corners)\n    for(x = [-1, 1])\n    for(y = [-1, 1]) {\n        translate([x*(bin_width/2-10), y*(bin_depth/2-10), -bin_height/2-7.5])\n        cylinder(h=5, d=8, center=true);\n    }\n}\n\n// Hinge detail\nmodule hinges() {\n    for(x = [-30, 30]) {\n        // Fixed part\n        translate([x, bin_depth/2-2, bin_height/2-10])\n        rotate([90, 0, 0])\n        cylinder(h=8, d=6);\n        \n        // Rotating part\n        translate([x, bin_depth/2-2, bin_height/2-10])\n        rotate([90, 0, 0])\n        cylinder(h=8, d=4);\n    }\n}\n\n// Drain spout\nmodule drain_spout() {\n    translate([-bin_width/2-8, 0, -bin_height/2+20])\n    rotate([0, 0, 45])\n    difference() {\n        // Spout body\n        cylinder(h=15, d=12);\n        \n        // Drain hole\n        translate([0, 0, -1])\n        cylinder(h=17, d=6);\n    }\n}\n\n// Assembly\nunion() {\n    // Main components\n    main_body();\n    curved_lid();\n    lid_handle();\n    base_with_feet();\n    \n    // Details\n    control_panel();\n    hinges();\n    drain_spout();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icenest",
    "openscad_code": "// IceNest â€“ a compact, 3D-printable ice-cube tray / dispenser\n// Overall footprint 100 x 80 x 110 mm (fits most home FDM printers)\n\n$fn = 36;\n\n// ---------- PARAMETERS ----------\nwall = 2;           // uniform 2 mm shell thickness\nbase_h = 15;        // pedestal height\nbody_w = 80;        // main body width\nbody_d = 60;        // main body depth\nbody_h = 70;        // main body height\nlid_h  = 20;        // lid height\nbutton_r = 6;       // eject button radius\ncube_cnt = 6;       // number of cube columns\ncube_w   = 10;      // single ice-cube width\ncube_gap = 3;       // gap between cubes\nhandle_len = 40;    // lid handle length\nhandle_d   = 8;\n\n// ---------- MAIN ASSEMBLY ----------\ndifference() {\n    union() {\n        base();\n        body();\n        lid();\n    }\n    // hollow the body and base\n    translate([0, 0, base_h + wall])\n    cube([body_w - 2*wall, body_d - 2*wall, body_h - wall], center = true);\n    translate([0, 0, wall])\n    cube([body_w - 2*wall, body_d - 2*wall, base_h - wall], center = true);\n}\n\n// ---------- MODULES ----------\n\nmodule base() {\n    // pedestal with rounded edges\n    difference() {\n        minkowski() {\n            cube([body_w, body_d, base_h], center = true);\n            sphere(r = wall);\n        }\n        translate([0, 0, -base_h/2 - 1])\n        cube([body_w - 2*wall, body_d - 2*wall, base_h + 2], center = true);\n    }\n}\n\nmodule body() {\n    // main container block\n    translate([0, 0, base_h + body_h/2])\n    difference() {\n        cube([body_w, body_d, body_h], center = true);\n        // ice-cube cavities\n        for (i = [0 : cube_cnt - 1]) {\n            translate([-body_w/2 + wall + cube_w/2 + i*(cube_w + cube_gap),\n                       0,\n                       base_h + body_h - wall - cube_w/2])\n            cube([cube_w, body_d - 2*wall, cube_w], center = true);\n        }\n        // eject button hole\n        translate([body_w/2 - wall - button_r - 3,\n                   0,\n                   base_h + body_h/2])\n        rotate([90, 0, 0])\n        cylinder(r = button_r, h = wall + 2, center = true);\n    }\n    // eject button\n    translate([body_w/2 - wall - button_r - 3,\n               0,\n               base_h + body_h/2 + button_r])\n    rotate([90, 0, 0])\n    cylinder(r1 = button_r, r2 = button_r + 1, h = 8, center = true);\n}\n\nmodule lid() {\n    // hinged lid\n    translate([0, 0, base_h + body_h + lid_h/2])\n    difference() {\n        cube([body_w, body_d, lid_h], center = true);\n        // inner clearance\n        translate([0, 0, -1])\n        cube([body_w - 2*wall, body_d - 2*wall, lid_h + 2], center = true);\n    }\n    // lid handle\n    translate([0, body_d/2 + handle_len/2 + wall, base_h + body_h + lid_h/2])\n    rotate([90, 0, 0])\n    cylinder(h = handle_len, r = handle_d/2, center = true);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "polarchest",
    "openscad_code": "// PolarChest Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 80mm(W) x 60mm(D) x 120mm(H)\n\n// Main appliance body\nmodule appliance_body() {\n    // Main housing with rounded edges\n    difference() {\n        // Outer shell\n        minkowski() {\n            cube([76, 56, 116], center=true);\n            sphere(2);\n        }\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        minkowski() {\n            cube([72, 52, 112], center=true);\n            sphere(1.5);\n        }\n    }\n}\n\n// Front door with handle\nmodule door() {\n    translate([0, 29, 0])\n    rotate([0, 0, 0])\n    difference() {\n        // Door panel\n        cube([70, 2, 80], center=true);\n        \n        // Window\n        translate([0, 1, 20])\n        cube([50, 1, 40], center=true);\n    }\n    \n    // Door handle\n    translate([25, 31, 0])\n    cylinder(h=2, r=2, $fn=16);\n    translate([-25, 31, 0])\n    cylinder(h=2, r=2, $fn=16);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, -29, 30])\n    difference() {\n        // Panel base\n        cube([60, 2, 30], center=true);\n        \n        // Display screen\n        translate([0, 1, 10])\n        cube([40, 1, 15], center=true);\n    }\n    \n    // Buttons\n    for(i=[-20:10:20]) {\n        translate([i, -28, 15])\n        cylinder(h=1, r=2, $fn=8);\n    }\n    \n    // Dial\n    translate([30, -28, 5])\n    cylinder(h=1, r=4, $fn=32);\n}\n\n// Internal compartments\nmodule compartments() {\n    // Lower compartment divider\n    translate([0, 0, -30])\n    cube([70, 54, 1], center=true);\n    \n    // Upper compartment divider\n    translate([0, 0, 20])\n    cube([70, 54, 1], center=true);\n    \n    // Side supports\n    for(side=[-1,1]) {\n        translate([side*35, 0, 0])\n        cube([2, 52, 110], center=true);\n    }\n}\n\n// Hinges\nmodule hinges() {\n    for(z=[-30, 30]) {\n        translate([38, 28, z])\n        rotate([90, 0, 0])\n        cylinder(h=4, r=2, $fn=12);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x=[-30, 30])\n    for(y=[-20, 20]) {\n        translate([x, y, -60])\n        cylinder(h=4, r=3, $fn=8);\n    }\n}\n\n// Ventilation grilles\nmodule vents() {\n    // Side vents\n    for(side=[-1,1]) {\n        for(i=[-30:5:30]) {\n            translate([side*39, i, -40])\n            cube([2, 3, 1], center=true);\n        }\n    }\n    \n    // Back vents\n    for(i=[-30:8:30]) {\n        translate([i, -29, -40])\n        cube([3, 2, 1], center=true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-38, 0, -50])\n    rotate([90, 0, 0])\n    cylinder(h=15, r=1.5, $fn=8);\n}\n\n// Main assembly\nunion() {\n    appliance_body();\n    door();\n    control_panel();\n    compartments();\n    hinges();\n    feet();\n    vents();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzerolocker",
    "openscad_code": "// SubZeroLocker Kitchen Appliance - Medium Complexity Realistic Style\n// Overall dimensions: 120mm (H) x 80mm (W) x 70mm (D)\n\n$fn = 32;\n\n// Main body\nmodule body() {\n    difference() {\n        // Main shell with rounded corners\n        minkowski() {\n            cube([76, 76, 116], center = true);\n            sphere(2);\n        }\n        \n        // Hollow interior\n        translate([0, 0, -2])\n            cube([72, 72, 110], center = true);\n    }\n}\n\n// Door\nmodule door() {\n    translate([-38, 0, 0])\n    rotate([0, 90, 0])\n    difference() {\n        // Door panel\n        cube([74, 76, 4]);\n        \n        // Window\n        translate([20, 8, -1])\n            cube([34, 60, 6]);\n    }\n}\n\n// Handle\nmodule handle() {\n    translate([-39, -30, 20])\n    rotate([0, 90, 0])\n    difference() {\n        // Handle bar\n        cylinder(h = 60, r1 = 2.5, r2 = 2.5);\n        \n        // Mounting holes\n        for(i = [0, 1]) {\n            translate([0, 10 + i * 40, 0])\n                rotate([90, 0, 0])\n                cylinder(h = 10, r = 1.5);\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, 39, 50])\n    difference() {\n        // Panel base\n        cube([20, 2, 30]);\n        \n        // Display recess\n        translate([0, -1, 10])\n            cube([16, 4, 12]);\n    }\n    \n    // Display\n    translate([0, 40, 56])\n        cube([14, 0.5, 10]);\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([-6 + i * 6, 40.5, 40 - i * 6])\n            cylinder(h = 1, r = 2);\n    }\n}\n\n// Ventilation grille\nmodule grille() {\n    translate([30, 39, -40])\n    for(i = [0:9]) {\n        translate([0, 0, i * 4])\n            cube([30, 2, 1.5]);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-30, 30])\n    for(z = [-30, 30]) {\n        translate([x, -39, z])\n            cylinder(h = 4, r1 = 3, r2 = 2);\n    }\n}\n\n// Internal shelf\nmodule shelf() {\n    for(i = [0:2]) {\n        translate([0, 0, -40 + i * 35])\n            cube([60, 60, 2]);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    door();\n    handle();\n    control_panel();\n    grille();\n    feet();\n    shelf();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frostguard",
    "openscad_code": "// FrostGuard Kitchen Appliance - Realistic Style\n// Dimensions: 80mm x 85mm x 110mm\n\n$fn = 32;\n\n// Main body module\nmodule frostguard_body() {\n    // Main housing\n    difference() {\n        // Outer shell\n        cube([70, 75, 100], center=true);\n        \n        // Inner cavity\n        translate([0, 0, 5])\n            cube([66, 71, 95], center=true);\n    }\n}\n\n// Base module with rubber feet\nmodule base() {\n    // Main base\n    translate([0, 0, -55])\n        cube([75, 80, 10], center=true);\n    \n    // Rubber feet at corners\n    for(x=[-30, 30])\n        for(y=[-30, 30])\n            translate([x, y, -60])\n                cylinder(h=3, r=5);\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, 40, 0])\n        difference() {\n            // Panel housing\n            cube([60, 5, 40], center=true);\n            \n            // Display window\n            translate([0, 0, 15])\n                cube([50, 6, 20], center=true);\n        }\n    \n    // Control buttons\n    for(i=[-20, 0, 20])\n        translate([i, 43, 0])\n            cylinder(h=3, r=4);\n}\n\n// Lid with handle\nmodule lid() {\n    // Main lid\n    translate([0, 0, 55])\n        difference() {\n            cube([72, 77, 5], center=true);\n            \n            // Inner lip\n            translate([0, 0, -2])\n                cube([68, 73, 3], center=true);\n        }\n    \n    // Handle\n    translate([0, 0, 62])\n        difference() {\n            // Handle base\n            cube([40, 10, 15], center=true);\n            \n            // Grip hole\n            translate([0, 0, 5])\n                cube([30, 12, 10], center=true);\n        }\n}\n\n// Ventilation slots\nmodule vents() {\n    for(z=[-20, -10, 0, 10, 20])\n        translate([0, -40, z])\n            cube([60, 2, 5], center=true);\n}\n\n// Power cord\nmodule power_cord() {\n    translate([35, 0, -45])\n        rotate([90, 0, 0])\n            cylinder(h=20, r=2);\n    \n    // Cord strain relief\n    translate([35, 0, -45])\n        sphere(r=3);\n}\n\n// Assembly\nunion() {\n    // Main components\n    frostguard_body();\n    base();\n    lid();\n    \n    // Details\n    control_panel();\n    vents();\n    power_cord();\n    \n    // Side handles\n    for(side=[-1, 1])\n        translate([side * 40, 0, 0])\n            rotate([0, 90, 0])\n                difference() {\n                    cylinder(h=30, r=3);\n                    translate([0, -3, 0])\n                        cube([6, 6, 30], center=true);\n                };\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "nordicbox",
    "openscad_code": "// NordicBox Kitchen Appliance - Medium Complexity\n// Dimensions: 120mm x 80mm x 100mm (L x W x H)\n// Wall thickness: 2mm throughout\n\n$fn = 50;\n\n// Main body dimensions\nbody_l = 120;\nbody_w = 80;\nbody_h = 100;\n\n// Main enclosure\nmodule main_body() {\n    // Outer shell\n    difference() {\n        // Main box\n        cube([body_l, body_w, body_h], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 1])\n            cube([body_l-4, body_w-4, body_h-2], center=true);\n        \n        // Cable exit slot at back\n        translate([0, body_w/2 - 1, -30])\n            cube([30, 2, 20], center=true);\n    }\n}\n\n// Control panel on front\nmodule control_panel() {\n    // Panel base\n    translate([0, body_w/2 - 1, 30])\n        cube([100, 2, 40], center=true);\n    \n    // Power button\n    translate([-35, body_w/2, 45])\n        cylinder(h=3, r=6, center=true);\n    \n    // Mode dial\n    translate([0, body_w/2, 45])\n        cylinder(h=4, r=8, center=true);\n    \n    // Indicator lights\n    for(i = [0:2]) {\n        translate([25 + i*12, body_w/2, 50])\n            sphere(r=3);\n    }\n}\n\n// Top lid with handle\nmodule top_lid() {\n    // Lid\n    translate([0, 0, body_h/2 + 1])\n        cube([body_l - 4, body_w - 4, 2], center=true);\n    \n    // Handle\n    translate([0, 0, body_h/2 + 5])\n        difference() {\n            cube([80, 15, 8], center=true);\n            translate([0, 0, 2])\n                cube([70, 11, 4], center=true);\n        }\n}\n\n// Side ventilation slots\nmodule ventilation_slots(side) {\n    // Side panel\n    translate([body_l/2 * side, 0, 0])\n        cube([2, body_w - 4, body_h - 10], center=true);\n    \n    // Ventilation slots\n    for(i = [0:5]) {\n        translate([body_l/2 * side, 0, -40 + i*15])\n            cube([2, body_w - 8, 8], center=true);\n    }\n}\n\n// Bottom feet\nmodule feet() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*body_l/2 - x*10, y*body_w/2 - y*10, -body_h/2 - 3])\n                cylinder(h=6, r=5, center=true);\n        }\n    }\n}\n\n// Front container opening\nmodule container_area() {\n    // Opening\n    translate([0, 0, -20])\n        cube([90, body_w - 8, 60], center=true);\n    \n    // Container guides\n    for(i = [-1, 1]) {\n        translate([i*35, 0, -20])\n            cube([4, body_w - 10, 60], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    control_panel();\n    top_lid();\n    ventilation_slots(1);\n    ventilation_slots(-1);\n    feet();\n    \n    // Container opening (subtract from main body)\n    difference() {\n        children();\n        translate([0, 0, -20])\n            cube([90, body_w - 8, 60], center=true);\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "snowshelf",
    "openscad_code": "// Snowshelf Kitchen Appliance - Freezer Shelf Unit\n// Dimensions: 120mm W x 80mm D x 100mm H\n\n// Wall thickness\nwall = 2;\n\n// Main shelf frame\nmodule shelf_frame() {\n    // Bottom base\n    difference() {\n        cube([120, 80, wall]);\n        translate([wall, wall, -0.1]) cube([120-wall*2, 80-wall*2, wall+0.2]);\n    }\n    \n    // Top base\n    translate([0, 0, 100-wall]) difference() {\n        cube([120, 80, wall]);\n        translate([wall, wall, -0.1]) cube([120-wall*2, 80-wall*2, wall+0.2]);\n    }\n    \n    // Left side\n    translate([0, 0, wall]) difference() {\n        cube([wall, 80, 100-wall*2]);\n        translate([0, wall, 0]) cube([wall, 80-wall*2, 100-wall*2]);\n    }\n    \n    // Right side\n    translate([120-wall, 0, wall]) difference() {\n        cube([wall, 80, 100-wall*2]);\n        translate([0, wall, 0]) cube([wall, 80-wall*2, 100-wall*2]);\n    }\n    \n    // Back panel\n    translate([wall, 0, wall]) difference() {\n        cube([120-wall*2, wall, 100-wall*2]);\n        translate([0, 0, wall]) cube([120-wall*2, wall, 100-wall*3]);\n    }\n}\n\n// Shelf supports (front rails)\nmodule shelf_supports() {\n    // Bottom front rail\n    translate([wall, 80-wall, wall]) cube([120-wall*2, wall, 15]);\n    \n    // Middle front rail\n    translate([wall, 80-wall, 42.5]) cube([120-wall*2, wall, 15]);\n    \n    // Top front rail\n    translate([wall, 80-wall, 75]) cube([120-wall*2, wall, 15]);\n}\n\n// Shelf grates\nmodule shelf_grate(height) {\n    for(x = [5:15:110]) {\n        translate([x, wall, height]) cube([wall, 80-wall*2, wall]);\n    }\n    for(y = [5:15:70]) {\n        translate([wall, y, height]) cube([120-wall*2, wall, wall]);\n    }\n}\n\n// Freezer vent holes\nmodule vent_holes() {\n    for(i = [0:3]) {\n        translate([15 + i*25, 40, 100]) cylinder(h=wall, r=3, $fn=16);\n    }\n}\n\n// Control dial\nmodule control_dial() {\n    // Dial base\n    translate([60, 80-wall-1, 95]) difference() {\n        cylinder(h=wall+2, r=8, $fn=32);\n        translate([0, 0, -0.1]) cylinder(h=wall+2.2, r=6, $fn=32);\n    }\n    \n    // Dial knob\n    translate([60, 80-wall-1, 95+wall+2]) cylinder(h=4, r=5, $fn=16);\n    \n    // Indicator line\n    translate([60, 80-wall-1, 95+wall+2+2]) rotate([90, 0, 0]) \n        cylinder(h=2, r=0.5, $fn=8);\n}\n\n// Assembly\nunion() {\n    shelf_frame();\n    shelf_supports();\n    \n    // Bottom shelf grate\n    shelf_grate(wall+15);\n    \n    // Middle shelf grate\n    shelf_grate(42.5+15);\n    \n    // Top shelf grate\n    shelf_grate(75+15);\n    \n    // Ventilation\n    vent_holes();\n    \n    // Control elements\n    control_dial();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coolcavern",
    "openscad_code": "// CoolCavern mini-fridge / beverage cooler â€“ 90 mm tall, 3D-printable, medium detail\n// All walls ~2 mm, printable as single part, no supports needed\n\nmodule body() {\n    difference() {\n        // Main shell\n        cube([55, 45, 85], center=true);\n        // Hollow inside\n        translate([0,0,1]) cube([51, 41, 81], center=true);\n    }\n}\n\nmodule door() {\n    difference() {\n        // Door slab\n        translate([0, -23.5, 0]) cube([53, 3, 83], center=true);\n        // Inner recess\n        translate([0, -22, 1]) cube([49, 1, 79], center=true);\n    }\n}\n\nmodule handle() {\n    // Curved bar handle\n    translate([0, -25, 20])\n    rotate([90,0,0])\n    cylinder(h=30, d=4, $fn=12);\n}\n\nmodule hinge_pins() {\n    for(z=[-30, 30]) {\n        translate([27.5, -23.5, z])\n        rotate([90,0,0])\n        cylinder(h=3, d=3.5, $fn=10);\n    }\n}\n\nmodule feet() {\n    for(x=[-22,22], y=[-18,18]) {\n        translate([x,y,-43])\n        cylinder(h=3, d=4, $fn=12);\n    }\n}\n\nmodule control_panel() {\n    difference() {\n        // Panel block\n        translate([0, -21, 35]) cube([20, 4, 15], center=true);\n        // LED window\n        translate([0, -19.9, 35]) cube([8, 0.5, 4], center=true);\n    }\n    // Knob\n    translate([-8, -21, 35])\n    rotate([90,0,0])\n    cylinder(h=2.5, d=5, $fn=20);\n}\n\nmodule vents() {\n    // Rear grille\n    for(i=[-20:10:20]) {\n        translate([0, 22, i])\n        cube([30, 1.5, 5], center=true);\n    }\n}\n\nunion() {\n    body();\n    door();\n    handle();\n    hinge_pins();\n    feet();\n    control_panel();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cryocube",
    "openscad_code": "// Cryocube Kitchen Appliance - Compact Ice Cube Maker\n// Dimensions: 90mm x 90mm x 120mm\n\n$fn = 32;\n\n// Main body dimensions\nbody_w = 90;\nbody_d = 90;\nbody_h = 100;\n\n// Wall thickness\nwall_t = 2;\n\n// Control panel dimensions\npanel_w = 30;\npanel_h = 15;\n\n// Ice cube tray dimensions\ntray_w = 70;\ntray_d = 70;\ntray_h = 40;\n\n// Button dimensions\nbtn_r = 3;\nbtn_h = 2;\n\n// Door handle dimensions\nhandle_w = 40;\nhandle_h = 8;\nhandle_d = 10;\n\n// Ventilation slots\nslot_w = 25;\nslot_h = 3;\nslot_d = 1;\n\nmodule main_body() {\n    // Outer shell\n    difference() {\n        cube([body_w, body_d, body_h], center=true);\n        // Hollow interior\n        translate([0, 0, wall_t])\n            cube([body_w - 2*wall_t, body_d - 2*wall_t, body_h - wall_t], center=true);\n    }\n}\n\nmodule control_panel() {\n    translate([0, body_d/2 - wall_t/2, body_h/2 - panel_h/2 - 10]) {\n        // Panel base\n        cube([panel_w, wall_t + 1, panel_h], center=true);\n        \n        // Buttons\n        for (i = [-1, 0, 1]) {\n            translate([i * 8, wall_t/2 + 0.5, 0])\n                cylinder(h=btn_h, r=btn_r);\n        }\n        \n        // LED indicator\n        translate([panel_w/2 - 5, wall_t/2 + 0.5, panel_h/2 - 3])\n            cylinder(h=1, r=2);\n    }\n}\n\nmodule door() {\n    translate([0, -body_d/2 - wall_t/2, 0]) {\n        // Door panel\n        cube([body_w - 4*wall_t, wall_t, body_h - 2*wall_t], center=true);\n        \n        // Window\n        translate([0, 0, body_h/4])\n            cube([body_w - 8*wall_t, wall_t + 0.5, body_h/2], center=true);\n        \n        // Handle\n        translate([0, wall_t/2, -body_h/2 + wall_t + handle_h/2])\n            cube([handle_w, handle_d, handle_h], center=true);\n    }\n}\n\nmodule ice_tray() {\n    translate([0, 0, -body_h/2 + wall_t + tray_h/2]) {\n        // Tray base\n        cube([tray_w, tray_d, tray_h], center=true);\n        \n        // Ice cube compartments (3x3 grid)\n        for (x = [-1, 0, 1]) {\n            for (y = [-1, 0, 1]) {\n                translate([x * 20, y * 20, 0])\n                    cube([15, 15, tray_h - wall_t], center=true);\n            }\n        }\n    }\n}\n\nmodule ventilation_slots() {\n    // Side vents\n    for (i = [0, 1]) {\n        translate([body_w/2 - wall_t/2, 0, body_h/2 - 20 - i*15]) {\n            rotate([90, 0, 0])\n                cube([slot_w, slot_d, slot_h], center=true);\n        }\n    }\n    \n    // Back vents\n    for (i = [0, 1]) {\n        translate([0, body_d/2 - wall_t/2, body_h/2 - 20 - i*15]) {\n            rotate([90, 90, 0])\n                cube([slot_w, slot_d, slot_h], center=true);\n    }\n    }\n}\n\nmodule feet() {\n    // Four support feet\n    foot_r = 4;\n    foot_h = 5;\n    \n    for (x = [-1, 1]) {\n        for (y = [-1, 1]) {\n            translate([x * (body_w/2 - 10), y * (body_d/2 - 10), -body_h/2 - foot_h/2])\n                cylinder(h=foot_h, r=foot_r);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    control_panel();\n    door();\n    ice_tray();\n    ventilation_slots();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "freezeframe",
    "openscad_code": "// Freeze-frame food dehydrator\n// Overall envelope: 90 mm (w) Ã— 110 mm (d) Ã— 160 mm (h)\n$fn = 32;          // Smooth curves for 3-D printing\n\n// Main body shell, printed as one part\nmodule shell() {\n    difference() {\n        // Outer rounded box\n        minkowski() {\n            cube([86, 106, 156], center = true);\n            sphere(2);\n        }\n        // Hollow interior\n        translate([0, 0, 2]) cube([82, 102, 152], center = true);\n    }\n}\n\n// Front door with window\nmodule door() {\n    translate([0, 54, 0]) rotate([0, 0, 0])\n    difference() {\n        // Door slab\n        cube([84, 4, 130], center = true);\n        // Window\n        translate([0, 0, 20])\n            cube([60, 5, 70], center = true);\n        // Hinge pin holes (printed as part of shell)\n    }\n}\n\n// Control panel on top front\nmodule controls() {\n    translate([0, 40, 78])\n    union() {\n        // Panel plate\n        color(\"gray\")\n        cube([70, 2, 30], center = true);\n        \n        // Rotary timer dial\n        color(\"black\")\n        translate([-20, 3, 0])\n            cylinder(h = 6, r = 8, center = true);\n        \n        // Temperature slider\n        color(\"black\")\n        translate([20, 3, 0])\n            cube([30, 6, 6], center = true);\n    }\n}\n\n// Stackable drying trays\nmodule tray() {\n    difference() {\n        // Tray rim\n        cube([80, 80, 6], center = true);\n        // Mesh area\n        translate([0, 0, -1])\n            cube([74, 74, 8], center = true);\n    }\n}\n\n// Feet for stability\nmodule foot() {\n    translate([0, 0, -83])\n    cylinder(h = 6, r1 = 4, r2 = 4);\n}\n\n// Complete assembly\nunion() {\n    shell();\n    door();\n    controls();\n    \n    // Generate four trays spaced 30 mm apart\n    for (z = [-45, -15, 15, 45])\n        translate([0, 0, z]) tray();\n    \n    // Four feet in corners\n    translate([-38, -48, 0]) foot();\n    translate([38, -48, 0]) foot();\n    translate([-38, 48, 0]) foot();\n    translate([38, 48, 0]) foot();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icyhold",
    "openscad_code": "// IcyHold Refrigerator Model - Medium Complexity, Realistic Style\n// Overall dimensions: 70mm(W) x 65mm(D) x 120mm(H)\n\n// Parameters\nwall_thickness = 2;\ndoor_thickness = 2;\nhandle_diameter = 4;\nhandle_length = 30;\nfeet_height = 3;\nfeet_diameter = 8;\n\n// Main refrigerator body\nmodule refrigerator_body() {\n    difference() {\n        // Outer shell\n        cube([70, 65, 120]);\n        \n        // Hollow interior\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            cube([70 - 2*wall_thickness, 65 - 2*wall_thickness, 120 - wall_thickness]);\n    }\n}\n\n// Refrigerator door\nmodule refrigerator_door() {\n    difference() {\n        // Door panel\n        translate([0, 0, 0])\n            cube([door_thickness, 65, 100]);\n        \n        // Door interior recess\n        translate([1, wall_thickness, wall_thickness])\n            cube([door_thickness - 1, 65 - 2*wall_thickness, 100 - 2*wall_thickness]);\n    }\n}\n\n// Door handle\nmodule door_handle() {\n    // Handle bar\n    rotate([90, 0, 0])\n        translate([door_thickness/2, -65/2 - 2, 50])\n            cylinder(h=handle_length, d=handle_diameter, $fn=20);\n    \n    // Handle supports\n    for(i = [0, 1]) {\n        rotate([90, 0, 0])\n            translate([door_thickness/2, -65/2 - 2, 50 - handle_length/4 + i*handle_length/2])\n                cylinder(h=handle_diameter*1.5, d=handle_diameter*1.5, $fn=20);\n    }\n}\n\n// Cooling fins on back\nmodule cooling_fins() {\n    for(i = [0:3]) {\n        translate([-1, 10 + i*15, 20])\n            cube([2, 5, 80]);\n    }\n}\n\n// Adjustable feet\nmodule feet() {\n    for(i = [0, 1]) {\n        for(j = [0, 1]) {\n            translate([10 + i*50, 10 + j*45, 0])\n                cylinder(h=feet_height, d=feet_diameter, $fn=20);\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([wall_thickness + 2, 65 - wall_thickness - 15, 100 - 20])\n        cube([30, 15, 5]);\n    \n    // Temperature dial\n    translate([wall_thickness + 15, 65 - wall_thickness - 10, 100 - 20 + 5])\n        cylinder(h=3, d=8, $fn=32);\n    \n    // Indicator light\n    translate([wall_thickness + 25, 65 - wall_thickness - 10, 100 - 15])\n        sphere(d=3, $fn=16);\n}\n\n// Door seal\nmodule door_seal() {\n    translate([door_thickness, 0, 0])\n        cube([1, 65, 100]);\n}\n\n// Assemble the refrigerator\nunion() {\n    // Main body\n    refrigerator_body();\n    \n    // Feet\n    feet();\n    \n    // Cooling fins on back\n    translate([70, 0, 0])\n        cooling_fins();\n    \n    // Door with handle\n    translate([70, 0, 10])\n        union() {\n            refrigerator_door();\n            door_handle();\n            door_seal();\n        };\n    \n    // Control panel\n    control_panel();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tundrabin",
    "openscad_code": "// Tundrabin kitchen appliance - medium complexity realistic style\n// Overall dimensions: 120mm x 80mm x 150mm\n\n// Main body\nmodule body() {\n    difference() {\n        // Main housing\n        cube([110, 70, 140], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 5])\n        cube([104, 64, 130], center=true);\n    }\n}\n\n// Base with feet\nmodule base() {\n    union() {\n        // Base plate\n        translate([0, 0, -72])\n        cube([115, 75, 5], center=true);\n        \n        // Feet\n        for(x = [-45, 45])\n        for(y = [-30, 30])\n        translate([x, y, -77])\n        cylinder(h=5, r=6, center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, 38, 50])\n    difference() {\n        // Panel base\n        cube([60, 8, 30], center=true);\n        \n        // Display cutout\n        translate([0, 0, 8])\n        cube([35, 10, 15], center=true);\n        \n        // Button holes\n        for(i = [-1, 1])\n        translate([i * 15, 5, -8])\n        cylinder(h=10, r=3, center=true);\n    }\n}\n\n// Buttons\nmodule buttons() {\n    for(i = [-1, 1])\n    translate([i * 15, 45, 42])\n    cylinder(h=5, r=3, center=true);\n}\n\n// Handle\nmodule handle() {\n    translate([0, 0, 75])\n    union() {\n        // Mounting brackets\n        for(x = [-35, 35])\n        translate([x, 0, 0])\n        cube([8, 10, 15], center=true);\n        \n        // Grip\n        translate([0, -15, 0])\n        cube([80, 6, 10], center=true);\n    }\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, 77])\n    difference() {\n        // Main lid\n        cube([112, 72, 8], center=true);\n        \n        // Inner lip\n        translate([0, 0, -2])\n        cube([108, 68, 10], center=true);\n    }\n}\n\n// Ventilation slots\nmodule vents() {\n    difference() {\n        // Side panel\n        translate([58, 0, 0])\n        cube([4, 60, 100], center=true);\n        \n        // Slots\n        for(z = [-40:10:40])\n        translate([58, 0, z])\n        cube([5, 50, 6], center=true);\n    }\n}\n\n// Power cord connector\nmodule power_connector() {\n    translate([0, -38, -50])\n    difference() {\n        cube([20, 10, 15], center=true);\n        translate([0, 5, 0])\n        cylinder(h=12, r=5, center=true);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    base();\n    control_panel();\n    buttons();\n    handle();\n    lid();\n    vents();\n    mirror([1, 0, 0])\n    vents();\n    power_connector();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "wintervault",
    "openscad_code": "// Wintervault Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 80mm x 50mm x 120mm overall\n// Wall thickness: 2mm throughout for 3D printing\n\n// Main body dimensions\nbody_w = 80;\nbody_d = 50;\nbody_h = 100;\n\n$fn = 32;\n\nmodule main_body() {\n    // Outer shell\n    difference() {\n        cube([body_w, body_d, body_h], center=true);\n        \n        // Hollow interior\n        translate([0, 0, -2])\n            cube([body_w-4, body_d-4, body_h-2], center=true);\n    }\n}\n\nmodule base_frame() {\n    // Bottom support frame\n    translate([0, 0, -body_h/2-5])\n    difference() {\n        cube([body_w+4, body_d+4, 10], center=true);\n        cube([body_w-4, body_d-4, 12], center=true);\n    }\n}\n\nmodule door() {\n    // Front door with handle\n    translate([0, body_d/2+1, 0])\n    rotate([0, 180, 0])\n    union() {\n        // Door panel\n        cube([body_w-10, 2, body_h-20], center=true);\n        \n        // Handle\n        translate([body_w/2-15, 0, 0])\n        rotate([90, 0, 0])\n        cylinder(h=20, r1=3, r2=3);\n        \n        // Window\n        translate([0, 1.5, 0])\n        color([0.8, 0.8, 0.9, 0.5])\n        cube([body_w-20, 0.5, 30], center=true);\n    }\n}\n\nmodule control_panel() {\n    // Top control panel\n    translate([0, 0, body_h/2+5])\n    union() {\n        // Panel base\n        cube([body_w-20, body_d-10, 10], center=true);\n        \n        // Control knobs\n        for(i=[-20:20:40]) {\n            translate([i, 0, 6])\n            cylinder(h=5, r1=4, r2=4);\n            \n            // Knob indicators\n            translate([i, 0, 8.5])\n            cube([1, 0.5, 1], center=true);\n        }\n        \n        // Display screen\n        translate([0, 0, 6])\n        color([0.1, 0.1, 0.1])\n        cube([25, 8, 0.5], center=true);\n    }\n}\n\nmodule ventilation_grill() {\n    // Rear ventilation slots\n    translate([0, -body_d/2-1, 0])\n    for(i=[-30:10:30]) {\n        translate([i, 0, 0])\n        cube([2, 2, 60], center=true);\n    }\n}\n\nmodule feet() {\n    // Support feet at corners\n    foot_positions = [[-body_w/2+5, -body_d/2+5], \n                      [body_w/2-5, -body_d/2+5],\n                      [-body_w/2+5, body_d/2-5],\n                      [body_w/2-5, body_d/2-5]];\n    \n    for(pos = foot_positions) {\n        translate([pos[0], pos[1], -body_h/2-10])\n        cylinder(h=5, r1=3, r2=3);\n    }\n}\n\nmodule side_details() {\n    // Side panel details\n    for(side = [-1, 1]) {\n        translate([side * body_w/2, 0, 0])\n        rotate([0, 90, 0])\n        for(z=[-30:15:30]) {\n            translate([0, 0, z])\n            cylinder(h=2, r1=2, r2=2);\n        }\n    }\n}\n\n// Assemble the wintervault\nunion() {\n    main_body();\n    base_frame();\n    door();\n    control_panel();\n    ventilation_grill();\n    feet();\n    side_details();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chilldock",
    "openscad_code": "// ChillDock â€“ a countertop appliance that docks a small fridge module next to a dry-goods bin\n// Overall footprint ~110 mm wide, 80 mm deep, 110 mm tall â€“ easy FDM print, no steep overhangs\n\nmodule chilldock() {\n    difference() {\n        // Main body shell (2 mm walls all around)\n        translate([0,0,1])\n            cube([110,80,108], center=true);\n\n        // Hollow out the inside\n        translate([0,0,1])\n            cube([106,76,106], center=true);\n    }\n\n    // Vertical partition between fridge bay and dry bay (2 mm thick)\n    translate([0,0,54])\n        cube([2,76,106], center=true);\n\n    // Fridge module â€“ rear half\n    translate([-27.5,0,53])\n        cube([53,72,104], center=true);\n\n    // Dry bin â€“ front half\n    translate([27.5,0,53])\n        cube([53,72,104], center=true);\n\n    // Front door for fridge (swing right)\n    translate([-54.5,0,53])\n        rotate([0,90,0])\n        difference() {\n            cube([104,52,2], center=true);         // door plate\n            translate([0,-20,0]) cube([100,2,2]);  // handle slot\n        }\n\n    // Front drawer for dry bin â€“ two identical drawers stacked\n    for (z = [20, 70]) {\n        translate([27.5,0,z])\n        difference() {\n            cube([50,70,30], center=true);         // drawer body\n            translate([0,0,0])\n                cube([46,66,26], center=true);     // hollow inside\n        }\n    }\n\n    // Control strip across top front\n    translate([0,-38,105])\n        cube([100,4,6], center=true);\n\n    // Buttons and dial\n    translate([-30,-38,108])\n        cylinder(h=3, d=6, $fn=20);\n    translate([-15,-38,108])\n        cylinder(h=3, d=6, $fn=20);\n    translate([30,-38,108])\n        rotate([90,0,0])\n            cylinder(h=8, d=10, $fn=30);           // knob shaft\n\n    // Ventilation grille on rear\n    for (y = [-30:15:30])\n    translate([0,y,15])\n        cube([108,2,4], center=true);\n\n    // Feet â€“ 4 small cylinders\n    for (x = [-45, 45])\n    for (y = [-30, 30])\n    translate([x,y,-1])\n        cylinder(h=4, d=6, $fn=20);\n}\n\nchilldock();",
    "renders": true
  },
  {
    "kitchen_appliance": "froststack",
    "openscad_code": "// FrostStack - Countertop Ice Maker\n// Realistic style, medium complexity\n// 3D printable with 2mm walls\n\n// Overall dimensions\nwidth = 90;\ndepth = 65;\nheight = 110;\n\n// Wall thickness\nwall = 2;\n\n// Base with feet\nmodule base() {\n    // Main base block\n    difference() {\n        cube([width, depth, 15]);\n        // Hollow out inside\n        translate([wall, wall, wall])\n            cube([width-2*wall, depth-2*wall, 15]);\n    }\n    \n    // Four feet\n    for(x=[wall*2, width-wall*4]) {\n        for(y=[wall*2, depth-wall*4]) {\n            translate([x, y, -3])\n                cylinder(h=4, d=8);\n        }\n    }\n}\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([width, depth, height-15]);\n        // Interior hollow\n        translate([wall, wall, wall])\n            cube([width-2*wall, depth-2*wall, height-15-wall]);\n    }\n}\n\n// Control panel with buttons and display\nmodule control_panel() {\n    translate([wall, wall, height-15]) {\n        // Panel recess\n        difference() {\n            cube([width-2*wall, 20, 15]);\n            translate([wall, wall, wall])\n                cube([width-4*wall, 20-2*wall, 15-wall]);\n        }\n        \n        // LCD display\n        translate([width/2-15, 10, 12])\n            cube([30, 10, 1]);\n            \n        // Buttons\n        for(i=[0:2]) {\n            translate([10 + i*25, 5, 12])\n                cylinder(h=1.5, d=8);\n        }\n    }\n}\n\n// Ice basket\nmodule ice_basket() {\n    translate([width/2-25, depth/2-20, 25]) {\n        difference() {\n            // Basket walls\n            cube([50, 40, 30]);\n            // Inside hollow\n            translate([wall, wall, wall])\n                cube([50-2*wall, 40-2*wall, 30-wall]);\n            // Top bevel\n            translate([wall-1, wall-1, 30-wall])\n                cube([50-2*wall+2, 40-2*wall+2, wall+1]);\n        }\n        \n        // Handle\n        translate([-8, 15, 15])\n            rotate([0, 90, 0])\n                cylinder(h=20, d=6);\n    }\n}\n\n// Water reservoir\nmodule water_tank() {\n    translate([width-40, wall, 20]) {\n        difference() {\n            cube([35, 30, 60]);\n            translate([wall, wall, wall])\n                cube([35-2*wall, 30-2*wall, 60-2*wall]);\n            // Fill hole\n            translate([17.5, 15, 60])\n                cylinder(h=5, d=25);\n        }\n    }\n}\n\n// Ventilation grilles\nmodule vents() {\n    translate([wall, depth-wall-15, 40]) {\n        for(i=[0:3]) {\n            translate([0, 0, i*15])\n                cube([width-2*wall, 3, 8]);\n        }\n    }\n}\n\n// Ice chute door\nmodule ice_door() {\n    translate([width/2-15, 0, 65]) {\n        difference() {\n            cube([30, wall+1, 25]);\n            translate([wall, 0, wall])\n                cube([30-2*wall, wall+2, 25-2*wall]);\n        }\n        \n        // Handle\n        translate([15, -wall-3, 12])\n            rotate([0, 90, 0])\n                cylinder(h=10, d=4);\n    }\n}\n\n// Main assembly\nunion() {\n    base();\n    translate([0, 0, 15])\n        body();\n    control_panel();\n    ice_basket();\n    water_tank();\n    vents();\n    ice_door();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icecrate",
    "openscad_code": "// Icecrate kitchen appliance - medium complexity\n// Dimensions: 100mm x 80mm x 120mm (L x W x H)\n\n$fn = 32;\n\n// Main body module\nmodule icecrate_body() {\n    // Outer shell\n    difference() {\n        // Main box\n        cube([100, 80, 120], center = true);\n        \n        // Inner cavity\n        translate([0, 0, 0])\n        cube([96, 76, 116], center = true);\n    }\n}\n\n// Handle module\nmodule handle() {\n    // Handle bar\n    translate([0, 45, 30])\n    rotate([90, 0, 0])\n    cylinder(h = 60, r = 6, center = true);\n    \n    // Handle supports\n    translate([25, 45, 30])\n    cylinder(h = 20, r = 4);\n    \n    translate([-25, 45, 30])\n    cylinder(h = 20, r = 4);\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel base\n    translate([0, -45, 60])\n    cube([80, 8, 30], center = true);\n    \n    // Buttons\n    for (i = [-1:1]) {\n        translate([i * 20, -41, 75])\n        cylinder(h = 5, r = 4);\n    }\n    \n    // LED indicator\n    translate([30, -41, 75])\n    cylinder(h = 2, r = 3);\n}\n\n// Feet module\nmodule feet() {\n    for (x = [-40, 40])\n    for (z = [-40, 40]) {\n        translate([x, -z, -60])\n        cylinder(h = 8, r = 4);\n    }\n}\n\n// Ventilation slots\nmodule vents() {\n    // Left side vents\n    for (i = [-2:2]) {\n        translate([-50, i * 15, 40])\n        cube([2, 8, 20]);\n    }\n    \n    // Right side vents\n    for (i = [-2:2]) {\n        translate([50, i * 15, 40])\n        cube([2, 8, 20]);\n    }\n}\n\n// Hinge detail\nmodule hinges() {\n    // Top hinges\n    translate([35, 0, 60])\n    rotate([90, 0, 0])\n    cylinder(h = 20, r = 3);\n    \n    translate([-35, 0, 60])\n    rotate([90, 0, 0])\n    cylinder(h = 20, r = 3);\n}\n\n// Door seal detail\nmodule door_seal() {\n    // Front frame\n    translate([0, 40, 0])\n    cube([94, 4, 114], center = true);\n    \n    // Seal groove\n    difference() {\n        translate([0, 38, 0])\n        cube([90, 2, 110], center = true);\n        translate([0, 37, 0])\n        cube([88, 2, 108], center = true);\n    }\n}\n\n// Main assembly\nunion() {\n    icecrate_body();\n    handle();\n    control_panel();\n    feet();\n    vents();\n    hinges();\n    door_seal();\n    \n    // Corner reinforcements\n    for (x = [-45, 45])\n    for (y = [-35, 35])\n    for (z = [-55, 55]) {\n        translate([x, y, z])\n        cube([4, 4, 4]);\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "glaciervault",
    "openscad_code": "// GlacierVault Kitchen Appliance â€“ 3D-printable, medium-complexity, realistic style\n// Overall size: ~95 mm (w) Ã— 110 mm (d) Ã— 130 mm (h)\n\n// Wall thickness = 2 mm everywhere to keep it printable without supports\n$fn = 32;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        translate([-47.5, -55, 0]) cube([95, 110, 130]);\n        \n        // Hollow inside\n        translate([-45.5, -53, 2]) cube([91, 106, 126]);\n    }\n}\n\n// Rounded top edge band\nmodule top_band() {\n    translate([0, 0, 128]) {\n        difference() {\n            minkowski() {\n                cube([95, 110, 4], center = true);\n                cylinder(h = 0.1, r = 2);\n            }\n            cube([91, 106, 5], center = true);\n        }\n    }\n}\n\n// Door with handle\nmodule door() {\n    difference() {\n        // Door plate\n        translate([0, -56, 65]) cube([90, 2, 120], center = true);\n        \n        // Window cutout\n        translate([0, -55, 75]) cube([70, 1, 80], center = true);\n        \n        // Recessed handle slot\n        translate([0, -55, 20]) cube([60, 1, 10], center = true);\n    }\n    \n    // Handle bar\n    translate([0, -54, 20])\n        rotate([0, 90, 0])\n        cylinder(h = 60, r = 3, center = true);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel plate\n    translate([42, 0, 115]) cube([10, 70, 2], center = true);\n    \n    // Buttons\n    for (i = [-20:10:20])\n        translate([45, i, 116])\n            cylinder(h = 3, r = 4);\n    \n    // Dial\n    translate([45, 0, 113])\n        rotate([90, 0, 0])\n        cylinder(h = 5, r = 6);\n}\n\n// Feet\nmodule feet() {\n    for (dx = [-35, 35], dy = [-45, 45])\n        translate([dx, dy, -2])\n            cylinder(h = 4, r = 5);\n}\n\n// Ventilation grille on the back\nmodule vent_grille() {\n    translate([0, 56, 65]) {\n        cube([80, 2, 100], center = true);\n        for (i = [-40:10:40])\n            translate([i, 0, 0])\n                cube([5, 2.5, 100], center = true);\n    }\n}\n\n// Ice container drawer\nmodule ice_drawer() {\n    translate([0, 0, 20]) {\n        difference() {\n            // Drawer body\n            translate([-40, -40, 0]) cube([80, 80, 35]);\n            // Hollow\n            translate([-38, -38, 2]) cube([76, 76, 33]);\n        }\n        // Front lip\n        translate([-42, -42, 0]) cube([84, 4, 35]);\n        translate([-42, 38, 0]) cube([84, 4, 35]);\n    }\n}\n\n// Assembly\nunion() {\n    body_shell();\n    top_band();\n    door();\n    control_panel();\n    feet();\n    vent_grille();\n    ice_drawer();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "arcticbin",
    "openscad_code": "// ArcticBin â€“ compact countertop freezer/ice-cube bin\n// Overall footprint 100Ã—65 mm, height 85 mm, 2 mm walls\n// All parts printable without supports\n\n$fn = 32;         // smooth curves\n\n// ---------- main body ----------\nmodule body_shell() {\n    difference() {\n        // outer rounded box\n        minkowski() {\n            cube([100, 65, 85], center = true);\n            sphere(4);\n        }\n        // hollow inside\n        translate([0, 0, -2])      // drop cavity slightly for lid seat\n        minkowski() {\n            cube([96, 61, 83], center = true);\n            sphere(2);\n        }\n    }\n}\n\n// ---------- insulation texture band ----------\nmodule band() {\n    for (z = [-40:10:40]) {\n        translate([0, 0, z])\n        difference() {\n            cube([104, 69, 2], center = true);\n            cube([98, 63, 3], center = true);\n        }\n    }\n}\n\n// ---------- control panel ----------\nmodule control_panel() {\n    translate([-50+18, 0, 42]) {\n        difference() {\n            cube([30, 55, 8]);\n            translate([2, 2, -1]) cube([26, 51, 10]);\n        }\n        // LED indicator\n        translate([25, 27.5, 5]) sphere(3);\n        // knob\n        translate([25, 27.5, 1]) cylinder(h = 6, r1 = 4, r2 = 5);\n    }\n}\n\n// ---------- lid ----------\nmodule lid() {\n    difference() {\n        // top shell\n        translate([0, 0, 42.5+2])\n        minkowski() {\n            cube([100, 65, 8], center = true);\n            sphere(4);\n        }\n        // recessed grip\n        translate([0, 30, 42.5+2+3])\n        cube([80, 10, 5], center = true);\n    }\n}\n\n// ---------- handle ----------\nmodule handle() {\n    translate([0, 65/2+4, 42.5+10])\n    rotate([90, 0, 0])\n    difference() {\n        cylinder(h = 30, r = 4);\n        cylinder(h = 30, r = 2);\n    }\n}\n\n// ---------- feet ----------\nmodule foot(x, y) {\n    translate([x, y, -42.5-4])\n    cylinder(h = 8, r = 4);\n}\nmodule feet() {\n    foot(40, 25);\n    foot(-40, 25);\n    foot(40, -25);\n    foot(-40, -25);\n}\n\n// ---------- assembly ----------\nunion() {\n    color(\"azure\")\n    body_shell();\n    color(\"white\", 0.6)\n    band();\n    color(\"gainsboro\")\n    control_panel();\n    color(\"azure\")\n    lid();\n    color(\"dimgray\")\n    handle();\n    color(\"black\")\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzerochest",
    "openscad_code": "// SubZero Chest Freezer - Realistic Style, Medium Complexity\n// Approximate dimensions: 100x50x45mm (scaled for 3D printing)\n\n$fn = 32;\n\n// Main parameters\nwall_thickness = 2;\nbody_width = 100;\nbody_depth = 50;\nbody_height = 45;\nhandle_width = 30;\nhandle_height = 8;\nhandle_depth = 4;\n\n// Main body\nmodule freezer_body() {\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height]);\n        \n        // Hollow interior\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, body_height-wall_thickness]);\n    }\n}\n\n// Hinged lid\nmodule freezer_lid() {\n    difference() {\n        // Lid top\n        translate([0, 0, body_height])\n            cube([body_width, body_depth, wall_thickness*2]);\n        \n        // Lid interior\n        translate([wall_thickness, wall_thickness, body_height+wall_thickness*0.5])\n            cube([body_width-wall_thickness*2, body_depth-wall_thickness*2, wall_thickness]);\n    }\n}\n\n// Handle\nmodule lid_handle() {\n    translate([body_width/2-handle_width/2, body_depth-handle_depth-1, body_height+wall_thickness*2])\n        difference() {\n            cube([handle_width, handle_depth, handle_height]);\n            translate([wall_thickness, -0.5, wall_thickness])\n                cube([handle_width-wall_thickness*2, handle_depth+1, handle_height-wall_thickness*2]);\n        }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel housing\n    translate([body_width-25, 5, 5])\n        difference() {\n            cube([20, 15, 8]);\n            translate([wall_thickness, wall_thickness, wall_thickness])\n                cube([20-wall_thickness*2, 15-wall_thickness*2, 8-wall_thickness]);\n        }\n    \n    // Temperature dial\n    translate([body_width-15, 10, 8.5])\n        cylinder(h=3, r=4);\n    \n    // Indicator light\n    translate([body_width-20, 8, 8.5])\n        cylinder(h=1, r=1.5);\n}\n\n// Ventilation grille\nmodule ventilation_grille() {\n    for(i = [1:6]) {\n        translate([10, body_depth-3, 2+6*i])\n            cube([body_width-20, 2, 3]);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [10, body_width-20]) {\n        for(y = [5, body_depth-15]) {\n            translate([x, y, -3])\n                difference() {\n                    cylinder(h=3, r=2.5);\n                    translate([0, 0, -0.5])\n                        cylinder(h=4, r=1.5);\n                }\n        }\n    }\n}\n\n// Brand badge\nmodule brand_badge() {\n    translate([5, body_depth/2-5, body_height/2])\n        difference() {\n            cube([15, 10, 1]);\n            translate([2, 2, -0.5])\n                cube([11, 6, 2]);\n        }\n}\n\n// Assembly\nunion() {\n    freezer_body();\n    freezer_lid();\n    lid_handle();\n    control_panel();\n    ventilation_grille();\n    feet();\n    brand_badge();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "polarvault",
    "openscad_code": "// PolarVault Kitchen Appliance â€“ Realistic / Medium complexity\n// Overall size â‰ˆ 110 Ã— 80 Ã— 130 mm (fits inside 3D-printer bed)\nwall = 2;           // uniform wall thickness\n$fn=32;             // smooth curves\n\nmodule polarvault(){\n    // Main outer shell (double-wall for insulation & printability)\n    difference(){\n        hull(){\n            // Front rounded block\n            translate([-wall,0,0]) rotate([0,-90,0])\n                cylinder(h=110, d=80, center=true);\n            // Rear straight block\n            translate([40,0,0]) cube([70,80,110], center=true);\n        }\n        // Hollow it out leaving 2 mm walls\n        hull(){\n            translate([-wall+wall,0,wall]) rotate([0,-90,0])\n                cylinder(h=110-2*wall, d=80-2*wall, center=true);\n            translate([40,0,wall]) cube([70-2*wall,80-2*wall,110-2*wall], center=true);\n        }\n    }\n\n    // Feet (printable without supports)\n    for(pos = [[-35,-35],[35,-35],[-35,35],[35,35]])\n        translate([pos[0],pos[1],-wall]) cylinder(h=5,d1=12,d2=8,center=false);\n\n    // Top lid / door\n    translate([0,0,55]) rotate([90,0,0])\n        difference(){\n            cylinder(h=wall, d=78, center=true);\n            translate([-30,0,-wall/2-0.1]) cube([60,8,wall+0.2]);    // finger slot\n        }\n\n    // Handle bar on lid\n    translate([0,40,55]) rotate([90,0,0])\n        difference(){\n            cylinder(h=30,d=10,center=true);\n            cylinder(h=32,d=6,center=true);\n        }\n\n    // Control panel block\n    translate([45,0,25]) cube([12,50,20], center=true);\n    // Buttons\n    for(i=[-1:1])\n        translate([45+wall, (i*10), 25+8]) cylinder(h=wall+1,d=6);\n\n    // Ventilation slots on back\n    for(i=[-2:2]){\n        translate([75, i*15, 25]) rotate([0,90,0])\n            cube([30,wall+0.2,10]);\n    }\n\n    // Internal shelf supports (printable ridges)\n    for(z=[-20,20])\n        translate([15,0,z]) cube([2,76,wall], center=true);\n}\n\npolarvault();",
    "renders": true
  },
  {
    "kitchen_appliance": "snowhold",
    "openscad_code": "// Snowhold Kitchen Appliance - Realistic Style with Medium Complexity\n// A compact snow globe maker for 3D printing\n\n// Main dimensions (mm)\nbase_width = 80;\nbase_depth = 60;\nbase_height = 15;\n\nbody_width = 70;\nbody_depth = 50;\nbody_height = 45;\nbody_wall = 2;\n\nglobe_diameter = 50;\nglobe_wall = 2;\nglobe_offset = 10;\n\ncontrol_panel_height = 8;\ncontrol_panel_width = 25;\n\nbutton_radius = 3;\nbutton_height = 2;\n\ndial_radius = 5;\ndial_height = 3;\n\n$fn = 32;\n\n// Base module with rubber feet\nmodule base() {\n    // Main base\n    difference() {\n        cube([base_width, base_depth, base_height], center=true);\n        \n        // Hollow bottom\n        translate([0, 0, -base_height/2 + 1])\n            cube([base_width - 4, base_depth - 4, base_height], center=true);\n    }\n    \n    // Rubber feet (4 corners)\n    foot_positions = [[-base_width/2 + 5, -base_depth/2 + 5],\n                     [base_width/2 - 5, -base_depth/2 + 5],\n                     [-base_width/2 + 5, base_depth/2 - 5],\n                     [base_width/2 - 5, base_depth/2 - 5]];\n    \n    for(pos = foot_positions) {\n        translate([pos[0], pos[1], -base_height/2 + 0.5])\n            cylinder(h=1, r=3, center=true);\n    }\n}\n\n// Main body housing\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([body_width, body_depth, body_height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, -body_wall])\n            cube([body_width - 2*body_wall, body_depth - 2*body_wall, body_height], center=true);\n        \n        // Globe opening (top)\n        translate([0, 0, body_height/2])\n            cylinder(h=body_wall + 1, r=globe_diameter/2 + 1, center=true);\n        \n        // Control panel opening (front)\n        translate([body_width/2, 0, body_height/2 - control_panel_height/2 - 5])\n            cube([body_wall, control_panel_width, control_panel_height], center=true);\n    }\n    \n    // Internal support ribs\n    for(x = [-body_width/4, body_width/4]) {\n        for(y = [-body_depth/4, body_depth/4]) {\n            translate([x, y, -body_height/2 + body_wall])\n                cube([2, 2, body_height - 2*body_wall], center=true);\n        }\n    }\n}\n\n// Snow globe container\nmodule globe() {\n    // Main sphere\n    difference() {\n        sphere(r=globe_diameter/2);\n        \n        // Hollow interior\n        sphere(r=globe_diameter/2 - globe_wall);\n        \n        // Bottom opening\n        translate([0, 0, -globe_diameter/2])\n            cylinder(h=globe_diameter/2, r=globe_diameter/2 - globe_wall, center=true);\n    }\n    \n    // Flange for mounting\n    translate([0, 0, -globe_diameter/2 - 2])\n        cylinder(h=3, r1=globe_diameter/2 + 2, r2=globe_diameter/2 + 1, center=true);\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    // Panel housing\n    translate([body_width/2 + body_wall/2, 0, body_height/2 - control_panel_height/2 - 5])\n        cube([body_wall + 2, control_panel_width, control_panel_height], center=true);\n    \n    // Power button\n    translate([body_width/2 + body_wall + 1, -control_panel_width/4, body_height/2 - 7])\n        cylinder(h=button_height, r=button_radius, center=true);\n    \n    // Mode button\n    translate([body_width/2 + body_wall + 1, control_panel_width/4, body_height/2 - 7])\n        cylinder(h=button_height, r=button_radius, center=true);\n    \n    // Speed dial\n    translate([body_width/2 + body_wall + 1, 0, body_height/2 - 3])\n        cylinder(h=dial_height, r=dial_radius, center=true);\n    \n    // Dial indicator\n    translate([body_width/2 + body_wall + 1, dial_radius - 0.5, body_height/2 - 3])\n        cube([0.5, 1, dial_height + 0.1], center=true);\n}\n\n// Handle for lifting\nmodule handle() {\n    // Mounting brackets\n    for(side = [-1, 1]) {\n        translate([side * (body_width/2 - 2), body_depth/2 + 3, body_height/2 - 10])\n            cube([4, 6, 4], center=true);\n    }\n    \n    // Handle bar\n    translate([0, body_depth/2 + 6, body_height/2 - 10])\n        rotate([90, 0, 0])\n        cylinder(h=body_width - 10, r=2, center=true);\n}\n\n// Main assembly\nunion() {\n    // Base\n    translate([0, 0, -body_height/2 - base_height/2])\n        base();\n    \n    // Body\n    body();\n    \n    // Globe\n    translate([0, 0, body_height/2 + globe_offset])\n        globe();\n    \n    // Control panel\n    control_panel();\n    \n    // Handle\n    handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coolnest",
    "openscad_code": "// Coolnest Kitchen Appliance - Realistic Style (Medium Complexity)\n// A compact, 3D-printable coolnest appliance with storage compartments and cooling vents\n\n$fn = 32;\nwall = 2;\n\nmodule main_body() {\n    // Main housing with rounded top\n    difference() {\n        hull() {\n            translate([0, 0, 25]) cube([60, 40, 50], center=true);\n            translate([0, 0, 50]) cube([55, 35, 5], center=true);\n        }\n        // Hollow interior\n        translate([0, 0, 27]) cube([56, 36, 46], center=true);\n    }\n}\n\nmodule cooling_vent(x, y, z) {\n    // Individual cooling vent slat\n    translate([x, y, z]) cube([20, 1, 3]);\n}\n\nmodule cooling_vent_array() {\n    // Array of cooling vents on back\n    for(i = [0:4]) {\n        cooling_vent(0, 20 - i*4, 35);\n    }\n}\n\nmodule door() {\n    // Front door with handle\n    translate([0, -21, 30]) {\n        difference() {\n            // Door panel\n            cube([55, wall, 40], center=true);\n            // Window\n            difference() {\n                translate([0, 0, 5]) cube([45, wall+0.1, 25], center=true);\n                translate([0, -1, 5]) cube([40, wall+0.2, 20], center=true);\n            }\n        }\n        // Handle\n        translate([20, -1, 0]) cylinder(h=15, r=2, center=true);\n    }\n}\n\nmodule control_panel() {\n    // Top control panel with buttons\n    translate([0, 0, 52]) {\n        // Panel base\n        cube([50, 30, 3], center=true);\n        \n        // Buttons\n        for(i = [0:2]) {\n            translate([-15 + i*15, 0, 2]) {\n                cylinder(h=1, r=3);\n                translate([0, 0, 1]) sphere(r=3);\n            }\n        }\n        \n        // Display\n        translate([0, 10, 2]) cube([30, 8, 1]);\n    }\n}\n\nmodule feet() {\n    // Four support feet\n    for(x = [-25, 25]) {\n        for(y = [-15, 15]) {\n            translate([x, y, 0]) {\n                cylinder(h=5, r=3);\n                translate([0, 0, 2.5]) sphere(r=3);\n            }\n        }\n    }\n}\n\nmodule shelf() {\n    // Internal shelf\n    translate([0, 0, 15]) cube([50, 30, wall], center=true);\n}\n\n// Assembly\nunion() {\n    main_body();\n    door();\n    translate([0, 22, 30]) rotate([0, 90, 0]) cooling_vent_array();\n    control_panel();\n    feet();\n    shelf();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cryolocker",
    "openscad_code": "// CryoLocker â€“ countertop flash-freeze / blast-chiller appliance\n// Safe for 3D-printing (2 mm walls, no overhangs >45Â°)\n// Overall size â‰ˆ 90 x 80 x 110 mm\n\n$fa = 2; $fs = 0.5;\n\nmodule cryoLocker(){\n    // Main body shell\n    difference(){\n        // Outer box\n        cube([90,80,110], center=true);\n        // Hollow cavity leaving 2 mm walls\n        translate([0,0,2]) cube([86,76,106], center=true);\n    }\n\n    // Front door\n    translate([0,41,0]) rotate([0,0,0])\n    difference(){\n        cube([84,2,86], center=true);               // door slab (2 mm thick)\n        translate([0,-1,30]) cube([75,3,35]);       // recessed handle cavity\n    }\n\n    // Door handle bar\n    translate([0,42.5,30]) rotate([90,0,0])\n    cylinder(h=75, d=4, center=true);\n\n    // Control panel ridge\n    translate([0,-38,45])\n    cube([70,5,25], center=true);\n\n    // Buttons (3Ã—)\n    for(dx=[-20,0,20])\n        translate([dx,-35.5,55])\n        cylinder(h=2.5, d=7);\n\n    // Dial knob\n    translate([30,-35.5,45])\n    rotate([90,0,0])\n    cylinder(h=2.5, d=12);\n\n    // Ventilation grill (rear)\n    translate([0,0,-54])\n    difference(){\n        cube([70,10,6], center=true);\n        for(y=[-3,0,3])\n            translate([0,y,0])\n            cube([68,1.5,8], center=true);\n    }\n\n    // Feet (4Ã—)\n    module foot(){\n        cylinder(h=4, d=8);\n    }\n    for(xy=[[-38,34],[-38,-34],[38,34],[38,-34])\n        translate([xy[0], xy[1], -57]) foot();\n\n    // Interior shelf\n    translate([0,0,-20])\n    cube([82,74,1.5], center=true);\n\n    // Internal rear cooling fins\n    for(z=[-35,-15,5,25])\n        translate([0,0,z])\n        cube([2,70,8], center=true);\n}\n\ncryoLocker();",
    "renders": true
  },
  {
    "kitchen_appliance": "freezehub",
    "openscad_code": "// FreezeHub Kitchen Appliance - Realistic Style\n// Medium complexity 3D printable model (120mm x 80mm x 90mm)\n\nmodule rounded_cube(size, r) {\n    // Create a cube with rounded edges\n    hull() {\n        translate([r, r, r]) sphere(r);\n        translate([size.x-r, r, r]) sphere(r);\n        translate([r, size.y-r, r]) sphere(r);\n        translate([size.x-r, size.y-r, r]) sphere(r);\n        translate([r, r, size.z-r]) sphere(r);\n        translate([size.x-r, r, size.z-r]) sphere(r);\n        translate([r, size.y-r, size.z-r]) sphere(r);\n        translate([size.x-r, size.y-r, size.z-r]) sphere(r);\n    }\n}\n\nmodule freezer_body() {\n    // Main freezer compartment with rounded corners\n    difference() {\n        rounded_cube([100, 70, 80], 5);\n        \n        // Inner cavity\n        translate([2, 2, 2]) rounded_cube([96, 66, 76], 3);\n    }\n    \n    // Base stand\n    translate([-2, -2, -5]) cube([104, 74, 5]);\n}\n\nmodule door() {\n    // Freezer door\n    translate([0, 70, 0]) {\n        difference() {\n            rounded_cube([100, 2, 80], 2);\n            // Door handle cavity\n            translate([80, 1, 30]) cube([15, 2, 20]);\n        }\n        \n        // Door handle\n        translate([82.5, 2, 40]) rotate([0, 90, 0]) \n            cylinder(h=15, r=2, $fn=16);\n    }\n}\n\nmodule control_panel() {\n    // Control panel on top\n    translate([5, 5, 80]) {\n        // Panel base\n        cube([40, 20, 3]);\n        \n        // Temperature display\n        translate([5, 5, 3.1]) cube([15, 10, 0.5]);\n        \n        // Buttons\n        for(i=[0:1]) {\n            translate([25, 5 + i*8, 3.1]) \n                cylinder(h=0.5, r=2, $fn=16);\n        }\n        \n        // Power LED\n        translate([35, 15, 3.1]) \n            cylinder(h=0.5, r=1, $fn=8);\n    }\n}\n\nmodule vent_grill() {\n    // Rear ventilation grill\n    translate([0, 0, 40]) {\n        for(i=[0:8]) {\n            translate([0, 75, i*8]) \n                cube([100, 1, 2]);\n        }\n    }\n}\n\nmodule feet() {\n    // Four support feet\n    for(x=[10, 90]) {\n        for(y=[10, 60]) {\n            translate([x, y, -7]) \n                cylinder(h=2, r=3, $fn=16);\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    freezer_body();\n    door();\n    control_panel();\n    vent_grill();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icyvault",
    "openscad_code": "// IcyVault Kitchen Appliance â€“ OpenSCAD 3D-printable model\n// Dimensions: 80 x 60 x 120 mm (L x W x H)\n\n$fn = 36;\n\nmodule icyvault() {\n    // Main body â€“ hollow fridge box\n    difference() {\n        translate([-40, -30, 0]) cube([80, 60, 120]);\n        translate([-38, -28, 2]) cube([76, 56, 116]);\n    }\n\n    // Front door\n    translate([-40, -30, 0])\n        cube([80, 2, 120]);\n\n    // Door handle\n    translate([36, -32, 80])\n    rotate([90, 0, 0])\n    cylinder(h = 20, d = 6);\n\n    // Top vent grill\n    for (i = [0:3]) {\n        translate([-35 + i * 20, -25, 120])\n        cube([10, 50, 2]);\n    }\n\n    // Control panel\n    translate([-20, -28, 65])\n    cube([40, 4, 20]);\n\n    // Buttons on panel\n    translate([-15, -26, 75])\n    cylinder(h = 3, d = 5);\n\n    translate([-5, -26, 75])\n    cylinder(h = 3, d = 5);\n\n    translate([5, -26, 75])\n    cylinder(h = 3, d = 5);\n\n    translate([15, -26, 75])\n    cylinder(h = 3, d = 5);\n\n    // Feet â€“ 4 cylinders at corners\n    translate([-35, -25, -5])\n    cylinder(h = 5, d = 8);\n\n    translate([35, -25, -5])\n    cylinder(h = 5, d = 8);\n\n    translate([-35, 25, -5])\n    cylinder(h = 5, d = 8);\n\n    translate([35, 25, -5])\n    cylinder(h = 5, d = 8);\n\n    // Hinge pins on right side\n    translate([40, -5, 0])\n    cylinder(h = 5, d = 4);\n\n    translate([40, -5, 115])\n    cylinder(h = 5, d = 4);\n}\n\n// Render the appliance\nicyvault();",
    "renders": true
  },
  {
    "kitchen_appliance": "tundrachest",
    "openscad_code": "// Tundrachest Kitchen Appliance - Realistic Style\n// Dimensions: 120x80x90mm (WxDxH)\n\n$fn = 50;\n\nmodule roundedCube(size, radius) {\n    h = size.z / 2 - radius;\n    hull() {\n        translate([radius - size.x/2, radius - size.y/2, -h])\n            sphere(radius);\n        translate([size.x/2 - radius, radius - size.y/2, -h])\n            sphere(radius);\n        translate([radius - size.x/2, size.y/2 - radius, -h])\n            sphere(radius);\n        translate([size.x/2 - radius, size.y/2 - radius, -h])\n            sphere(radius);\n        translate([radius - size.x/2, radius - size.y/2, h])\n            sphere(radius);\n        translate([size.x/2 - radius, radius - size.y/2, h])\n            sphere(radius);\n        translate([radius - size.x/2, size.y/2 - radius, h])\n            sphere(radius);\n        translate([size.x/2 - radius, size.y/2 - radius, h])\n            sphere(radius);\n    }\n}\n\nmodule mainBody() {\n    difference() {\n        roundedCube([120, 80, 90], 8);\n        translate([0, 0, 5])\n            roundedCube([116, 76, 86], 6);\n    }\n}\n\nmodule topPanel() {\n    translate([0, 0, 45]) {\n        difference() {\n            roundedCube([118, 78, 4], 4);\n            translate([0, 0, -1])\n                roundedCube([114, 74, 6], 2);\n        }\n    }\n}\n\nmodule controlPanel() {\n    translate([0, 40, 35]) {\n        difference() {\n            cube([40, 2, 20], center=true);\n            for(i=[-1, 1]) {\n                translate([i*12, -1, 5])\n                    cylinder(h=3, r=4);\n                translate([i*12, -1, -5])\n                    cylinder(h=3, r=4);\n            }\n        }\n    }\n}\n\nmodule button(x, y, z) {\n    translate([x, y, z]) {\n        cylinder(h=2, r=3);\n        translate([0, 0, 2])\n            sphere(r=3);\n    }\n}\n\nmodule buttons() {\n    translate([0, 40, 48]) {\n        for(i=[-15, -5, 5, 15]) {\n            button(i, 0, 0);\n        }\n    }\n}\n\nmodule handle() {\n    translate([0, -40, 25]) {\n        rotate([90, 0, 0]) {\n            difference() {\n                cylinder(h=60, r=3);\n                translate([0, 0, -1])\n                    cylinder(h=62, r=2);\n            }\n            translate([-30, 0, 0])\n                sphere(r=3);\n            translate([30, 0, 0])\n                sphere(r=3);\n        }\n    }\n}\n\nmodule feet() {\n    for(x=[-50, 50])\n        for(y=[-30, 30]) {\n            translate([x, y, -47]) {\n                difference() {\n                    cylinder(h=8, r=4);\n                    translate([0, 0, -1])\n                        cylinder(h=10, r=3);\n                }\n            }\n        }\n}\n\nmodule ventilationSlots() {\n    translate([0, -40, 0]) {\n        for(i=[-20:8:20]) {\n            translate([i, 0, -25])\n                cube([6, 2, 15]);\n        }\n    }\n}\n\nmodule logoPlate() {\n    translate([0, 40, 25]) {\n        difference() {\n            cube([30, 1, 10], center=true);\n            translate([0, -0.5, 0])\n                cube([26, 1, 8], center=true);\n        }\n    }\n}\n\nunion() {\n    mainBody();\n    topPanel();\n    controlPanel();\n    buttons();\n    handle();\n    feet();\n    ventilationSlots();\n    logoPlate();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "winterbin",
    "openscad_code": "// Winterbin kitchen appliance - compact countertop compost bin\n// Medium complexity realistic style\n\n$fn = 36;\n\n// Main dimensions\nbin_width = 80;\nbin_depth = 60;\nbin_height = 100;\nwall_thickness = 2;\n\n// Lid dimensions\nlid_height = 8;\nlid_overlap = 3;\n\n// Handle dimensions\nhandle_width = 40;\nhandle_height = 15;\nhandle_depth = 8;\n\n// Ventilation slots\nslot_width = 10;\nslot_height = 3;\nslot_spacing = 15;\nnum_slots = 3;\n\n// Filter compartment\nfilter_diameter = 25;\nfilter_depth = 5;\n\n// Base with slight taper\nmodule base() {\n    difference() {\n        // Main body - slightly tapered for molding\n        translate([0, 0, bin_height/2])\n            cube([bin_width, bin_depth, bin_height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, bin_height/2 + wall_thickness])\n            cube([bin_width - 2*wall_thickness, \n                  bin_depth - 2*wall_thickness, \n                  bin_height - wall_thickness], center=true);\n        \n        // Top edge fillet (simplified)\n        translate([0, 0, bin_height - wall_thickness])\n            cube([bin_width - 2*wall_thickness, \n                  bin_depth - 2*wall_thickness, \n                  wall_thickness*2], center=true);\n    }\n}\n\n// Hinged lid with handle\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, bin_height + lid_height/2])\n            cube([bin_width + lid_overlap*2, \n                  bin_depth + lid_overlap*2, \n                  lid_height], center=true);\n        \n        // Inner recess\n        translate([0, 0, bin_height + lid_height/2])\n            cube([bin_width, bin_depth, lid_height + 1], center=true);\n    }\n    \n    // Handle grip\n    translate([0, bin_depth/2 + handle_depth/2 - lid_overlap, \n               bin_height + lid_height + handle_height/2])\n        cube([handle_width, handle_depth, handle_height], center=true);\n    \n    // Handle supports\n    translate([-handle_width/2 - 5, \n               bin_depth/2 + handle_depth/2 - lid_overlap,\n               bin_height + lid_height + handle_height/2])\n        cube([5, handle_depth, handle_height], center=true);\n    \n    translate([handle_width/2 + 5, \n               bin_depth/2 + handle_depth/2 - lid_overlap,\n               bin_height + lid_height + handle_height/2])\n        cube([5, handle_depth, handle_height], center=true);\n}\n\n// Ventilation slots\nmodule ventilation_slots() {\n    for(i = [0:num_slots-1]) {\n        translate([-bin_width/2 + slot_spacing + i*slot_spacing,\n                   bin_depth/2 - wall_thickness,\n                   bin_height/2 + i*5])\n            cube([slot_width, wall_thickness, slot_height], center=true);\n    }\n}\n\n// Filter compartment lid\nmodule filter_lid() {\n    translate([0, -bin_depth/2 - filter_depth/2, bin_height - 20])\n        difference() {\n            cube([filter_diameter + 4, filter_depth, filter_diameter + 4], center=true);\n            translate([0, 0, -1])\n                cylinder(h = filter_depth + 2, d = filter_diameter);\n        }\n}\n\n// Anti-slip feet\nmodule feet() {\n    foot_diameter = 8;\n    foot_height = 3;\n    \n    positions = [[-bin_width/3, -bin_depth/3], \n                 [bin_width/3, -bin_depth/3],\n                 [-bin_width/3, bin_depth/3],\n                 [bin_width/3, bin_depth/3]];\n    \n    for(pos = positions) {\n        translate([pos[0], pos[1], 0])\n            cylinder(h = foot_height, d = foot_diameter);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    lid();\n    ventilation_slots();\n    filter_lid();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chilllocker",
    "openscad_code": "// ChillLocker â€“ compact countertop beverage/wine chiller\n// Overall size 80 Ã— 60 Ã— 110 mm (WÃ—DÃ—H), wall thickness 2 mm\n\n$fn = 32;\n\n/* -------- main body shell --------------------------------- */\nmodule shell() {\n    difference() {\n        // outer box\n        translate([-40, -30, 0]) cube([80, 60, 110]);\n        // hollow inside\n        translate([-38, -28, 2]) cube([76, 56, 106]);\n    }\n}\n\n/* -------- reversible door --------------------------------- */\nmodule door() {\n    difference() {\n        union() {\n            // door plate 2 mm thick\n            translate([40, -30, 0]) cube([2, 60, 90]);\n            // inset handle bar\n            translate([42, -10, 40]) cube([10, 20, 10]);\n        }\n        // finger recess\n        translate([41, -8, 42]) cube([8, 16, 6]);\n    }\n}\n\n/* -------- adjustable shelf set ---------------------------- */\nmodule shelf(y_pos) {\n    translate([0, y_pos, 55]) cube([76, 2, 40]);\n}\n\n/* -------- ventilation grille ------------------------------ */\nmodule vent_grille() {\n    for (i = [0:5]) {\n        translate([-38 + i*13, -32, 10]) cube([10, 2, 10]);\n    }\n}\n\n/* -------- control panel ----------------------------------- */\nmodule control_panel() {\n    // panel plate\n    translate([-38, 32, 75]) cube([76, 2, 25]);\n    // LCD rectangle\n    translate([-20, 34, 85]) cube([40, 1, 12]);\n    // two rotary knobs\n    for (x = [-15, 5]) {\n        translate([x, 35, 80]) rotate([90, 0, 0]) cylinder(h = 6, r = 4);\n    }\n}\n\n/* -------- feet -------------------------------------------- */\nmodule foot(x, y) {\n    translate([x, y, -2]) cylinder(h = 4, r = 4);\n}\n\n/* -------- assembly ---------------------------------------- */\nunion() {\n    shell();\n    door();\n    shelf(-10);  // lower shelf\n    shelf(10);   // upper shelf\n    vent_grille();\n    control_panel();\n    foot(-30, -20);\n    foot(30, -20);\n    foot(-30, 20);\n    foot(30, 20);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frosthold",
    "openscad_code": "// Frosthold Kitchen Appliance - Realistic Style\n// A compact under-counter freezer unit with top door and control panel\n\n$fn = 32;\n\n// Overall dimensions\nunit_width = 80;\nunit_depth = 70;\nunit_height = 120;\n\n// Wall thickness\nwall = 2;\n\n// Main body - freezer compartment\nmodule freezer_body() {\n    difference() {\n        // Outer shell\n        cube([unit_width, unit_depth, unit_height]);\n        \n        // Remove interior cavity\n        translate([wall, wall, wall])\n            cube([unit_width - 2*wall, unit_depth - 2*wall, unit_height - wall]);\n    }\n}\n\n// Top door with handle\nmodule freezer_door() {\n    // Door panel\n    translate([-wall/2, -wall/2, unit_height - wall])\n    difference() {\n        cube([unit_width + wall, unit_depth + wall, wall]);\n        // Handle recess\n        translate([unit_width/2 - 10, 5, -1])\n            cube([20, unit_depth - 10, wall + 2]);\n    }\n    \n    // Handle bar\n    translate([unit_width/2 - 8, 10, unit_height + wall/2])\n        rotate([90, 0, 0])\n            cylinder(h=15, d1=6, d2=6);\n}\n\n// Control panel on front\nmodule control_panel() {\n    // Panel housing\n    translate([unit_width - 25, -wall, unit_height - 35])\n        cube([20, wall + 1, 30]);\n    \n    // Temperature dial\n    translate([unit_width - 15, -wall - 0.5, unit_height - 25])\n        rotate([0, 90, 0])\n            cylinder(h=8, d=8);\n    \n    // LED indicator\n    translate([unit_width - 15, -wall - 0.5, unit_height - 15])\n        sphere(d=4);\n}\n\n// Adjustable feet (4 corners)\nmodule feet() {\n    for(x = [wall, unit_width - wall]) {\n        for(y = [wall, unit_depth - wall]) {\n            translate([x, y, -5])\n                cylinder(h=5, d=8);\n        }\n    }\n}\n\n// Ventilation grill on back\nmodule ventilation() {\n    translate([0, unit_depth + wall/2, 20])\n    for(i = [0:4]) {\n        translate([10 + i*15, 0, 0])\n            cube([8, wall, unit_height - 40]);\n    }\n}\n\n// Internal shelf supports\nmodule shelf_supports() {\n    for(z = [30, 60, 90]) {\n        // Left support\n        translate([wall + 3, wall + 3, z])\n            cube([4, unit_depth - 2*wall - 6, 2]);\n        \n        // Right support\n        translate([unit_width - wall - 7, wall + 3, z])\n            cube([4, unit_depth - 2*wall - 6, 2]);\n    }\n}\n\n// Assembly\nunion() {\n    freezer_body();\n    freezer_door();\n    control_panel();\n    feet();\n    ventilation();\n    shelf_supports();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icestack",
    "openscad_code": "// IceStack â€“ a compact manual ice-shaver / snow-cone maker\n// All dimensions in mm; wall thickness 2 mm; total height ~130 mm\n// No support needed, all angles â‰¥ 45Â° or bridges < 2 mm\n\n// Main body cylinder\nmodule body() {\n    difference() {\n        cylinder(h = 90, d = 80, $fn = 100);           // outer shell\n        translate([0, 0, 2])\n            cylinder(h = 88, d = 76, $fn = 100);       // hollow core\n    }\n}\n\n// Top hopper funnel\nmodule hopper() {\n    difference() {\n        cylinder(h1 = 40, h2 = 0, r1 = 45, r2 = 30, $fn = 60); // cone\n        translate([0, 0, 2])\n            cylinder(h1 = 38, h2 = 0, r1 = 43, r2 = 28, $fn = 60); // inner\n    }\n}\n\n// Press plunger with handle\nmodule plunger() {\n    difference() {\n        union() {\n            cylinder(h = 60, d = 28.5, $fn = 60);      // shaft\n            translate([0, 0, 65])\n                sphere(d = 38, $fn = 50);              // knob\n            // four radial ribs for grip\n            for (a = [0:90:270])\n                rotate([0, 0, a])\n                    translate([0, 19, 65])\n                        cube([4, 8, 8], center = true);\n        }\n        // hollow shaft\n        translate([0, 0, 5])\n            cylinder(h = 50, d = 24.5, $fn = 60);\n    }\n}\n\n// Crank arm and knob\nmodule crank() {\n    rotate([90, 0, 0])\n        translate([0, 0, -45])\n            difference() {\n                union() {\n                    // shaft stub\n                    cylinder(h = 30, d = 12, $fn = 30);\n                    // arm\n                    translate([0, 0, 15])\n                        rotate([0, 0, 0])\n                            cube([50, 6, 6], center = true);\n                    // knob\n                    translate([0, 25, 15])\n                        sphere(d = 18, $fn = 30);\n                }\n                // shaft bore\n                cylinder(h = 32, d = 8, $fn = 30);\n                // knob bore\n                translate([0, 25, 15])\n                    sphere(d = 14, $fn = 30);\n            }\n}\n\n// Shaving blade disc\nmodule blade() {\n    difference() {\n        cylinder(h = 2, d = 76, $fn = 100);            // disc\n        // six radial slots\n        for (a = [0:60:300])\n            rotate([0, 0, a])\n                translate([19, 0, -1])\n                    cube([38, 2.5, 4]);\n    }\n}\n\n// Exit chute\nmodule chute() {\n    difference() {\n        union() {\n            translate([0, 38, 10])\n                rotate([0, 40, 0])\n                    cube([50, 30, 40], center = true);\n            // support rib\n            translate([0, 20, 0])\n                cube([50, 4, 10], center = true);\n        }\n        // inner cavity\n        translate([0, 38, 10])\n            rotate([0, 40, 0])\n                cube([46, 26, 36], center = true);\n    }\n}\n\n// Base feet\nmodule feet() {\n    for (a = [45:90:315])\n        rotate([0, 0, a])\n            translate([30, 0, -5])\n                cylinder(h = 5, d = 12, $fn = 30);\n}\n\n// Assembly\ntranslate([0, 0, 5])  body();\ntranslate([0, 0, 92]) hopper();\ntranslate([0, 0, 45]) plunger();\nrotate([0, 0, 90])    crank();\ntranslate([0, 0, 45]) blade();\nchute();\nfeet();",
    "renders": true
  },
  {
    "kitchen_appliance": "glacierdock",
    "openscad_code": "// GlacierDock â€“ Counter-top ice & water dispenser\n// Overall footprint: 100 mm (W) Ã— 180 mm (D) Ã— 140 mm (H)\n// All walls 2 mm thick for reliable FDM printing, no large overhangs\n\nmodule body() {\n    // Main shell (hollow box)\n    difference() {\n        cube([100, 180, 140], center = true);          // outer\n        translate([0, 0, 2])\n            cube([96, 176, 136], center = true);       // inner void\n    }\n}\n\nmodule top_surface() {\n    // Counter / lid\n    translate([0, 0, 70])\n        cube([104, 184, 4], center = true);\n}\n\nmodule water_tank() {\n    // Removable 1.5 L water tank on the rear right\n    translate([30, -70, 50])\n        rotate([0, 15, 0])                            // slight tilt for gravity feed\n        difference() {\n            cube([40, 60, 90], center = true);\n            translate([0, 0, 2])\n                cube([36, 56, 86], center = true);\n        }\n}\n\nmodule spout() {\n    // Front spout with 30 mm protrusion\n    translate([0, 90, 30])\n        rotate([90, 0, 0])\n        cylinder(h = 30, r1 = 12, r2 = 8);\n}\n\nmodule drip_grid() {\n    // Removable drip tray grid\n    translate([0, 105, 0])\n        for (x = [-35:10:35])\n            for (y = [-5:5:5])\n                translate([x, y, 0])\n                    cube([8, 4, 2], center = true);\n}\n\nmodule drip_tray() {\n    // Tray under the spout\n    difference() {\n        translate([0, 105, -3])\n            cube([70, 40, 6], center = true);\n        translate([0, 105, -1])\n            cube([66, 36, 6], center = true);\n    }\n}\n\nmodule buttons() {\n    // Three soft-touch buttons on the front face\n    for (i = [0:2]) {\n        translate([-30 + i * 30, 92, 50])\n            cylinder(h = 6, r = 6);\n    }\n}\n\nmodule display() {\n    // Small LED display above buttons\n    translate([0, 92, 65])\n        cube([50, 2, 15], center = true);\n}\n\nmodule vent_slots() {\n    // Rear ventilation slots\n    for (i = [0:9]) {\n        translate([-45 + i * 10, -92, 0])\n            cube([6, 2, 40], center = true);\n    }\n}\n\nmodule feet() {\n    // Four rubber feet\n    for (x = [-40, 40])\n        for (y = [-80, 80])\n            translate([x, y, -72])\n                cylinder(h = 4, r = 5);\n}\n\n// Assembly\nunion() {\n    body();\n    top_surface();\n    water_tank();\n    spout();\n    drip_tray();\n    drip_grid();\n    buttons();\n    display();\n    vent_slots();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "arcticcore",
    "openscad_code": "// ArcticCore Kitchen Blender â€“ medium-complexity realistic style\n// 3D-printable, no support, 2 mm wall thickness, largest dim â‰ˆ 90 mm\n\n$fn = 64;\n\n// overall scale\nSCALE = 1.5;\n\n// base unit for quick scaling\nmodule scaled() {\n    scale([SCALE, SCALE, SCALE]) children();\n}\n\n// main body shell\nmodule body() {\n    difference() {\n        // outer block with domed top\n        union() {\n            hull() {\n                cube([40, 40, 35], center = true);\n                translate([0, 0, 18]) cube([38, 38, 35], center = true);\n            }\n            translate([0, 0, 35]) sphere(d = 38);\n        }\n        // inner cavity\n        translate([0, 0, 2]) cube([36, 36, 65], center = true);\n    }\n}\n\n// motor ventilation grill\nmodule grill() {\n    difference() {\n        translate([0, 20.5, 20]) cube([36, 2, 15], center = true);\n        for (i = [-7:7]) {\n            translate([i * 2.2, 20.5, 20]) cube([1.5, 3, 15], center = true);\n        }\n    }\n}\n\n// control dial\nmodule dial() {\n    rotate([90, 0, 0]) {\n        cylinder(h = 4, r = 7, center = true);\n        difference() {\n            cylinder(h = 4.2, r = 5, center = true);\n            cube([10, 10, 5], center = true);\n        }\n    }\n}\n\n// power LED\nmodule led() {\n    translate([12, 20.5, 28]) sphere(d = 3);\n}\n\n// blade assembly hub\nmodule blades() {\n    difference() {\n        cylinder(h = 8, r = 12, center = true);\n        cylinder(h = 9, r = 2, center = true);\n    }\n    for (a = [0:120:359]) {\n        rotate([0, 0, a]) {\n            translate([8, 0, 0]) cube([12, 2, 1.5], center = true);\n        }\n    }\n}\n\n// jar\nmodule jar() {\n    difference() {\n        // outer jar\n        union() {\n            cylinder(h = 50, r = 18, center = false);\n            translate([0, 0, 50]) sphere(d = 36);\n        }\n        // inner cavity\n        translate([0, 0, -1]) cylinder(h = 52, r = 16, center = false);\n    }\n    // handle\n    translate([18, 0, 25]) rotate([0, 90, 0]) {\n        difference() {\n            cylinder(h = 30, r = 6);\n            cylinder(h = 32, r = 4);\n        }\n    }\n}\n\n// assembly\nscaled() {\n    union() {\n        body();\n        grill();\n        translate([0, 0, 12]) dial();\n        led();\n        translate([0, 0, 35 + 4]) blades();\n        translate([0, 0, 35 + 4 + 8 + 25]) jar();\n    }\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzeronest",
    "openscad_code": "// Sub-Zero style under-counter refrigerator/freezer drawer unit\n// Realistic medium-complexity model, ~110 lines, 3D-printable\n\n$fn = 36;\n\n// Overall dimensions\nwidth = 70;\nheight = 50;\ndepth = 45;\nwall = 2;\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([width, depth, height], center = true);\n        \n        // Hollow interior\n        translate([0, 0, wall/2])\n            cube([width-wall*2, depth-wall*2, height-wall*1.5], center = true);\n    }\n}\n\n// Stainless steel front panel\nmodule front_panel() {\n    color([0.7,0.7,0.75])\n    translate([0, -depth/2-wall/2, 0])\n        cube([width, wall, height], center = true);\n}\n\n// Drawer fronts\nmodule drawer_front(top) {\n    z_pos = top ? height/4 : -height/4;\n    \n    difference() {\n        // Main drawer face\n        color([0.7,0.7,0.75])\n        translate([0, -depth/2, z_pos])\n            cube([width-wall*4, wall*2, height/2-wall*2], center = true);\n        \n        // Handle recess\n        translate([0, -depth/2-wall, z_pos])\n            cube([width/3, wall+0.5, 20], center = true);\n        \n        // Handle\n        color([0.5,0.5,0.5])\n        translate([0, -depth/2-wall-0.25, z_pos])\n            cube([width/3-wall*2, wall, 18], center = true);\n    }\n    \n    // Ventilation grille\n    color([0.1,0.1,0.1])\n    translate([0, -depth/2+wall, z_pos+height/6])\n        cube([width-wall*6, wall, 4], center = true);\n}\n\n// Control panel\nmodule control_panel() {\n    color([0.2,0.2,0.2])\n    translate([width/2-wall, -depth/2+wall, height/2-wall*3])\n        cube([wall*2, depth/4, 5], center = true);\n    \n    // LED indicators\n    for (i = [0:2]) {\n        color([0,0.8,0])\n        translate([width/2+wall, -depth/2+wall*2+i*3, height/2-wall*2])\n            sphere(1);\n    }\n    \n    // Temperature display\n    color([0.1,0.1,0.1])\n    translate([width/2-2, -depth/2+wall, height/2-wall*6])\n        cube([4, depth/4, 3], center = true);\n}\n\n// Base feet\nmodule feet() {\n    for (x = [-1, 1]) {\n        for (y = [-1, 1]) {\n            translate([x*width/3, y*depth/3, -height/2-wall])\n                cylinder(h=wall*2, r=wall, center=false);\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    body();\n    front_panel();\n    \n    // Two drawer fronts\n    drawer_front(true);   // Top drawer\n    drawer_front(false);  // Bottom drawer\n    \n    control_panel();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "polarcube",
    "openscad_code": "// Polarcube kitchen appliance (ice cube maker) - realistic style, medium complexity\n// Approximate dimensions: 120x120x140mm\n\n// Overall scale factor\nscale_factor = 1;\n\n// Main dimensions\nbody_size = 100 * scale_factor;\nbody_height = 120 * scale_factor;\nwall_thickness = 2 * scale_factor;\n\n// Corner radius for rounded edges\ncorner_radius = 5 * scale_factor;\n\n// Control panel dimensions\npanel_width = 40 * scale_factor;\npanel_height = 15 * scale_factor;\npanel_depth = 3 * scale_factor;\n\n// Button dimensions\nbutton_diameter = 8 * scale_factor;\nbutton_height = 2 * scale_factor;\n\n// Ice container\ncontainer_size = 80 * scale_factor;\ncontainer_height = 60 * scale_factor;\ncontainer_wall = 2 * scale_factor;\n\n// Feet\nfoot_size = 8 * scale_factor;\nfoot_height = 5 * scale_factor;\n\n// Handle\nhandle_width = 60 * scale_factor;\nhandle_height = 8 * scale_factor;\nhandle_depth = 12 * scale_factor;\n\n// Vent slots\nslot_width = 15 * scale_factor;\nslot_height = 3 * scale_factor;\nslot_spacing = 20 * scale_factor;\nnum_slots = 4;\n\n// Main body module\nmodule main_body() {\n    difference() {\n        // Outer shell with rounded corners\n        minkowski() {\n            cube([body_size, body_size, body_height], center = true);\n            sphere(corner_radius);\n        }\n        \n        // Hollow interior\n        minkowski() {\n            cube([body_size - 2*wall_thickness, body_size - 2*wall_thickness, body_height - wall_thickness], center = true);\n            sphere(corner_radius - 1);\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([0, body_size/2 - panel_depth/2, body_height/2 - panel_height/2]) {\n        // Panel base\n        cube([panel_width, panel_depth, panel_height], center = true);\n        \n        // Buttons\n        translate([-panel_width/4, 0, panel_height/2 - button_height/2]) {\n            cylinder(h = button_height, d = button_diameter);\n        }\n        translate([panel_width/4, 0, panel_height/2 - button_height/2]) {\n            cylinder(h = button_height, d = button_diameter);\n        }\n        \n        // LED indicator\n        translate([0, panel_depth/2 + 0.5, panel_height/2 - 2]) {\n            sphere(d = 3);\n        }\n    }\n}\n\n// Ice container (removable part)\nmodule ice_container() {\n    difference() {\n        // Outer container\n        cube([container_size, container_size, container_height], center = true);\n        \n        // Inner cavity\n        translate([0, 0, -container_wall/2]) {\n            cube([container_size - 2*container_wall, container_size - 2*container_wall, container_height - container_wall], center = true);\n        }\n    }\n}\n\n// Handle for ice container\nmodule container_handle() {\n    translate([0, container_size/2 + handle_depth/2, container_height/2]) {\n        difference() {\n            cube([handle_width, handle_depth, handle_height], center = true);\n            translate([0, 0, handle_height/2 - 2]) {\n                cube([handle_width - 10, handle_depth - 4, handle_height - 2], center = true);\n            }\n        }\n    }\n}\n\n// Ventilation slots\nmodule ventilation_slots() {\n    for(i = [0:num_slots-1]) {\n        translate([-body_size/2 - 1, -body_size/2 + slot_spacing + i*slot_spacing, -body_height/2 + 20]) {\n            cube([wall_thickness + 2, slot_width, slot_height]);\n        }\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*body_size/3, y*body_size/3, -body_height/2 - foot_height/2]) {\n                cylinder(h = foot_height, d = foot_size);\n            }\n        }\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([body_size/2, body_size/2 - 10, -body_height/2 + 20]) {\n        rotate([0, 90, 0]) {\n            cylinder(h = 15, d = 5);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main appliance body\n    main_body();\n    \n    // Control panel and buttons\n    control_panel();\n    \n    // Ventilation\n    ventilation_slots();\n    \n    // Feet\n    feet();\n    \n    // Power cord\n    power_cord();\n}\n\n// Ice container (shown slightly raised for visibility)\ntranslate([0, 0, 10]) {\n    ice_container();\n    container_handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "snowframe",
    "openscad_code": "// Snowframe Kitchen Blender\n// Realistic style, medium complexity\n// Overall dimensions: 120mm x 90mm x 180mm\n\n// Main body module\nmodule blender_body() {\n    // Base frame\n    difference() {\n        cube([120, 90, 30], center=true);\n        translate([0, 0, 15])\n            cube([116, 86, 30], center=true);\n    }\n    \n    // Front panel with buttons\n    translate([0, -44, 0])\n        difference() {\n            cube([100, 4, 25], center=true);\n            // Button holes\n            for(i = [-1, 0, 1]) {\n                translate([i*25, 0, 5])\n                    cube([15, 5, 10], center=true);\n            }\n        }\n}\n\n// Motor housing\nmodule motor_housing() {\n    translate([0, 0, 30])\n        cylinder(h=60, r1=40, r2=45, $fn=32);\n}\n\n// Control panel buttons\nmodule buttons() {\n    for(i = [-1, 0, 1]) {\n        translate([i*25, -42, 5])\n            cylinder(h=6, r=7, $fn=16);\n    }\n}\n\n// Jar base\nmodule jar_base() {\n    translate([0, 0, 90])\n        cylinder(h=15, r=35, $fn=32);\n}\n\n// Jar body\nmodule jar_body() {\n    // Main jar\n    difference() {\n        translate([0, 0, 105])\n            cylinder(h=60, r1=32, r2=28, $fn=32);\n        // Inner cavity\n        translate([0, 0, 105])\n            cylinder(h=60, r1=30, r2=26, $fn=32);\n    }\n    \n    // Handle\n    translate([35, 0, 135])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h=50, r=8, $fn=16);\n                cylinder(h=50, r=6, $fn=16);\n            }\n    \n    // Handle support\n    translate([32, 0, 135])\n        rotate([90, 0, 0])\n            cylinder(h=15, r=8, $fn=16);\n}\n\n// Lid\nmodule lid() {\n    translate([0, 0, 165])\n        difference() {\n            cylinder(h=10, r=28, $fn=32);\n            translate([0, 0, -1])\n                cylinder(h=12, r=26, $fn=32);\n        }\n    \n    // Lid knob\n    translate([0, 0, 170])\n        cylinder(h=8, r=8, $fn=16);\n}\n\n// Ventilation slots\nmodule ventilation_slots() {\n    for(i = [-30:10:30]) {\n        rotate([0, 0, i])\n            translate([0, 0, 45])\n                cube([40, 2, 10], center=true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-60, 0, -15])\n        rotate([90, 0, 0])\n            cylinder(h=60, r=5, $fn=16);\n}\n\n// Assembly\nunion() {\n    blender_body();\n    motor_housing();\n    buttons();\n    jar_base();\n    jar_body();\n    lid();\n    \n    // Ventilation around motor housing\n    difference() {\n        translate([0, 0, 45])\n            cylinder(h=30, r=46, $fn=32);\n        translate([0, 0, 45])\n            cylinder(h=30, r=44, $fn=32);\n    }\n    ventilation_slots();\n    \n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coolbin",
    "openscad_code": "// Coolbin Kitchen Appliance - Realistic Style\n// A medium-complexity 3D printable coolbin with compartments and controls\n\n// Overall dimensions\nbin_width = 60;\nbin_depth = 40;\nbin_height = 80;\n\n// Wall thickness\nwall = 2;\n\n// Module for rounded rectangle\nmodule rounded_rect(w, d, h, r) {\n    translate([r, r, 0])\n    difference() {\n        cube([w-2*r, d-2*r, h]);\n        for (x = [r, w-r], y = [r, d-r]) {\n            translate([x, y, -1])\n            cylinder(r=r, h=h+2, $fn=20);\n        }\n    }\n}\n\n// Main body\nmodule coolbin_body() {\n    difference() {\n        // Outer shell with rounded edges\n        translate([-bin_width/2, -bin_depth/2, 0])\n        rounded_rect(bin_width, bin_depth, bin_height, 5);\n        \n        // Inner cavity\n        translate([-bin_width/2 + wall, -bin_depth/2 + wall, wall])\n        cube([bin_width - 2*wall, bin_depth - 2*wall, bin_height - wall]);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([bin_width/2 - 15, -bin_depth/2 - 3, bin_height - 25])\n    cube([15, 6, 20]);\n    \n    // Buttons\n    for (i = [0:2]) {\n        translate([bin_width/2 - 12, -bin_depth/2 - 1, bin_height - 20 + i*6])\n        cylinder(r=2, h=3, $fn=16);\n    }\n    \n    // LED indicator\n    translate([bin_width/2 - 8, -bin_depth/2 - 1, bin_height - 5])\n    cylinder(r=1.5, h=2, $fn=16);\n}\n\n// Handle\nmodule handle() {\n    // Handle mount\n    translate([-bin_width/2 - 5, -5, bin_height/2])\n    rotate([90, 0, 0])\n    cylinder(r=3, h=10, $fn=16);\n    \n    // Handle grip\n    translate([-bin_width/2 - 10, -5, bin_height/2])\n    rotate([90, 0, 0])\n    cylinder(r=2.5, h=20, $fn=16);\n    \n    // Other mount\n    translate([-bin_width/2 - 5, 5, bin_height/2])\n    rotate([90, 0, 0])\n    cylinder(r=3, h=10, $fn=16);\n}\n\n// Ventilation slots\nmodule vents() {\n    for (i = [0:4]) {\n        translate([bin_width/2 - 25 + i*5, -bin_depth/2 - 1, 10])\n        cube([2, 2, 30]);\n    }\n}\n\n// Feet\nmodule feet() {\n    for (x = [-1, 1], y = [-1, 1]) {\n        translate([x*bin_width/3, y*bin_depth/3, -5])\n        cylinder(r=3, h=5, $fn=16);\n    }\n}\n\n// Internal divider\nmodule divider() {\n    translate([-bin_width/2 + wall, 0, wall])\n    cube([bin_width - 2*wall, wall, bin_height - 2*wall]);\n}\n\n// Assembly\nunion() {\n    coolbin_body();\n    control_panel();\n    handle();\n    vents();\n    feet();\n    divider();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cryovault",
    "openscad_code": "// CryoVault Kitchen Appliance - Medium Complexity\n// Realistic style 3D printable freezer pod for kitchen use\n\nmodule cryoVault() {\n    difference() {\n        // Main body shell\n        union() {\n            // Main body - rounded rectangular shape\n            translate([-20, -15, 0])\n                minkowski() {\n                    cube([40, 30, 45]);\n                    sphere(3);\n                }\n            \n            // Top control panel\n            translate([-22, -17, 48])\n                cube([44, 34, 6]);\n                \n            // Base feet\n            translate([-15, -10, -5])\n                cylinder(h=5, r=2);\n            translate([15, -10, -5])\n                cylinder(h=5, r=2);\n            translate([-15, 10, -5])\n                cylinder(h=5, r=2);\n            translate([15, 10, -5])\n                cylinder(h=5, r=2);\n                \n            // Handle bar\n            translate([22, 0, 25])\n                rotate([0, 90, 0])\n                    cylinder(h=25, r=2);\n        }\n        \n        // Door cavity\n        translate([-19, -14, 1])\n            cube([38, 28, 43]);\n            \n        // Control panel display\n        translate([-20, -15, 49])\n            cube([40, 12, 2]);\n            \n        // Control buttons\n        for(x = [-15, -10, -5, 0, 5, 10, 15]) {\n            translate([x, -5, 51])\n                cylinder(h=2, r=1.5);\n        }\n        \n        // Temperature dial\n        translate([18, -5, 51])\n            cylinder(h=2, r=3);\n            \n        // LED indicators\n        for(x = [-17, -12, -7]) {\n            translate([x, 8, 51])\n                sphere(1);\n        }\n        \n        // Ventilation slots\n        for(y = [-12, -8, -4, 0, 4, 8, 12]) {\n            translate([0, y, 0])\n                cube([40, 1, 2]);\n        }\n        \n        // Side vent holes\n        for(z = [10, 20, 30]) {\n            translate([-22, 0, z])\n                rotate([0, 90, 0])\n                    cylinder(h=4, r=1);\n            translate([22, 0, z])\n                rotate([0, 90, 0])\n                    cylinder(h=4, r=1);\n        }\n    }\n    \n    // Door panel\n    difference() {\n        translate([-18, -13, 1.5])\n            cube([36, 26, 41]);\n            \n        // Door handle\n        translate([15, 0, 22])\n            rotate([0, 90, 0])\n                cylinder(h=10, r=3);\n                \n        // Window\n        translate([-10, -8, 10])\n            cube([20, 16, 20]);\n            \n        // Window glass effect\n        translate([-9, -7, 11])\n            cube([18, 14, 18]);\n    }\n    \n    // Internal shelf supports\n    for(z = [15, 25, 35]) {\n        translate([-17, -12, z])\n            cube([2, 24, 1]);\n        translate([15, -12, z])\n            cube([2, 24, 1]);\n    }\n}\n\ncryoVault();",
    "renders": true
  },
  {
    "kitchen_appliance": "freezelocker",
    "openscad_code": "// Freezelocker Kitchen Appliance - Medium Complexity Realistic Style\n// Overall dimensions: 120mm x 100mm x 130mm (HxWxD)\n\n// Main body module\nmodule body() {\n    // Main cabinet shell - 2mm walls\n    difference() {\n        // Outer shell\n        cube([100, 120, 130], center=true);\n        \n        // Inner cavity\n        translate([0, 0, 0])\n        cube([96, 116, 126], center=true);\n    }\n}\n\n// Top surface with rounded edges\nmodule top_panel() {\n    translate([0, 0, 65])\n    difference() {\n        // Main top panel\n        cube([102, 122, 4], center=true);\n        \n        // Rounded front edge\n        translate([0, 61, 0])\n        cube([102, 2, 4], center=true);\n    }\n}\n\n// Bottom base with ventilation\nmodule base() {\n    translate([0, 0, -67])\n    cube([104, 124, 4], center=true);\n    \n    // Ventilation slots\n    for(x = [-40:10:40]) {\n        translate([x, 0, -65])\n        cube([8, 120, 2], center=true);\n    }\n}\n\n// Door with handle\nmodule door() {\n    // Door panel\n    translate([0, 62, 0])\n    cube([94, 2, 124], center=true);\n    \n    // Door seal\n    translate([0, 61, 0])\n    cube([92, 1, 122], center=true);\n    \n    // Handle\n    translate([30, 63.5, 20])\n    cylinder(h=50, d=6, center=true);\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel housing\n    translate([0, 0, 55])\n    cube([60, 10, 30], center=true);\n    \n    // Display screen\n    translate([0, 5.5, 65])\n    cube([40, 1, 15], center=true);\n    \n    // Buttons\n    for(pos = [[-20, 55, 60], [-10, 55, 60], [0, 55, 60], [10, 55, 60], [20, 55, 60]]) {\n        translate(pos)\n        cylinder(h=2, d=4, center=true);\n    }\n    \n    // Temperature dial\n    translate([35, 5.5, 65])\n    rotate([90, 0, 0])\n    cylinder(h=8, d1=10, d2=8, center=true);\n}\n\n// Internal shelves\nmodule shelves() {\n    for(z = [-30:30:60]) {\n        translate([0, 0, z])\n        cube([90, 2, 110], center=true);\n    }\n}\n\n// Back panel with power cord\nmodule back_panel() {\n    translate([0, -62, 0])\n    cube([100, 2, 130], center=true);\n    \n    // Power cord\n    translate([0, -63, -50])\n    rotate([0, 90, 0])\n    cylinder(h=30, d=5, center=true);\n}\n\n// Hinges\nmodule hinges() {\n    for(z = [-40:80:80]) {\n        // Top hinge\n        translate([30, 50, z])\n        cube([10, 4, 8], center=true);\n        \n        // Bottom hinge\n        translate([-30, 50, z])\n        cube([10, 4, 8], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    top_panel();\n    base();\n    door();\n    control_panel();\n    shelves();\n    back_panel();\n    hinges();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icybin",
    "openscad_code": "// IcyBin Countertop Ice Maker\n// Overall dimensions: 120mm W x 180mm D x 130mm H\n// Medium-complexity realistic style with printable details\n\n$fn = 64;\n\nmodule icybin() {\n    difference() {\n        // Main body shell\n        translate([-60, -90, 0]) cube([120, 180, 130]);\n        \n        // Hollow interior\n        translate([-58, -88, 2]) cube([116, 176, 126]);\n    }\n    \n    // Front control panel\n    translate([-60, 88, 30]) cube([120, 2, 70]);\n    \n    // Control buttons\n    for (i = [0:1]) {\n        translate([-45 + i*30, 91, 85]) rotate([90, 0, 0]) \n            cylinder(h=15, r=8);\n        translate([-45 + i*30, 91, 85+15]) sphere(r=8);\n    }\n    \n    // LED indicator light\n    translate([40, 91, 100]) sphere(r=5);\n    \n    // Top lid\n    difference() {\n        translate([-55, -85, 130]) cube([110, 170, 5]);\n        translate([-53, -83, 132]) cube([106, 166, 3]);\n    }\n    \n    // Lid handle\n    translate([-55, -10, 135]) cube([110, 20, 10]);\n    \n    // Ice basket\n    translate([-50, -60, 5]) difference() {\n        cube([100, 120, 50]);\n        translate([-48, -58, 7]) cube([96, 116, 46]);\n    }\n    \n    // Drain plug at bottom\n    translate([50, -85, 5]) rotate([90, 0, 0]) \n        cylinder(h=10, r=6);\n    \n    // Ventilation grills on sides\n    for (y = [-60:20:60]) {\n        translate([-60, y, 20]) cube([2, 15, 5]);\n        translate([58, y, 20]) cube([2, 15, 5]);\n    }\n    \n    // Feet\n    for (x = [-45:90:90]) {\n        for (y = [-70:140:140]) {\n            translate([x, y, 0]) cylinder(h=5, r=5);\n        }\n    }\n    \n    // Water level window\n    difference() {\n        translate([58, -20, 60]) cube([2, 40, 30]);\n        translate([59, -18, 62]) cube([1, 36, 26]);\n    }\n    \n    // Power cord exit\n    translate([0, -90, 15]) rotate([0, 90, 0]) \n        cylinder(h=20, r=4);\n}\n\nicybin();",
    "renders": true
  },
  {
    "kitchen_appliance": "tundravault",
    "openscad_code": "// TundraVault Kitchen Appliance - Realistic Style with Medium Complexity\n// A modern kitchen appliance with sleek design and functional storage compartments\n\n// Overall dimensions (mm)\nappliance_width = 120;\nappliance_height = 80;\nappliance_depth = 70;\n\n// Wall thickness\nwall_thickness = 2;\n\n// Main body module\nmodule main_body() {\n    // Main housing - slightly rounded edges\n    difference() {\n        // Outer shell\n        translate([-appliance_width/2, -appliance_depth/2, 0])\n            cube([appliance_width, appliance_depth, appliance_height]);\n        \n        // Inner cavity\n        translate([-appliance_width/2 + wall_thickness, \n                   -appliance_depth/2 + wall_thickness, \n                   wall_thickness])\n            cube([appliance_width - 2*wall_thickness, \n                  appliance_depth - 2*wall_thickness, \n                  appliance_height - wall_thickness]);\n    }\n}\n\n// Control panel with buttons and display\nmodule control_panel() {\n    // Panel base\n    translate([appliance_width/2 - 25, -15, appliance_height - 30])\n        cube([20, 30, 5]);\n    \n    // Buttons\n    for (i = [0:2]) {\n        translate([appliance_width/2 - 20, -10 + i*10, appliance_height - 25])\n            cylinder(h=2, r=3, $fn=16);\n    }\n    \n    // Display screen\n    translate([appliance_width/2 - 22, -5, appliance_height - 27])\n        cube([10, 10, 1]);\n}\n\n// Air vents on sides\nmodule side_vents() {\n    // Left side vents\n    for (i = [0:3]) {\n        translate([-appliance_width/2 - 1, \n                   -appliance_depth/2 + 10 + i*15, \n                   20 + i*10])\n            rotate([0, 90, 0])\n                cube([20, 1, 3]);\n    }\n    \n    // Right side vents (mirrored)\n    mirror([1, 0, 0])\n        side_vents();\n}\n\n// Storage compartment door\nmodule storage_door() {\n    // Door panel\n    translate([-appliance_width/2 + 5, appliance_depth/2 - 1, 15])\n        cube([appliance_width - 10, 2, 25]);\n    \n    // Door handle\n    translate([0, appliance_depth/2 + 1, 25])\n        rotate([90, 0, 0])\n            cylinder(h=10, r=2, $fn=16);\n}\n\n// Base with feet\nmodule appliance_base() {\n    // Base frame\n    translate([-appliance_width/2, -appliance_depth/2, 0])\n        cube([appliance_width, appliance_depth, 5]);\n    \n    // Feet - one at each corner\n    for (x = [-1, 1]) {\n        for (y = [-1, 1]) {\n            translate([x * (appliance_width/2 - 10), \n                      y * (appliance_depth/2 - 10), \n                      -3])\n                cylinder(h=5, r=3, $fn=16);\n        }\n    }\n}\n\n// Power cord outlet\nmodule power_outlet() {\n    translate([-appliance_width/2 + 10, -appliance_depth/2 - 1, 10])\n        cube([8, 2, 6]);\n    \n    // Cord hole\n    translate([-appliance_width/2 + 14, -appliance_depth/2 - 2, 12])\n        cylinder(h=4, r=2, $fn=8);\n}\n\n// Assembly\nunion() {\n    // Base\n    appliance_base();\n    \n    // Main body\n    main_body();\n    \n    // Control panel\n    control_panel();\n    \n    // Side vents\n    side_vents();\n    \n    // Storage door\n    storage_door();\n    \n    // Power outlet\n    power_outlet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "winterhold",
    "openscad_code": "// Winterhold Kitchen Appliance â€“ a rugged, frost-forged coffee grinder\n// Overall printable size â‰ˆ 80 mm tall Ã— 70 mm deep Ã— 80 mm wide\n// Wall thickness = 2 mm throughout\n\n$fn = 36;\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 45])\n            cube([76, 66, 90], center = true);\n\n        // Inner cavity â€“ leave 2 mm walls\n        translate([0, 0, 45])\n            cube([72, 62, 86], center = true);\n    }\n}\n\n// Frosted hopper lid â€“ removable top\nmodule hopperLid() {\n    difference() {\n        // Lid disc\n        translate([0, 0, 95])\n            cylinder(h = 4, r = 30);\n\n        // Grip recess\n        translate([0, 0, 98])\n            cylinder(h = 2, r = 20);\n    }\n    // Small knob\n    translate([0, 0, 99])\n        cylinder(h = 6, r = 10);\n}\n\n// Hopper cylinder (holds beans)\nmodule hopper() {\n    difference() {\n        cylinder(h = 35, r1 = 28, r2 = 28);\n        // Bean inlet taper\n        translate([0, 0, -1])\n            cylinder(h = 37, r1 = 26, r2 = 26);\n    }\n}\n\n// Front drawer for grounds\nmodule groundsDrawer() {\n    translate([0, 34, 30])\n    difference() {\n        // Drawer box\n        cube([70, 2, 40], center = true);\n        // Inner cavity\n        translate([0, 0, 0])\n            cube([66, 1.5, 36], center = true);\n        // Handle hole\n        translate([0, 2, -18])\n            rotate([90, 0, 0])\n                cylinder(h = 5, r = 6);\n    }\n    // Drawer pull\n    translate([0, 36, 12])\n        rotate([90, 0, 0])\n            cylinder(h = 8, r = 6);\n}\n\n// Frosted texture rings on the sides\nmodule frostRing(z) {\n    translate([0, 0, z])\n        cylinder(h = 2, r = 38);\n}\n\n// Crank handle\nmodule crank() {\n    // Arm\n    translate([0, 0, 0])\n        rotate([0, 90, 0])\n            cylinder(h = 25, r = 4);\n    // Knob\n    translate([25, 0, 0])\n        sphere(d = 12);\n}\n\n// Front adjustment dial\nmodule grindDial() {\n    translate([0, 33, 15])\n    difference() {\n        cylinder(h = 4, r = 15);\n        // Indicator notch\n        translate([0, 0, 2])\n            cube([3, 15, 2], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    \n    // Hopper stack\n    translate([0, 0, 80]) hopperLid();\n    translate([0, 0, 60]) hopper();\n    \n    // Drawer\n    groundsDrawer();\n    \n    // Frost rings for detail\n    for (z = [30, 40, 50, 60]) frostRing(z);\n\n    // Crank on right side\n    translate([38, 0, 60]) crank();\n\n    // Grind dial front\n    grindDial();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chillchest",
    "openscad_code": "// Chillchest Kitchen Appliance â€“ medium-complexity, 3D-printable, 100 mm tall\n// Main body with front-opening door, small freezer compartment, control panel and feet.\n\n$fn = 36;          // Smooth curves for 3D-printing\nwall = 2;          // Uniform 3D-printable wall thickness\n\nmodule main_box() {\n    // Opaque outer shell\n    difference() {\n        cube([60,40,80]);               // 60Ã—40Ã—80 mm main volume\n        translate([wall,wall,wall])\n            cube([60-2*wall,40-2*wall,80-wall]);  // Hollow inside\n    }\n}\n\nmodule door() {\n    // Single front door\n    translate([0,-wall,10]) {\n        difference() {\n            cube([56,wall,60]);                 // Door leaf\n            translate([3,0,3])\n                cube([50,wall+0.1,54]);         // Inner recess\n        }\n        // Recessed handle bar\n        translate([28,-wall-0.5,32])\n            rotate([90,0,0])\n                cylinder(h=12,r=2,center=true);\n    }\n}\n\nmodule freezer_box() {\n    // Small upper freezer compartment\n    translate([5,5,60]) {\n        difference() {\n            cube([50,30,15]);\n            translate([wall,wall,wall])\n                cube([50-2*wall,30-2*wall,15-wall]);\n        }\n    }\n}\n\nmodule control_panel() {\n    // Top-front control strip\n    translate([10,35,75]) {\n        cube([40,5,5]);\n        // Buttons\n    for(i=[0:2])\n        translate([8+i*12,2.5,2.5])\n            cylinder(h=2,r=2,$fn=20);\n    }\n}\n\nmodule feet() {\n    // Four rounded feet\n    for(x=[8,52], y=[8,32])\n        translate([x,y,-3])\n            cylinder(h=3,r=3,center=false);\n}\n\nmodule back_vent_grill() {\n    // Simple vent grill pattern\n    translate([-0.1,5,25])\n    for(i=[0:4])\n        translate([0,0,i*10])\n            cube([wall,30,2]);\n}\n\nunion() {\n    main_box();\n    door();\n    freezer_box();\n    control_panel();\n    feet();\n    back_vent_grill();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frostnest",
    "openscad_code": "// FrostNest Kitchen Appliance (Medium Complexity)\n// A compact refrigerator/freezer unit with realistic proportions and features\n\n$fn = 32;\n\n// Overall dimensions\noverall_width = 80;\noverall_height = 100;\noverall_depth = 60;\n\n// Wall thickness\nwall_thick = 2;\n\nmodule main_body() {\n    // Main refrigerator body\n    union() {\n        // Outer shell\n        difference() {\n            // Main box\n            cube([overall_width, overall_depth, overall_height], center=true);\n            // Hollow interior\n            translate([0, 0, 0])\n            cube([overall_width-wall_thick*2, overall_depth-wall_thick*2, overall_height-wall_thick*2], center=true);\n        }\n        \n        // Top surface detail\n        translate([0, 0, overall_height/2 - wall_thick/2])\n        cube([overall_width, overall_depth, wall_thick], center=true);\n    }\n}\n\nmodule door() {\n    // Refrigerator door\n    translate([overall_width/2 - wall_thick/2, 0, 0])\n    cube([wall_thick, overall_depth-wall_thick*2, overall_height-wall_thick*2], center=true);\n}\n\nmodule handle() {\n    // Door handle\n    translate([overall_width/2 + wall_thick, 0, 0])\n    rotate([0, 90, 0])\n    cylinder(h=20, r=3, center=true);\n}\n\nmodule control_panel() {\n    // Control panel on top front\n    translate([0, overall_depth/2 - wall_thick - 5, overall_height/2 - 10])\n    cube([40, wall_thick, 20], center=true);\n}\n\nmodule temperature_dial() {\n    // Temperature control dial\n    translate([-15, overall_depth/2 - wall_thick - 5 - wall_thick/2, overall_height/2])\n    rotate([90, 0, 0])\n    cylinder(h=3, r=5, center=true);\n    \n    // Dial indicator line\n    translate([-15, overall_depth/2 - wall_thick - 5 - wall_thick/2 - 3, overall_height/2 + 4])\n    cube([1, 0.5, 3], center=true);\n}\n\nmodule display() {\n    // Digital display\n    translate([15, overall_depth/2 - wall_thick - 5 - wall_thick/2, overall_height/2])\n    cube([10, 0.5, 6], center=true);\n}\n\nmodule feet() {\n    // Four support feet\n    for(x = [-overall_width/4, overall_width/4])\n    for(y = [-overall_depth/4, overall_depth/4]) {\n        translate([x, y, -overall_height/2 - 2])\n        cylinder(h=4, r=3, center=true);\n    }\n}\n\nmodule vent_grill() {\n    // Rear ventilation grill\n    translate([0, -overall_depth/2 + wall_thick + 5, overall_height/3])\n    cube([overall_width - 20, wall_thick, 15], center=true);\n    \n    // Grill slats\n    for(i = [-2:1:2]) {\n        translate([0, -overall_depth/2 + wall_thick + 5 - wall_thick/2, overall_height/3 + i*2.5])\n        cube([overall_width - 20, 0.5, 1], center=true);\n    }\n}\n\nmodule brand_logo() {\n    // FrostNest logo on door\n    translate([0, overall_depth/2 - wall_thick - 1, 0])\n    linear_extrude(height=0.5) {\n        text(\"FrostNest\", size=6, halign=\"center\", valign=\"center\");\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    door();\n    handle();\n    control_panel();\n    temperature_dial();\n    display();\n    feet();\n    vent_grill();\n    brand_logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icehub",
    "openscad_code": "// IceHub Kitchen Appliance â€“ Counter-top ice-cube maker\n// Overall footprint 90 x 90 mm, height 110 mm (fits on a 3D-printer bed)\n\n$fn = 36;\n\n// Wall thickness used everywhere\nwall = 2;\n\n// Main shell\nmodule body() {\n    difference() {\n        // outer block rounded corners\n        minkowski() {\n            cube([90-wall*2, 90-wall*2, 100-wall*2], center=true);\n            cylinder(h=0.1, r=wall);\n        }\n        // hollow inside leaving 2 mm walls\n        translate([0,0,-1])\n            cube([90-wall*4, 90-wall*4, 102], center=true);\n    }\n}\n\n// Top lid with hinge cylinders\nmodule lid() {\n    difference() {\n        // lid plate\n        translate([0,0,50])\n            cube([90,90,wall*2], center=true);\n        // finger recess\n        translate([0,-35,50+wall])\n            cube([40,15,wall*2], center=true);\n    }\n    // hinge pins\n    for(x=[-35,35])\n        translate([x,45,50])\n            rotate([90,0,0])\n                cylinder(h=10, r=3);\n}\n\n// Control panel on front face\nmodule panel() {\n    // recessed panel\n    translate([0,-45+wall/2,20])\n        cube([60,wall,40], center=true);\n    // push button\n    translate([-15,-45+wall,20])\n        cylinder(h=wall+1, r=5);\n    // dial\n    translate([15,-45+wall,20])\n        cylinder(h=wall+1, r=7);\n}\n\n// Ice outlet chute\nmodule spout() {\n    translate([0,45-wall,0])\n        difference() {\n            // chute body\n            cube([40,wall*2,30], center=true);\n            // hollow outlet\n            translate([0,0,-15])\n                cube([36,wall*2+1,26], center=true);\n        }\n}\n\n// Ventilation grill pattern\nmodule vents() {\n    for(y=[-30,-20,-10,0,10,20,30])\n        translate([45-wall/2,y,10])\n            cube([wall,3,15]);\n}\n\n// Rubber feet\nmodule feet() {\n    for(x=[-35,35])\n        for(y=[-35,35])\n            translate([x,y,-50+wall])\n                cylinder(h=wall*2, r=4);\n}\n\n// Assembly\nunion() {\n    body();\n    lid();\n    panel();\n    spout();\n    vents();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "glacierframe",
    "openscad_code": "// GlacierFrame Kitchen Appliance - Realistic Style\n// A compact countertop ice-maker with transparent glacier-style frame\n// Overall dimensions: 120 x 80 x 110 mm\n\n// Parameters\nwall = 2;\nbase_h = 8;\nbody_w = 118;\nbody_d = 78;\nbody_h = 70;\ntop_h = 30;\nwindow_h = 45;\nbutton_r = 6;\nbutton_h = 3;\n\n// Base module\nmodule base() {\n    difference() {\n        // Main base\n        cube([body_w, body_d, base_h], center=true);\n        \n        // Feet cutouts\n        for(x = [-body_w/2+15, body_w/2-15])\n            for(y = [-body_d/2+15, body_d/2-15])\n                translate([x, y, -1])\n                    cylinder(h=base_h+2, r=8, center=true);\n    }\n}\n\n// Main body frame with glacier-style windows\nmodule body_frame() {\n    difference() {\n        // Outer shell\n        cube([body_w, body_d, body_h], center=true);\n        \n        // Front window\n        translate([0, body_d/2-wall, body_h/2-window_h/2])\n            cube([body_w-40, wall+1, window_h], center=true);\n        \n        // Side windows\n        translate([body_w/2-wall, 0, body_h/2-window_h/2])\n            cube([wall+1, body_d-40, window_h], center=true);\n        \n        // Inner cavity\n        translate([0, 0, -wall/2])\n            cube([body_w-wall*2, body_d-wall*2, body_h+wall], center=true);\n    }\n}\n\n// Top module with control panel\nmodule top_panel() {\n    difference() {\n        // Main top\n        translate([0, 0, (body_h+top_h)/2])\n            cube([body_w, body_d, top_h], center=true);\n        \n        // Control panel recess\n        translate([0, body_d/2-20, (body_h+top_h)/2])\n            cube([body_w-40, 20, top_h/2], center=true);\n        \n        // Ice chute\n        translate([0, body_d/4, (body_h+top_h)/2-5])\n            cylinder(h=top_h-5, r=25, center=true);\n    }\n}\n\n// Control buttons\nmodule controls() {\n    // Power button\n    translate([body_w/4, body_d/2-button_r-5, (body_h+top_h)/2+button_h/2])\n        cylinder(h=button_h, r=button_r, center=true);\n    \n    // Size button\n    translate([-body_w/4, body_d/2-button_r-5, (body_h+top_h)/2+button_h/2])\n        cylinder(h=button_h, r=button_r, center=true);\n    \n    // Indicator lights\n    for(i = [-1, 1]) {\n        translate([i*body_w/2-10, body_d/2-button_r-5, (body_h+top_h)/2+button_h/2])\n            sphere(r=2);\n    }\n}\n\n// Side vents\nmodule side_vents() {\n    for(i = [1:4]) {\n        translate([body_w/2-wall/2, -body_d/2+15*i, body_h/2-25])\n            rotate([90, 0, 0])\n                cube([wall, 8, 2], center=true);\n    }\n}\n\n// Ice basket\nmodule ice_basket() {\n    translate([0, 0, body_h/2-15])\n        difference() {\n            cube([body_w-60, body_d-30, 30], center=true);\n            translate([0, 0, wall/2])\n                cube([body_w-64, body_d-34, 30], center=true);\n        }\n}\n\n// Water reservoir\nmodule water_tank() {\n    translate([body_w/2-25, -body_d/4, body_h/2-25])\n        difference() {\n            cube([30, 20, 40], center=true);\n            translate([0, 0, wall/2])\n                cube([30-wall*2, 20-wall*2, 40], center=true);\n        }\n}\n\n// Assembly\nunion() {\n    // Main components\n    base();\n    body_frame();\n    top_panel();\n    \n    // Details\n    controls();\n    side_vents();\n    mirror([1, 0, 0]) side_vents();\n    \n    // Internal components\n    ice_basket();\n    water_tank();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "arcticdock",
    "openscad_code": "// ArcticDock Kitchen Appliance â€“ 3D-printable, medium-complexity, realistic style\n// Overall footprint â‰ˆ 60 mm wide, 45 mm deep, 110 mm tall\nwall = 2;          // 2 mm wall thickness for printability\ncorner_r = 3;      // 3 mm outer radius for printability\n\nmodule rounded_box(s, r) {\n    hull() {\n        for(dx=[0,s.x], dy=[0,s.y], dz=[0,s.z]) {\n            translate([dx?r:s.x-r, dy?r:s.y-r, dz?r:s.z-r])\n                sphere(r);\n        }\n    }\n}\n\n// Main body\nmodule body() {\n    difference() {\n        rounded_box([60,45,80], corner_r);        // outer shell\n        translate([wall,wall,wall])\n            rounded_box([60-2*wall,45-2*wall,80-wall], corner_r-1);   // hollow inside\n    }\n}\n\n// Top-loading ice chute\nmodule chute() {\n    translate([30,22.5,80]) rotate([0,0,0])\n    difference() {\n        cylinder(h=20, d1=28, d2=18, $fn=32);   // funnel\n        translate([0,0,wall]) cylinder(h=20, d1=28-2*wall, d2=18-2*wall, $fn=32);\n    }\n}\n\n// Control panel with buttons\nmodule panel() {\n    translate([58,22.5,60]) rotate([0,90,0]) {\n        difference() {\n            cube([40,25,wall], center=true);\n            for(i=[-1,1])\n                translate([i*12,0,-wall/2-0.1])\n                    cylinder(h=wall+0.2, d=6, $fn=20);\n        }\n        for(i=[-1,1])\n            translate([i*12,0,0])\n                cylinder(h=wall+0.1, d=4, $fn=20);\n    }\n}\n\n// Front dispensing spout\nmodule spout() {\n    translate([30,-2,-5]) rotate([0,90,0]) {\n        difference() {\n            cylinder(h=30, d=14, $fn=32);          // outer\n            translate([0,0,wall]) cylinder(h=30, d=14-2*wall, $fn=32);\n            translate([0,15,0]) rotate([90,0,0])\n                cube([14,10,wall], center=true);    // cut bottom\n        }\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x=[12,48], y=[8,37])\n        translate([x,y,-3]) cylinder(h=3, d=6, $fn=20);\n}\n\n// Base grill for airflow\nmodule grill() {\n    translate([30,22.5,1]) {\n        difference() {\n            rounded_box([50,35,wall], corner_r-1);\n            for(i=[-2:2])\n                translate([i*9,0,-0.1])\n                    cube([4,35-2*wall,wall+0.2]);\n        }\n    }\n}\n\nunion() {\n    body();\n    chute();\n    panel();\n    spout();\n    feet();\n    grill();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzerostack",
    "openscad_code": "// SubZeroStack Wine Cooler â€“ realistic, medium-complexity, 3D-printable\n// External size â‰ˆ 100 mm high, 80 mm wide, 75 mm deep\n// Wall thickness â‰ˆ 2 mm everywhere\n\n$fn = 36;\n\n// Overall bounding box\nmodule wine_cooler() {\n    difference() {\n        // Main body shell\n        translate([-40, -37.5, 0])\n            cube([80, 75, 100]);\n\n        // Hollow interior\n        translate([-38, -35.5, 2])\n            cube([76, 71, 96]);\n    }\n\n    // Front door\n    difference() {\n        translate([-40, -37.5, 0])\n            cube([80, 2, 100]);          // door thickness 2 mm\n        // Door window (double-pane look)\n        translate([-38, -34.5, 10])\n            cube([76, 0.5, 80]);\n    }\n\n    // Stainless handle bar\n    translate([0, -38, 60])\n        rotate([90, 0, 0])\n            cylinder(h=50, d=5);\n\n    // Control panel block on top front edge\n    translate([0, -36, 100])\n        cube([40, 4, 5], center=true);\n\n    // Control buttons\n    for (i = [-1:1]) {\n        translate([i*10, -34, 103])\n            cylinder(h=2, d=4);\n    }\n\n    // Base grille\n    translate([0, 0, -2])\n        difference() {\n            cube([78, 73, 4], center=true);\n            for (x = [-30:15:30])\n                for (y = [-30:15:30])\n                    translate([x, y, -1.5])\n                        cube([8, 8, 5], center=true);\n        }\n\n    // Internal shelving system (three wire racks)\n    for (h = [25, 55, 85]) {\n        rack(h);\n    }\n\n    // Rear ventilation grid\n    translate([40.5, 0, 50])\n        rotate([0, 90, 0])\n            ventilation_grid();\n}\n\n// Wire rack module\nmodule rack(height) {\n    translate([0, 0, height])\n    difference() {\n        // Perimeter frame\n        translate([-38, -34, 0])\n            cube([76, 68, 2]);\n        // Cut grid slots\n        for (x = [-30:10:30])\n            translate([x, 0, -0.5])\n                cube([2, 68, 3]);\n        for (y = [-30:10:30])\n            translate([0, y, -0.5])\n                cube([76, 2, 3]);\n    }\n}\n\n// Rear ventilation grid\nmodule ventilation_grid() {\n    difference() {\n        cube([75, 75, 3]);\n        for (x = [-30:10:30])\n            for (y = [-30:10:30])\n                translate([x, y, -1])\n                    cube([6, 6, 5]);\n    }\n}\n\nwine_cooler();",
    "renders": true
  },
  {
    "kitchen_appliance": "polarbin",
    "openscad_code": "// PolarBin Kitchen Compost Bin - Medium Complexity\n// Overall dimensions: 80mm diameter, 120mm height\n\n// Parameters\nbin_d = 80;\nbin_h = 100;\nlid_h = 20;\nwall_t = 2;\nhandle_w = 30;\nhandle_h = 8;\nbase_h = 5;\nfilter_d = 60;\nfilter_h = 3;\nbutton_d = 8;\nbutton_h = 4;\n\n// Main body with slight taper\nmodule bin_body() {\n    difference() {\n        // Outer shell with taper\n        cylinder(h=bin_h, d1=bin_d, d2=bin_d-4, $fn=64);\n        \n        // Hollow interior\n        translate([0, 0, -1])\n            cylinder(h=bin_h+2, d1=bin_d-wall_t*2, d2=bin_d-wall_t*2-4, $fn=64);\n        \n        // Rim detail\n        translate([0, 0, bin_h-5])\n            cylinder(h=10, d=bin_d+2, $fn=64);\n    }\n}\n\n// Base ring for stability\nmodule base_ring() {\n    difference() {\n        cylinder(h=base_h, d=bin_d+6, $fn=64);\n        cylinder(h=base_h+1, d=bin_d, $fn=64);\n    }\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Main lid disk\n        cylinder(h=lid_h, d=bin_d+2, $fn=64);\n        \n        // Center recess\n        translate([0, 0, -1])\n            cylinder(h=lid_h/2, d=bin_d-20, $fn=64);\n        \n        // Filter holes\n        for(i=[0:5]) {\n            rotate([0, 0, i*60])\n                translate([filter_d/2-10, 0, lid_h/2])\n                    cylinder(h=lid_h+2, d=3, $fn=16);\n        }\n    }\n    \n    // Handle\n    translate([0, handle_w/2, lid_h])\n        rotate([90, 0, 0])\n            cylinder(h=handle_h, d=8, $fn=16);\n    \n    translate([0, -handle_w/2, lid_h])\n        rotate([90, 0, 0])\n            cylinder(h=handle_h, d=8, $fn=16);\n    \n    translate([0, 0, lid_h+handle_h/2])\n        cube([handle_w, 6, handle_h], center=true);\n}\n\n// Filter cartridge\nmodule filter() {\n    difference() {\n        cylinder(h=filter_h, d=filter_d, $fn=32);\n        cylinder(h=filter_h+1, d=filter_d-6, $fn=32);\n    }\n}\n\n// Control button\nmodule control_button() {\n    translate([bin_d/2+10, 0, bin_h-10])\n        cylinder(h=button_h, d=button_d, $fn=16);\n    \n    translate([bin_d/2+14, 0, bin_h-10])\n        cube([8, 2, button_h/2], center=true);\n}\n\n// Assembly\ntranslate([0, 0, base_h])\n    bin_body();\n\ntranslate([0, 0, 0])\n    base_ring();\n\ntranslate([0, 0, bin_h-2])\n    lid();\n\ntranslate([0, 0, lid_h-1])\n    filter();\n\ncontrol_button();\n\n// Side vents for airflow\nfor(i=[0:7]) {\n    rotate([0, 0, i*45])\n        translate([bin_d/2-2, 0, bin_h/3])\n            cube([wall_t+1, 8, 15], center=true);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "snowvault",
    "openscad_code": "// SnowVault Kitchen Appliance (Medium complexity, realistic style)\n// A countertop snow vault for preserving and dispensing shaved ice\n\n// Overall dimensions: 100mm W x 80mm D x 120mm H\n\nmodule snowvault_body() {\n    // Main body shell\n    difference() {\n        // Exterior rounded box\n        minkowski() {\n            cube([100, 80, 100], center=true);\n            sphere(5);\n        }\n        // Interior cavity with 2mm walls\n        translate([0, 0, -10])\n        minkowski() {\n            cube([96, 76, 96], center=true);\n            sphere(3);\n        }\n    }\n}\n\nmodule lid() {\n    // Hinged lid with handle\n    rotate([0, -15, 0])  // Lid partially open\n    translate([0, 0, 52])\n    union() {\n        // Lid shell\n        difference() {\n            minkowski() {\n                cube([100, 80, 10], center=true);\n                sphere(5);\n            }\n            translate([0, 0, -2])\n            minkowski() {\n                cube([96, 76, 6], center=true);\n                sphere(3);\n            }\n        }\n        // Handle on top\n        translate([0, -30, 8])\n        rotate([90, 0, 0])\n        cylinder(h=15, r1=5, r2=5);\n    }\n}\n\nmodule control_panel() {\n    // Front control panel with buttons\n    translate([0, 42, 20])\n    union() {\n        // Panel base\n        cube([60, 2, 30], center=true);\n        \n        // Power button\n        translate([-20, 1, 0])\n        cylinder(h=3, r=6);\n        \n        // Temperature dial\n        translate([0, 1, 0])\n        rotate([90, 0, 0])\n        cylinder(h=8, r=8);\n        \n        // Dispense button\n        translate([20, 1, 0])\n        cylinder(h=3, r=6);\n    }\n}\n\nmodule hinges() {\n    // Two hinges connecting lid to body\n    for(x = [-30, 30]) {\n        translate([x, -40, 50])\n        rotate([90, 0, 0])\n        cylinder(h=20, r=3);\n    }\n}\n\nmodule legs() {\n    // Four supporting legs\n    for(x = [-40, 40])\n    for(y = [-30, 30]) {\n        translate([x, y, -60])\n        cylinder(h=10, r=4);\n    }\n}\n\nmodule dispenser_spout() {\n    // Ice dispensing spout\n    translate([0, 42, -20])\n    difference() {\n        union() {\n            // Main spout body\n            cube([30, 10, 20], center=true);\n            // Tapered outlet\n            translate([0, 5, -15])\n            rotate([45, 0, 0])\n            cube([20, 15, 10], center=true);\n        }\n        // Hollow channel\n        translate([0, 5, 0])\n        cube([25, 8, 20], center=true);\n    }\n}\n\nmodule air_vent() {\n    // Rear air circulation vents\n    translate([0, -42, 10])\n    difference() {\n        cube([60, 2, 30], center=true);\n        for(i = [-20:10:20]) {\n            translate([i, 0, 0])\n            cube([5, 3, 25], center=true);\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    snowvault_body();\n    lid();\n    hinges();\n    control_panel();\n    legs();\n    dispenser_spout();\n    air_vent();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coolframe",
    "openscad_code": "// CoolFrame Kitchen Appliance - Compact Counter-top Water Cooler/Dispenser\n$fn = 16;\n\n// Overall dimensions (mm)\noverall_w = 80;\noverall_d = 70;\noverall_h = 130;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // Outer shell\n        translate([0, 0, overall_h/2])\n            cube([overall_w, overall_d, overall_h], center=true);\n        // Hollow interior\n        translate([0, 0, overall_h/2])\n            cube([overall_w-4, overall_d-4, overall_h-2], center=true);\n    }\n}\n\n// Water tank (removable bottle on top)\nmodule water_tank() {\n    difference() {\n        // Cylindrical tank\n        translate([0, 0, overall_h+20])\n            cylinder(r=25, h=40);\n        // Hollow inside\n        translate([0, 0, overall_h+20])\n            cylinder(r=23, h=40);\n    }\n}\n\n// Control panel with buttons\nmodule control_panel() {\n    // Panel base\n    translate([overall_w/2-2, 0, overall_h*0.7])\n        cube([4, 30, 20], center=true);\n    \n    // Cold water button\n    translate([overall_w/2-1, -8, overall_h*0.75])\n        cylinder(r=3, h=2);\n    \n    // Hot water button  \n    translate([overall_w/2-1, 8, overall_h*0.75])\n        cylinder(r=3, h=2);\n    \n    // Power indicator LED\n    translate([overall_w/2-1, 0, overall_h*0.8])\n        sphere(r=1.5);\n}\n\n// Dispensing spouts\nmodule spouts() {\n    // Cold spout\n    translate([-10, 0, overall_h*0.4])\n        rotate([90, 0, 0])\n            cylinder(r=4, h=15);\n    \n    // Hot spout\n    translate([10, 0, overall_h*0.4])\n        rotate([90, 0, 0])\n            cylinder(r=4, h=15);\n}\n\n// Drip tray grid\nmodule drip_tray() {\n    difference() {\n        // Tray base\n        translate([0, overall_d/2-10, overall_h*0.15])\n            cube([overall_w-10, 20, 5], center=true);\n        \n        // Grid pattern\n        for(i = [-20:5:20]) {\n            translate([i, overall_d/2-10, overall_h*0.15+3])\n                cube([1, 18, 1], center=true);\n        }\n    }\n}\n\n// Side ventilation slots\nmodule ventilation_slots() {\n    for(i = [1:6]) {\n        translate([-overall_w/2-1, -overall_d/2+10*i, overall_h*0.5])\n            cube([2, 8, 3], center=true);\n        translate([overall_w/2+1, -overall_d/2+10*i, overall_h*0.5])\n            cube([2, 8, 3], center=true);\n    }\n}\n\n// Rear power cord detail\nmodule power_cord() {\n    translate([0, -overall_d/2-5, overall_h*0.3])\n        rotate([90, 0, 0])\n            cylinder(r=2, h=15);\n}\n\n// Feet for stability\nmodule feet() {\n    positions = [[-30, -25], [30, -25], [-30, 25], [30, 25]];\n    for(pos = positions) {\n        translate([pos[0], pos[1], 2])\n            cylinder(r=3, h=4);\n    }\n}\n\n// Assembly\nunion() {\n    body_shell();\n    water_tank();\n    control_panel();\n    spouts();\n    drip_tray();\n    ventilation_slots();\n    power_cord();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cryohold",
    "openscad_code": "// CryoHold Kitchen Appliance - Medium Complexity\n// A compact cryogenic storage unit for molecular gastronomy enthusiasts\n\n// Main dimensions\nbase_width = 80;\nbase_depth = 60;\nbase_height = 30;\ntower_width = 70;\ntower_depth = 50;\ntower_height = 100;\nlid_height = 15;\nbutton_diameter = 8;\nhandle_length = 30;\nhandle_diameter = 6;\n\n// Wall thickness\nwall = 2;\n\n// Main body - insulated tower\nmodule main_tower() {\n    // Outer shell\n    difference() {\n        cube([tower_width, tower_depth, tower_height], center=true);\n        // Inner cavity\n        translate([0, 0, wall/2])\n        cube([tower_width-wall*2, tower_depth-wall*2, tower_height-wall], center=true);\n    }\n}\n\n// Insulated base with rubber feet\nmodule base_unit() {\n    union() {\n        // Main base\n        cube([base_width, base_depth, base_height], center=true);\n        \n        // Rubber feet (4 corners)\n        for(x = [-base_width/2+5, base_width/2-5])\n            for(y = [-base_depth/2+5, base_depth/2-5])\n                translate([x, y, -base_height/2+1])\n                    cylinder(h=2, r=3, center=true);\n    }\n}\n\n// Control panel with buttons and display\nmodule control_panel() {\n    translate([tower_width/2+wall/2, 0, tower_height/3])\n    rotate([0, 90, 0])\n    difference() {\n        // Panel housing\n        cube([tower_height/2, 20, 5]);\n        \n        // Display screen\n        translate([tower_height/3, 0, -1])\n        cube([15, 16, 7]);\n        \n        // Buttons\n        for(i = [0:2]) {\n            translate([tower_height/4-i*8, 5, 0])\n            cylinder(h=6, r=button_diameter/2, center=true);\n        }\n    }\n}\n\n// Insulated lid with handle\nmodule lid_unit() {\n    difference() {\n        // Lid body\n        translate([0, 0, tower_height/2+lid_height/2])\n        cube([tower_width+wall, tower_depth+wall, lid_height], center=true);\n        \n        // Inner lip\n        translate([0, 0, tower_height/2+lid_height/2-wall/2])\n        cube([tower_width-wall, tower_depth-wall, lid_height-wall], center=true);\n    }\n    \n    // Handle assembly\n    translate([0, 0, tower_height/2+lid_height+handle_diameter/2])\n    union() {\n        // Main handle bar\n        rotate([90, 0, 0])\n        cylinder(h=handle_length, r=handle_diameter/2, center=true);\n        \n        // Support brackets\n        for(x = [-handle_length/3, handle_length/3])\n            translate([x, 0, 0])\n            rotate([90, 0, 0])\n            cylinder(h=handle_diameter*1.5, r=handle_diameter/2, center=true);\n    }\n}\n\n// Ventilation ports\nmodule ventilation() {\n    for(i = [0:3]) {\n        rotate([0, 0, i*90])\n        translate([tower_width/2-5, tower_depth/2-5, -tower_height/4])\n        difference() {\n            cylinder(h=10, r=4, center=true);\n            cylinder(h=12, r=2.5, center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Base unit at bottom\n    translate([0, 0, -tower_height/2-base_height/2])\n    base_unit();\n    \n    // Main tower on base\n    translate([0, 0, 0])\n    main_tower();\n    \n    // Control panel on side\n    control_panel();\n    \n    // Ventilation around base\n    ventilation();\n    \n    // Lid on top\n    lid_unit();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "freezechest",
    "openscad_code": "// Freezechest kitchen appliance - realistic style, medium complexity\n// Dimensions: 80mm x 60mm x 85mm (L x W x H)\n\n$fn = 32;  // Smooth curves\n\nmodule main_body() {\n    difference() {\n        // Main housing\n        translate([0, 0, 42.5])\n            cube([80, 60, 85], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 42.5])\n            cube([76, 56, 83], center=true);\n    }\n}\n\nmodule top_lid() {\n    // Lid with rounded edges\n    translate([0, 0, 85])\n        difference() {\n            minkowski() {\n                cube([82, 62, 4], center=true);\n                sphere(2);\n            }\n            translate([0, 0, -2])\n                cube([78, 58, 5], center=true);\n        }\n    \n    // Handle on lid\n    translate([0, -35, 89])\n        difference() {\n            cube([40, 8, 15], center=true);\n            translate([0, 0, 7.5])\n                cube([36, 4, 15], center=true);\n        }\n}\n\nmodule hinge_assembly() {\n    // Left hinge\n    translate([-39, 0, 85])\n        cylinder(h=10, r=3);\n    translate([-39, 0, 85])\n        rotate([90, 0, 0])\n            cylinder(h=8, r=2);\n    \n    // Right hinge\n    translate([39, 0, 85])\n        cylinder(h=10, r=3);\n    translate([39, 0, 85])\n        rotate([90, 0, 0])\n            cylinder(h=8, r=2);\n}\n\nmodule control_panel() {\n    // Panel base\n    translate([0, 31, 75])\n        cube([60, 2, 20], center=true);\n    \n    // Temperature dial\n    translate([-20, 32, 75])\n        difference() {\n            cylinder(h=4, r=6);\n            translate([0, 0, -1])\n                cube([2, 6, 6], center=true);\n        }\n    \n    // Power light\n    translate([0, 32, 75])\n        cylinder(h=2, r=3);\n    \n    // Defrost button\n    translate([20, 32, 75])\n        difference() {\n            cube([10, 2, 8], center=true);\n            translate([0, 0, 2])\n                cube([8, 2, 6], center=true);\n        }\n}\n\nmodule vent_grille() {\n    // Back vents\n    for(i = [-20:5:20]) {\n        translate([i, -31, 60])\n            cube([3, 2, 15]);\n    }\n}\n\nmodule feet() {\n    // Four support feet\n    foot_positions = [[-35, -25], [35, -25], [-35, 25], [35, 25]];\n    \n    for(pos = foot_positions) {\n        translate([pos[0], pos[1], 0])\n            difference() {\n                cylinder(h=5, r=4);\n                translate([0, 0, -1])\n                    cylinder(h=6, r=2.5);\n            }\n    }\n}\n\nmodule gasket() {\n    // Rubber seal around lid\n    translate([0, 0, 84])\n        difference() {\n            cube([81, 61, 2], center=true);\n            cube([79, 59, 3], center=true);\n        }\n}\n\n// Assembly\nunion() {\n    main_body();\n    top_lid();\n    hinge_assembly();\n    control_panel();\n    vent_grille();\n    feet();\n    gasket();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icynest",
    "openscad_code": "// Icynest Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 80mm x 80mm x 120mm (WxDxH)\n\n// Main body module\nmodule body() {\n    difference() {\n        // Main housing\n        translate([0, 0, 60]) \n            cube([80, 80, 120], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 60]) \n            cube([76, 76, 116], center=true);\n        \n        // Top opening for ice\n        translate([0, 0, 115]) \n            cube([60, 60, 10], center=true);\n    }\n}\n\n// Base module with ventilation\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, 5]) \n            cube([84, 84, 10], center=true);\n        \n        // Ventilation slots\n        for (i = [-30:10:30]) {\n            translate([i, 0, 5]) \n                cube([6, 84, 12], center=true);\n        }\n    }\n}\n\n// Ice container module\nmodule ice_container() {\n    difference() {\n        // Container walls\n        translate([0, 0, 90]) \n            cube([58, 58, 50], center=true);\n        \n        // Container cavity\n        translate([0, 0, 90]) \n            cube([54, 54, 48], center=true);\n        \n        // Drain holes\n        for (x = [-20:20:20]) {\n            for (y = [-20:20:20]) {\n                translate([x, y, 65]) \n                    cylinder(h=5, r=2, $fn=8);\n            }\n        }\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel housing\n    translate([0, 42, 100]) \n        cube([40, 4, 20], center=true);\n    \n    // Power button\n    translate([-10, 44, 105]) {\n        cylinder(h=3, r=4, $fn=16);\n        translate([0, 0, 1.5]) \n            sphere(r=3.5);\n    }\n    \n    // Mode selector dial\n    translate([10, 44, 105]) {\n        cylinder(h=3, r=5, $fn=32);\n        for (i = [0:45:315]) {\n            rotate([0, 0, i]) \n                translate([3.5, 0, 1.5]) \n                    cube([1, 0.5, 1], center=true);\n        }\n    }\n}\n\n// Side handles module\nmodule handles() {\n    // Left handle\n    translate([-42, 0, 70]) {\n        difference() {\n            rotate([90, 0, 0]) \n                cylinder(h=80, r=4, $fn=16);\n            translate([0, 0, -2]) \n                rotate([90, 0, 0]) \n                    cylinder(h=84, r=2, $fn=16);\n        }\n    }\n    \n    // Right handle (mirror of left)\n    translate([42, 0, 70]) {\n        difference() {\n            rotate([90, 0, 0]) \n                cylinder(h=80, r=4, $fn=16);\n            translate([0, 0, -2]) \n                rotate([90, 0, 0]) \n                    cylinder(h=84, r=2, $fn=16);\n        }\n    }\n}\n\n// Feet module\nmodule feet() {\n    for (x = [-30:60:30]) {\n        for (y = [-30:60:30]) {\n            translate([x, y, 0]) {\n                difference() {\n                    cylinder(h=5, r=5, $fn=16);\n                    translate([0, 0, 2]) \n                        cylinder(h=3, r=3, $fn=16);\n                }\n            }\n        }\n    }\n}\n\n// Logo detail\nmodule logo() {\n    translate([0, -42, 100]) {\n        // ICY text\n        translate([-15, 0, 0]) \n            cube([8, 2, 6], center=true);\n        translate([-5, 0, 0]) \n            cube([8, 2, 6], center=true);\n        translate([5, 0, 0]) \n            cube([8, 2, 6], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    body();\n    ice_container();\n    control_panel();\n    handles();\n    feet();\n    logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tundralocker",
    "openscad_code": "// TundraLocker - medium-complexity 3D-printable kitchen freezer\n// Overall footprint 60Ã—45Ã—55 mm, wall thickness 2 mm\n\nmodule roundedBox(x,y,z,r){\n    hull(){\n        translate([r,r,0]) cylinder(r=r,h=z,$fn=20);\n        translate([x-r,r,0]) cylinder(r=r,h=z,$fn=20);\n        translate([r,y-r,0]) cylinder(r=r,h=z,$fn=20);\n        translate([x-r,y-r,0]) cylinder(r=r,h=z,$fn=20);\n    }\n}\n\nmodule body(){\n    difference(){\n        roundedBox(60,45,55,3);                // outer shell\n        translate([2,2,2]) roundedBox(56,41,51,2); // hollow inside\n    }\n}\n\nmodule door(){\n    difference(){\n        translate([0,-2,0]) roundedBox(56,4,51,3);   // door slab\n        translate([2,0,2]) roundedBox(52,4,47,2);    // inner recess\n    }\n}\n\nmodule handle(){\n    translate([30,-1.5,25]) cube([20,3,6]);\n    translate([31,-2,26]) cylinder(h=2,r=1.5,$fn=16);\n    translate([49,-2,26]) cylinder(h=2,r=1.5,$fn=16);\n}\n\nmodule hinge(){\n    for(z=[10,40]){\n        translate([-1,0,z]) rotate([90,0,0]) cylinder(h=4,r=1.5,$fn=10);\n    }\n}\n\nmodule controlPanel(){\n    translate([5,42,45]) cube([25,3,8]);\n    for(i=[0:2])\n        translate([8+i*7,43.5,49]) cylinder(h=3,r=1.5,$fn=12);\n    translate([22,43.5,49]) cube([6,2,2]); // display\n}\n\nmodule ventGrill(){\n    for(i=[0:4])\n        translate([52+i*1.5,42.5,12+i*6]) cube([1.5,2,3]);\n}\n\nunion(){\n    body();\n    translate([2,43,0]) union(){ door(); handle(); hinge(); }\n    controlPanel();\n    ventGrill();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "wintercube",
    "openscad_code": "// Wintercube kitchen appliance â€“ a compact ice-cube dispenser  \n// Overall footprint â‰ˆ 85 Ã— 85 Ã— 130 mm (fits within 150 mm max)\n\n$fn = 32;\n\n/* ---------- main body ---------- */\nmodule body() {\n    difference() {\n        // outer shell 2 mm wall\n        offset(r = 2, $fn = 4) offset(r = -2, $fn = 4)\n        cube([80, 80, 120], center = true);\n\n        // hollow cavity\n        cube([76 - 4, 76 - 4, 120 - 4], center = true);\n    }\n}\n\n/* ---------- top lid with fill hole ---------- */\nmodule lid() {\n    translate([0, 0, 120/2 + 3])\n        difference() {\n            cube([82, 82, 6], center = true);\n            // fill port Ã˜20 mm\n            translate([0, 0, -1])\n                cylinder(h = 8, d = 20, center = true);\n        }\n}\n\n/* ---------- dispensing tray ---------- */\nmodule tray() {\n    difference() {\n        translate([0, -80/2 - 15/2, -120/2 - 15/2])\n            cube([70, 15, 15], center = true);\n        // opening for cubes\n        translate([0, -80/2 - 15/2, -120/2 - 15/2 + 2])\n            cube([60, 20, 12], center = true);\n    }\n}\n\n/* ---------- control panel with buttons ---------- */\nmodule panel() {\n    translate([0, 80/2 + 1, 20])\n        difference() {\n            cube([40, 2, 25], center = true);\n            // two push buttons Ã˜6 mm\n            for (y = [-7, 7])\n                translate([0, 0, y])\n                    cylinder(h = 3, d = 6, center = true);\n        }\n}\n\n/* ---------- feet for stability ---------- */\nmodule feet() {\n    for (x = [-30, 30], y = [-30, 30])\n        translate([x, y, -120/2 - 3])\n            cylinder(h = 6, d = 10, center = true);\n}\n\n/* ---------- assembly ---------- */\nunion() {\n    body();\n    lid();\n    tray();\n    panel();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chillstack",
    "openscad_code": "// ChillStack â€“ a compact, 3D-printable counter-top food chiller / dispenser\n// Overall footprint: 120 mm wide Ã— 80 mm deep Ã— 110 mm high\n// Wall thickness: 2 mm everywhere\n\n// main body shell\nmodule shell() {\n    difference() {\n        // outer box\n        translate([-60, -40, 0]) cube([120, 80, 110]);\n        // hollow inside\n        translate([-58, -38, 2]) cube([116, 76, 106]);\n    }\n}\n\n// removable lid with handle\nmodule lid() {\n    difference() {\n        // lid slab\n        translate([-62, -42, 110]) cube([124, 84, 4]);\n        // light chamfer top edges\n        translate([-60, -40, 114]) cube([120, 80, 2]);\n    }\n    // handle bar\n    translate([0, 0, 116]) rotate([90, 0, 0])\n        cylinder(h = 30, r = 5, $fn = 20);\n}\n\n// front control panel with buttons and dial\nmodule controlPanel() {\n    // panel plate\n    translate([62, -25, 50]) cube([2, 50, 40]);\n    // three push buttons\n    for (y = [-15, 0, 15])\n        translate([64, y, 65]) sphere(r = 4, $fn = 16);\n    // rotary dial\n    translate([64, 15, 45])\n        cylinder(h = 8, r = 6, $fn = 20);\n}\n\n// internal stackable trays\nmodule tray(n) {\n    // bottom\n    translate([-54, -34, 5 + n * 35]) cube([108, 68, 2]);\n    // front wall\n    translate([-54, -34, 5 + n * 35]) cube([108, 2, 30]);\n    // back wall\n    translate([-54, 32, 5 + n * 35]) cube([108, 2, 30]);\n    // left wall\n    translate([-54, -32, 5 + n * 35]) cube([2, 64, 30]);\n    // right wall\n    translate([52, -32, 5 + n * 35]) cube([2, 64, 30]);\n}\n\n// base feet for print-bed stability\nmodule feet() {\n    for (x = [-45, 45])\n        for (y = [-25, 25])\n            translate([x, y, -4])\n                cylinder(h = 4, r = 4, $fn = 16);\n}\n\n// assemble the appliance\nunion() {\n    shell();\n    lid();\n    controlPanel();\n    tray(0);\n    tray(1);\n    tray(2);\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frostvault",
    "openscad_code": "// FrostVault - compact countertop ice-cube maker\n// Overall footprint ~120 mm Ã— 110 mm Ã— 140 mm (fits on a kitchen counter)\n\n$fn = 32;\n\n// Main shell\nmodule shell() {\n    difference() {\n        // Outer shell with rounded top\n        minkowski() {\n            cube([110, 100, 120], center = true);\n            sphere(5);\n        }\n        // Inner cavity â€“ 2 mm walls\n        translate([0, 0, 5])\n            cube([106, 96, 116], center = true);\n    }\n}\n\n// Front control panel\nmodule control_panel() {\n    difference() {\n        // Panel plate\n        translate([0, 51, 30])\n            cube([60, 2, 40], center = true);\n        // Display window\n        translate([0, 51.1, 35])\n            cube([40, 0.5, 15], center = true);\n        // Buttons\n        for (x = [-20, 0, 20])\n            translate([x, 51.2, 15])\n                cylinder(h = 2, r = 4);\n    }\n}\n\n// Water reservoir drawer\nmodule reservoir() {\n    translate([0, 0, -50])\n        difference() {\n            // Drawer body\n            translate([0, 0, 0])\n                cube([100, 80, 30], center = true);\n            // Inside hollow\n            translate([0, 0, 2])\n                cube([96, 76, 28], center = true);\n            // Handle cutout\n            translate([0, 41, 0])\n                cube([40, 2, 5], center = true);\n        }\n    // Handle bar\n    translate([0, 42, 0])\n        cube([38, 2, 4], center = true);\n}\n\n// Ice basket\nmodule ice_basket() {\n    difference() {\n        // Basket body\n        translate([0, 0, 25])\n            cube([90, 75, 25], center = true);\n        // Inside hollow\n        translate([0, 0, 27])\n            cube([86, 71, 23], center = true);\n        // Drain slots (grill pattern)\n        for (y = [-30:10:30])\n            translate([0, y, 25])\n                cube([86, 2, 2], center = true);\n    }\n}\n\n// Ventilation louvers on back\nmodule vents() {\n    for (i = [1:4])\n        translate([0, -51, 20 + i * 20])\n            cube([80, 2, 8], center = true);\n}\n\n// Feet\nmodule foot(x, y) {\n    translate([x, y, -62])\n        cylinder(h = 4, r = 5);\n}\n\n// Assembly\nunion() {\n    shell();\n    control_panel();\n    reservoir();\n    ice_basket();\n    vents();\n    // Feet\n    foot(45, 40);\n    foot(-45, 40);\n    foot(45, -40);\n    foot(-45, -40);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icedock",
    "openscad_code": "// Icedock - countertop ice maker\n// External dimensions: 100 x 80 x 120 mm\n// Wall thickness: 2 mm\n\n$fn = 32;\n\nmodule body() {\n    difference() {\n        // main shell\n        cube([100, 80, 120], center = true);\n        \n        // hollow inside\n        translate([0, 0, 2])\n            cube([96, 76, 116], center = true);\n    }\n}\n\nmodule top_hatch() {\n    // top lid / ice access door\n    difference() {\n        translate([0, 0, 60])\n            cube([86, 76, 4], center = true);\n        \n        // finger notch\n        translate([0, 35, 60])\n            cube([20, 6, 3], center = true);\n    }\n    \n    // hinge pins\n    for (y = [-35, 35])\n        translate([-48, y, 58])\n            rotate([0, 90, 0])\n            cylinder(h = 4, r = 2, center = true);\n}\n\nmodule water_tank() {\n    // removable water reservoir on the side\n    difference() {\n        translate([52, 0, 0])\n            cube([10, 60, 90], center = true);\n        \n        // inner cavity\n        translate([52, 0, -5])\n            cube([6, 56, 80], center = true);\n        \n        // fill opening\n        translate([52, 0, 45])\n            cylinder(h = 2, r = 10);\n    }\n}\n\nmodule control_panel() {\n    // front panel with controls\n    translate([0, 42, 20]) {\n        // panel plate\n        difference() {\n            cube([60, 2, 30], center = true);\n            \n            // LED window\n            translate([0, 0, 12])\n                cube([50, 2, 8], center = true);\n        }\n        \n        // power button\n        translate([-20, 2, 0])\n            cylinder(h = 4, r = 5);\n        \n        // size selector buttons\n        for (i = [0:2])\n            translate([i*15 - 10, 2, -10])\n                cylinder(h = 3, r = 4);\n    }\n}\n\nmodule air_vent() {\n    // rear ventilation slots\n    for (i = [0:5]) {\n        translate([-45 + i*15, -42, 0])\n            cube([3, 2, 80], center = true);\n    }\n}\n\nmodule base_with_feet() {\n    // bottom base plate\n    cube([100, 80, 4], center = true);\n    \n    // rubber feet\n    for (x = [-40, 40])\n        for (y = [-30, 30])\n            translate([x, y, -62])\n                cylinder(h = 3, r = 4);\n}\n\nmodule ice_bucket() {\n    // internal ice collection tray\n    difference() {\n        translate([0, 0, -30])\n            cube([70, 60, 30], center = true);\n        \n        // taper inside\n        translate([0, 0, -30])\n            cube([66, 56, 26], center = true);\n        \n        // handle slots\n        for (x = [-30, 30])\n            translate([x, 32, -30])\n                cube([8, 4, 20], center = true);\n    }\n}\n\n// assembly\nunion() {\n    body();\n    top_hatch();\n    water_tank();\n    control_panel();\n    air_vent();\n    base_with_feet();\n    \n    // add ice bucket inside (for visualization)\n    %ice_bucket();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "glacierhub",
    "openscad_code": "// GlacierHub Kitchen Appliance - Realistic style, medium complexity\n// Dimensions: 80mm x 60mm x 90mm (WxDxH)\n\n// Main appliance body\nmodule appliance_body() {\n    // Base structure\n    difference() {\n        // Main rectangular body\n        cube([80, 60, 85], center=true);\n        \n        // Front panel recess for display\n        translate([0, 30, 30])\n            cube([70, 2, 40], center=true);\n        \n        // Top ventilation grill recess\n        translate([0, 0, 42])\n            cube([70, 50, 2], center=true);\n    }\n}\n\n// Front display panel\nmodule display_panel() {\n    // LCD display\n    translate([0, 29, 30])\n        cube([40, 1, 20], center=true);\n    \n    // LED indicators\n    for(x = [-15, -5, 5, 15]) {\n        translate([x, 28.5, 40])\n            sphere(1.5);\n    }\n}\n\n// Control buttons\nmodule control_buttons() {\n    // Main power button\n    translate([-25, 29, 15])\n        cylinder(h=3, r=4, center=true);\n    \n    // Function buttons\n    for(x = [-10, 0, 10]) {\n        translate([x, 29, 5])\n            cylinder(h=2, r=2.5, center=true);\n    }\n}\n\n// Water reservoir\nmodule water_reservoir() {\n    // Main tank\n    translate([30, -15, 0])\n        cube([35, 25, 70], center=true);\n    \n    // Tank cap\n    translate([30, -15, 36])\n        cylinder(h=5, r=6, center=true);\n    \n    // Water level window\n    difference() {\n        translate([48, -15, 0])\n            cube([2, 20, 60], center=true);\n        // Indents for water level markings\n        for(z = [-20, -10, 0, 10, 20]) {\n            translate([48.5, -15, z])\n                cube([1, 18, 1], center=true);\n        }\n    }\n}\n\n// Ice dispensing chute\nmodule ice_chute() {\n    // Main chute\n    translate([-30, -25, -30])\n        rotate([30, 0, 0])\n            cube([25, 15, 30], center=true);\n    \n    // Chute opening\n    translate([-30, -25, -42])\n        cylinder(h=5, r=8, center=true);\n}\n\n// Ventilation grills\nmodule ventilation_grills() {\n    // Side vents\n    for(y = [-20, -10, 0, 10, 20]) {\n        translate([-41, y, 20])\n            cube([2, 3, 8], center=true);\n    }\n    \n    // Rear vents\n    for(x = [-30, -15, 0, 15, 30]) {\n        translate([x, -31, 20])\n            cube([8, 2, 8], center=true);\n    }\n}\n\n// Base with feet\nmodule base_with_feet() {\n    // Base platform\n    cube([85, 65, 5], center=true);\n    \n    // Feet\n    for(x = [-35, 35])\n        for(y = [-25, 25]) {\n            translate([x, y, -5])\n                cylinder(h=5, r=3, center=true);\n        }\n}\n\n// Assembly\nunion() {\n    // Base\n    translate([0, 0, -47.5])\n        base_with_feet();\n    \n    // Main appliance\n    appliance_body();\n    \n    // Components\n    display_panel();\n    control_buttons();\n    water_reservoir();\n    ice_chute();\n    ventilation_grills();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "arctichold",
    "openscad_code": "// ArcticHold Ice-Cream Maker â€“ medium-complexity, realistic, 3D-printable\n// External envelope â‰ˆ 95 mm wide Ã— 90 mm deep Ã— 110 mm high\n// All walls â‰¥ 2 mm, no large overhangs\n\n$fn = 32;\n\n/* Overall body */\nmodule body() {\n    // Main shell\n    difference() {\n        // Outer block\n        minkowski() {\n            cube([91, 86, 105], center = true);\n            sphere(2);\n        }\n        // Hollow inside\n        minkowski() {\n            cube([87, 82, 101], center = true);\n            sphere(1);\n        }\n    }\n}\n\n/* Top-lid with feed chute */\nmodule lid() {\n    difference() {\n        // Lid plate\n        translate([0, 0, 53.5])\n            cube([93, 88, 4], center = true);\n\n        // Chute hole\n        translate([0, -20, 56])\n            cylinder(h = 10, r = 15, center = true);\n    }\n    // Chute collar\n    translate([0, -20, 58])\n        cylinder(h = 8, r1 = 15, r2 = 18);\n}\n\n/* Front control panel */\nmodule control_panel() {\n    translate([0, 43, 30]) rotate([90, 0, 0]) {\n        // Panel plate\n        cube([40, 20, 2], center = true);\n\n        // Rotary dial\n        translate([0, 0, 1.2])\n            cylinder(h = 6, r = 9, center = false);\n        translate([0, 0, 7.2])\n            cylinder(h = 2, r = 7, $fn = 6);\n    }\n}\n\n/* Back handle */\nmodule handle() {\n    translate([0, -43, 0]) rotate([0, 0, 0]) {\n        // Handle bar\n        rotate([90, 0, 0])\n            cylinder(h = 50, r = 6, center = true);\n\n        // Side supports\n        for (x = [-30, 30])\n            translate([x, 0, 0])\n                rotate([0, 90, 0])\n                    cylinder(h = 12, r = 6, center = true);\n    }\n}\n\n/* Rubber feet */\nmodule feet() {\n    for (x = [-35, 35])\n        for (y = [-30, 30])\n            translate([x, y, -53.5])\n                cylinder(h = 3, r = 5);\n}\n\n/* Final assembly */\nunion() {\n    body();\n    lid();\n    control_panel();\n    handle();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzerobin",
    "openscad_code": "// Sub-Zero style kitchen bin\n// Overall dimensions: 100mm x 80mm x 120mm\n\n$fn = 32;\n\n// Main parameters\nbin_width = 100;\nbin_depth = 80;\nbin_height = 120;\nwall_thickness = 2;\nlid_thickness = 3;\n\n// Main body module\nmodule bin_body() {\n    // Outer shell\n    difference() {\n        cube([bin_width, bin_depth, bin_height]);\n        \n        // Hollow interior\n        translate([wall_thickness, wall_thickness, 0])\n            cube([bin_width - 2*wall_thickness, \n                  bin_depth - 2*wall_thickness, \n                  bin_height - wall_thickness]);\n    }\n}\n\n// Stainless steel lid\nmodule bin_lid() {\n    // Main lid panel\n    difference() {\n        translate([0, 0, bin_height])\n            cube([bin_width, bin_depth, lid_thickness]);\n        \n        // Rounded edges on top\n        translate([-1, -1, bin_height + lid_thickness])\n            cube([bin_width + 2, bin_depth + 2, 2]);\n    }\n    \n    // Hinge cylinders\n    translate([5, 0, bin_height])\n        rotate([90, 0, 0])\n            cylinder(h=5, r=3);\n    \n    translate([bin_width - 5, 0, bin_height])\n        rotate([90, 0, 0])\n            cylinder(h=5, r=3);\n}\n\n// Pedal mechanism\nmodule pedal_system() {\n    // Pedal bar\n    translate([bin_width/2 - 15, -5, wall_thickness])\n        cube([30, 10, 5]);\n    \n    // Pedal plate\n    translate([bin_width/2 - 20, -15, 0])\n        cube([40, 10, wall_thickness]);\n    \n    // Support brackets\n    for(i = [0, 1]) {\n        translate([20 + i*(bin_width - 40), 0, 0]) {\n            cube([5, 10, 15]);\n        }\n    }\n}\n\n// Handle grip on lid\nmodule lid_handle() {\n    translate([bin_width/2 - 15, bin_depth - 5, bin_height + lid_thickness])\n        cube([30, 5, 8]);\n    \n    // Rounded edges\n    translate([bin_width/2 - 15, bin_depth - 3, bin_height + lid_thickness + 8])\n        cube([30, 2, 2]);\n}\n\n// Ventilation holes\nmodule ventilation() {\n    for(i = [0:3]) {\n        translate([10 + i*20, bin_depth/2, bin_height/2])\n            rotate([0, 90, 0])\n                cylinder(h=2, r=3);\n    }\n}\n\n// Brand label area\nmodule brand_label() {\n    translate([bin_width/2 - 20, bin_depth - 1, bin_height/2])\n        cube([40, 2, 15]);\n}\n\n// Assembly\nunion() {\n    bin_body();\n    bin_lid();\n    pedal_system();\n    lid_handle();\n    ventilation();\n    brand_label();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "polarlocker",
    "openscad_code": "// PolarLocker Kitchen Appliance - Refrigerator-Style\n// Overall dimensions: 80mm W x 85mm D x 120mm H\n\n$fn = 32;\n\n// Main body\nmodule body() {\n    difference() {\n        // Main shell\n        union() {\n            translate([0,0,60]) cube([80,85,120], center=true);\n            // Rounded top back edge\n            translate([0,-42.5,120]) rotate([90,0,0]) cylinder(h=80, r=5, center=true);\n        }\n        \n        // Hollow inside\n        translate([0,0,62]) cube([76,81,116], center=true);\n    }\n}\n\n// Door\nmodule door() {\n    difference() {\n        // Door panel\n        translate([41,0,60]) cube([4,83,118], center=true);\n        \n        // Door handle recess\n        translate([42.5,-30,20]) cube([2,15,40], center=true);\n    }\n    \n    // Door handle\n    translate([43,-30,20]) rotate([0,90,0]) cylinder(h=15, r=2);\n}\n\n// Base stand\nmodule base() {\n    // Front feet\n    for(x=[-30, 30]) {\n        translate([x, -40, -2]) cylinder(h=4, r=3);\n    }\n    // Rear feet\n    for(x=[-30, 30]) {\n        translate([x, 40, -2]) cylinder(h=4, r=3);\n    }\n}\n\n// Control panel\nmodule controls() {\n    // Panel housing\n    translate([0, -43, 110]) cube([50, 2, 15], center=true);\n    \n    // Temperature display\n    translate([-15, -42, 110]) cube([20, 1, 8], center=true);\n    \n    // Buttons\n    for(i=[0:2]) {\n        translate([10 + i*10, -42, 110]) cylinder(h=1, r=2.5);\n    }\n}\n\n// Door shelves\nmodule door_shelf() {\n    for(y=[-20, 10, 40]) {\n        // Shelf base\n        translate([38, y, 80]) cube([2, 20, 2], center=true);\n        \n        // Shelf front lip\n        translate([38, y+10, 81]) cube([2, 1, 3], center=true);\n    }\n}\n\n// Internal compartments\nmodule internal_shelves() {\n    for(z=[30, 60, 90]) {\n        // Shelf\n        translate([0, 0, z]) cube([74, 79, 2], center=true);\n    }\n}\n\n// Cooling vents\nmodule vents() {\n    for(i=[0:3]) {\n        translate([0, 42, 20 + i*25]) \n            rotate([0,90,0]) \n            cylinder(h=30, r=1);\n    }\n}\n\n// Assembly\ntranslate([0,0,4]) {\n    body();\n    door();\n    base();\n    controls();\n    translate([0,0,0]) door_shelf();\n    translate([-2,0,0]) internal_shelves();\n    vents();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "snowcore",
    "openscad_code": "// Snowcore Kitchen Appliance - Mini Snow Cone Maker\n// Realistic style, medium complexity\n\n// Overall dimensions\nwidth = 80;\ndepth = 70;\nheight = 120;\n\n$fn = 32;\n\n// Main body\nmodule body() {\n    // Base housing\n    translate([0, 0, height/2])\n    cube([width, depth, height], center=true);\n    \n    // Top curved surface\n    translate([0, 0, height])\n    scale([1, 0.8, 0.3])\n    sphere(d=width);\n    \n    // Front control panel\n    translate([0, -depth/2 + 2, height * 0.7])\n    cube([width * 0.6, 4, height * 0.2], center=true);\n}\n\n// Ice hopper\nmodule ice_hopper() {\n    // Cylindrical hopper\n    translate([0, 0, height + 15])\n    cylinder(h=40, d=50);\n    \n    // Hopper lid\n    translate([0, 0, height + 55])\n    cylinder(h=5, d=52);\n    \n    // Lid handle\n    translate([0, 0, height + 62])\n    cylinder(h=8, d=8);\n}\n\n// Crank mechanism\nmodule crank() {\n    // Main crank shaft\n    rotate([90, 0, 0])\n    translate([width/2 - 10, 0, height/2])\n    cylinder(h=30, d=10);\n    \n    // Crank handle\n    translate([width/2 + 20, 0, height/2])\n    rotate([0, 90, 0])\n    cylinder(h=20, d=6);\n    \n    // Handle grip\n    translate([width/2 + 20, 0, height/2])\n    sphere(d=10);\n}\n\n// Control buttons\nmodule control_buttons() {\n    for(i = [0:2]) {\n        translate([-15 + i*15, -depth/2 + 3, height * 0.75])\n        cylinder(h=3, d=8);\n    }\n}\n\n// Snow collection tray\nmodule collection_tray() {\n    // Tray base\n    translate([0, depth/4, height/4])\n    cube([width * 0.7, depth * 0.5, 5], center=true);\n    \n    // Tray walls\n    difference() {\n        translate([0, depth/4, height/4 + 5])\n        cube([width * 0.7, depth * 0.5, 15], center=true);\n        \n        translate([0, depth/4, height/4 + 5])\n        cube([width * 0.6, depth * 0.4, 16], center=true);\n    }\n}\n\n// Ventilation slots\nmodule ventilation_slots() {\n    for(i = [0:3]) {\n        translate([-30 + i*20, -depth/2 + 1, height/3])\n        cube([10, 2, 5]);\n    }\n}\n\n// Rubber feet\nmodule feet() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x * width/3, y * depth/3, 0])\n            cylinder(h=5, d=10);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main structure\n    body();\n    \n    // Attach components\n    ice_hopper();\n    crank();\n    control_buttons();\n    collection_tray();\n    ventilation_slots();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "coolvault",
    "openscad_code": "// CoolVault Kitchen Wine Cooler - Medium Complexity\n// Dimensions: 80mm W x 85mm H x 75mm D\n\n$fn = 32;\n\nmodule wineCoolerBody() {\n    // Main body shell - 2mm walls\n    difference() {\n        // Outer shell\n        cube([80, 75, 85], center=true);\n        // Inner cavity\n        translate([0, 0, -2.5])\n            cube([76, 71, 80], center=true);\n    }\n}\n\nmodule door() {\n    // Front door with window\n    translate([0, 37.5, 0])\n        difference() {\n            // Door panel\n            cube([78, 2, 83], center=true);\n            // Window cutout\n            translate([0, 0, 10])\n                cube([60, 2.5, 50], center=true);\n        }\n}\n\nmodule windowGlass() {\n    // Glass window in door\n    translate([0, 38.5, 10])\n        cube([58, 1, 48], center=true);\n}\n\nmodule handle() {\n    // Door handle bar\n    translate([30, 39, 0])\n        rotate([90, 0, 0])\n            cylinder(h=40, d=6, center=true);\n}\n\nmodule controlPanel() {\n    // Top control panel\n    translate([0, 0, 42.5])\n        difference() {\n            // Panel base\n            cube([60, 10, 2], center=true);\n            // Display cutout\n            translate([-20, 0, 0])\n                cube([15, 11, 3], center=true);\n            // Button holes\n            for(i = [0:2]) {\n                translate([10 + i*12, 0, 0])\n                    cylinder(h=3, d=4, center=true);\n            }\n        }\n}\n\nmodule display() {\n    // LCD display\n    translate([-20, 5, 43.5])\n        cube([14, 0.5, 8], center=true);\n}\n\nmodule buttons() {\n    // Control buttons\n    for(i = [0:2]) {\n        translate([10 + i*12, 5, 43.5])\n            cylinder(h=1, d=3.5, center=true);\n    }\n}\n\nmodule feet() {\n    // Four support feet\n    for(x = [-30, 30])\n        for(y = [-30, 30])\n            translate([x, y, -43.5])\n                cylinder(h=5, d=8);\n}\n\nmodule ventilationGrill() {\n    // Rear ventilation grill\n    translate([0, -37, -20])\n        difference() {\n            // Grill base\n            cube([70, 2, 30], center=true);\n            // Ventilation slots\n            for(i = [-12:3:12]) {\n                translate([i, 0, 0])\n                    cube([2, 3, 26], center=true);\n            }\n        }\n}\n\nmodule interiorShelf() {\n    // Removable wine shelf\n    translate([0, 0, -15])\n        difference() {\n            // Shelf base\n            cube([70, 65, 2], center=true);\n            // Wine bottle grooves\n            for(i = [-20, 0, 20]) {\n                translate([i, 0, 0])\n                    rotate([90, 0, 0])\n                        cylinder(h=65, d=20, center=true);\n            }\n        }\n}\n\n// Assembly\nunion() {\n    wineCoolerBody();\n    door();\n    windowGlass();\n    handle();\n    controlPanel();\n    display();\n    buttons();\n    feet();\n    ventilationGrill();\n    translate([0, 0, -20])\n        interiorShelf();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cryobin",
    "openscad_code": "// Cryobin Kitchen Appliance - Realistic Style, Medium Complexity\n\n// Overall dimensions\nwidth = 80;\ndepth = 60;\nheight = 100;\n\n// Wall thickness\nwall = 2;\n\n// Base frame\nmodule base_frame() {\n    difference() {\n        // Main frame\n        cube([width, depth, height], center = true);\n        \n        // Hollow interior\n        translate([0, 0, wall/2])\n            cube([width-wall*2, depth-wall*2, height-wall], center = true);\n    }\n}\n\n// Top lid with handle\nmodule lid() {\n    translate([0, 0, height/2 + wall/2]) {\n        // Lid body\n        difference() {\n            cube([width-wall*2, depth-wall*2, wall*2], center = true);\n            translate([0, 0, wall])\n                cube([width-wall*4, depth-wall*4, wall*2], center = true);\n        }\n        \n        // Handle\n        translate([0, 0, wall*1.5])\n            difference() {\n                cube([width/3, wall*2, wall*2], center = true);\n                translate([0, 0, wall/2])\n                    cube([width/3-wall, wall*2-wall*2, wall], center = true);\n            }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([width/2 + wall/2, 0, height/3]) {\n        rotate([0, 90, 0]) {\n            // Panel backing\n            cube([height/3, depth/2, wall], center = true);\n            \n            // Buttons\n            for(i = [0:2]) {\n                translate([0, -depth/6 + i*depth/6, wall/2 + 0.1])\n                    cylinder(h=wall/2, r=wall/1.5, $fn=16);\n            }\n            \n            // LED indicator\n            translate([height/6, 0, wall/2 + 0.1])\n                cylinder(h=wall/4, r=wall/3, $fn=16);\n        }\n    }\n}\n\n// Ventilation grilles\nmodule vents() {\n    // Side vents\n    translate([0, depth/2, height/4]) {\n        for(i = [0:3]) {\n            translate([width/2 - (i+1)*width/5, 0, 0])\n                cube([wall*3, wall/2, height/6], center = true);\n        }\n    }\n    \n    // Rear vents\n    translate([0, 0, height/4]) {\n        for(i = [0:2]) {\n            translate([width/2 - (i+1)*width/4, -depth/2 - wall/2, 0])\n                cube([wall*4, wall/2, height/6], center = true);\n        }\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*width/3, y*depth/3, -height/2 - wall]) {\n                cylinder(h=wall*2, r=wall*1.5, $fn=16);\n            }\n        }\n    }\n}\n\n// Interior compartment dividers\nmodule dividers() {\n    translate([0, 0, -height/4]) {\n        for(i = [-1, 1]) {\n            translate([i*width/4, 0, 0])\n                cube([wall, depth-wall*2, height/2], center = true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    base_frame();\n    lid();\n    control_panel();\n    vents();\n    feet();\n    dividers();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "freezedock",
    "openscad_code": "// Freezedock Kitchen Appliance\n// A compact bench-top blast-chiller / rapid-freeze docking station\n\n// Overall dimensions (mm)\ndock_w = 120;\ndock_h = 90;\ndock_d = 110;\n\nwall_th = 2;     // printable wall thickness\nchamfer  = 1;    // small chamfers for 3D-printability\n\n// Main housing\nmodule housing() {\n    // Base shell\n    difference() {\n        rounded_box(dock_w, dock_h, dock_d, chamfer+2);\n        translate([wall_th, wall_th, wall_th])\n            rounded_box(dock_w-2*wall_th, dock_h-2*wall_th, dock_d-2*wall_th, chamfer);\n    }\n}\n\n// Helper for rounded box (simple chamfered version)\nmodule rounded_box(w, h, d, r) {\n    translate([w/2, d/2, h/2])\n        cube([w, d, h], center=true);\n}\n\n// Front control bezel\nmodule control_panel() {\n    translate([dock_w/2 - 18, dock_d - wall_th, dock_h/2 + 10]) {\n        difference() {\n            cube([36, 4, 20]);          // bezel plate\n            translate([4, -0.1, 4])\n                cube([28, 4.2, 12]);    // recess for display\n        }\n    }\n}\n\n// Display screen\nmodule display() {\n    color(\"black\")\n    translate([dock_w/2, dock_d - 1, dock_h/2 + 16]) {\n        cube([30, 0.5, 10]);\n    }\n}\n\n// Push buttons\nmodule buttons() {\n    for (i = [0:2]) {\n        translate([dock_w/2 - 24 + i*12, dock_d - 1, dock_h/2 - 10]) {\n            cylinder(h = 2.5, d = 8, $fn=20);\n        }\n    }\n}\n\n// Top lid / door\nmodule lid() {\n    translate([dock_w/2, dock_d/2, dock_h - 1]) {\n        difference() {\n            rounded_box(dock_w-4, dock_d-4, 4, 2);\n            translate([wall_th, wall_th, -0.1])\n                rounded_box(dock_w-4-2*wall_th, dock_d-4-2*wall_th, 4.2, 2);\n        }\n    }\n}\n\n// Handle on lid\nmodule handle() {\n    translate([dock_w/2, dock_d/2, dock_h + 3]) {\n        difference() {\n            cube([50, 10, 6], center=true);\n            translate([0, 0, -0.1])\n                cube([46, 6, 6.2], center=true);\n        }\n    }\n}\n\n// Rear ventilation grill\nmodule vent_grill() {\n    translate([wall_th, wall_th, wall_th]) {\n        for (i = [0:6]) {\n            translate([0, 0, i*10 + 4])\n                cube([dock_w-2*wall_th, wall_th, 6]);\n        }\n    }\n}\n\n// Internal shelf supports\nmodule shelf_supports() {\n    for (side = [-1, 1]) {\n        for (h = [20, 40, 60]) {\n            translate([dock_w/2 + side*50, dock_d/2 - 40, h]) {\n                cube([wall_th, 80, 4]);\n            }\n        }\n    }\n}\n\n// Feet / pads for stability\nmodule feet() {\n    for (x = [-1, 1])\n        for (y = [-1, 1])\n            translate([dock_w/2 + x*50, dock_d/2 + y*50, -3]) {\n                cylinder(h = 3, d = 8, $fn=20);\n            }\n}\n\n// Assembly\nhousing();\ncontrol_panel();\ndisplay();\nbuttons();\nlid();\nhandle();\nvent_grill();\nshelf_supports();\nfeet();",
    "renders": true
  },
  {
    "kitchen_appliance": "icyframe",
    "openscad_code": "// Icyframe kitchen appliance â€“ a compact 3D-printable ice-cube maker / tray frame\n// Overall footprint 120 x 90 mm, height 65 mm â€“ prints without support\n\n// Wall thickness constant\nwall = 2;\n\n// Main outer shell\nmodule shell() {\n    difference() {\n        // Overall rounded box\n        minkowski() {\n            cube([120, 90, 60], center=true);\n            sphere(wall / 2);\n        }\n        // Hollow inside\n        translate([0, 0, -2])\n            cube([120 - 2*wall, 90 - 2*wall, 65], center=true);\n    }\n}\n\n// Four round feet\nmodule feet() {\n    for (x = [-55, 55])\n        for (y = [-40, 40])\n            translate([x, y, -32])\n                cylinder(h=5, d=12, center=true);\n}\n\n// Front control dial\nmodule dial() {\n    rotate([90, 0, 0])\n        translate([0, 0, 40 + wall])\n            cylinder(h=8, d1=20, d2=16, center=true);\n    // Dial grip ridges\n    for (i=[0:11])\n        rotate([0, 0, i*30])\n            translate([9, 0, 44 + wall])\n                cube([1.5, 2, 8], center=true);\n}\n\n// Water-fill spout on top\nmodule spout() {\n    translate([0, 0, 31])\n        cylinder(h=15, d1=30, d2=20, center=true);\n    difference() {\n        translate([0, 0, 38.5])\n            cylinder(h=5, d=16, center=true);\n        translate([0, 0, 40])\n            cylinder(h=8, d=12, center=true);\n    }\n}\n\n// Ice-cube tray grid inside\nmodule tray() {\n    difference() {\n        // Tray base\n        translate([0, 0, 0])\n            cube([100, 70, 10], center=true);\n        // Grid of 3x2 cube cells\n        for (x = [-40, 0, 40])\n            for (y = [-25, 25])\n                translate([x, y, 5])\n                    cube([28, 28, 12], center=true);\n    }\n    // Thin floor for each cell (2 mm thick)\n    for (x = [-40, 0, 40])\n        for (y = [-25, 25])\n            translate([x, y, -1])\n                cube([26, 26, 2], center=true);\n}\n\n// Assembly\nunion() {\n    shell();\n    feet();\n    dial();\n    spout();\n    tray();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tundranest",
    "openscad_code": "// Tundranest Kitchen Appliance - Realistic Style\n// A compact, modular food storage container system inspired by arctic design\n\n$fn = 50;\n\nmodule body() {\n    // Main body - slightly tapered for stacking\n    difference() {\n        hull() {\n            cube([60, 40, 35], center=true);\n            translate([0, 0, 15]) cube([55, 35, 5], center=true);\n        }\n        // Hollow interior\n        translate([0, 0, -2]) cube([56, 36, 31], center=true);\n    }\n}\n\nmodule lid() {\n    // Interlocking lid with gasket channel\n    difference() {\n        // Lid body\n        hull() {\n            cube([62, 42, 3], center=true);\n            translate([0, 0, -1.5]) cube([58, 38, 6], center=true);\n        }\n        // Gasket channel\n        translate([0, 0, -1.5]) cube([56, 36, 1.5], center=true);\n        // Handle cavity\n        translate([0, 0, 2.5]) cylinder(h=3, r=10);\n    }\n    \n    // Handle grip\n    difference() {\n        translate([0, 0, 3]) cylinder(h=5, r=12);\n        translate([0, 0, 3]) cylinder(h=5.5, r=8);\n    }\n}\n\nmodule modular_connector() {\n    // Stackable connector system\n    // Male connector on bottom\n    translate([0, 0, -19]) \n    difference() {\n        cylinder(h=3, r1=25, r2=20);\n        translate([0, 0, -0.1]) cylinder(h=3.2, r1=22, r2=17);\n    }\n    \n    // Female connector on top\n    translate([0, 0, 19]) \n    difference() {\n        cube([45, 45, 3], center=true);\n        translate([0, 0, -0.1]) cube([40, 40, 3.2], center=true);\n    }\n}\n\nmodule label_area() {\n    // Recessed label area on front\n    difference() {\n        translate([0, 21, 5]) cube([40, 0.5, 15], center=true);\n        translate([0, 21.3, 5]) cube([38, 0.5, 13], center=true);\n    }\n}\n\nmodule air_vent() {\n    // Small adjustable vents for humidity control\n    for(i = [-15, 0, 15]) {\n        translate([i, -21, 5])\n        rotate([90, 0, 0])\n        difference() {\n            cylinder(h=2, r=3);\n            cylinder(h=2.2, r=1.5);\n        }\n    }\n}\n\nmodule reinforcement_ribs() {\n    // Structural ribs for durability\n    for(x = [-20, 0, 20]) {\n        translate([x, 0, 0])\n        cube([3, 38, 33], center=true);\n    }\n    for(y = [-15, 0, 15]) {\n        translate([0, y, 0])\n        cube([58, 3, 33], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Main body with ribs\n    body();\n    reinforcement_ribs();\n    \n    // Lid assembly\n    translate([0, 0, 20]) lid();\n    \n    // Connection system\n    modular_connector();\n    \n    // Functional details\n    label_area();\n    air_vent();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "winterstack",
    "openscad_code": "// Winterstack - modern styled electric kettle\n// Dimensions: 120 mm height, 100 mm width, 150 mm depth\n$fn = 40;        // Smooth curves\nwall = 2;        // 3D-printable wall thickness\n\n// Main body\nmodule kettle_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 60])\n            scale([1, 0.85, 1])\n            cylinder(h = 80, r = 45, center = true);\n\n        // Inner cavity\n        translate([0, 0, 60])\n            scale([1, 0.85, 1])\n            cylinder(h = 78, r = 43, center = true);\n\n        // Spout hole\n        rotate([0, 90, 0])\n            translate([45, 0, 30])\n            cylinder(h = 20, r = 12);\n    }\n}\n\n// Handle\nmodule handle() {\n    difference() {\n        union() {\n            // Handle arch\n            translate([-45, 0, 75])\n                rotate([0, 90, 0])\n                cylinder(h = 70, r = 8);\n\n            // Mounting blocks\n            translate([-45, 0, 40])\n                cube([wall*4, 15, 15], center = true);\n            translate([-45, 0, 110])\n                cube([wall*4, 15, 15], center = true);\n        }\n        \n        // Grip clearance\n        translate([-45, 0, 75])\n            rotate([0, 90, 0])\n            cylinder(h = 72, r = 5);\n    }\n}\n\n// Spout\nmodule spout() {\n    translate([45, 0, 30])\n        rotate([0, 90, 0])\n        difference() {\n            // Outer cone\n            cylinder(h1 = 30, h2 = 0, r1 = 15, r2 = 8);\n            // Inner bore\n            cylinder(h1 = 30, h2 = 0, r1 = 12, r2 = 5);\n        }\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        union() {\n            // Lid disc\n            translate([0, 0, 105])\n                scale([1, 0.85, 1])\n                cylinder(h = wall, r = 45);\n\n            // Handle knob\n            translate([0, 0, 110])\n                cylinder(h = 15, r = 12);\n        }\n        \n        // Finger grip\n        translate([0, 0, 115])\n            cylinder(h = 10, r = 8);\n    }\n}\n\n// Base with heating element\nmodule base() {\n    difference() {\n        // Base plate\n        translate([0, 0, 5])\n            cube([90, 90, wall*2], center = true);\n\n        // Cable notch\n        translate([0, -45, 5])\n            cube([30, wall*2, 15], center = true);\n    }\n    \n    // Power indicator ring\n    translate([0, 0, 12])\n        cylinder(h = 2, r = 42);\n}\n\n// Control buttons\nmodule controls() {\n    // Power button\n    translate([30, 35, 20])\n        cylinder(h = 8, r = 8);\n\n    // Temperature dial\n    translate([-30, 35, 20])\n        rotate([90, 0, 0])\n        cylinder(h = 12, r = 10);\n        \n    // Button labels\n    for(i = [0:1]) {\n        translate([i == 0 ? 30 : -30, 35, 28])\n            cube([6, 2, 1], center = true);\n    }\n}\n\n// Assembly\nunion() {\n    base();\n    kettle_body();\n    handle();\n    spout();\n    lid();\n    controls();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chillhub",
    "openscad_code": "// ChillHub Refrigerator Module\n// Basic OpenSCAD version with realistic styling\n\n// Overall dimensions\nmodule body() {\n    // Main body shell - 2mm walls with hollow interior\n    difference() {\n        // Outer shell\n        cube([80, 60, 100]);\n        \n        // Hollow interior\n        translate([2, 2, 2])\n            cube([76, 56, 96]);\n    }\n}\n\n// Door with handle\nmodule door() {\n    difference() {\n        // Door panel\n        translate([0, -2, 0])\n            cube([76, 4, 94]);\n        \n        // Door window\n        translate([10, -1.5, 20])\n            cube([56, 2, 54]);\n    }\n    \n    // Door handle\n    translate([70, -3, 50])\n        rotate([90, 0, 0])\n            cylinder(h=15, r=2, $fn=16);\n}\n\n// Cooling vents on back\nmodule vents() {\n    for(i = [10:15:70]) {\n        translate([i, 61, 10])\n            cube([10, 2, 5]);\n        translate([i, 61, 20])\n            cube([10, 2, 5]);\n        translate([i, 61, 30])\n            cube([10, 2, 5]);\n        translate([i, 61, 40])\n            cube([10, 2, 5]);\n    }\n}\n\n// Control panel\nmodule controls() {\n    // Panel base\n    translate([5, 58, 85])\n        cube([20, 4, 10]);\n    \n    // Temperature display\n    translate([7, 60, 87])\n        cube([6, 2, 3]);\n    \n    // Buttons\n    translate([15, 60, 87])\n        cube([3, 2, 2]);\n    translate([15, 60, 91])\n        cube([3, 2, 2]);\n}\n\n// Feet for stability\nmodule feet() {\n    // Front left\n    translate([5, 5, -3])\n        cylinder(h=3, r=2, $fn=16);\n    \n    // Front right\n    translate([75, 5, -3])\n        cylinder(h=3, r=2, $fn=16);\n    \n    // Back left\n    translate([5, 55, -3])\n        cylinder(h=3, r=2, $fn=16);\n    \n    // Back right\n    translate([75, 55, -3])\n        cylinder(h=3, r=2, $fn=16);\n}\n\n// Internal shelf supports\nmodule shelf_supports() {\n    for(h = [25:30:85]) {\n        // Left support\n        translate([5, 30, h])\n            cube([2, 20, 2]);\n        \n        // Right support\n        translate([73, 30, h])\n            cube([2, 20, 2]);\n    }\n}\n\n// USB hub feature\nmodule usb_hub() {\n    // Hub housing\n    translate([82, 20, 10])\n        cube([8, 20, 8]);\n    \n    // USB ports\n    for(i = [0:3]) {\n        translate([85, 22 + i*4, 12])\n            cube([2, 2, 2]);\n    }\n}\n\n// Power cable\nmodule power_cable() {\n    // Cable entry point\n    translate([40, 61, 5])\n        rotate([90, 0, 0])\n            cylinder(h=8, r=3, $fn=12);\n}\n\n// Logo plate\nmodule logo() {\n    translate([35, 58, 75])\n        cube([10, 2, 5]);\n}\n\n// Assemble all parts\nunion() {\n    body();\n    translate([2, 60, 3])\n        door();\n    vents();\n    controls();\n    feet();\n    shelf_supports();\n    usb_hub();\n    power_cable();\n    logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frostbin",
    "openscad_code": "// Frostbin kitchen appliance - compact waste bin with lid\n// Overall dimensions: 100x80x120 mm\n\n// Parameters\nwall = 2;\nbase_w = 100;\nbase_d = 80;\nbase_h = 100;\nlid_h = 20;\nhandle_w = 60;\nhandle_h = 10;\nhandle_d = 10;\nfoot_r = 3;\nfoot_h = 5;\nbutton_r = 4;\nbutton_h = 2;\n\n// Main body module\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([base_w, base_d, base_h]);\n        \n        // Hollow interior\n        translate([wall, wall, 0])\n            cube([base_w-2*wall, base_d-2*wall, base_h-wall+1]);\n        \n        // Top edge chamfer\n        for(i=[0:1]) {\n            translate([wall, wall+i*(base_d-2*wall-wall), base_h-wall])\n                rotate([0,45,0])\n                    cube([base_w-2*wall, wall*sqrt(2)+0.1, wall*sqrt(2)+0.1]);\n            translate([wall+i*(base_w-2*wall-wall), wall, base_h-wall])\n                rotate([45,0,0])\n                    cube([wall*sqrt(2)+0.1, base_d-2*wall, wall*sqrt(2)+0.1]);\n        }\n    }\n}\n\n// Lid module\nmodule lid() {\n    translate([0, 0, base_h]) {\n        difference() {\n            // Lid top\n            cube([base_w, base_d, lid_h]);\n            \n            // Underside recess\n            translate([wall, wall, 0])\n                cube([base_w-2*wall, base_d-2*wall, lid_h-1]);\n            \n            // Handle cutout\n            translate([base_w/2-handle_w/2, base_d-handle_d-2, lid_h-handle_h])\n                cube([handle_w, handle_d+2, handle_h+1]);\n        }\n        \n        // Handle grip\n        translate([base_w/2-handle_w/2, base_d-handle_d-1, base_h+lid_h-handle_h])\n            cube([handle_w, handle_d, handle_h]);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x=[10, base_w-10]) {\n        for(y=[10, base_d-10]) {\n            translate([x, y, -foot_h])\n                cylinder(r=foot_r, h=foot_h);\n        }\n    }\n}\n\n// Control button\nmodule button() {\n    translate([base_w-15, base_d/2, base_h-20]) {\n        cylinder(r=button_r, h=button_h+1);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    lid();\n    feet();\n    button();\n}\n\n// Hinge detail (decorative)\ntranslate([base_w-10, 0, base_h])\n    rotate([0, 90, 0])\n        cylinder(r=2, h=10);\n\ntranslate([10, 0, base_h])\n    rotate([0, 90, 0])\n        cylinder(r=2, h=10);",
    "renders": true
  },
  {
    "kitchen_appliance": "icelocker",
    "openscad_code": "// Icelocker â€“ a compact, 3D-printable mini fridge / ice-locker\n// Outer shell approx 120 mm tall, 90 mm deep, 70 mm wide\n// Wall thickness 2 mm everywhere, no critical overhangs\n// All vents printed as 45Â° ribs, doors open forward\n\n$fa = 1; $fs = 1;\n\n// Overall dimensions\nOW = 70;  // width\nOD = 90;  // depth\nOH = 120; // height\n\nwall = 2;\ndoor_clearance = 1;\n\n// Main body\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([OW, OD, OH]);\n        \n        // Hollow interior\n        translate([wall, wall, wall])\n            cube([OW - 2*wall, OD - wall, OH - 2*wall]);\n    }\n}\n\n// Ventilation grill on back\nmodule vent_grill() {\n    grill_h = 10;\n    rib_w = 2;\n    rib_gap = 2;\n    ribs = floor(OW / (rib_w + rib_gap));\n    \n    translate([0, OD, OH - grill_h - 10])\n        for (i = [0 : ribs-1])\n            translate([i*(rib_w + rib_gap) + rib_gap/2, 0, 0])\n                cube([rib_w, wall, grill_h]);\n}\n\n// Hinged door\nmodule door() {\n    door_th = wall;\n    door_h  = OH - 20;\n    \n    // Door panel\n    translate([-door_clearance, 0, 0])\n        cube([door_th, OD - 4*wall, door_h]);\n    \n    // Handle\n    translate([-door_clearance - 3, OD/2 - 5, door_h/2])\n        cube([3, 10, 2*wall]);\n}\n\n// Control panel on top\nmodule control_panel() {\n    panel_w = 40;\n    panel_d = 20;\n    \n    translate([(OW - panel_w)/2, 5, OH])\n        cube([panel_w, panel_d, 4]);\n    \n    // Three knobs\n    knob_r = 3;\n    knob_h = 2;\n    for (k = [0:2])\n        translate([OW/2 - 15 + k*15, 15, OH + 4])\n            cylinder(h = knob_h, r = knob_r, $fn = 16);\n}\n\n// Feet\nmodule feet() {\n    foot_r = 4;\n    foot_h = 3;\n    for (x = [1, -1], y = [1, -1])\n        translate([OW/2 + x*(OW/2 - 8), OD/2 + y*(OD/2 - 8), 0])\n            cylinder(h = foot_h, r = foot_r, $fn = 16);\n}\n\n// Logo plate\nmodule logo() {\n    plate_w = 30;\n    plate_h = 8;\n    translate([OW/2 - plate_w/2, wall, OH/2])\n        cube([plate_w, wall, plate_h]);\n}\n\n// Assembly\nunion() {\n    body();\n    vent_grill();\n    door();\n    control_panel();\n    feet();\n    logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "glaciercore",
    "openscad_code": "// GlacierCore kitchen appliance - medium complexity realistic model\n// Overall dimensions: 120mm x 80mm x 85mm\n\n// Parameters\nwall_thickness = 2;\nmain_width = 120;\nmain_depth = 80;\nmain_height = 85;\ncore_radius = 35;\ncore_height = 50;\n\n// Main body shell\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([main_width, main_depth, main_height], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cube([main_width-wall_thickness*2, main_depth-wall_thickness*2, main_height-wall_thickness*2], center=true);\n        \n        // Top opening\n        translate([0, 0, main_height/2])\n            cube([core_radius*2+10, core_radius*2+10, wall_thickness+1], center=true);\n    }\n}\n\n// Core container\nmodule core_container() {\n    difference() {\n        cylinder(h=core_height, r=core_radius+wall_thickness, center=false);\n        translate([0, 0, wall_thickness])\n            cylinder(h=core_height-wall_thickness*2, r=core_radius, center=false);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([main_width/2-wall_thickness-5, 0, main_height/2-20]) {\n        // Panel base\n        cube([wall_thickness+2, 30, 15], center=true);\n        \n        // Buttons\n        for(i=[-1:1]) {\n            translate([0, i*8, 6])\n                cylinder(h=2, r=3, center=false);\n        }\n        \n        // Power LED\n        translate([0, 0, 9])\n            sphere(r=2);\n    }\n}\n\n// Air vents\nmodule air_vents() {\n    for(side=[-1, 1]) {\n        translate([side*(main_width/2-wall_thickness), 0, -main_height/4]) {\n            for(i=[-2:2]) {\n                translate([0, i*10, 0])\n                    rotate([90, 0, 0])\n                        cube([15, wall_thickness, 3], center=true);\n            }\n        }\n    }\n}\n\n// Base feet\nmodule feet() {\n    for(x=[-1, 1]) {\n        for(y=[-1, 1]) {\n            translate([x*(main_width/2-15), y*(main_depth/2-15), -main_height/2-wall_thickness])\n                cylinder(h=wall_thickness*2, r=5, center=false);\n        }\n    }\n}\n\n// Handle\nmodule handle() {\n    translate([0, main_depth/2+wall_thickness, main_height/4]) {\n        difference() {\n            rotate([90, 0, 0])\n                cylinder(h=40, r=wall_thickness, center=true);\n            translate([-20, 0, 0])\n                cube([40, wall_thickness*2, wall_thickness*2], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    main_body();\n    translate([0, 0, -main_height/2+core_height/2])\n        core_container();\n    control_panel();\n    air_vents();\n    feet();\n    handle();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "arcticstack",
    "openscad_code": "// ArcticStack Countertop Ice Maker\n// Realistic style, medium complexity\n// Approx 150mm wide x 180mm deep x 180mm tall\n// 2mm wall thickness for 3D printing\n\nmodule roundedCube(size, r, center=false) {\n    // Creates a cube with rounded edges\n    translate([0, 0, center ? -size.z/2 : 0])\n    hull() {\n        for(x = [r, size.x-r])\n            for(y = [r, size.y-r])\n                for(z = [r, size.z-r])\n                    translate([x, y, z])\n                        sphere(r=r, $fn=12);\n    }\n}\n\nmodule main_body() {\n    // Main housing with rounded corners\n    difference() {\n        roundedCube([100, 130, 140], 8);\n        \n        // Hollow out interior\n        translate([2, 2, 2])\n            roundedCube([96, 126, 136], 6);\n    }\n}\n\nmodule control_panel() {\n    // Top control panel with display and buttons\n    translate([0, 135, 0])\n    union() {\n        // Panel base\n        translate([0, 0, 10])\n            roundedCube([120, 15, 20], 5);\n        \n        // LCD display\n        translate([-30, 12, 12])\n            color([0.2, 0.2, 0.2])\n            cube([40, 2, 8]);\n        \n        // Power button\n        translate([20, 12, 12])\n            cylinder(h=2, r=6, $fn=20);\n        \n        // Size selection buttons\n        for(i = [0:1])\n            translate([40 + i*15, 12, 12])\n                cylinder(h=2, r=4, $fn=16);\n    }\n}\n\nmodule ice_bin() {\n    // Removable ice collection bin\n    translate([0, 10, -30])\n    difference() {\n        // Outer bin\n        roundedCube([90, 100, 40], 5);\n        \n        // Inner cavity\n        translate([2, 2, 2])\n            roundedCube([86, 96, 38], 3);\n        \n        // Handle cutout\n        translate([0, -2, 20])\n            cube([20, 4, 10]);\n    }\n}\n\nmodule air_vents() {\n    // Rear ventilation slots\n    translate([0, -65, 70])\n    for(i = [0:5]) {\n        translate([i*15 - 37.5, 0, 0])\n            cube([12, 2, 40]);\n    }\n}\n\nmodule water_reservoir() {\n    // Side water tank\n    translate([52, 0, 20])\n    difference() {\n        roundedCube([20, 80, 100], 3);\n        translate([2, 2, 10])\n            roundedCube([16, 76, 88], 2);\n    }\n}\n\nmodule feet() {\n    // Support feet\n    for(x = [-40, 40])\n        for(y = [-50, 50])\n            translate([x, y, -10])\n                cylinder(h=10, r=5, $fn=16);\n}\n\nunion() {\n    color([0.95, 0.95, 0.95])  // Arctic white\n    \n    main_body();\n    control_panel();\n    \n    color([0.9, 0.9, 0.9])\n    ice_bin();\n    \n    color([0.85, 0.85, 0.85])\n    air_vents();\n    \n    color([0.3, 0.3, 0.8])  // Translucent blue\n    water_reservoir();\n    \n    color([0.2, 0.2, 0.2])\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzerovault",
    "openscad_code": "// SubZeroVault Wine Fridge - Realistic Medium Complexity\n// Overall dimensions: 60mm W x 50mm D x 120mm H\n\n$fn = 32;\n\n// Main module\nmodule subzerovault() {\n    // Main body shell\n    difference() {\n        // Outer shell\n        cube([60, 50, 120], center = true);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        cube([56, 46, 116], center = true);\n    }\n    \n    // Front door\n    translate([29, 0, 0])\n    rotate([0, 10, 0])\n    door();\n    \n    // Base plinth\n    translate([0, 0, -62])\n    cube([62, 52, 4], center = true);\n    \n    // Top vent\n    translate([0, 0, 61])\n    top_vent();\n    \n    // Control panel\n    translate([20, -26, 40])\n    control_panel();\n    \n    // Door handle\n    translate([32, 0, 20])\n    rotate([0, 10, 0])\n    door_handle();\n    \n    // Internal shelves\n    for(i = [-30, -10, 10, 30]) {\n        translate([0, 0, i])\n        shelf();\n    }\n    \n    // Side vents\n    translate([0, 27, 30])\n    rotate([0, 90, 0])\n    side_vent();\n    \n    translate([0, -27, 30])\n    rotate([0, 90, 0])\n    side_vent();\n}\n\n// Door module with window\nmodule door() {\n    difference() {\n        // Door panel\n        cube([4, 46, 114], center = true);\n        \n        // Window cutout\n        translate([1, 0, 20])\n        cube([2, 38, 60], center = true);\n    }\n    \n    // Window glass\n    translate([2.1, 0, 20])\n    cube([0.5, 36, 58], center = true);\n    \n    // Door seal\n    translate([-1, 0, 0])\n    cube([1, 48, 116], center = true);\n}\n\n// Door handle\nmodule door_handle() {\n    difference() {\n        cube([2, 18, 4], center = true);\n        translate([0, 0, 2])\n        cylinder(h=5, r=2, center=true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    difference() {\n        cube([16, 2, 10], center = true);\n        \n        // Display screen\n        translate([0, 1.1, 3])\n        cube([12, 0.2, 6], center = true);\n    }\n    \n    // Control buttons\n    for(i = [-3, 0, 3]) {\n        translate([i, 1.2, -2])\n        cylinder(h=1, r=1.5);\n    }\n}\n\n// Top ventilation grill\nmodule top_vent() {\n    difference() {\n        cube([50, 40, 2], center = true);\n        for(i = [-20:4:20]) {\n            translate([i, 0, 0])\n            cube([2, 38, 3], center = true);\n        }\n    }\n}\n\n// Side ventilation grill\nmodule side_vent() {\n    difference() {\n        cube([40, 2, 50], center = true);\n        for(i = [-20:4:20]) {\n            translate([0, 0, i])\n            cube([38, 3, 2], center = true);\n        }\n    }\n}\n\n// Internal shelf\nmodule shelf() {\n    difference() {\n        translate([0, 0, 0])\n        cube([54, 42, 2], center = true);\n        \n        // Bottle grooves\n        for(i = [-20:8:20]) {\n            translate([i, 0, -0.5])\n            cylinder(h=3, r=7, center=true);\n        }\n    }\n}\n\n// Generate the complete model\nsubzerovault();",
    "renders": true
  },
  {
    "kitchen_appliance": "polarframe",
    "openscad_code": "// PolarFrame Coffee Grinder - Realistic Kitchen Appliance\n// Medium complexity OpenSCAD model\n\n$fn = 50;\n\n// Overall dimensions\nbody_d = 65;\nbody_h = 110;\nbase_h = 15;\n\n// Main body - cylindrical form\nmodule main_body() {\n    difference() {\n        // Main cylinder\n        cylinder(d=body_d, h=body_h, center=false);\n        \n        // Top recess for hopper\n        translate([0, 0, body_h-5])\n            cylinder(d=body_d-8, h=10, center=false);\n            \n        // Front display cutout\n        translate([body_d/2-2, -15, 65])\n            cube([5, 30, 20]);\n    }\n}\n\n// Base with feet\nmodule base() {\n    difference() {\n        cylinder(d=body_d+8, h=base_h, center=false);\n        \n        // Four feet indents\n        for(i=[0:3]) {\n            rotate([0, 0, i*90])\n                translate([body_d/2+2, 0, -1])\n                    cube([8, 6, base_h+2]);\n        }\n    }\n}\n\n// Hopper for beans\nmodule hopper() {\n    translate([0, 0, body_h-2]) {\n        difference() {\n            cylinder(d=body_d-12, h=25, center=false);\n            // Inner cone\n            cylinder(d1=body_d-16, d2=body_d-20, h=23, center=false);\n        }\n        // Hopper lid\n        translate([0, 0, 25])\n            cylinder(d=body_d-10, h=2, center=false);\n    }\n}\n\n// Grinder adjustment ring\nmodule adjustment_ring() {\n    translate([0, 0, body_h-25]) {\n        difference() {\n            cylinder(d=body_d+4, h=6, center=false);\n            // Knurling pattern\n            for(i=[0:35]) {\n                rotate([0, 0, i*10])\n                    translate([body_d/2+1, -1, 1])\n                        cube([2, 2, 4]);\n            }\n        }\n    }\n}\n\n// Grounds container\nmodule grounds_container() {\n    translate([0, 0, base_h+2]) {\n        difference() {\n            cylinder(d=body_d-4, h=30, center=false);\n            // Inner cavity\n            cylinder(d=body_d-8, h=28, center=false);\n        }\n        // Handle\n        translate([body_d/2-2, 0, 15])\n            rotate([0, 90, 0])\n                cylinder(d=8, h=15, center=false);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Display screen\n    translate([body_d/2-1, 0, 75])\n        cube([2, 20, 10]);\n    \n    // Buttons\n    for(i=[0:2]) {\n        translate([body_d/2-1, -8+i*8, 65])\n            sphere(d=6);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([body_d/2-3, 0, base_h-2])\n        rotate([90, 0, 0])\n            cylinder(d=6, h=20, center=false);\n}\n\n// Assembly\nunion() {\n    // Main components\n    base();\n    translate([0, 0, base_h]) main_body();\n    hopper();\n    adjustment_ring();\n    grounds_container();\n    \n    // Details\n    control_panel();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "snowbin",
    "openscad_code": "// Snowbin - A kitchen appliance for storing and dispensing snow-like ice\n// Realistic style with medium complexity\n\n// Main parameters\n$fn = 30;\nwall_thickness = 2;\nbody_width = 80;\nbody_depth = 60;\nbody_height = 100;\n\n// Main body module\nmodule snowbin_body() {\n    // Outer shell\n    difference() {\n        // Main body\n        cube([body_width, body_depth, body_height], center = true);\n        \n        // Hollow interior\n        translate([0, 0, wall_thickness/2])\n            cube([body_width - 2*wall_thickness, \n                  body_depth - 2*wall_thickness, \n                  body_height - wall_thickness], center = true);\n    }\n    \n    // Rounded top edge\n    translate([0, 0, body_height/2])\n        cylinder(h = wall_thickness, r = body_width/2 - wall_thickness/2);\n    \n    // Base platform\n    translate([0, 0, -body_height/2 - wall_thickness])\n        cube([body_width + 4, body_depth + 4, wall_thickness], center = true);\n}\n\n// Lid module\nmodule snowbin_lid() {\n    // Main lid\n    translate([0, 0, body_height/2 + wall_thickness])\n        difference() {\n            cylinder(h = 8, r = body_width/2);\n            translate([0, 0, wall_thickness])\n                cylinder(h = 10, r = body_width/2 - wall_thickness);\n        }\n    \n    // Lid handle\n    translate([0, 0, body_height/2 + 12])\n        cylinder(h = 15, r = 5);\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel housing\n    translate([body_width/2, 0, body_height/2 - 20])\n        cube([8, 30, 25], center = true);\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([body_width/2 + 5, -10 + i*10, body_height/2 - 20])\n            cylinder(h = 2, r = 3);\n    }\n    \n    // Power LED\n    translate([body_width/2 + 5, 15, body_height/2 - 15])\n        sphere(r = 2);\n}\n\n// Dispensing mechanism\nmodule dispenser() {\n    // Dispenser chute\n    translate([0, body_depth/2 + 5, -body_height/4])\n        difference() {\n            rotate([90, 0, 0])\n                cylinder(h = 20, r = 15);\n            rotate([90, 0, 0])\n                cylinder(h = 20, r = 13);\n        }\n    \n    // Dispenser lever\n    translate([0, body_depth/2 + 15, -body_height/4])\n        cube([20, 3, 5], center = true);\n}\n\n// Legs module\nmodule legs() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*body_width/3, y*body_depth/3, -body_height/2 - 8])\n                cylinder(h = 8, r = 4);\n        }\n    }\n}\n\n// Ventilation grilles\nmodule vents() {\n    // Back panel vents\n    for(i = [0:4]) {\n        translate([-body_width/2 - 1, -body_depth/2 + 5 + i*10, -body_height/4])\n            cube([2, 8, 2]);\n    }\n}\n\n// Assembly\nsnowbin_body();\nsnowbin_lid();\ncontrol_panel();\ndispenser();\nlegs();\nvents();",
    "renders": true
  },
  {
    "kitchen_appliance": "cryochest",
    "openscad_code": "// Cryochest Kitchen Appliance - Medium Complexity\n// Realistic style with 3D-printable design\n\n// Overall dimensions\nwidth = 80;\ndepth = 60;\nheight = 100;\nwall_thickness = 2;\n\n// Main chest body\nmodule chest_body() {\n    difference() {\n        // Outer shell\n        cube([width, depth, height], center = true);\n        \n        // Inner cavity (leave 2mm walls)\n        translate([0, 0, wall_thickness])\n            cube([width - 2*wall_thickness, depth - 2*wall_thickness, height - wall_thickness], center = true);\n    }\n}\n\n// Top lid with handle\nmodule lid() {\n    translate([0, 0, height/2 + wall_thickness/2]) {\n        difference() {\n            // Lid base\n            cube([width + 2, depth + 2, wall_thickness*2], center = true);\n            \n            // Inner recess\n            translate([0, 0, -1])\n                cube([width - 2*wall_thickness, depth - 2*wall_thickness, wall_thickness*2], center = true);\n        }\n        \n        // Handle bar\n        translate([0, -depth/2 - 5, 0])\n            rotate([90, 0, 0])\n                cylinder(h=15, r=3, center=true);\n    }\n}\n\n// Front panel with controls\nmodule control_panel() {\n    translate([0, depth/2 - wall_thickness/2, 0]) {\n        // Panel base\n        translate([0, wall_thickness/2, 0])\n            cube([width*0.6, wall_thickness, height*0.3], center = true);\n        \n        // Buttons row\n        for(i = [-1, 0, 1]) {\n            translate([i*12, wall_thickness + 1, height*0.15])\n                cylinder(h=3, r=4, center=true);\n        }\n        \n        // Display screen\n        translate([0, wall_thickness + 1, -height*0.1])\n            cube([width*0.4, 1, height*0.1], center = true);\n    }\n}\n\n// Side cooling vents\nmodule side_vents() {\n    for(side = [-1, 1]) {\n        translate([side*width/2, 0, 0]) {\n            rotate([0, 90*side, 0]) {\n                // Vent frame\n                cube([wall_thickness*3, height*0.8, depth*0.6], center = true);\n                \n                // Vent slots\n                for(z = [-height*0.3:10:height*0.3]) {\n                    translate([0, z, 0])\n                        cube([wall_thickness, 8, depth*0.5], center = true);\n                }\n            }\n        }\n    }\n}\n\n// Bottom feet\nmodule feet() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*width/3, y*depth/3, -height/2 - 3])\n                cylinder(h=6, r=5, center=true);\n        }\n    }\n}\n\n// Hinge detail\nmodule hinges() {\n    for(x = [-width/3, width/3]) {\n        translate([x, 0, height/2]) {\n            rotate([90, 0, 0])\n                cylinder(h=wall_thickness*2, r=wall_thickness*1.5, center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    chest_body();\n    lid();\n    control_panel();\n    side_vents();\n    feet();\n    hinges();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "freezevault",
    "openscad_code": "// FreezeVault Kitchen Appliance - Realistic Style\n// Dimensions: 100mm x 80mm x 120mm\n\n$fn = 32;\nwall_thickness = 2;\n\n// Main body module\nmodule freezevault_body() {\n    difference() {\n        // Outer shell\n        cube([100, 80, 120], center = true);\n        \n        // Inner cavity\n        translate([0, 0, -wall_thickness/2])\n            cube([100 - wall_thickness*2, 80 - wall_thickness*2, 120 - wall_thickness], center = true);\n    }\n}\n\n// Front door\nmodule door() {\n    translate([0, -40 + wall_thickness/2, 0])\n        rotate([90, 0, 0])\n            difference() {\n                cube([96, 116, wall_thickness], center = true);\n                \n                // Door handle cutout\n                translate([35, 50, 0])\n                    cylinder(h = wall_thickness + 1, r = 3, center = true);\n            }\n}\n\n// Door handle\nmodule door_handle() {\n    translate([35, -40 + wall_thickness + 3, 50])\n        rotate([0, 90, 0])\n            cylinder(h = 15, r = 3);\n}\n\n// Ventilation strips on back\nmodule vents() {\n    for (i = [0:4]) {\n        translate([-50, 39, 40 - i*20])\n            cube([100, wall_thickness, 10]);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([40, 39, 40])\n        cube([18, wall_thickness + 1, 40]);\n}\n\n// Buttons\nmodule buttons() {\n    for (i = [0:2]) {\n        translate([45, 40, 45 + i*12])\n            cylinder(h = 3, r = 4);\n    }\n}\n\n// Display screen\nmodule display() {\n    translate([45, 40, 25])\n        cube([8, wall_thickness + 0.5, 12]);\n}\n\n// Feet\nmodule feet() {\n    for (x = [-40, 40])\n        for (y = [-30, 30])\n            translate([x, y, -60])\n                cylinder(h = 5, r = 4);\n}\n\n// Branding plate\nmodule branding() {\n    translate([0, 39, 0])\n        cube([30, wall_thickness + 0.5, 10]);\n}\n\n// Main assembly\nunion() {\n    freezevault_body();\n    door();\n    door_handle();\n    vents();\n    control_panel();\n    buttons();\n    display();\n    feet();\n    branding();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icyhub",
    "openscad_code": "// IcyHub Kitchen Appliance (Ice Maker)\n// Realistic style, medium complexity\n// Overall size: 110x80x90mm (WxDxH)\n\n$fn = 32;\nwall = 2;\n\nmodule roundedCube(size, radius, center = false) {\n    hull() {\n        for(dx = [0, 1], dy = [0, 1], dz = [0, 1]) {\n            translate([dx*(size[0]-2*radius), dy*(size[1]-2*radius), dz*(size[2]-2*radius)])\n                sphere(r = radius, $fn = 16);\n        }\n    }\n}\n\nmodule body() {\n    difference() {\n        // Main body shell\n        roundedCube([110, 80, 90], 5);\n        \n        // Hollow interior\n        translate([wall, wall, wall])\n            roundedCube([110-2*wall, 80-2*wall, 90-2*wall], 4);\n        \n        // Ice dispensing chute\n        translate([40, 0, 30])\n            cube([30, wall+1, 30]);\n    }\n}\n\nmodule controlPanel() {\n    translate([55 - 20, 80 - wall - 1, 65]) {\n        // Panel background\n        color([0.2, 0.2, 0.2])\n            cube([40, 2, 20]);\n        \n        // Buttons row\n        for(i = [0:3]) {\n            translate([5 + i*9, 1, 5])\n                cylinder(h = 2, r = 3);\n        }\n        \n        // LED indicator\n        translate([35, 1, 15])\n            sphere(r = 2);\n    }\n}\n\nmodule waterTank() {\n    // Tank body\n    translate([10, 10, 5]) {\n        difference() {\n            roundedCube([25, 70, 40], 3);\n            translate([wall, wall, wall])\n                roundedCube([25-2*wall, 70-2*wall, 40-2*wall], 2);\n        }\n        \n        // Tank cap\n        translate([12.5, 70 - 10, 40])\n            cylinder(h = 5, r = 8);\n    }\n}\n\nmodule iceBasket() {\n    // Basket frame\n    translate([60, 10, 5]) {\n        difference() {\n            roundedCube([40, 65, 35], 4);\n            translate([wall, wall, wall])\n                roundedCube([40-2*wall, 65-2*wall, 35-wall], 3);\n        }\n        \n        // Drainage slots\n        for(i = [0:4]) {\n            translate([5 + i*7, wall, 5])\n                cube([3, 65-2*wall, 30]);\n        }\n    }\n}\n\nmodule feet() {\n    // Four rubber feet\n    for(x = [10, 100], y = [10, 70]) {\n        translate([x, y, 0])\n            cylinder(h = 3, r = 4);\n    }\n}\n\nmodule logo() {\n    // IcyHub logo on front\n    translate([55 - 15, 80 - 1, 45])\n        linear_extrude(height = 1)\n            text(\"ICYHUB\", size = 8, halign = \"center\");\n}\n\n// Assemble the appliance\nunion() {\n    body();\n    controlPanel();\n    waterTank();\n    iceBasket();\n    feet();\n    logo();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "tundradock",
    "openscad_code": "// TundraDock Kitchen Appliance - Realistic Style\n// A compact modular docking station for small kitchen appliances\n\n$fn = 50;\n\n// Overall dimensions\ndock_width = 80;\ndock_depth = 60;\ndock_height = 25;\n\n// Wall thickness\nwall_thick = 2;\n\n// Main base module\nmodule base_dock() {\n    difference() {\n        // Main body\n        cube([dock_width, dock_depth, dock_height]);\n        \n        // Hollow out center\n        translate([wall_thick, wall_thick, 0])\n            cube([dock_width-2*wall_thick, dock_depth-2*wall_thick, dock_height-wall_thick]);\n        \n        // Cable management channels\n        translate([dock_width/2-5, -1, 10])\n            cube([10, wall_thick+1, 5]);\n        translate([dock_width/2-5, dock_depth, 10])\n            cube([10, wall_thick+1, 5]);\n    }\n    \n    // Rubber feet\n    for(x = [15, dock_width-15])\n        for(y = [15, dock_depth-15])\n            translate([x, y, -2])\n                cylinder(h=2, r=3);\n}\n\n// Modular docking slots\nmodule docking_slots() {\n    slot_width = 20;\n    slot_depth = 25;\n    slot_height = 12;\n    \n    // Three slots along front\n    for(i = [0, 1, 2]) {\n        translate([10 + i*(slot_width+5), 5, dock_height]) {\n            difference() {\n                // Slot walls\n                cube([slot_width, slot_depth, slot_height]);\n                \n                // Slot cavity\n                translate([wall_thick, wall_thick, 0])\n                    cube([slot_width-2*wall_thick, slot_depth-wall_thick, slot_height-wall_thick]);\n                \n                // Tapered entry\n                translate([wall_thick, -1, slot_height-wall_thick])\n                    cube([slot_width-2*wall_thick, wall_thick+1, wall_thick]);\n            }\n            \n            // Contact pads\n            translate([slot_width/2, slot_depth-5, slot_height-wall_thick])\n                cube([8, 8, wall_thick]);\n        }\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([dock_width-25, dock_depth-15, dock_height+5]) {\n        // Panel housing\n        difference() {\n            cube([20, 10, 8]);\n            translate([2, 2, 2])\n                cube([16, 6, 6]);\n        }\n        \n        // Buttons\n        for(i = [0, 1, 2]) {\n            translate([5 + i*5, 5, 8])\n                cylinder(h=1, r=1.5);\n        }\n        \n        // LED indicator\n        translate([15, 3, 8])\n            sphere(r=1);\n    }\n}\n\n// Cooling vents\nmodule cooling_vents() {\n    vent_height = 8;\n    vent_width = 30;\n    \n    translate([dock_width/2-vent_width/2, dock_depth-5, dock_height]) {\n        difference() {\n            cube([vent_width, 5, vent_height]);\n            \n            // Horizontal vents\n            for(i = [0:2]) {\n                translate([2, 2, 2 + i*2])\n                    cube([vent_width-4, 1, 1]);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    base_dock();\n    docking_slots();\n    control_panel();\n    cooling_vents();\n    \n    // Brand label\n    translate([5, dock_depth/2, dock_height-wall_thick])\n        cube([20, 15, wall_thick]);\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "winterframe",
    "openscad_code": "// Winterframe cold-frame appliance for kitchen herbs\n// Overall size: 115 mm (w) x 155 mm (d) x 100 mm (h)\n\n$fn = 36;\n\nmodule main_frame()\n{\n    // base box 2 mm thick walls\n    difference() {\n        translate([0, 0, 1]) cube([115, 155, 2], center = true);\n        translate([0, 0, 2]) cube([111, 151, 2], center = true);\n    }\n    // left side wall\n    translate([-56.5, 0, 51]) cube([2, 155, 100], center = true);\n    // right side wall\n    translate([56.5, 0, 51]) cube([2, 155, 100], center = true);\n    // back wall\n    translate([0, 76.5, 51]) cube([111, 2, 100], center = true);\n    // front lower rail\n    translate([0, -76.5, 10]) cube([111, 2, 20], center = true);\n}\n\nmodule corner_pin(x, y, z)\n{\n    translate([x, y, z]) cylinder(h = 100, d = 6, center = true);\n}\n\nmodule four_corner_pins()\n{\n    corner_pin(-54.5, -74.5, 50);\n    corner_pin( 54.5, -74.5, 50);\n    corner_pin(-54.5,  74.5, 50);\n    corner_pin( 54.5,  74.5, 50);\n}\n\nmodule sloped_lid()\n{\n    // lid frame\n    difference() {\n        translate([0, 0, 100]) rotate([60, 0, 0])\n            cube([115, 155, 2], center = true);\n        translate([0, 0, 101]) rotate([60, 0, 0])\n            cube([111, 151, 2], center = true);\n    }\n    // handle\n    translate([0, 0, 135]) rotate([60, 0, 0])\n        cube([30, 10, 8], center = true);\n}\n\nmodule vent_dial(y, z)\n{\n    translate([0, y, z]) difference() {\n        cylinder(h = 6, d = 12, center = true);\n        rotate([90, 0, 0]) cylinder(h = 14, d = 2, center = true);\n    }\n}\n\nmodule vents()\n{\n    for (dy = [-40, -20, 0, 20, 40])\n    {\n        vent_dial(dy, 80);\n    }\n}\n\nmodule drainage_grid()\n{\n    for (x = [-45:15:45])\n    {\n        for (y = [-65:15:65])\n        {\n            translate([x, y, 3]) cylinder(h = 2, d = 3);\n        }\n    }\n}\n\nunion()\n{\n    main_frame();\n    four_corner_pins();\n    sloped_lid();\n    vents();\n    drainage_grid();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "chillbin",
    "openscad_code": "// Chillbin kitchen appliance\n// Dimensions: 60mm x 90mm x 120mm\n\n$fn = 32;\n\n// Main body module\nmodule chillbin_body() {\n    // Outer shell - 2mm thick walls\n    difference() {\n        // Main body\n        cube([60, 90, 120], center = true);\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cube([56, 86, 116], center = true);\n    }\n}\n\n// Lid module\nmodule chillbin_lid() {\n    // Outer lid\n    translate([0, 0, 60])\n    difference() {\n        cube([62, 92, 6], center = true);\n        // Inner cavity\n        translate([0, 0, -1])\n            cube([58, 88, 4], center = true);\n    }\n    \n    // Handle\n    translate([0, 0, 66])\n    difference() {\n        cube([40, 10, 8], center = true);\n        translate([0, 0, -1])\n            cube([36, 6, 10], center = true);\n    }\n}\n\n// Ventilation slots\nmodule ventilation_slots() {\n    for (i = [-2:2]) {\n        translate([30.5, i * 15 - 15, 0])\n            cube([2, 8, 60]);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    // Panel base\n    translate([0, 46, 30])\n    difference() {\n        cube([50, 2, 20], center = true);\n        // Indicator light holes\n        translate([-15, 0, 5])\n            cylinder(h=3, r=3);\n        translate([15, 0, 5])\n            cylinder(h=3, r=3);\n    }\n    \n    // Power button\n    translate([-15, 48, 35])\n    cylinder(h=4, r=5);\n    \n    // Mode button\n    translate([15, 48, 35])\n    cylinder(h=4, r=5);\n}\n\n// Feet\nmodule feet() {\n    foot_positions = [\n        [-25, -40, -62],\n        [25, -40, -62],\n        [-25, 40, -62],\n        [25, 40, -62]\n    ];\n    \n    for (pos = foot_positions) {\n        translate(pos)\n        cylinder(h=5, r=4);\n    }\n}\n\n// Side handles\nmodule side_handles() {\n    // Left handle\n    translate([-31, 0, 0])\n    difference() {\n        cube([6, 20, 30], center = true);\n        translate([1, 0, 0])\n            cube([4, 16, 26], center = true);\n    }\n    \n    // Right handle\n    translate([31, 0, 0])\n    difference() {\n        cube([6, 20, 30], center = true);\n        translate([-1, 0, 0])\n            cube([4, 16, 26], center = true);\n    }\n}\n\n// Main assembly\nunion() {\n    chillbin_body();\n    chillbin_lid();\n    ventilation_slots();\n    control_panel();\n    feet();\n    side_handles();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "frostcore",
    "openscad_code": "// Frostcore Kitchen Appliance - Countertop Ice Maker\n// Realistic style, medium complexity\n\n// Overall dimensions (mm)\nlength = 120;\nwidth = 85;\nheight = 110;\nwall_thickness = 2;\n\n// Main body module\nmodule body() {\n    // Outer shell\n    difference() {\n        cube([length, width, height], center = true);\n        translate([0, 0, wall_thickness/2])\n            cube([length-wall_thickness*2, width-wall_thickness*2, height-wall_thickness], center = true);\n    }\n}\n\n// Control panel\nmodule control_panel() {\n    translate([-length/2 + 15, 0, height/2 - 5])\n        cube([30, width-20, 10], center = true);\n}\n\n// Display screen\nmodule display() {\n    translate([-length/2 + 15, 0, height/2 + 1])\n        cube([20, 30, 1], center = true);\n}\n\n// Buttons module\nmodule buttons() {\n    for(i = [0:2]) {\n        translate([-length/2 + 25, -10 + i*10, height/2 + 2])\n            cylinder(h=2, r=3, center=true);\n    }\n}\n\n// Ice storage compartment\nmodule ice_compartment() {\n    translate([length/4, 0, -height/3])\n        difference() {\n            cube([length/2-10, width-20, height/2], center = true);\n            translate([0, 0, wall_thickness])\n                cube([length/2-10-wall_thickness*2, width-20-wall_thickness*2, height/2-wall_thickness*2], center = true);\n        }\n}\n\n// Water reservoir\nmodule water_reservoir() {\n    translate([0, width/2 - 10, 0])\n        difference() {\n            cube([length-40, 15, height-30], center = true);\n            translate([0, -wall_thickness/2, 0])\n                cube([length-40-wall_thickness*2, wall_thickness, height-30-wall_thickness*2], center = true);\n        }\n}\n\n// Ventilation grilles\nmodule vents() {\n    for(i = [0:3]) {\n        translate([length/2 - 5, -width/2 + 10 + i*20, 0])\n            rotate([0, 90, 0])\n                cylinder(h=2, r=1, center=true);\n    }\n}\n\n// Power cord\nmodule power_cord() {\n    translate([-length/2 - 5, -width/4, -height/2 + 10])\n        rotate([0, 0, 30])\n            cylinder(h=10, r=2, center=true);\n}\n\n// Feet\nmodule feet() {\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x*(length/2-10), y*(width/2-10), -height/2 - 2])\n                cylinder(h=4, r=3, center=true);\n        }\n    }\n}\n\n// Ice scoop holder\nmodule scoop_holder() {\n    translate([length/2 - 20, width/2 - 10, height/4])\n        difference() {\n            cylinder(h=8, r=5, center=true);\n            cylinder(h=9, r=4, center=true);\n        }\n}\n\n// Main assembly\nunion() {\n    body();\n    control_panel();\n    display();\n    buttons();\n    ice_compartment();\n    water_reservoir();\n    vents();\n    power_cord();\n    feet();\n    scoop_holder();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icechest",
    "openscad_code": "// Ice Chest Kitchen Appliance - Realistic Medium Complexity\n// Dimensions: 90mm(W) x 70mm(D) x 100mm(H)\n// Wall thickness: 2mm throughout\n\n$fn = 32;\n\nmodule rounded_cube(size, radius) {\n    hull() {\n        for (dx = [0, size[0]-radius*2])\n            for (dy = [0, size[1]-radius*2])\n                for (dz = [0, size[2]-radius*2])\n                    translate([dx+radius, dy+radius, dz+radius])\n                        sphere(radius);\n    }\n}\n\nmodule main_body() {\n    difference() {\n        // Outer shell\n        rounded_cube([90, 70, 100], 5);\n        \n        // Inner cavity\n        translate([2, 2, 2])\n            rounded_cube([86, 66, 98], 3);\n    }\n}\n\nmodule lid() {\n    difference() {\n        // Lid top\n        rounded_cube([90, 70, 8], 5);\n        \n        // Inner cavity\n        translate([2, 2, 2])\n            rounded_cube([86, 66, 8], 3);\n    }\n}\n\nmodule hinges() {\n    // Left hinge\n    translate([10, -1, 98]) {\n        cylinder(h=4, d=6);\n        translate([0, 1.5, 0]) cube([6, 3, 2]);\n    }\n    \n    // Right hinge\n    translate([80, -1, 98]) {\n        cylinder(h=4, d=6);\n        translate([0, 1.5, 0]) cube([6, 3, 2]);\n    }\n}\n\nmodule lid_handle() {\n    translate([45, 70, 104]) {\n        rotate([90, 0, 0])\n            cylinder(h=20, d=8);\n    }\n}\n\nmodule drainage_plug() {\n    translate([5, 35, 5]) {\n        difference() {\n            cylinder(h=4, d=8);\n            translate([0, 0, -1]) cylinder(h=6, d=4);\n        }\n    }\n}\n\nmodule side_handles() {\n    // Left side handle\n    translate([-1, 35, 50]) {\n        difference() {\n            cube([4, 20, 10]);\n            translate([2, 2, 2]) cube([2, 16, 6]);\n        }\n    }\n    \n    // Right side handle\n    translate([87, 35, 50]) {\n        difference() {\n            cube([4, 20, 10]);\n            translate([0, 2, 2]) cube([2, 16, 6]);\n        }\n    }\n}\n\nmodule lid_latch() {\n    translate([45, 70, 98]) {\n        difference() {\n            cube([8, 4, 6]);\n            translate([2, 2, 4]) cube([4, 2, 2]);\n        }\n    }\n}\n\nmodule base_feet() {\n    for (x = [5, 85]) {\n        for (y = [5, 65]) {\n            translate([x, y, 0]) {\n                cylinder(h=3, d=8);\n            }\n        }\n    }\n}\n\n// Main assembly\nmain_body();\n\ntranslate([0, 0, 100]) {\n    lid();\n    lid_handle();\n    hinges();\n    lid_latch();\n}\n\nside_handles();\ndrainage_plug();\nbase_feet();",
    "renders": true
  },
  {
    "kitchen_appliance": "glacierlocker",
    "openscad_code": "// GlacierLocker â€“ a small countertop ice-cube storage chest\n// Overall footprint 60 x 40 mm, height 45 mm (fits on most FDM beds)\n\n$fn = 32;              // smooth curves\nwall = 2;              // uniform printable wall thickness\nbody_w = 60;\nbody_d = 40;\nbody_h = 35;           // inner cavity height ~31 mm\n\n// ---------- main body ----------\nmodule shell() {\n    difference() {\n        // outer block\n        cube([body_w, body_d, body_h], center = false);\n        \n        // hollow cavity (leave 2 mm walls)\n        translate([wall, wall, wall])\n            cube([body_w - 2*wall, body_d - 2*wall, body_h - wall], center = false);\n        \n        // top chamfer for pouring\n        translate([body_w - 15, -1, body_h - 5])\n            rotate([0, 45, 0])\n                cube([20, body_d + 2, 20]);\n    }\n}\n\n// ---------- lid ----------\nmodule lid() {\n    difference() {\n        // lid plate\n        translate([0, 0, body_h])\n            cube([body_w, body_d, wall + 2]);\n        \n        // recess to save material\n        translate([wall, wall, body_h + 1])\n            cube([body_w - 2*wall, body_d - 2*wall, wall]);\n    }\n    \n    // handle ridge\n    translate([body_w/2, body_d/2, body_h + wall + 2])\n        cylinder(h = 4, d1 = 20, d2 = 16);\n}\n\n// ---------- control dial ----------\nmodule dial() {\n    // shaft\n    translate([body_w - 8, 10, body_h/2])\n        rotate([90, 0, 0])\n            cylinder(h = 6, d = 6);\n    \n    // knob\n    translate([body_w - 8, 10, body_h/2 + 6])\n        rotate([90, 0, 0])\n            difference() {\n                cylinder(h = 5, d = 12);\n                cylinder(h = 6, d = 4);\n            }\n}\n\n// ---------- drainage port (simple plug) ----------\nmodule drain() {\n    // port stub\n    translate([wall + 2, -2, wall])\n        rotate([0, -90, 0])\n            cylinder(h = 4, d = 6);\n    \n    // plug cap\n    translate([wall + 2, -6, wall])\n        rotate([0, -90, 0])\n            cylinder(h = 2, d = 8);\n}\n\n// ---------- anti-slip feet ----------\nmodule feet() {\n    for (x = [wall + 5, body_w - wall - 5])\n        for (y = [wall + 5, body_d - wall - 5])\n            translate([x, y, -1])\n                cylinder(h = 2, d = 6);\n}\n\n// ---------- assembly ----------\nunion() {\n    shell();\n    lid();\n    dial();\n    drain();\n    feet();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "arcticnest",
    "openscad_code": "// ArcticNest Kitchen Appliance â€“ medium-complexity realistic style\n// Overall footprint: 80 Ã— 60 Ã— 110 mm\n// Wall thickness: 2 mm everywhere for 3D-printability\n\n$fn = 32;\n\nmodule body() {\n    difference() {\n        // Main housing\n        cube([80, 60, 110], center = true);\n        translate([0, 0, 2])\n            cube([76, 56, 108], center = true);\n    }\n}\n\nmodule door() {\n    difference() {\n        translate([-39.5, -29, 0])\n            cube([3, 58, 80], center = false);\n        translate([-39.8, -25, 5])\n            cube([3.4, 50, 60], center = false);\n    }\n    // Handle bar\n    translate([-41, -20, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 40, d = 6);\n}\n\nmodule feet() {\n    for (x = [-30, 30], y = [-20, 20])\n        translate([x, y, -56])\n            cylinder(h = 10, d1 = 10, d2 = 8);\n}\n\nmodule control_panel() {\n    // Panel plate\n    translate([0, 31, 30])\n        cube([70, 2, 30], center = true);\n    // Display\n    translate([0, 32, 40])\n        cube([40, 1, 15], center = true);\n    // Knobs\n    for (i = [-1, 1])\n        translate([i * 25, 33, 25])\n            rotate([90, 0, 0])\n                cylinder(h = 10, d = 8);\n}\n\nmodule top_vent() {\n    for (x = [-30, -10, 10, 30])\n        translate([x, 0, 55])\n            cube([8, 56, 2], center = true);\n}\n\nmodule back_grid() {\n    translate([0, -31, 0])\n        for (i = [0:3])\n            translate([0, 0, i * 25 - 40])\n                cube([70, 2, 20], center = true);\n}\n\nmodule logo() {\n    translate([0, 32, 10])\n        scale([1, 0.2, 0.3])\n            sphere(d = 12);\n}\n\nmodule inner_tray() {\n    translate([0, 0, -20])\n        difference() {\n            cube([65, 45, 3], center = true);\n            translate([0, 0, -1])\n                cube([61, 41, 4], center = true);\n        }\n}\n\nunion() {\n    body();\n    door();\n    feet();\n    control_panel();\n    top_vent();\n    back_grid();\n    logo();\n    inner_tray();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "subzeroframe",
    "openscad_code": "// Sub-Zero Frame Kitchen Appliance - Medium Complexity\n// Realistic style refrigerator/freezer combo unit\n\n$fn = 32;\n\n// Overall dimensions (mm)\nwidth = 80;\ndepth = 70;\nheight = 120;\nwall_thickness = 2;\n\nmodule main_frame() {\n    // Main body shell\n    difference() {\n        // Outer shell\n        cube([width, depth, height], center=true);\n        \n        // Inner cavity\n        translate([0, 0, 0])\n        cube([width-wall_thickness*2, depth-wall_thickness, height-wall_thickness*2], center=true);\n    }\n}\n\nmodule refrigerator_door() {\n    // Refrigerator door (upper section)\n    translate([-width/2 + wall_thickness, -depth/2 + wall_thickness/2, 0])\n    cube([width/2 - wall_thickness*1.5, wall_thickness, height/2 - wall_thickness]);\n    \n    // Door handle\n    translate([-width/2 + wall_thickness*2, -depth/2 - wall_thickness/2, height*0.25])\n    rotate([90, 0, 0])\n    cylinder(h=height*0.3, r=wall_thickness/2, center=true);\n}\n\nmodule freezer_door() {\n    // Freezer door (lower section)\n    translate([-width/2 + wall_thickness, -depth/2 + wall_thickness/2, -height/4])\n    cube([width/2 - wall_thickness*1.5, wall_thickness, height/2 - wall_thickness]);\n    \n    // Door handle\n    translate([-width/2 + wall_thickness*2, -depth/2 - wall_thickness/2, -height*0.25])\n    rotate([90, 0, 0])\n    cylinder(h=height*0.3, r=wall_thickness/2, center=true);\n}\n\nmodule ventilation_grille() {\n    // Top ventilation grille\n    for(i = [-3:3]) {\n        translate([i*8, -depth/2 + wall_thickness, height/2 - wall_thickness*2])\n        cube([3, wall_thickness, 10]);\n    }\n}\n\nmodule control_panel() {\n    // Control panel housing\n    translate([width/2 - wall_thickness*3, -depth/2 + wall_thickness, height*0.3])\n    cube([wall_thickness*2, wall_thickness*1.5, 15]);\n    \n    // Temperature display\n    translate([width/2 - wall_thickness*2, -depth/2 + wall_thickness*1.5, height*0.3+5])\n    cube([wall_thickness, 0.5, 8]);\n    \n    // Control buttons\n    for(i = [0:2]) {\n        translate([width/2 - wall_thickness*2, -depth/2 + wall_thickness*1.5, height*0.3-2-i*4])\n        sphere(r=1);\n    }\n}\n\nmodule support_feet() {\n    // Four support feet\n    positions = [[-width/2+5, -depth/2+5], [width/2-5, -depth/2+5], \n                 [-width/2+5, depth/2-5], [width/2-5, depth/2-5]];\n    \n    for(pos = positions) {\n        translate([pos[0], pos[1], -height/2])\n        cylinder(h=3, r=2);\n    }\n}\n\nmodule door_seals() {\n    // Refrigerator door seal\n    translate([-width/4, -depth/2 + wall_thickness, height/4])\n    cube([width/2 - wall_thickness*2, 0.5, height/2 - wall_thickness*2]);\n    \n    // Freezer door seal\n    translate([-width/4, -depth/2 + wall_thickness, -height/4])\n    cube([width/2 - wall_thickness*2, 0.5, height/2 - wall_thickness*2]);\n}\n\n// Assembly\nunion() {\n    main_frame();\n    \n    // Doors (slightly offset for 3D printing)\n    translate([0, 0, 0.1]) refrigerator_door();\n    translate([0, 0, -0.1]) freezer_door();\n    \n    ventilation_grille();\n    control_panel();\n    support_feet();\n    door_seals();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "polarhub",
    "openscad_code": "// PolarHub Kitchen Appliance - Realistic Style, Medium Complexity\n// A compact, wall-mounted polarhub for organizing kitchen utensils and small items\n\n// Overall dimensions: 120mm width x 100mm depth x 80mm height\n\n$fn = 32;  // Smooth curves for 3D printing\n\n// Main module\nmodule polarhub() {\n    // Base mounting plate\n    translate([0, 0, 0]) {\n        difference() {\n            // Main plate\n            cube([120, 100, 5], center=true);\n            // Mounting holes (4 corners)\n            for (x = [-50, 50]) {\n                for (y = [-40, 40]) {\n                    translate([x, y, 0]) {\n                        cylinder(h=6, r=3, center=true);\n                    }\n                }\n            }\n        }\n    }\n    \n    // Central cylindrical hub\n    translate([0, 0, 5]) {\n        cylinder(h=60, r=25, center=false);\n    }\n    \n    // Hub top cap\n    translate([0, 0, 65]) {\n        cylinder(h=5, r=28, center=false);\n    }\n    \n    // Six radial arms (every 60 degrees)\n    for (i = [0:5]) {\n        rotate([0, 0, i * 60]) {\n            translate([30, 0, 30]) {\n                rotate([0, 90, 0]) {\n                    difference() {\n                        // Main arm\n                        cylinder(h=45, r=4, center=false);\n                        // Wire channel\n                        cylinder(h=45, r=2, center=false);\n                    }\n                }\n            }\n            \n            // Hook at end of each arm\n            translate([70, 0, 30]) {\n                rotate([0, 90, 0]) {\n                    // Hook base\n                    cylinder(h=15, r=3, center=false);\n                    // Hook curve\n                    translate([0, 15, 0]) {\n                        rotate([90, 0, 0]) {\n                            difference() {\n                                torus(5, 2);\n                                translate([0, 0, -5]) {\n                                    cube([10, 10, 5], center=true);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    // Small shelf platforms between arms\n    for (i = [0:5]) {\n        rotate([0, 0, i * 60 + 30]) {\n            translate([35, 0, 15]) {\n                rotate([0, 0, 30]) {\n                    difference() {\n                        // Shelf\n                        cube([25, 12, 2], center=true);\n                        // Drainage holes\n                        for (x = [-10:5:10]) {\n                            translate([x, 0, 0]) {\n                                cylinder(h=3, r=1, center=true);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    // Control knob on top\n    translate([0, 0, 72]) {\n        difference() {\n            // Knob base\n            cylinder(h=8, r=12, center=false);\n            // Knob grip\n            for (i = [0:3]) {\n                rotate([0, 0, i * 90 + 45]) {\n                    translate([8, 0, 4]) {\n                        cube([3, 2, 4], center=true);\n                    }\n                }\n            }\n        }\n    }\n    \n    // Side rails for stability\n    for (angle = [0, 120, 240]) {\n        rotate([0, 0, angle]) {\n            translate([20, 0, 10]) {\n                rotate([0, 90, 0]) {\n                    cylinder(h=20, r=2, center=false);\n                }\n            }\n            translate([20, 0, 50]) {\n                rotate([0, 90, 0]) {\n                    cylinder(h=20, r=2, center=false);\n                }\n            }\n            // Connecting bars\n            translate([20, 0, 10]) {\n                rotate([90, 0, 0]) {\n                    cylinder(h=40, r=2, center=false);\n                }\n            }\n        }\n    }\n}\n\n// Helper module for torus shape (hook curve)\nmodule torus(outer_r, inner_r) {\n    rotate_extrude() {\n        translate([outer_r, 0, 0]) {\n            circle(r=inner_r);\n        }\n    }\n}\n\n// Render the model\npolarhub();",
    "renders": true
  },
  {
    "kitchen_appliance": "snowdock",
    "openscad_code": "// Snowdock Stand Mixer â€“ Realistic, medium-complexity\n// Overall footprint: 140 x 220 x 270 mm\n$fn = 36;               // smooth curves\n\n// Base shell -------------------------------------------------\nmodule base() {\n    difference() {\n        union() {\n            // Main hollow body\n            translate([-70,-110,0])\n                cube([140,220,120]);\n            // Front rounded lip\n            translate([0,-110,0])\n                cylinder(h=120, r=5);\n            translate([0,110,0])\n                cylinder(h=120, r=5);\n        }\n        // Inner cavity\n        translate([-68,-108,2])\n            cube([136,216,116]);\n    }\n}\n\n// Motor head -------------------------------------------------\nmodule head() {\n    difference() {\n        union() {\n            // Main block\n            translate([-70,-110,120])\n                cube([140,220,60]);\n            // Curved rear\n            translate([0,110,120])\n                cylinder(h=60, r=70);\n        }\n        // Vent slots\n        for(i=[-60:30:60])\n            translate([i,110,130])\n                cube([2,20,40]);\n    }\n}\n\n// Tilt arm ---------------------------------------------------\nmodule arm() {\n    difference() {\n        // Solid arm\n        translate([70,-50,180])\n            rotate([0,-45,0])\n                cube([100,100,15]);\n        // Hole for hinge pin\n        translate([70,0,180])\n            rotate([0,-45,0])\n                rotate([90,0,0])\n                    cylinder(h=100,r=4);\n    }\n}\n\n// Planetary hub ----------------------------------------------\nmodule hub() {\n    difference() {\n        cylinder(h=40, r=25);\n        translate([0,0,2])\n            cylinder(h=36, r=23);\n    }\n}\n\n// Beater -----------------------------------------------------\nmodule beater() {\n    union() {\n        for(i=[0:120:240])\n            rotate([0,0,i])\n                translate([0,8,0])\n                    cube([2,16,70]);\n        cylinder(h=70, r=8);\n        sphere(r=12);\n    }\n}\n\n// Bowl -------------------------------------------------------\nmodule bowl() {\n    difference() {\n        cylinder(h=100, r1=100, r2=90);\n        translate([0,0,2])\n            cylinder(h=96, r1=97, r2=87);\n    }\n}\n\n// Control panel ----------------------------------------------\nmodule panel() {\n    translate([-60,-120,90])\n    difference() {\n        cube([120,10,40]);\n        // Buttons\n        for(i=[-40:20:40])\n            translate([i,5,20])\n                sphere(r=4);\n        // Dial hole\n        translate([0,5,35])\n            rotate([90,0,0])\n                cylinder(h=12,r=8);\n    }\n}\n\n// Assembly ---------------------------------------------------\n$vpr=[55,0,25];\nbase();\nhead();\narm();\ntranslate([70,0,165])\n    rotate([0,-45,0])\n        hub();\ntranslate([70,0,125])\n    rotate([0,-45,0])\n        beater();\ntranslate([0,0,-100])\n    bowl();\npanel();",
    "renders": true
  },
  {
    "kitchen_appliance": "coolstack",
    "openscad_code": "// CoolStack Kitchen Appliance â€“ stackable, modular cooling tower\n// Realistic style, medium complexity, 3D-printable (2 mm walls)\n\n$fn=36;\n\n// overall bounding box\nbase_w = 58;   // footprint\nbase_d = 58;\nbase_h = 120;  // total height\n\n// wall thickness\nwall = 2;\n\nmodule base_frame() {\n    // outer box\n    difference() {\n        cube([base_w, base_d, 12], center=true);\n        translate([0,0,1]) cube([base_w-2*wall, base_d-2*wall, 11], center=true);\n    }\n    // internal grid for strength\n    for(i=[-20,0,20]) {\n        translate([i,0,0]) cube([wall, base_d-2*wall, 10], center=true);\n        translate([0,i,0]) cube([base_w-2*wall, wall, 10], center=true);\n    }\n}\n\nmodule body() {\n    // cylindrical shell\n    difference() {\n        cylinder(h=base_h-12, d=base_w, center=true);\n        translate([0,0,2]) cylinder(h=base_h-16, d=base_w-2*wall, center=true);\n    }\n    // vertical ribs for stiffness\n    for(a=[0:30:359]) {\n        rotate([0,0,a])\n            translate([base_w/2-wall/2,0,0])\n                cube([wall, wall, base_h-12], center=true);\n    }\n}\n\nmodule top_cap() {\n    difference() {\n        cylinder(h=6, d=base_w, center=true);\n        translate([0,0,1]) cylinder(h=8, d=base_w-2*wall, center=true);\n    }\n    // carry handle\n    difference() {\n        translate([0,0,3]) cube([38,10,4], center=true);\n        translate([0,0,3]) cube([34,6,5], center=true);\n    }\n}\n\nmodule control_panel() {\n    translate([base_w/2-wall,0,base_h/2-20])\n        rotate([0,90,0])\n            difference() {\n                cube([30,20,wall]);\n                // screen recess\n                translate([5,5,-1]) cube([20,8,wall+1]);\n                // three tactile buttons\n                for(x=[9,15,21])\n                    translate([x,12,-1]) cylinder(h=wall+1, d=4);\n            }\n}\n\nmodule vent_slots() {\n    // gentle angled slots, no support needed\n    for(z=[15:15:base_h-40]) {\n        rotate([0,20,0])\n            translate([0,0,z])\n                difference() {\n                    cube([base_w, base_d, 4], center=true);\n                    translate([0,0,-1]) cube([base_w-2*wall, base_d-2*wall, 6], center=true);\n                }\n    }\n}\n\n// assembly\nunion() {\n    base_frame();\n    translate([0,0,6]) body();\n    translate([0,0,base_h-6]) top_cap();\n    control_panel();\n    vent_slots();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "cryodock",
    "openscad_code": "// CryoDock Kitchen Appliance\n// Realistic medium-complexity 3D printable model\n\nmodule body() {\n    // Main housing\n    difference() {\n        cube([80, 60, 50], center=true);\n        translate([0, 0, 25])\n            cube([76, 56, 48], center=true);\n    }\n    \n    // Front panel\n    translate([0, -30, 0])\n        cube([78, 2, 48], center=true);\n}\n\nmodule cooling_chamber() {\n    // Top lid\n    translate([0, 0, 25])\n        cube([74, 56, 4], center=true);\n    \n    // Chamber walls\n    for (x = [-30, 30])\n        translate([x, 0, 10])\n            cube([4, 52, 30], center=true);\n    for (y = [-25, 25])\n        translate([0, y, 10])\n            cube([60, 4, 30], center=true);\n}\n\nmodule control_panel() {\n    // Panel housing\n    translate([0, -29, 10])\n        cube([70, 2, 20], center=true);\n    \n    // Buttons\n    for (i = [-2:2]) {\n        translate([i * 12, -28, 15])\n            cylinder(h=2, r=4, $fn=20);\n    }\n    \n    // Display\n    translate([0, -28, 5])\n        cube([40, 1, 8], center=true);\n}\n\nmodule cooling_ports() {\n    // Left side vents\n    for (i = [1:4]) {\n        translate([-39, -25 + i * 10, 5])\n            cube([2, 6, 4], center=true);\n    }\n    \n    // Right side vents\n    for (i = [1:4]) {\n        translate([39, -25 + i * 10, 5])\n            cube([2, 6, 4], center=true);\n    }\n}\n\nmodule feet() {\n    // Support feet at corners\n    for (x = [-35, 35])\n        for (y = [-25, 25]) {\n            translate([x, y, -26])\n                cylinder(h=4, r=3, $fn=20);\n        }\n}\n\nmodule handle() {\n    // Top handle\n    translate([0, 0, 27])\n        difference() {\n            cube([60, 20, 6], center=true);\n            translate([0, 0, -1])\n                cube([50, 14, 8], center=true);\n        }\n}\n\nmodule power_connector() {\n    // Rear power port\n    translate([0, 31, 0])\n        cylinder(h=4, r=6, $fn=20);\n}\n\n// Assemble the complete model\nunion() {\n    body();\n    cooling_chamber();\n    control_panel();\n    cooling_ports();\n    feet();\n    handle();\n    power_connector();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "freezenest",
    "openscad_code": "// Freezenest Kitchen Appliance - Realistic Medium Complexity\n// Dimensions: 80mm x 60mm x 120mm\n\n$fn = 32;\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, 60])\n            cube([80, 60, 120], center=true);\n        \n        // Inner cavity\n        translate([0, 0, 62])\n            cube([76, 56, 116], center=true);\n        \n        // Top opening\n        translate([0, 0, 120])\n            cube([76, 56, 4], center=true);\n    }\n}\n\n// Insulation layer\nmodule insulation() {\n    translate([0, 0, 58])\n        cube([78, 58, 118], center=true);\n}\n\n// Base stand\nmodule base() {\n    difference() {\n        // Main base\n        translate([0, 0, 3])\n            cube([84, 64, 6], center=true);\n        \n        // Feet holes\n        for(x = [-30, 30])\n            for(y = [-20, 20])\n                translate([x, y, 0])\n                    cylinder(h=7, d=6);\n    }\n}\n\n// Feet\nmodule feet() {\n    for(x = [-30, 30])\n        for(y = [-20, 20])\n            translate([x, y, 0])\n                cylinder(h=5, d=5);\n}\n\n// Control panel\nmodule control_panel() {\n    difference() {\n        // Panel base\n        translate([42, 0, 90])\n            cube([4, 50, 30], center=true);\n        \n        // Display window\n        translate([43, 0, 100])\n            cube([2, 30, 15], center=true);\n    }\n    \n    // Buttons\n    for(i = [0:2])\n        translate([43, -15 + i*10, 85])\n            cylinder(h=2, d=4);\n    \n    // Temperature dial\n    translate([43, 0, 75])\n        cylinder(h=4, d=10);\n}\n\n// Lid\nmodule lid() {\n    difference() {\n        // Main lid\n        translate([0, 0, 122])\n            cube([78, 58, 4], center=true);\n        \n        // Inner surface\n        translate([0, 0, 120])\n            cube([74, 54, 2], center=true);\n    }\n    \n    // Handle\n    translate([0, 35, 126])\n        cube([20, 8, 6], center=true);\n}\n\n// Hinges\nmodule hinges() {\n    for(x = [-25, 25]) {\n        // Body part\n        translate([x, -30, 120])\n            cube([6, 4, 8], center=true);\n        \n        // Lid part\n        translate([x, -30, 122])\n            rotate([90, 0, 0])\n                cylinder(h=4, d=4);\n    }\n}\n\n// Internal basket\nmodule basket() {\n    difference() {\n        // Basket body\n        translate([0, 0, 90])\n            cube([70, 50, 50], center=true);\n        \n        // Basket holes pattern\n        for(x = [-30:10:30])\n            for(y = [-20:10:20])\n                for(z = [70:10:110])\n                    translate([x, y, z])\n                        sphere(d=3);\n    }\n    \n    // Basket handles\n    for(y = [-25, 25]) {\n        translate([0, y, 90])\n            difference() {\n                cube([74, 2, 8], center=true);\n                translate([0, 0, 4])\n                    cube([70, 1.5, 6], center=true);\n            }\n    }\n}\n\n// Assembly\nunion() {\n    // Main assembly\n    body();\n    insulation();\n    base();\n    feet();\n    control_panel();\n    lid();\n    hinges();\n    basket();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "icycore",
    "openscad_code": "// Icycore: a compact, frost-themed countertop ice-cream maker\n// Overall size: 120 mm (W) Ã— 160 mm (H) Ã— 120 mm (D)\n\n$fn = 36;\n\n// Global wall thickness\nwall = 2;\n\n// Main body shell\nmodule body() {\n    difference() {\n        // Outer shell\n        cube([120, 120, 160], center = true);\n        // Inner cavity (leave 2 mm walls)\n        translate([0, 0, 10])\n            cube([120 - 2*wall, 120 - 2*wall, 160 - 2*wall], center = true);\n    }\n}\n\n// Removable freezing bowl\nmodule bowl() {\n    difference() {\n        // Outer visible bowl lip\n        cylinder(h = 80, d1 = 100, d2 = 92);\n        // Inner cavity\n        translate([0, 0, wall])\n            cylinder(h = 80 - wall, d1 = 100 - 2*wall, d2 = 92 - 2*wall);\n    }\n}\n\n// Control dial on front\nmodule dial() {\n    difference() {\n        cylinder(h = 10, d = 30);\n        // Knurling grooves\n        for (a = [0:30:359])\n            rotate([0, 0, a])\n                translate([11, -1, 0])\n                    cube([2, 2, 10]);\n    }\n}\n\n// Ventilation slots on rear\nmodule vents() {\n    for (y = [-50:10:50])\n        translate([61, y, 0])\n            cube([wall, 6, 40]);\n}\n\n// Rubber feet\nmodule feet() {\n    for (x = [-50:100:50])\n    for (z = [-50:100:50])\n        translate([x, -60, z])\n            cylinder(h = 5, d = 10);\n}\n\n// Lid with handle\nmodule lid() {\n    difference() {\n        // Lid disc\n        translate([0, 0, 85])\n            cylinder(h = 5, d = 110);\n        // Handle\n        translate([0, 0, 90])\n            cylinder(h = 20, d = 20);\n    }\n}\n\n// Assembly\nbody();\ntranslate([0, 0, -40])\n    bowl();\ntranslate([0, 60, 30])\n    dial();\ntranslate([0, 0, 0])\n    vents();\nfeet();\nlid();",
    "renders": true
  },
  {
    "kitchen_appliance": "tundraframe",
    "openscad_code": "// Tundraframe Kitchen Appliance - Realistic Style, Medium Complexity\n// A compact food processor / blender with tundraframe aesthetic\n\n// Overall dimensions\nwidth = 80;\ndepth = 60;\nheight = 120;\n\n// Base module with tundraframe structure\nmodule base_frame() {\n    // Bottom platform\n    difference() {\n        cube([width, depth, 8], center=true);\n        translate([0, 0, 4])\n            cube([width-4, depth-4, 8], center=true);\n    }\n    \n    // Corner posts\n    for(x=[-1, 1])\n    for(y=[-1, 1]) {\n        translate([x*(width/2-4), y*(depth/2-4), 0])\n            cylinder(h=height/3, r=3, $fn=8);\n    }\n    \n    // Cross braces\n    for(z=[0, height/6]) {\n        translate([0, 0, z])\n            cube([width-8, 2, 2], center=true);\n        translate([0, 0, z])\n            rotate([0, 0, 90])\n            cube([depth-8, 2, 2], center=true);\n    }\n}\n\n// Main body housing\nmodule main_body() {\n    difference() {\n        // Outer shell\n        cube([width-8, depth-8, height/2], center=true);\n        // Inner cavity\n        translate([0, 0, -2])\n            cube([width-12, depth-12, height/2], center=true);\n    }\n}\n\n// Control panel with buttons and dial\nmodule control_panel() {\n    translate([0, -depth/2+2, height/3])\n    difference() {\n        cube([width-20, 4, 15], center=true);\n        // Button holes\n        for(i=[-1, 0, 1]) {\n            translate([i*10, 0, 0])\n                cylinder(h=5, r=3, $fn=16);\n        }\n        // Dial hole\n        translate([width/2-15, 0, 0])\n            cylinder(h=5, r=5, $fn=20);\n    }\n    \n    // Buttons\n    for(i=[-1, 0, 1]) {\n        translate([i*10, -depth/2+4, height/3])\n            cylinder(h=2, r=2.8, $fn=16);\n    }\n    \n    // Dial\n    translate([width/2-15, -depth/2+4, height/3+2])\n        cylinder(h=3, r=4.5, $fn=20);\n    translate([width/2-15, -depth/2+4, height/3+5])\n        cube([2, 1, 3], center=true);\n}\n\n// Motor housing detail\nmodule motor_housing() {\n    translate([0, 0, height/3+height/4])\n    difference() {\n        cylinder(h=height/4, r=width/3, $fn=32);\n        translate([0, 0, -1])\n            cylinder(h=height/4+2, r=width/3-2, $fn=32);\n    }\n}\n\n// Blender jar / container\nmodule blender_jar() {\n    translate([0, 0, height/2+height/4])\n    difference() {\n        // Jar body\n        cylinder(h=height/3, r1=width/3-5, r2=width/3-2, $fn=32);\n        // Inner volume\n        translate([0, 0, 2])\n            cylinder(h=height/3, r1=width/3-7, r2=width/3-4, $fn=32);\n    }\n    \n    // Handle\n    translate([width/3-5, 0, height/2+height/4+height/6])\n    rotate([0, 90, 0])\n    difference() {\n        cylinder(h=height/6, r=4, $fn=16);\n        cylinder(h=height/6, r=2, $fn=16);\n    }\n    \n    // Lid\n    translate([0, 0, height/2+height/4+height/3+2])\n    difference() {\n        cylinder(h=4, r=width/3-2, $fn=32);\n        translate([0, 0, -1])\n            cylinder(h=6, r=width/3-4, $fn=32);\n    }\n}\n\n// Power cord detail\nmodule power_cord() {\n    translate([-width/2, depth/2, 0])\n    rotate([90, 0, 0])\n    cylinder(h=20, r=2, $fn=8);\n}\n\n// Assembly\nunion() {\n    base_frame();\n    translate([0, 0, 4])\n        main_body();\n    control_panel();\n    motor_housing();\n    blender_jar();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "winterhub",
    "openscad_code": "// Winterhub Kitchen Appliance - Realistic Style, Medium Complexity\n// Compact countertop hot-water dispenser with modern styling\n\n$fn = 32;  // smooth curves\n\n// overall dimensions (mm)\nbody_w = 80;\nbody_d = 120;\nbody_h = 160;\n\n// wall thickness\nwall = 2;\n\nmodule body() {\n    difference() {\n        // outer shell\n        cube([body_w, body_d, body_h], center = false);\n        \n        // hollow interior\n        translate([wall, wall, wall])\n            cube([body_w - 2*wall, body_d - 2*wall, body_h - wall], center = false);\n        \n        // front recess for buttons\n        translate([body_w - 1, 30, 120])\n            cube([wall + 1, 40, 20], center = false);\n    }\n}\n\nmodule top_cover() {\n    difference() {\n        // main lid\n        translate([wall, wall, body_h])\n            cube([body_w - 2*wall, body_d - 2*wall, wall], center = false);\n        \n        // water inlet hole\n        translate([body_w/2, 15, body_h + wall])\n            cylinder(h = wall + 1, r = 8, center = false);\n    }\n}\n\nmodule water_tank() {\n    color(\"lightblue\", 0.3)\n        translate([wall + 5, wall + 5, 25])\n            cube([body_w - 2*wall - 10, body_d - 2*wall - 10, 85], center = false);\n}\n\nmodule spout() {\n    difference() {\n        // main spout body\n        rotate([90, 0, 0])\n            translate([body_w/2, wall + 5, 0])\n                cylinder(h = 25, r1 = 6, r2 = 4, center = false);\n        \n        // internal channel\n        rotate([90, 0, 0])\n            translate([body_w/2, wall + 5, 1])\n                cylinder(h = 24, r1 = 4, r2 = 2, center = false);\n    }\n}\n\nmodule drip_tray() {\n    difference() {\n        // tray\n        translate([body_w/2 - 25, body_d - 2, 10])\n            cube([50, 25, 2], center = false);\n        \n        // recess\n        translate([body_w/2 - 23, body_d - 1, 12])\n            cube([46, 21, 1], center = false);\n    }\n}\n\nmodule control_panel() {\n    // panel base\n    translate([body_w - 1, 35, 125])\n        cube([wall + 1, 30, 15], center = false);\n    \n    // buttons\n    for (i = [0:2]) {\n        translate([body_w + 0.5, 40 + i*8, 130])\n            cylinder(h = 2, r = 3, center = false);\n    }\n    \n    // LED indicator\n    translate([body_w + 0.5, 45, 142])\n        sphere(d = 4);\n}\n\nmodule base() {\n    // feet\n    for (x = [wall + 5, body_w - wall - 5])\n        for (y = [wall + 5, body_d - wall - 5])\n            translate([x, y, 0])\n                cylinder(h = 4, r = 3, center = false);\n}\n\n// main assembly\nunion() {\n    body();\n    top_cover();\n    water_tank();\n    spout();\n    drip_tray();\n    control_panel();\n    base();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "heatvault",
    "openscad_code": "// HeatVault Kitchen Appliance - Realistic Style, Medium Complexity\n// Dimensions: 80mm x 60mm x 120mm (W x D x H)\n\n$fn = 32;\n\nmodule body() {\n    difference() {\n        // Main body shell\n        translate([0, 0, 60])\n            cube([80, 60, 120], center=true);\n        \n        // Hollow interior\n        translate([0, 0, 60])\n            cube([76, 56, 116], center=true);\n    }\n}\n\nmodule door() {\n    translate([0, 30.5, 60])\n        difference() {\n            cube([78, 2, 118], center=true);\n            // Door handle cutout\n            translate([35, 0, -40])\n                cube([10, 4, 20], center=true);\n        }\n}\n\nmodule handle() {\n    translate([35, 33, 60])\n        cube([10, 4, 20], center=true);\n}\n\nmodule control_panel() {\n    // Panel base\n    translate([0, -30.5, 105])\n        cube([76, 2, 20], center=true);\n    \n    // Display screen\n    translate([0, -31.5, 105])\n        cube([40, 1, 12], center=true);\n    \n    // Control buttons\n    for(i = [-2:2]) {\n        translate([35 + i*6, -31.5, 105])\n            cylinder(h=1.5, r=2);\n    }\n}\n\nmodule feet() {\n    for(x = [-30, 30])\n    for(y = [-20, 20]) {\n        translate([x, y, -3])\n            cylinder(h=6, r=3);\n    }\n}\n\nmodule ventilation_slots() {\n    // Side ventilation\n    for(z = [30:10:90]) {\n        translate([-40.5, 0, z])\n            cube([3, 40, 2], center=true);\n    }\n    \n    // Back ventilation\n    for(z = [30:10:90]) {\n        translate([0, 30.5, z])\n            cube([70, 3, 2], center=true);\n    }\n}\n\nmodule power_cord() {\n    translate([-40, 30, 10])\n        rotate([90, 0, 0])\n            cylinder(h=20, r=2);\n}\n\n// Assembly\nunion() {\n    body();\n    door();\n    handle();\n    control_panel();\n    feet();\n    ventilation_slots();\n    power_cord();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "warmlocker",
    "openscad_code": "// WarmLocker Kitchen Appliance - Realistic Style, Medium Complexity\n// Overall dimensions: 80x90x110mm (WxDxH)\n\n$fn = 50;\nwall = 2;\n\nmodule roundedCube(size, radius) {\n    // Create a cube with rounded edges\n    translate([radius, radius, 0])\n    minkowski() {\n        cube([size.x - 2*radius, size.y - 2*radius, size.z]);\n        sphere(r = radius);\n    }\n}\n\nmodule mainBody() {\n    // Main housing - 80x90x100mm\n    difference() {\n        roundedCube([80, 90, 100], 3);\n        // Hollow out interior\n        translate([wall, wall, wall])\n        roundedCube([80 - 2*wall, 90 - 2*wall, 100 - wall], 2);\n    }\n}\n\nmodule baseFeet() {\n    // Four rubber feet - 10x10x5mm each\n    for(x = [15, 65]) {\n        for(y = [15, 75]) {\n            translate([x, y, -5])\n            roundedCube([10, 10, 5], 2);\n        }\n    }\n}\n\nmodule door() {\n    // Front door with window - 70x75x5mm\n    translate([5, 0, 25])\n    difference() {\n        roundedCube([70, 5, 75], 2);\n        // Window cutout\n        translate([10, -1, 15])\n        cube([50, 7, 45]);\n    }\n    \n    // Door handle - 40x10x8mm\n    translate([40, 3, 60])\n    roundedCube([40, 10, 8], 2);\n}\n\nmodule controlPanel() {\n    // Top control panel - 60x20x15mm\n    translate([10, 90, 85])\n    roundedCube([60, 20, 15], 2);\n    \n    // Display screen\n    translate([15, 93, 95])\n    color(\"black\")\n    cube([25, 1, 8]);\n    \n    // Control buttons\n    for(i = [0:3]) {\n        translate([45 + i*8, 93, 90])\n        cylinder(h = 3, r = 4);\n    }\n}\n\nmodule ventilationSlots() {\n    // Side ventilation slots\n    for(i = [0:4]) {\n        translate([0, 20 + i*15, 40])\n        cube([wall, 10, 2]);\n        translate([80 - wall, 20 + i*15, 40])\n        cube([wall, 10, 2]);\n    }\n}\n\nmodule powerCord() {\n    // Power cord entry point\n    translate([40, -3, 10])\n    rotate([90, 0, 0])\n    cylinder(h = 10, r1 = 5, r2 = 3);\n}\n\nmodule interiorShelf() {\n    // Middle shelf - perforated for airflow\n    translate([5, 5, 45])\n    difference() {\n        cube([70, 80, 2]);\n        // Ventilation holes\n        for(x = [10:10:60]) {\n            for(y = [10:10:70]) {\n                translate([x, y, -1])\n                cylinder(h = 4, r = 2);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    mainBody();\n    baseFeet();\n    door();\n    controlPanel();\n    ventilationSlots();\n    powerCord();\n    interiorShelf();\n}",
    "renders": true
  },
  {
    "kitchen_appliance": "thermobin",
    "openscad_code": "// Thermobin Kitchen Appliance - Medium Complexity Realistic Style\n// Overall dimensions: 80mm W x 120mm H x 60mm D\n\n// Main body module\nmodule thermobin_body() {\n    // Outer shell with 2mm wall thickness\n    difference() {\n        // Main body - slightly rounded edges\n        minkowski() {\n            cube([76, 56, 116], center=true);\n            sphere(2);\n        }\n        \n        // Hollow interior\n        translate([0, 0, 2])\n            cube([72, 52, 112], center=true);\n    }\n}\n\n// Control panel module\nmodule control_panel() {\n    // Panel base\n    translate([-40, -32, 40])\n        cube([20, 8, 30]);\n    \n    // LCD display\n    translate([-35, -30, 55])\n        color([0.2, 0.2, 0.2])\n        cube([10, 4, 8]);\n    \n    // Buttons\n    for(i = [0:2]) {\n        translate([-35, -28, 45 - i*8])\n            cylinder(h=2, r=3, $fn=16);\n    }\n    \n    // Temperature dial\n    translate([-35, -28, 30])\n        cylinder(h=5, r=6, $fn=32);\n}\n\n// Lid module\nmodule lid() {\n    // Main lid\n    translate([0, 0, 60])\n        difference() {\n            // Lid body\n            cube([78, 58, 8], center=true);\n            \n            // Handle recess\n            translate([0, 20, -2])\n                cube([40, 15, 6]);\n        }\n    \n    // Handle\n    translate([0, 25, 70])\n        difference() {\n            // Handle base\n            cube([36, 10, 6], center=true);\n            \n            // Grip hole\n            translate([0, 0, 2])\n                cube([28, 6, 4], center=true);\n        }\n}\n\n// Ventilation holes\nmodule vents() {\n    for(i = [0:3]) {\n        translate([30, -25 + i*15, 30])\n            rotate([0, 90, 0])\n                cylinder(h=2, r=3);\n    }\n}\n\n// Base standoffs\nmodule base_feet() {\n    for(x = [-30, 30]) {\n        for(y = [-20, 20]) {\n            translate([x, y, -60])\n                cylinder(h=4, r=3);\n        }\n    }\n}\n\n// Internal container\nmodule inner_container() {\n    translate([0, 0, 10])\n        difference() {\n            // Container body\n            cylinder(h=90, r=32, $fn=64);\n            \n            // Tapered bottom\n            translate([0, 0, -1])\n                cylinder(h=10, r1=30, r2=32, $fn=64);\n        }\n}\n\n// Assembly\nunion() {\n    // Main components\n    thermobin_body();\n    lid();\n    inner_container();\n    \n    // Details\n    control_panel();\n    vents();\n    base_feet();\n}",
    "renders": true
  }
]