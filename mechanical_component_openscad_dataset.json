[
  {
    "mechanical_component": "gear",
    "openscad_code": "// Realistic 3D-printable spur gear\n// Overall Ø100 mm × 12 mm thick, 20 teeth, 5 mm bore\n// All features have ≥2 mm walls for reliable printing\n\n// Parameters\n$fn = 90;               // smooth curves\nmodule_height = 12;     // total thickness\nmodule = 3;             // metric module (m)\nteeth_count = 20;\npressure_angle = 20;    // degrees\npitch = teeth_count * module; // Ø100 mm\nbore = 5;               // shaft hole Ø5 mm\nkey_width = 2;          // 2 mm keyway\nhub_d = 20;             // central hub Ø20 mm\nhub_h = 7;              // hub height (protrudes 2 mm each side)\nweb_thk = 2.5;          // web thickness between hub and rim\nrim_web_h = module_height - hub_h; // 5 mm\n\n// Derived diameters\npitch_d = pitch;\naddendum = module;          // 3 mm\ndedendum = 1.25 * module;   // 3.75 mm\nouter_d = pitch_d + 2*addendum;\nroot_d = pitch_d - 2*dedendum;\n\n// Single tooth profile (simplified 20° involute)\nmodule tooth_profile() {\n    // Approximate trapezoidal tooth for medium realism\n    linear_extrude(height = module_height, center = true, convexity=4)\n    polygon(points=[\n        [ root_d/2 * cos(-180/teeth_count), root_d/2 * sin(-180/teeth_count) ],\n        [ outer_d/2 * cos(-90/teeth_count),  outer_d/2 * sin(-90/teeth_count)  ],\n        [ outer_d/2 * cos( 90/teeth_count),  outer_d/2 * sin( 90/teeth_count)  ],\n        [ root_d/2 * cos( 180/teeth_count), root_d/2 * sin( 180/teeth_count) ]\n    ]);\n}\n\n// Gear body with teeth\nmodule gear_body() {\n    difference() {\n        union() {\n            // Rim cylinder\n            cylinder(h = module_height, d = root_d, center = true);\n            // All teeth placed around rim\n            for (i = [0 : teeth_count-1])\n                rotate([0,0,i*360/teeth_count])\n                    tooth_profile();\n        }\n        // Central bore and keyway\n        translate([0,0,-module_height/2-1])\n            cylinder(h = module_height+2, d = bore, center = false);\n        translate([bore/2,0,-module_height/2-1])\n            cube([bore/2+1, key_width, module_height+2], center = true);\n    }\n}\n\n// Central hub (protrudes 1 mm each side)\nmodule hub() {\n    difference() {\n        cylinder(h = hub_h+2, d = hub_d, center = true);\n        translate([0,0,-hub_h/2-1])\n            cylinder(h = hub_h+2, d = bore, center = false);\n        translate([bore/2,0,-hub_h/2-1])\n            cube([bore/2+1, key_width, hub_h+2], center = true);\n    }\n}\n\n// Web spokes connecting hub to rim (2.5 mm thick)\nmodule web_spokes() {\n    difference() {\n        cylinder(h = rim_web_h, d = root_d - 1, center = true);\n        cylinder(h = rim_web_h+1, d = hub_d + 2, center = true);\n    }\n    // Four lightening holes for weight reduction & printability\n    for (a=[0:90:270])\n        rotate([0,0,a])\n            translate([(root_d/2 + hub_d/2)/2, 0, 0])\n                cylinder(h = rim_web_h+1, d = 10, center = true);\n}\n\n// Assembly\nunion() {\n    gear_body();\n    hub();\n    translate([0,0, hub_h/2 - rim_web_h/2])\n        web_spokes();\n}",
    "renders": true
  },
  {
    "mechanical_component": "sprocket",
    "openscad_code": "// Realistic 3D-printable chain sprocket\n// Overall diameter ≈ 84 mm, thickness ≈ 8 mm, 12 teeth\n\n// Basic parameters\n$fn = 50;              // smooth curves\ntooth_cnt = 12;        // number of teeth\npcd = 76;              // pitch-circle diameter\nth = 8;                // thickness\nhole_d = 20;           // central bore\nboss_h = 4;            // raised boss height\nboss_d = 30;           // boss diameter\nweb_th = 2;            // web thickness between spokes\nspoke_cnt = 4;         // number of spokes\n\n// Derived\nr_pitch = pcd / 2;\ntooth_h = 6;           // tooth height above pitch circle\ntooth_w = 5;           // tooth width at pitch circle\nroot_r = r_pitch - 1.5;\n\nmodule tooth_profile() {\n    // Single tooth cross-section\n    linear_extrude(height = th)\n    polygon(points=[\n        [-tooth_w/2, -r_pitch],            // inner root\n        [-tooth_w/2, -r_pitch + 1],        // small relief\n        [-tooth_w*0.4, -r_pitch + 2],\n        [-tooth_w*0.2, -r_pitch + tooth_h - 1],\n        [0, -r_pitch - tooth_h],           // tip\n        [tooth_w*0.2, -r_pitch + tooth_h - 1],\n        [tooth_w*0.4, -r_pitch + 2],\n        [tooth_w/2, -r_pitch + 1],\n        [tooth_w/2, -r_pitch]\n    ]);\n}\n\nmodule sprocket_teeth() {\n    for (i = [0 : tooth_cnt-1])\n        rotate([0, 0, i * 360/tooth_cnt])\n        translate([0, r_pitch, 0])\n        tooth_profile();\n}\n\nmodule central_hub() {\n    difference() {\n        // Main hub disc\n        cylinder(h = th + boss_h, d = boss_d, center = true);\n        // Central bore\n        cylinder(h = th + boss_h + 1, d = hole_d, center = true);\n        // Keyway\n        translate([0, -hole_d/2 - 1, 0])\n        cube([hole_d/4, hole_d/2 + 2, th + boss_h + 1], center = true);\n    }\n}\n\nmodule spokes_and_web() {\n    difference() {\n        // Outer disc with root diameter\n        cylinder(h = th, d = root_r * 2, center = true);\n        // Cut spokes\n        for (i = [0 : spoke_cnt-1])\n            rotate([0, 0, i * 360/spoke_cnt])\n            translate([r_pitch/2, 0, 0])\n            cube([r_pitch - 5, web_th + 1, th + 1], center = true);\n        // Lightening holes between spokes\n        for (i = [0 : spoke_cnt-1])\n            rotate([0, 0, i * 360/spoke_cnt + 360/spoke_cnt/2])\n            translate([r_pitch/2, 0, 0])\n            cylinder(h = th + 1, d = 12, center = true);\n    }\n}\n\n// Assembly\nunion() {\n    // Teeth\n    sprocket_teeth();\n    \n    // Spokes and web\n    spokes_and_web();\n    \n    // Central hub with boss\n    central_hub();\n}",
    "renders": true
  },
  {
    "mechanical_component": "pulley",
    "openscad_code": "// Realistic Medium-Complexity Pulley (Ø60 mm) – 3D-printable\n// All dimensions in mm; printer-friendly wall thickness ≈2 mm\n\n// --------------------------------------------\n// Parameters\n// --------------------------------------------\n$fa = 2; $fs = 0.5;\n\n// Overall dimensions\npulley_od       = 60;     // Outer Ø of rim\npulley_width    = 26;     // Total width along axle\nbore_d          = 8;      // Shaft hole\nrim_thick       = 5;      // Radial thickness of rim\nweb_thick       = 2;      // Thickness of web spokes\ngroove_depth    = 3;      // Belt groove depth\ngroove_angle    = 40;     // V-groove half-angle\nspoke_count     = 5;      // Number of spokes\nboss_length     = 10;     // Length of central boss\nboss_clearance  = 1;      // Gap between boss and web\n// --------------------------------------------\n\nmodule pulley_assembly() {\n    difference() {\n        union() {\n            // 1. Outer rim including V-groove\n            rim();\n\n            // 2. Central boss (hub)\n            translate([0, 0, -boss_length/2])\n                boss();\n\n            // 3. Web spokes connecting rim to hub\n            web_spokes();\n        }\n\n        // 4. Bore hole for shaft\n        translate([0, 0, -pulley_width/2 - 1])\n            cylinder(h = pulley_width + 2, d = bore_d, center = false);\n\n        // 5. Optional keyway (simple rectangular slot)\n        translate([0, -bore_d/2 - 0.5, -pulley_width/2 - 1])\n            cube([2, bore_d + 1, pulley_width + 2], center = true);\n    }\n}\n\n// Sub-module: Rim with V-groove\nmodule rim() {\n    difference() {\n        // Solid rim cylinder\n        cylinder(h = pulley_width, d = pulley_od, center = true);\n\n        // Remove inner part to leave wall thickness\n        cylinder(h = pulley_width + 2, d = pulley_od - rim_thick*2, center = true);\n\n        // Cut V-groove\n        translate([0, 0, -pulley_width/2 - 1])\n            rotate([0, 90, 0])\n                linear_extrude(height = pulley_width + 2, center = true, convexity = 10)\n                    polygon(points=[\n                        [pulley_od/2 - groove_depth, 0],\n                        [pulley_od/2,  groove_depth * tan(groove_angle)],\n                        [pulley_od/2, -groove_depth * tan(groove_angle)]\n                    ]);\n    }\n}\n\n// Sub-module: Central cylindrical boss\nmodule boss() {\n    cylinder(h = boss_length, d = bore_d + 2*web_thick + 2*boss_clearance, center = true);\n}\n\n// Sub-module: Web spokes\nmodule web_spokes() {\n    for(i = [0 : 360/spoke_count : 359])\n        rotate([0, 0, i])\n            translate([0, (pulley_od - rim_thick)/2, 0])\n                cube([\n                    web_thick,               // thickness in radial direction\n                    (pulley_od - rim_thick)/2 - (bore_d/2 + web_thick + boss_clearance),\n                    pulley_width - 2         // leave small chamfer gap top/bottom\n                ], center = true);\n}\n\n// Render\npulley_assembly();",
    "renders": true
  },
  {
    "mechanical_component": "cam",
    "openscad_code": "// Eccentric cam for 3-D printing – 70 mm Ø, 25 mm thick, 12 mm bore\n// All features printable without supports; 2 mm minimum wall thickness\n\n// Global parameters\ncam_dia = 70;          // outside diameter\ncam_thk = 25;          // overall thickness\nbore_dia = 12;         // shaft bore\neccentricity = 12;     // offset of bore from centre\nkey_w = 4;             // width of keyway\nkey_h = 2;             // depth of keyway\nspoke_num = 6;         // spokes on the web\nspoke_w = 8;           // spoke width\nhub_dia = 22;          // central hub Ø\nhub_thk = cam_thk;     // hub is full thickness\nweb_thk = 4;           // web thickness (≥2 mm)\n\n// Convenience variables\nR = cam_dia/2;\nr_hub = hub_dia/2;\n\nmodule cam_profile() {\n    /* 2-D profile of the cam (eccentric circle) */\n    translate([eccentricity, 0])  // offset centre\n        circle(r = R, $fn = 90);\n}\n\nmodule keyway_2d() {\n    /* 2-D keyway profile for difference() */\n    translate([0, bore_dia/2])\n        square([key_w, key_h + bore_dia/2], center = true);\n}\n\nmodule cam_body() {\n    /* Main cam disk with bore and keyway */\n    difference() {\n        linear_extrude(height = cam_thk)\n            cam_profile();\n        \n        // Shaft bore\n        cylinder(d = bore_dia, h = cam_thk + 0.2, center = true, $fn = 40);\n        \n        // Keyway\n        rotate([0, 0, 0])  // aligned along +X\n            linear_extrude(height = cam_thk + 0.2, center = true)\n                keyway_2d();\n    }\n}\n\nmodule spokes() {\n    /* Radial spokes connecting hub to rim */\n    for (i = [0 : spoke_num-1])\n        rotate([0, 0, i * 360/spoke_num])\n            translate([0, 0, (cam_thk - web_thk)/2])\n                difference() {\n                    cube([spoke_w, R - r_hub - 1, web_thk], center = true);\n                    // Trim spoke ends to cam curvature\n                    translate([0, R, 0])\n                        cylinder(r = R, h = web_thk + 0.2, center = true, $fn = 90);\n                }\n}\n\nmodule hub() {\n    /* Central thickened hub */\n    difference() {\n        cylinder(d = hub_dia, h = hub_thk, center = true, $fn = 40);\n        cylinder(d = bore_dia, h = hub_thk + 0.2, center = true, $fn = 40);\n        rotate([0, 0, 0])\n            linear_extrude(height = hub_thk + 0.2, center = true)\n                keyway_2d();\n    }\n}\n\nmodule web_plate() {\n    /* Thin web between spokes */\n    linear_extrude(height = web_thk)\n        difference() {\n            scale([0.96, 0.96, 1])  // keep web inside rim\n                cam_profile();\n            circle(r = r_hub + 1);   // hole at centre\n        }\n}\n\n// Assemble the cam\nunion() {\n    cam_body();\n    hub();\n    translate([0, 0, (cam_thk - web_thk)/2]) {\n        web_plate();\n        spokes();\n    }\n}",
    "renders": true
  },
  {
    "mechanical_component": "crankshaft",
    "openscad_code": "// Crankshaft - Realistic Medium Complexity\n// 3D-printable inline-4 crankshaft with 2 mm walls, ~100 mm long\n\n// Main parameters\njournal_d = 12;     // main bearing journal diameter\njournal_l = 18;     // main bearing journal length\ncrank_d = 10;       // crankpin diameter\ncrank_l = 14;       // crankpin length\nweb_t = 8;          // web thickness\nweb_w = 22;         // web width\nstroke = 18;        // crank throw (stroke) = offset\nspacing = 20;       // cylinder spacing\nshaft_end_l = 12;   // nose / tail length\nfillet_r = 2;       // fillet radius\n\n// Helper module: rounded cylinder\nmodule rounded_cyl(h, r1, r2) {\n    hull() {\n        translate([0,0,0]) sphere(r1);\n        translate([0,0,h]) sphere(r2);\n    }\n}\n\n// Main journal\nmodule main_journal(l) {\n    difference() {\n        cylinder(h=l, d=journal_d, $fn=32);\n        translate([0,0,-1]) cylinder(h=l+2, d=journal_d-4, $fn=32);\n    }\n}\n\n// Crankpin (rod journal)\nmodule crankpin() {\n    difference() {\n        cylinder(h=crank_l, d=crank_d, $fn=32);\n        translate([0,0,-1]) cylinder(h=crank_l+2, d=crank_d-4, $fn=32);\n    }\n}\n\n// Web (crank throw arm)\nmodule crank_web(offset) {\n    difference() {\n        // solid web\n        hull() {\n            translate([-web_t/2, 0, -web_w/2]) cube([web_t, journal_d, web_w]);\n            translate([-web_t/2, offset, -web_w/2]) cube([web_t, crank_d, web_w]);\n        }\n        // lightening hole\n        translate([-web_t/2-0.1, offset/2, 0]) rotate([90,0,0]) cylinder(h=web_t+0.2, d=6, $fn=20);\n    }\n}\n\n// Counterweight\nmodule counterweight(offset) {\n    translate([-web_t/2-0.1, -offset-6, 0]) rotate([90,0,0]) difference() {\n        cylinder(h=web_t+0.2, d1=18, d2=18, $fn=40);\n        translate([0,0,-0.1]) cylinder(h=web_t+0.4, d=8, $fn=30);\n    }\n}\n\n// Crank throw assembly (pin + webs + counterweights)\nmodule crank_throw(offset) {\n    union() {\n        // mirror webs for 180-degree opposite\n        for (mir=[0:1]) {\n            mirror([0,mir,0]) {\n                crank_web(offset);\n                counterweight(offset);\n            }\n        }\n        // crankpin between webs\n        translate([0, offset, 0]) rotate([90,0,0]) crankpin();\n    }\n}\n\n// Assemble crankshaft\nmodule crankshaft() {\n    union() {\n        // Front nose\n        translate([-spacing/2-shaft_end_l, 0, 0]) main_journal(shaft_end_l);\n\n        // Main journals and throws\n        for (i=[0:3]) {\n            // main journal\n            translate([i*spacing, 0, 0]) main_journal(journal_l);\n            // crank throw between journals\n            if (i<3)\n                translate([(i+0.5)*spacing, 0, 0])\n                    rotate([0,0,180*(i%2)])  // 180-degree offset for inline-4\n                    crank_throw(stroke);\n        }\n\n        // Rear flange / tail\n        translate([3.5*spacing, 0, 0]) main_journal(shaft_end_l);\n    }\n}\n\n// Render\ncrankshaft();",
    "renders": true
  },
  {
    "mechanical_component": "bearing",
    "openscad_code": "// Realistic Ball Bearing - 6204 (20x47x14 mm) - Medium Complexity\n\n// Overall dimensions\nbearing_od = 47;  // Outer diameter\nbearing_id = 20;  // Inner diameter\nbearing_w = 14;   // Width\nball_d = 6.35;    // Ball diameter\nrace_th = 2;      // Race thickness\nshield_th = 0.8;  // Shield thickness\ncage_th = 1.5;    // Ball cage thickness\n\n// Main outer ring\nmodule outer_ring() {\n    difference() {\n        // Outer cylinder\n        cylinder(h=bearing_w, d=bearing_od, $fn=100);\n        \n        // Inner bore\n        translate([0, 0, -0.1])\n            cylinder(h=bearing_w + 0.2, d=bearing_od - 2*race_th, $fn=100);\n        \n        // Outer race groove\n        translate([0, 0, bearing_w/2 - race_th])\n            rotate_extrude($fn=100)\n                translate([(bearing_od - 2*race_th - ball_d)/2 + ball_d/2, 0])\n                    circle(r=ball_d/2 * 1.05);\n    }\n}\n\n// Main inner ring\nmodule inner_ring() {\n    difference() {\n        // Outer cylinder\n        cylinder(h=bearing_w, d=bearing_id + 2*race_th, $fn=100);\n        \n        // Inner bore\n        translate([0, 0, -0.1])\n            cylinder(h=bearing_w + 0.2, d=bearing_id, $fn=100);\n        \n        // Inner race groove\n        translate([0, 0, bearing_w/2 - race_th])\n            rotate_extrude($fn=100)\n                translate([(bearing_id + 2*race_th + ball_d)/2 - ball_d/2, 0])\n                    circle(r=ball_d/2 * 1.05);\n    }\n}\n\n// Ball cage (retainer)\nmodule ball_cage() {\n    difference() {\n        // Main cage ring\n        cylinder(h=cage_th, d=(bearing_od + bearing_id)/2, $fn=100);\n        \n        // Center hole\n        translate([0, 0, -0.1])\n            cylinder(h=cage_th + 0.2, d=(bearing_od + bearing_id)/2 - 4, $fn=100);\n        \n        // Ball pockets\n        for(i = [0:7]) {\n            rotate([0, 0, i * 45])\n                translate([(bearing_od + bearing_id)/2 - 2, 0, -0.1])\n                    cylinder(h=cage_th + 0.2, d=ball_d * 1.1, $fn=100);\n        }\n    }\n}\n\n// Individual balls\nmodule balls() {\n    for(i = [0:7]) {\n        rotate([0, 0, i * 45])\n            translate([(bearing_od + bearing_id)/2 - 2, 0, bearing_w/2 - race_th])\n                sphere(d=ball_d, $fn=50);\n    }\n}\n\n// Dust shields\nmodule shield() {\n    difference() {\n        // Shield disc\n        cylinder(h=shield_th, d=bearing_od, $fn=100);\n        \n        // Center hole\n        translate([0, 0, -0.1])\n            cylinder(h=shield_th + 0.2, d=bearing_id + 2, $fn=100);\n        \n        // Ventilation holes\n        for(i = [0:5]) {\n            rotate([0, 0, i * 60])\n                translate([(bearing_od + bearing_id)/4, 0, -0.1])\n                    cylinder(h=shield_th + 0.2, d=2, $fn=20);\n        }\n    }\n}\n\n// Assembly\n// Bottom shield\ntranslate([0, 0, 0])\n    shield();\n\n// Outer ring\ntranslate([0, 0, shield_th])\n    outer_ring();\n\n// Inner ring\ntranslate([0, 0, shield_th])\n    inner_ring();\n\n// Ball cage\ntranslate([0, 0, shield_th + race_th])\n    ball_cage();\n\n// Balls\ntranslate([0, 0, shield_th + race_th])\n    balls();\n\n// Top shield\ntranslate([0, 0, bearing_w - shield_th])\n    mirror([0, 0, 1])\n        shield();",
    "renders": true
  },
  {
    "mechanical_component": "pinion",
    "openscad_code": "// Pinion gear - medium complexity realistic style\n// Overall height ~100mm, gear diameter ~60mm\n\n// Parameters\n$fn = 50;\nmodule_height = 100;\ngear_height = 25;\nshaft_diameter = 12;\nbore_diameter = 8;\nkeyway_width = 3;\nkeyway_depth = 2;\nteeth_count = 20;\ntooth_height = 4;\ntooth_width = 3;\nfillet_radius = 1;\n\n// Main shaft\nmodule shaft() {\n    difference() {\n        // Main cylindrical shaft\n        cylinder(h=module_height, d=shaft_diameter, center=true);\n        \n        // Central bore\n        translate([0, 0, 0])\n            cylinder(h=module_height+2, d=bore_diameter, center=true);\n        \n        // Keyway slot\n        translate([0, -bore_diameter/2-keyway_depth/2, 0])\n            cube([keyway_width, keyway_depth, module_height+2], center=true);\n    }\n}\n\n// Gear teeth module\nmodule gear_teeth() {\n    union() {\n        for (i = [0:teeth_count-1]) {\n            rotate([0, 0, i*360/teeth_count])\n                translate([30-tooth_height/2, 0, 0])\n                    cube([tooth_height, tooth_width, gear_height], center=true);\n        }\n    }\n}\n\n// Gear body\nmodule gear_body() {\n    difference() {\n        union() {\n            // Main gear disk\n            cylinder(h=gear_height, d=60, center=true);\n            \n            // Add teeth\n            gear_teeth();\n            \n            // Top fillet\n            translate([0, 0, gear_height/2-fillet_radius])\n                cylinder(h=fillet_radius*2, d=58, center=true);\n            \n            // Bottom fillet\n            translate([0, 0, -gear_height/2+fillet_radius])\n                cylinder(h=fillet_radius*2, d=58, center=true);\n        }\n        \n        // Central hole for shaft\n        cylinder(h=gear_height+2, d=shaft_diameter, center=true);\n    }\n}\n\n// Hub transition\nmodule hub() {\n    translate([0, 0, gear_height/2+5])\n        cylinder(h=10, d1=20, d2=shaft_diameter, center=true);\n}\n\n// Retaining collar\nmodule collar() {\n    translate([0, 0, gear_height/2+15])\n        difference() {\n            cylinder(h=5, d=18, center=true);\n            cylinder(h=7, d=bore_diameter, center=true);\n        }\n}\n\n// Assembly\nunion() {\n    // Main shaft\n    shaft();\n    \n    // Gear assembly\n    translate([0, 0, 0])\n        gear_body();\n    \n    // Hub\n    hub();\n    \n    // Collar\n    collar();\n    \n    // Set screw hole\n    translate([0, shaft_diameter/2, gear_height/2+17.5])\n        rotate([90, 0, 0])\n            cylinder(h=8, d=3, center=true);\n}\n\n// Add chamfers to shaft ends\ntranslate([0, 0, module_height/2-1])\n    cylinder(h=2, d1=shaft_diameter, d2=shaft_diameter-2, center=true);\ntranslate([0, 0, -module_height/2+1])\n    cylinder(h=2, d1=shaft_diameter, d2=shaft_diameter-2, center=true);",
    "renders": true
  }
]