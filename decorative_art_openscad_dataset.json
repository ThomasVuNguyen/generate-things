[
  {
    "decorative_art": "vase",
    "openscad_code": "// Realistic Vase Furniture Piece\n// Medium complexity with decorative elements and structural details\n\n// Parameters for sizing and proportions\nvase_height = 120;\nbase_width = 60;\ntop_width = 45;\nwall_thickness = 2;\n\n// Base module with decorative feet\nmodule vase_base() {\n    // Main base cylinder\n    difference() {\n        cylinder(h=15, d=base_width, $fn=64);\n        cylinder(h=16, d=base_width-wall_thickness*2, $fn=64);\n    }\n    \n    // Decorative feet - 4 evenly spaced\n    for(i=[0:3]) {\n        rotate([0, 0, i*90])\n        translate([base_width/2 - 8, 0, 0])\n        difference() {\n            cube([16, 8, 5], center=true);\n            translate([0, 0, -1])\n            cube([14, 6, 7], center=true);\n        }\n    }\n}\n\n// Decorative ring detail\nmodule decorative_ring(height, diameter) {\n    difference() {\n        cylinder(h=4, d=diameter, $fn=64);\n        cylinder(h=5, d=diameter-wall_thickness*2, $fn=64);\n    }\n}\n\n// Main vase body with curved profile\nmodule vase_body() {\n    // Create curved profile using hull of cylinders\n    difference() {\n        // Outer shell\n        union() {\n            // Bottom section\n            cylinder(h=vase_height*0.3, d1=base_width*0.9, d2=base_width*1.1, $fn=64);\n            \n            // Middle bulge\n            translate([0, 0, vase_height*0.3])\n            cylinder(h=vase_height*0.4, d1=base_width*1.1, d2=base_width*1.3, $fn=64);\n            \n            // Neck transition\n            translate([0, 0, vase_height*0.7])\n            cylinder(h=vase_height*0.3, d1=base_width*1.3, d2=top_width, $fn=64);\n        }\n        \n        // Inner cavity\n        translate([0, 0, -1])\n        cylinder(h=vase_height+2, d1=base_width*0.9-wall_thickness*2, d2=top_width-wall_thickness*2, $fn=64);\n    }\n}\n\n// Decorative band with embossed pattern\nmodule decorative_band() {\n    band_height = 8;\n    band_diameter = base_width*1.25;\n    \n    // Main band\n    translate([0, 0, vase_height*0.5])\n    difference() {\n        cylinder(h=band_height, d=band_diameter, $fn=64);\n        cylinder(h=band_height+1, d=band_diameter-wall_thickness*2, $fn=64);\n    }\n    \n    // Embossed decorative elements\n    for(i=[0:11]) {\n        rotate([0, 0, i*30])\n        translate([band_diameter/2 - wall_thickness - 2, 0, vase_height*0.5 + band_height/2])\n        scale([1, 0.5, 1])\n        sphere(d=4, $fn=16);\n    }\n}\n\n// Top rim with furniture-style edge detail\nmodule top_rim() {\n    difference() {\n        // Outer rim\n        union() {\n            cylinder(h=6, d=top_width+4, $fn=64);\n            translate([0, 0, 3])\n            cylinder(h=3, d=top_width, $fn=64);\n        }\n        \n        // Inner cutout\n        cylinder(h=10, d=top_width-wall_thickness*2, $fn=64);\n    }\n}\n\n// Assembly\nunion() {\n    // Base\n    vase_base();\n    \n    // Body\n    translate([0, 0, 15])\n    vase_body();\n    \n    // Decorative band\n    decorative_band();\n    \n    // Top rim\n    translate([0, 0, vase_height+15])\n    top_rim();\n}",
    "renders": true
  },
  {
    "decorative_art": "sculpture",
    "openscad_code": "// Sculpture \"Geometric Chair\" - modern art furniture piece\n// Overall dimensions: 80mm x 80mm x 120mm\n\n// Wall thickness\nwall = 2;\n\n// Main chair module\nmodule chair_sculpture() {\n    // Base platform\n    translate([0, 0, 0])\n        cube([80, 80, 5], center = true);\n    \n    // Back support structure\n    translate([0, -30, 60])\n        cube([70, 8, 120], center = true);\n    \n    // Seat surface\n    translate([0, 0, 30])\n        cube([75, 75, 4], center = true);\n    \n    // Front legs - cylindrical\n    for(x = [-25, 25]) {\n        translate([x, 25, 15])\n            cylinder(h = 30, r = 3, center = true);\n    }\n    \n    // Back legs - cylindrical\n    for(x = [-25, 25]) {\n        translate([x, -25, 15])\n            cylinder(h = 30, r = 3, center = true);\n    }\n    \n    // Decorative backrest pattern\n    for(i = [-3:1:3]) {\n        translate([i * 10, -30, 70])\n            cube([4, 4, 40], center = true);\n    }\n    \n    // Armrest supports\n    translate([35, 0, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 30, r = 2, center = true);\n    \n    translate([-35, 0, 50])\n        rotate([90, 0, 0])\n            cylinder(h = 30, r = 2, center = true);\n    \n    // Armrests\n    translate([35, 0, 65])\n        cube([4, 60, 4], center = true);\n    \n    translate([-35, 0, 65])\n        cube([4, 60, 4], center = true);\n    \n    // Decorative geometric spheres on back\n    for(i = [-2:1:2]) {\n        for(j = [0:1:2]) {\n            translate([i * 15, -30, 90 + j * 15])\n                sphere(r = 3);\n        }\n    }\n    \n    // Seat support beams\n    translate([0, 0, 15])\n        cube([70, 70, 3], center = true);\n    \n    // Cross bracing\n    translate([0, 0, 10])\n        rotate([0, 0, 45])\n            cube([60, 3, 3], center = true);\n    \n    translate([0, 0, 10])\n        rotate([0, 0, -45])\n            cube([60, 3, 3], center = true);\n    \n    // Decorative front apron\n    translate([0, 35, 15])\n        difference() {\n            cube([70, 4, 20], center = true);\n            for(i = [-3:1:3]) {\n                translate([i * 10, 0, 0])\n                    cube([6, 6, 24], center = true);\n            }\n        }\n}\n\n// Create the sculpture\nchair_sculpture();",
    "renders": true
  },
  {
    "decorative_art": "statue",
    "openscad_code": "// Statue Furniture - Art Deco Style Decorative Column\n// Realistic style with medium complexity\n// Dimensions: 120mm tall x 40mm x 40mm base\n\n// Wall thickness for 3D printing\nwall_thickness = 2;\n\n// Main module\nmodule statue_column() {\n    // Base platform\n    translate([0, 0, 0])\n        cube([40, 40, 5], center = true);\n    \n    // Decorative base with stepped design\n    for (i = [0:3]) {\n        translate([0, 0, 5 + i * 5])\n            cube([40 - i * 6, 40 - i * 6, 5], center = true);\n    }\n    \n    // Main column body\n    difference() {\n        // Outer cylinder\n        cylinder(h = 80, r1 = 15, r2 = 12, center = false, $fn = 32);\n        \n        // Hollow center\n        translate([0, 0, -1])\n            cylinder(h = 82, r1 = 13, r2 = 10, center = false, $fn = 32);\n    }\n    \n    // Decorative rings around column\n    for (i = [0:2]) {\n        translate([0, 0, 25 + i * 20])\n            cylinder(h = 3, r = 16, center = false, $fn = 32);\n    }\n    \n    // Capital (top decorative element)\n    difference() {\n        // Main capital block\n        translate([0, 0, 80])\n            cube([30, 30, 10], center = true);\n        \n        // Rounded corners\n        translate([10, 10, 80])\n            cylinder(h = 10, r = 5, center = false, $fn = 16);\n        translate([-10, 10, 80])\n            cylinder(h = 10, r = 5, center = false, $fn = 16);\n        translate([10, -10, 80])\n            cylinder(h = 10, r = 5, center = false, $fn = 16);\n        translate([-10, -10, 80])\n            cylinder(h = 10, r = 5, center = false, $fn = 16);\n    }\n    \n    // Statue figure (simplified human form)\n    union() {\n        // Torso\n        translate([0, 0, 95])\n            scale([0.6, 0.4, 1])\n                cylinder(h = 15, r = 8, center = false, $fn = 16);\n        \n        // Head\n        translate([0, 0, 110])\n            sphere(r = 5, $fn = 16);\n        \n        // Arms\n        rotate([0, 0, -30])\n            translate([0, 0, 100])\n                scale([0.3, 2, 0.3])\n                    rotate([90, 0, 0])\n                        cylinder(h = 8, r = 2, center = false, $fn = 8);\n        \n        rotate([0, 0, 30])\n            translate([0, 0, 100])\n                scale([0.3, 2, 0.3])\n                    rotate([90, 0, 0])\n                        cylinder(h = 8, r = 2, center = false, $fn = 8);\n    }\n    \n    // Decorative relief patterns on base\n    for (i = [0:3]) {\n        angle = i * 90;\n        rotate([0, 0, angle])\n            translate([15, 0, 2.5])\n                linear_extrude(height = 2.5)\n                    square([8, 2], center = true);\n    }\n    \n    // Vertical fluting on column\n    for (i = [0:15]) {\n        angle = i * 24;\n        rotate([0, 0, angle])\n            translate([14, 0, 45])\n                cube([2, 1, 80], center = true);\n    }\n    \n    // Support brackets\n    difference() {\n        // Bracket body\n        rotate([0, 45, 0])\n            translate([0, 0, 20])\n                cube([10, 5, 60], center = true);\n        \n        // Lightening hole\n        rotate([0, 45, 0])\n            translate([0, 0, 20])\n                cube([6, 5.1, 56], center = true);\n    }\n    \n    // Second bracket (mirrored)\n    difference() {\n        rotate([0, -45, 0])\n            translate([0, 0, 20])\n                cube([10, 5, 60], center = true);\n        \n        rotate([0, -45, 0])\n            translate([0, 0, 20])\n                cube([6, 5.1, 56], center = true);\n    }\n}\n\n// Render the statue\nstatue_column();",
    "renders": true
  },
  {
    "decorative_art": "figurine",
    "openscad_code": "// Realistic figurine furniture: Miniature Baroque-style armchair\n// Designed for 3D printing, 100mm height, 2mm wall thickness\n\nchair_width = 45;\nchair_depth = 40;\nchair_height = 100;\nleg_height = 50;\nseat_thickness = 5;\nback_height = 50;\n\n// Main module\nmodule armchair() {\n    // Chair legs with decorative fluting\n    for(x=[-1,1]) for(z=[-1,1]) {\n        translate([x*chair_width/2 - 5, z*chair_depth/2 - 5, 0]) {\n            leg();\n            leg_fluting();\n        }\n    }\n    \n    // Seat frame\n    translate([0, 0, leg_height]) {\n        difference() {\n            cube([chair_width, chair_depth, seat_thickness], center=true);\n            cube([chair_width-4, chair_depth-4, seat_thickness+2], center=true);\n        }\n        \n        // Decorative seat panel\n        translate([0, 0, -seat_thickness/2]) {\n            difference() {\n                cube([chair_width-8, chair_depth-8, 1], center=true);\n                for(i=[-1,0,1]) for(j=[-1,0,1]) {\n                    translate([i*10, j*8, -0.5]) cylinder(h=2, r=2, $fn=16);\n                }\n            }\n        }\n    }\n    \n    // Backrest with curved top\n    translate([0, -chair_depth/2 + 5, leg_height + seat_thickness/2]) {\n        backrest();\n    }\n    \n    // Armrests\n    for(x=[-1,1]) {\n        translate([x*chair_width/2 - 10, 0, leg_height + seat_thickness/2 + 15]) {\n            armrest(x);\n        }\n    }\n}\n\n// Decorative chair leg\nmodule leg() {\n    difference() {\n        cylinder(h=leg_height, r1=4, r2=3, $fn=16);\n        cylinder(h=leg_height, r1=3, r2=2, $fn=16);\n    }\n}\n\n// Leg fluting detail\nmodule leg_fluting() {\n    for(i=[0:11]) {\n        rotate([0, 0, i*30]) {\n            translate([3.5, 0, 0]) {\n                cube([1, 0.5, leg_height]);\n            }\n        }\n    }\n}\n\n// Curved backrest with decorative elements\nmodule backrest() {\n    // Main back panel\n    translate([0, 0, back_height/2]) {\n        difference() {\n            cube([chair_width-10, 5, back_height], center=true);\n            translate([0, 2, 0]) cube([chair_width-14, 7, back_height-4], center=true);\n        }\n    }\n    \n    // Curved top rail\n    translate([0, -2.5, back_height]) {\n        difference() {\n            scale([1, 0.3, 1]) sphere(r=chair_width/2 - 5, $fn=32);\n            translate([0, 0, -5]) cube([chair_width, 10, 10], center=true);\n        }\n    }\n    \n    // Decorative vertical slats\n    for(x=[-15, -7.5, 0, 7.5, 15]) {\n        translate([x, 0, back_height/2]) {\n            cube([3, 4, back_height-8]);\n        }\n    }\n}\n\n// Armrest with support\nmodule armrest(side) {\n    // Horizontal arm\n    rotate([0, 30*side, 0]) {\n        translate([0, 0, 0]) {\n            cube([20, 6, 4]);\n        }\n    }\n    \n    // Support post\n    translate([5*side, 0, -15]) {\n        cylinder(h=20, r=2, $fn=16);\n    }\n    \n    // Decorative ball on armrest\n    translate([10*side, 0, 2]) {\n        sphere(r=2.5, $fn=16);\n    }\n}\n\n// Generate the chair\narmchair();",
    "renders": true
  },
  {
    "decorative_art": "ornament",
    "openscad_code": "// Ornate Jewelry Box - Decorative Furniture Ornament\n// Dimensions: 80mm x 50mm x 45mm\n\n$fn = 32;\n\n// Main body dimensions\nbody_w = 80;\nbody_d = 50;\nbody_h = 35;\n\n// Leg dimensions\nleg_h = 10;\nleg_r = 3;\n\n// Decorative elements\nbezel_h = 3;\npattern_h = 1;\n\nmodule ornate_box() {\n    // Main body with rounded top\n    difference() {\n        // Main body block\n        union() {\n            // Base box\n            translate([0, 0, body_h/2])\n                cube([body_w, body_d, body_h], center=true);\n            \n            // Rounded top\n            translate([0, 0, body_h])\n                scale([body_w*0.9, body_d*0.9, 1])\n                    sphere(bezel_h);\n        }\n        \n        // Hollow interior\n        translate([0, 0, body_h/2 + 2])\n            cube([body_w - 4, body_d - 4, body_h - 2], center=true);\n    }\n    \n    // Decorative legs\n    for(x = [-body_w/2 + 10, body_w/2 - 10])\n        for(y = [-body_d/2 + 10, body_d/2 - 10])\n            translate([x, y, leg_h/2])\n                cylinder(h=leg_h, r=leg_r);\n    \n    // Ornate front panel with carved pattern\n    translate([0, body_d/2 + 0.5, body_h/2])\n        cube([body_w - 20, 1, body_h - 10], center=true);\n    \n    // Decorative rosettes on corners\n    module rosette() {\n        difference() {\n            cylinder(h=pattern_h, r=5);\n            cylinder(h=pattern_h + 0.1, r=3);\n        }\n        for(i = [0:45:315])\n            rotate([0, 0, i])\n                translate([4, 0, 0])\n                    cube([2, 1, pattern_h], center=true);\n    }\n    \n    // Place rosettes on front\n    for(x = [-body_w/2 + 15, body_w/2 - 15])\n        translate([x, body_d/2 + 1, body_h/2])\n            rosette();\n    \n    // Hinged lid detail\n    translate([0, -body_d/2, body_h + bezel_h])\n        cube([body_w - 10, 3, 2], center=true);\n    \n    // Ornate keyhole detail\n    translate([0, body_d/2 + 1, body_h/2 - 5])\n        union() {\n            cube([4, 1, 6], center=true);\n            translate([0, 0, -3])\n                cylinder(h=1, r=1.5);\n        }\n    \n    // Side decorative panels\n    module side_panel() {\n        difference() {\n            cube([2, body_d - 20, body_h - 15], center=true);\n            for(i = [-1:1])\n                translate([0, i * 10, 0])\n                    cube([3, 5, body_h - 20], center=true);\n        }\n    }\n    \n    // Left panel\n    translate([-body_w/2 - 1, 0, body_h/2])\n        side_panel();\n    \n    // Right panel\n    translate([body_w/2 + 1, 0, body_h/2])\n        side_panel();\n    \n    // Top decorative molding\n    translate([0, 0, body_h + bezel_h + 1])\n        difference() {\n            cube([body_w - 5, body_d - 5, 2], center=true);\n            cube([body_w - 15, body_d - 15, 3], center=true);\n        }\n}\n\n// Render the complete ornament\nornate_box();",
    "renders": true
  },
  {
    "decorative_art": "lamp",
    "openscad_code": "// Realistic Table Lamp - OpenSCAD\n// Overall height: 120mm, Base diameter: 70mm, Shade: 60mm tall, 80mm top diameter\n\n$fn = 64;  // Smooth curves\n\n// Lamp base assembly\nmodule lamp_base() {\n    // Main base cylinder\n    cylinder(h = 8, d = 70);\n    \n    // Decorative base ring (stepped)\n    translate([0, 0, 8])\n        cylinder(h = 3, d1 = 70, d2 = 65);\n    \n    // Center column\n    translate([0, 0, 11])\n        cylinder(h = 40, d = 12);\n    \n    // Decorative ring at column top\n    translate([0, 0, 51])\n        cylinder(h = 4, d = 18);\n}\n\n// Lamp arm assembly\nmodule lamp_arm() {\n    // Lower arm segment\n    translate([0, 0, 55])\n        rotate([15, 0, 0])\n            cylinder(h = 35, d = 10);\n    \n    // Joint sphere\n    translate([0, 0, 90])\n        sphere(d = 12);\n    \n    // Upper arm segment\n    translate([0, 0, 96])\n        rotate([-30, 0, 0])\n            cylinder(h = 20, d = 8);\n}\n\n// Lamp shade assembly\nmodule lamp_shade() {\n    // Shade cone\n    translate([0, 0, 116])\n        cylinder(h = 60, d1 = 80, d2 = 60);\n    \n    // Shade ring detail at bottom\n    translate([0, 0, 116])\n        cylinder(h = 2, d = 82);\n    \n    // Shade ring detail at top\n    translate([0, 0, 176])\n        cylinder(h = 2, d = 62);\n}\n\n// Light bulb detail\nmodule light_bulb() {\n    // Bulb socket\n    translate([0, 0, 114])\n        cylinder(h = 8, d = 14);\n    \n    // Bulb\n    translate([0, 0, 122])\n        sphere(d = 20);\n}\n\n// Power cord detail\nmodule power_cord() {\n    // Cord exit\n    translate([0, 0, 11])\n        rotate([90, 0, 0])\n            cylinder(h = 15, d = 5);\n    \n    // Cord\n    translate([0, -15, 11])\n        rotate([90, 0, 0])\n            cylinder(h = 30, d = 3);\n}\n\n// Base decorative pattern\nmodule base_pattern() {\n    for (i = [0:30:359]) {\n        rotate([0, 0, i])\n            translate([30, 0, 0])\n                cube([2, 2, 8], center = true);\n    }\n}\n\n// Main assembly\nunion() {\n    difference() {\n        lamp_base();\n        // Hollow base for weight reduction\n        translate([0, 0, 2])\n            cylinder(h = 6, d = 66);\n    }\n    \n    base_pattern();\n    lamp_arm();\n    \n    difference() {\n        lamp_shade();\n        // Hollow shade\n        translate([0, 0, 118])\n            cylinder(h = 56, d1 = 76, d2 = 56);\n    }\n    \n    light_bulb();\n    power_cord();\n}",
    "renders": true
  },
  {
    "decorative_art": "table_lamp",
    "openscad_code": "// Table Lamp - Realistic style, medium complexity\n// 2 mm wall thickness for 3D printing, approx 120 mm tall\n\n// Overall dimensions\nlamp_height = 120;\nbase_dia = 70;\nshade_dia_top = 80;\nshade_dia_bottom = 60;\nshade_height = 50;\n\n// Base module with decorative ring pattern\nmodule lamp_base() {\n    difference() {\n        // Main base disc\n        cylinder(h = 8, d = base_dia, $fn = 60);\n\n        // Recessed center\n        translate([0, 0, 4])\n            cylinder(h = 4.5, d = 40, $fn = 40);\n\n        // Decorative concentric rings (subtractive)\n        for (i = [1:3]) {\n            translate([0, 0, 2])\n                cylinder(h = 2, d = base_dia - i * 12, $fn = 60);\n        }\n    }\n}\n\n// Central stem with joint detail\nmodule stem() {\n    // Lower shaft\n    cylinder(h = 35, d = 12, $fn = 32);\n\n    // Decorative joint collar\n    translate([0, 0, 35])\n        cylinder(h = 8, d = 16, $fn = 32);\n\n    // Upper shaft (slightly thinner)\n    translate([0, 0, 43])\n        cylinder(h = 25, d = 10, $fn = 32);\n}\n\n// Lamp shade with realistic flared shape\nmodule shade() {\n    difference() {\n        // Main shade shell (conical)\n        union() {\n            // Outer shell\n            cylinder(h = shade_height, d1 = shade_dia_bottom, d2 = shade_dia_top, $fn = 60);\n            \n            // Bottom rim detail\n            translate([0, 0, -2])\n                cylinder(h = 4, d = shade_dia_bottom + 4, $fn = 60);\n        }\n\n        // Hollow interior\n        translate([0, 0, 2])\n            cylinder(h = shade_height + 2, d1 = shade_dia_bottom - 4, d2 = shade_dia_top - 4, $fn = 60);\n    }\n}\n\n// Bulb socket detail\nmodule socket() {\n    translate([0, 0, -8]) {\n        // Socket housing\n        cylinder(h = 12, d = 15, $fn = 32);\n        \n        // Thread detail\n        difference() {\n            cylinder(h = 8, d = 14, $fn = 32);\n            for (i = [0:5]) {\n                rotate([0, 0, i * 60])\n                    translate([7, 0, 1])\n                        cube([14, 1, 6], center = true);\n            }\n        }\n    }\n}\n\n// Power cord detail\nmodule cord() {\n    // Entry point\n    translate([base_dia/2 - 5, 0, 4])\n        rotate([90, 0, 0])\n            cylinder(h = 15, d = 4, $fn = 16);\n    \n    // Cord\n    translate([base_dia/2 - 5, 7.5, 4])\n        rotate([0, 90, 0])\n            cylinder(h = 30, d = 3, $fn = 8);\n}\n\n// Assembly\nunion() {\n    // Base\n    lamp_base();\n    \n    // Stem starting from base top\n    translate([0, 0, 8])\n        stem();\n    \n    // Socket at stem top\n    translate([0, 0, 8 + 35 + 8 + 25])\n        socket();\n    \n    // Shade attached above socket\n    translate([0, 0, 8 + 35 + 8 + 25 + 4])\n        shade();\n    \n    // Power cord\n    cord();\n}",
    "renders": true
  },
  {
    "decorative_art": "floor_lamp",
    "openscad_code": "// Realistic Floor Lamp – OpenSCAD\n// Medium-complexity decorative model, 3D-printable (2 mm walls, no overhangs)\n\n// General dimensions\nlamp_height  = 140;   // total height\nbase_d       = 60;    // base diameter\npole_h       = 110;   // pole height\nshade_h      = 30;    // lampshade height\nshade_d      = 45;    // lampshade bottom diameter\nwall_t       = 2;     // wall thickness for 3D printing\n\n// Base\nmodule round_base(d, h) {\n    difference() {\n        cylinder(h = h, d1 = d, d2 = d*0.85); // slight taper\n        cylinder(h = h+0.1, d = d - 2*wall_t); // hollow\n    }\n}\n\n// Decorative ring (for pole joint and accent)\nmodule ring(od, id, h) {\n    difference() {\n        cylinder(h = h, d = od);\n        translate([0,0,-0.1]) cylinder(h = h+0.2, d = id);\n    }\n}\n\n// Stem/pole with subtle detail\nmodule pole(h, d) {\n    difference() {\n        cylinder(h = h, d = d);\n        translate([0,0,-0.1]) cylinder(h = h+0.2, d = d - 2*wall_t);\n    }\n}\n\n// Lampshade – flared cylinder with decorative cutouts\nmodule shade(h, d_bottom, d_top, wall_t) {\n    difference() {\n        cylinder(h = h, d1 = d_bottom, d2 = d_top);\n        // hollow\n        translate([0,0,-0.1]) cylinder(h = h+0.2, d1 = d_bottom - 2*wall_t, d2 = d_top - 2*wall_t);\n        \n        // decorative vertical slots (avoid overhangs)\n        for (i = [0:30:360]) {\n            rotate([0,0,i])\n                translate([0, d_bottom/2 - wall_t - 2, -0.2])\n                    cube([wall_t, 4, h+0.4]);\n        }\n    }\n}\n\n// Bulb placeholder\nmodule bulb() {\n    sphere(d = 8);\n}\n\n// Assembly\nunion() {\n    // Base\n    round_base(base_d, 8);\n    \n    // Pole\n    translate([0,0,8])\n        pole(pole_h, 10);\n    \n    // Decorative rings\n    translate([0,0,8])\n        ring(18, 14, 4);\n    \n    translate([0,0,8+pole_h-4])\n        ring(18, 14, 4);\n    \n    // Lampshade\n    translate([0,0,8+pole_h])\n        shade(shade_h, shade_d, shade_d*0.7, wall_t);\n    \n    // Bulb\n    translate([0,0,8+pole_h+shade_h/2])\n        bulb();\n}",
    "renders": true
  },
  {
    "decorative_art": "wall_lamp",
    "openscad_code": "// Wall Lamp - Realistic Style, Medium Complexity\n// Overall dimensions: 120mm width x 150mm height x 70mm depth\n\n// Wall plate thickness\nwall_thickness = 2;\n\n// Back plate that mounts to wall\nmodule wall_mount() {\n    difference() {\n        // Main back plate\n        translate([-5, 0, 0])\n            cube([10, 140, 100], center=false);\n        \n        // Screw holes for mounting\n        for (y = [20, 120]) {\n            translate([0, y, 50])\n                rotate([90, 0, 0])\n                    cylinder(h=10, d=4, center=true);\n        }\n        \n        // Wire channel\n        translate([2, 70, 0])\n            cube([6, 10, 100], center=false);\n    }\n}\n\n// Decorative frame around the lamp\nmodule lamp_frame() {\n    // Outer frame\n    difference() {\n        translate([5, 5, 0])\n            cube([110, 140, 10], center=false);\n        \n        // Inner cutout\n        translate([15, 15, -1])\n            cube([90, 120, 12], center=false);\n    }\n    \n    // Decorative corners\n    for (x = [5, 105]) {\n        for (y = [5, 125]) {\n            translate([x, y, 0])\n                cylinder(h=10, d=15, center=false);\n        }\n    }\n}\n\n// Lamp shade support arms\nmodule support_arms() {\n    // Left arm\n    translate([20, 70, 10])\n        rotate([0, -30, 0])\n            cube([40, 8, 8], center=false);\n    \n    // Right arm\n    translate([90, 70, 10])\n        rotate([0, 30, 0])\n            cube([40, 8, 8], center=false);\n}\n\n// Lamp shade\nmodule lamp_shade() {\n    // Main shade body\n    difference() {\n        translate([35, 55, 40])\n            rotate([0, 0, 0])\n                cylinder(h=40, d1=50, d2=40, center=false);\n        \n        // Light bulb cavity\n        translate([60, 75, 50])\n            sphere(d=30, center=true);\n    }\n    \n    // Shade trim ring\n    translate([35, 55, 78])\n        cylinder(h=5, d=52, center=false);\n    \n    // Ventilation holes\n    for (angle = [0:45:315]) {\n        translate([60, 75, 60])\n            rotate([0, 0, angle])\n                translate([20, 0, 0])\n                    cylinder(h=5, d=3, center=true);\n    }\n}\n\n// Switch housing\nmodule switch_housing() {\n    translate([55, 10, 15])\n        cube([10, 20, 25], center=false);\n    \n    // Switch button\n    translate([60, 15, 35])\n        sphere(d=8, center=true);\n}\n\n// Decorative pattern on frame\nmodule frame_pattern() {\n    for (x = [25:10:95]) {\n        for (y = [25:10:115]) {\n            translate([x, y, 9])\n                sphere(d=3, center=true);\n        }\n    }\n}\n\n// Assemble the complete wall lamp\nunion() {\n    wall_mount();\n    \n    translate([0, 0, 70])\n        lamp_frame();\n    \n    translate([0, 0, 70])\n        frame_pattern();\n    \n    translate([0, 0, 70])\n        support_arms();\n    \n    translate([0, 0, 70])\n        lamp_shade();\n    \n    translate([0, 0, 70])\n        switch_housing();\n}",
    "renders": true
  },
  {
    "decorative_art": "candle_holder",
    "openscad_code": "// Realistic Candle Holder - Medium Complexity\n// Dimensions: 100mm x 100mm x 75mm (L x W x H)\n\n// Base parameters\nbase_width = 100;\nbase_depth = 100;\nbase_height = 8;\nwall_thickness = 2;\n\n// Candle platform parameters\nplatform_width = 85;\nplatform_depth = 85;\nplatform_height = 5;\nplatform_offset = 25;\n\n// Post parameters\npost_diameter = 15;\npost_height = 35;\n\n// Candle hole parameters\ncandle_diameter = 22;\ncandle_depth = 18;\n\n// Decorative elements\nleg_size = 8;\nleg_height = 30;\ndecorative_ridge_height = 3;\nnum_ridges = 8;\n\n// Base module with decorative legs\nmodule base_with_legs() {\n    difference() {\n        // Main base\n        cube([base_width, base_depth, base_height], center=true);\n        \n        // Chamfer bottom edges\n        translate([0, 0, -base_height/2 - 0.1])\n            cube([base_width - wall_thickness, base_depth - wall_thickness, base_height], center=true);\n    }\n    \n    // Decorative legs at corners\n    for(x = [-1, 1]) {\n        for(y = [-1, 1]) {\n            translate([x * (base_width/2 - leg_size/2), y * (base_depth/2 - leg_size/2), leg_height/2 - base_height/2])\n                cube([leg_size, leg_size, leg_height], center=true);\n        }\n    }\n}\n\n// Platform with decorative ridges\nmodule platform() {\n    difference() {\n        // Main platform\n        translate([0, 0, platform_offset + platform_height/2])\n            cube([platform_width, platform_depth, platform_height], center=true);\n        \n        // Bottom chamfer\n        translate([0, 0, platform_offset - 0.1])\n            cube([platform_width - wall_thickness, platform_depth - wall_thickness, platform_height + 0.2], center=true);\n    }\n    \n    // Decorative ridges\n    for(i = [0:num_ridges-1]) {\n        angle = i * 360/num_ridges;\n        radius = platform_width/2 - 10;\n        rotate([0, 0, angle])\n            translate([radius, 0, platform_offset + platform_height])\n                cube([15, wall_thickness, decorative_ridge_height], center=true);\n    }\n}\n\n// Central post with candle holder\nmodule candle_post() {\n    // Main post\n    cylinder(h=post_height, d=post_diameter, center=false, $fn=32);\n    \n    // Candle holder cup\n    translate([0, 0, post_height])\n        difference() {\n            // Outer cup\n            cylinder(h=candle_depth + 3, d=candle_diameter + wall_thickness*2, center=false, $fn=32);\n            \n            // Inner hole for candle\n            translate([0, 0, 3])\n                cylinder(h=candle_depth, d=candle_diameter, center=false, $fn=32);\n        }\n    \n    // Decorative rings\n    translate([0, 0, post_height * 0.3])\n        cylinder(h=wall_thickness, d=post_diameter + 6, center=true, $fn=32);\n    translate([0, 0, post_height * 0.7])\n        cylinder(h=wall_thickness, d=post_diameter + 6, center=true, $fn=32);\n}\n\n// Assembly\nunion() {\n    // Base structure\n    base_with_legs();\n    \n    // Platform\n    platform();\n    \n    // Central post with candle holder\n    translate([0, 0, base_height/2 + leg_height])\n        candle_post();\n    \n    // Side supports\n    for(angle = [0, 90, 180, 270]) {\n        rotate([0, 0, angle])\n            translate([0, platform_width/2 - wall_thickness/2, base_height/2 + leg_height + post_height/2])\n                cube([wall_thickness, 15, post_height], center=true);\n    }\n}",
    "renders": true
  },
  {
    "decorative_art": "candelabra",
    "openscad_code": "// Realistic Candelabra - Medium Complexity\n// Size: ~100mm height, 3D printable with 2mm walls\n\n// Overall dimensions\nheight = 100;\nbase_d = 80;\narm_length = 35;\n\n// Base module\nmodule base() {\n    // Main base disc\n    cylinder(h=8, d=base_d, $fn=60);\n    \n    // Decorative ring on base\n    translate([0, 0, 8])\n        difference() {\n            cylinder(h=3, d=base_d - 4, $fn=60);\n            cylinder(h=3.5, d=base_d - 8, $fn=60);\n        }\n}\n\n// Central stem\nmodule stem() {\n    // Lower decorative section\n    for(i=[0:2:10]) {\n        translate([0, 0, 8 + i*1.5])\n            scale([1 - i*0.02, 1 - i*0.02, 1])\n                cylinder(h=1.5, d=20 - i*0.5, $fn=32);\n    }\n    \n    // Main stem\n    translate([0, 0, 23])\n        cylinder(h=35, d1=16, d2=12, $fn=32);\n    \n    // Upper decorative collar\n    translate([0, 0, 58])\n        cylinder(h=5, d1=12, d2=16, $fn=32);\n}\n\n// Candle holder with realistic drip details\nmodule candle_holder(height=20) {\n    // Cup for candle\n    difference() {\n        cylinder(h=height, d=12, $fn=32);\n        translate([0, 0, 1])\n            cylinder(h=height, d=10, $fn=32);\n    }\n    \n    // Wax drips\n    for(a=[0:60:300]) {\n        rotate([0, 0, a])\n            translate([5, 0, height - 3])\n                scale([0.8, 0.4, 1])\n                    sphere(d=4, $fn=12);\n    }\n    \n    // Candle stub\n    translate([0, 0, height])\n        cylinder(h=8, d=8, $fn=16);\n}\n\n// Decorative arm structure\nmodule arm(pos_angle, height_offset) {\n    rotate([0, 0, pos_angle])\n        translate([0, 0, height_offset]) {\n            // Arm base\n            translate([0, 0, 0])\n                cylinder(h=5, d1=12, d2=8, $fn=32);\n            \n            // Curved arm\n            difference() {\n                hull() {\n                    translate([0, arm_length/3, 2.5])\n                        sphere(d=6, $fn=16);\n                    translate([0, arm_length, 10])\n                        sphere(d=6, $fn=16);\n                }\n                translate([0, arm_length/3, 2.5])\n                    sphere(d=2, $fn=16);\n                translate([0, arm_length, 10])\n                    sphere(d=2, $fn=16);\n            }\n            \n            // Candle holder on arm\n            translate([0, arm_length, 10])\n                candle_holder(15);\n        }\n}\n\n// Assembly\nunion() {\n    // Base\n    base();\n    \n    // Central stem\n    stem();\n    \n    // Central candle holder\n    translate([0, 0, 63])\n        candle_holder(20);\n    \n    // Three decorative arms\n    for(i=[0:120:240]) {\n        arm(i, 63);\n    }\n    \n    // Decorative finial\n    translate([0, 0, 83])\n        difference() {\n            cylinder(h=12, d1=12, d2=8, $fn=32);\n            translate([0, 0, 10])\n                sphere(d=8, $fn=32);\n        }\n    \n    // Support ribs between arms\n    for(i=[0:120:240]) {\n        rotate([0, 0, i + 60])\n            translate([0, 0, 63])\n                difference() {\n                    cube([2, arm_length - 5, 3], center=true);\n                    translate([0, arm_length/2 - 2.5, 1.5])\n                        sphere(d=2, $fn=12);\n                }\n    }\n}",
    "renders": true
  },
  {
    "decorative_art": "picture_frame",
    "openscad_code": "// Realistic Picture Frame - Medium Complexity\n// Overall size: 100x70x15mm (fits 60x40mm photo)\n// 2mm wall thickness for 3D printing\n\nframe_width = 100;\nframe_height = 70;\nframe_depth = 15;\nphoto_width = 60;\nphoto_height = 40;\nwall_thickness = 2;\n\n// Main frame body with beveled edges\nmodule frame_body() {\n    difference() {\n        // Outer frame with rounded edges\n        union() {\n            // Main frame block\n            cube([frame_width, frame_height, frame_depth]);\n            \n            // Rounded top edge\n            translate([wall_thickness, wall_thickness, frame_depth])\n                cube([frame_width-2*wall_thickness, frame_height-2*wall_thickness, 2]);\n            \n            // Rounded bottom edge\n            translate([wall_thickness, wall_thickness, -2])\n                cube([frame_width-2*wall_thickness, frame_height-2*wall_thickness, 2]);\n        }\n        \n        // Photo opening\n        translate([(frame_width-photo_width)/2, (frame_height-photo_height)/2, -1])\n            cube([photo_width, photo_height, frame_depth+2]);\n            \n        // Back recess for photo insertion\n        translate([(frame_width-photo_width)/2-2, (frame_height-photo_height)/2-2, -1])\n            cube([photo_width+4, photo_height+4, 3]);\n    }\n}\n\n// Decorative corner brackets\nmodule corner_bracket(x, y) {\n    translate([x, y, frame_depth-4]) {\n        // Main bracket body\n        cube([8, 8, 4]);\n        \n        // Decorative ridge\n        for(i = [1:3]) {\n            translate([i, i, 3.5])\n                cube([8-2*i, 8-2*i, 0.5]);\n        }\n    }\n}\n\n// Ornate top detail\nmodule top_detail() {\n    translate([frame_width/2-15, frame_height-8, frame_depth-6]) {\n        // Base\n        cube([30, 8, 6]);\n        \n        // Curved detail\n        for(i = [0:5]) {\n            translate([i*5, -1, 6])\n                cylinder(h=3, r1=3, r2=2);\n            translate([i*5, 9, 6])\n                cylinder(h=3, r1=3, r2=2);\n        }\n    }\n}\n\n// Back stand support\nmodule back_stand() {\n    translate([frame_width-25, 5, -wall_thickness]) {\n        difference() {\n            // Stand body\n            rotate([0, -15, 0])\n                cube([20, 3, 15]);\n                \n            // Lightening holes\n            translate([5, 0, 5])\n                cylinder(h=5, r=1.5);\n            translate([15, 0, 5])\n                cylinder(h=5, r=1.5);\n        }\n    }\n}\n\n// Hanger mounting points\nmodule hanger_mounts() {\n    // Top center hanger\n    translate([frame_width/2-3, -1, frame_depth/2]) {\n        cube([6, 2, 4]);\n        translate([3, 1, 2])\n            rotate([90, 0, 0])\n                cylinder(h=6, r=2);\n    }\n    \n    // Side hangers\n    translate([-1, frame_height/2-3, frame_depth/2]) {\n        cube([2, 6, 4]);\n        translate([1, 3, 2])\n            rotate([0, 90, 0])\n                cylinder(h=2, r=2);\n    }\n    translate([frame_width-1, frame_height/2-3, frame_depth/2]) {\n        cube([2, 6, 4]);\n        translate([1, 3, 2])\n            rotate([0, 90, 0])\n                cylinder(h=2, r=2);\n    }\n}\n\n// Assembly\nunion() {\n    frame_body();\n    \n    // Add corner brackets\n    corner_bracket(0, 0);\n    corner_bracket(frame_width-8, 0);\n    corner_bracket(0, frame_height-8);\n    corner_bracket(frame_width-8, frame_height-8);\n    \n    // Add top ornament\n    top_detail();\n    \n    // Add back stand\n    back_stand();\n    \n    // Add hanger mounts\n    hanger_mounts();\n}",
    "renders": true
  },
  {
    "decorative_art": "photo_frame",
    "openscad_code": "// Photo Frame - Realistic Style, Medium Complexity\n// External dimensions: 100x80x15 mm (fits 4x3 inch photo)\n// Wall thickness: 2mm for 3D printing\n// Includes decorative corners and stand\n\nmodule frame_profile() {\n    difference() {\n        // Outer frame\n        cube([100, 80, 15], center=true);\n        \n        // Inner cutout for photo\n        translate([0, 0, 2])\n            cube([86, 66, 16], center=true);\n    }\n}\n\nmodule decorative_corner() {\n    // Corner decoration with spherical accent\n    translate([0, 0, 7.5])\n    union() {\n        // Base pyramid shape\n        for (i = [0:3]) {\n            rotate([0, 0, i*90])\n            translate([5, 5, 0])\n            rotate([0, 0, 45])\n            cube([7, 7, 8], center=true);\n        }\n        \n        // Center sphere\n        sphere(r=3, $fn=16);\n    }\n}\n\nmodule corners() {\n    // Position decorative corners at frame edges\n    for (pos = [[-42, -32, 0], [42, -32, 0], [42, 32, 0], [-42, 32, 0]]) {\n        translate(pos)\n        decorative_corner();\n    }\n}\n\nmodule stand_support() {\n    // Hinged stand support on back\n    translate([0, 35, -7.5])\n    rotate([90, 0, 0])\n    union() {\n        // Main support leg\n        translate([0, 0, 15])\n        cube([40, 2, 25], center=true);\n        \n        // Hinge pins\n        for (x = [-15, 15]) {\n            translate([x, 0, 15])\n            cylinder(h=3, r=2, center=true);\n        }\n    }\n}\n\nmodule back_panel() {\n    // Removable back panel with photo retention\n    translate([0, 0, -7.5])\n    difference() {\n        // Main back panel\n        cube([86, 66, 2], center=true);\n        \n        // Finger grip cutout\n        translate([0, -30, 0])\n        cube([20, 5, 3], center=true);\n        \n        // Stand clearance\n        translate([0, 35, 0])\n        cube([40, 10, 4], center=true);\n    }\n}\n\nmodule photo_window() {\n    // Actual photo viewing window with bevel\n    translate([0, 0, 6])\n    difference() {\n        cylinder(h=2, r=43, $fn=64);\n        cylinder(h=3, r=41, $fn=64);\n    }\n}\n\n// Main assembly\nunion() {\n    // Frame body\n    frame_profile();\n    \n    // Decorative corners\n    corners();\n    \n    // Photo window detail\n    photo_window();\n    \n    // Stand assembly (print separately)\n    translate([0, 0, 30])  // Offset for separate printing\n    stand_support();\n    \n    // Back panel (print separately)\n    translate([0, 0, 45])  // Offset for separate printing\n    back_panel();\n}",
    "renders": true
  },
  {
    "decorative_art": "mirror",
    "openscad_code": "// Medium-complexity realistic mirror furniture\n// Overall size ~100 mm wide, ~140 mm tall, ~15 mm deep\n// Wall thickness = 2 mm for 3D printing\n\n// Parameters\nmirror_width  = 100;\nmirror_height = 120;\nmirror_thick  = 2;\n\nframe_face_w  = 8;\nframe_depth   = 12;\nframe_thick   = 2;\n\nbase_w        = 80;\nbase_h        = 12;\nbase_d        = 15;\nstand_h       = 15;\n\n// Mirror glass\nmodule mirror_glass() {\n    translate([0, 0, frame_depth/2 - mirror_thick/2])\n        cube([mirror_width, mirror_height, mirror_thick], center=true);\n}\n\n// Bevelled frame profile\nmodule frame_profile() {\n    difference() {\n        // Outer frame block\n        cube([frame_face_w, frame_face_w, frame_depth], center=true);\n        // Inner bevel cut\n        translate([0, 0, frame_depth/2 - 1])\n            cube([frame_face_w - 2*frame_thick, frame_face_w - 2*frame_thick, 2], center=true);\n    }\n}\n\n// Full frame assembly\nmodule frame() {\n    // Top\n    translate([0,  mirror_height/2 + frame_face_w/2, 0])\n        frame_profile();\n    // Bottom\n    translate([0, -mirror_height/2 - frame_face_w/2, 0])\n        frame_profile();\n    // Left\n    rotate([0,0,90])\n    translate([0,  mirror_width/2 + frame_face_w/2, 0])\n        frame_profile();\n    // Right\n    rotate([0,0,90])\n    translate([0, -mirror_width/2 - frame_face_w/2, 0])\n        frame_profile();\n}\n\n// Ornamental corner scrolls\nmodule corner_scroll() {\n    for (a=[0:90:270]) {\n        rotate([0,0,a])\n        translate([mirror_width/2 + frame_face_w/2 - 2, mirror_height/2 + frame_face_w/2 - 2, 0])\n        rotate([90,0,0])\n        cylinder(h=frame_face_w/2, r1=3, r2=1, $fn=16);\n    }\n}\n\n// Base stand\nmodule base_stand() {\n    difference() {\n        // Main base\n        translate([0, -mirror_height/2 - stand_h - base_h/2, frame_depth/2 - base_d/2])\n            cube([base_w, base_h, base_d], center=true);\n        // Lightening cut\n        translate([0, -mirror_height/2 - stand_h - base_h/2, frame_depth/2 - base_d/2 + 2])\n            cube([base_w - 2*frame_thick, base_h - 2*frame_thick, base_d - 4], center=true);\n    }\n    // Support strut\n    translate([0, -mirror_height/2 - stand_h/2, 0])\n        cube([frame_face_w*2, stand_h, frame_thick], center=true);\n}\n\n// Back brace\nmodule back_brace() {\n    translate([0, -mirror_height/4, -frame_depth/2 + 1])\n        rotate([90,0,0])\n        cylinder(h=base_w/2, r=2, $fn=12);\n}\n\n// Assembly\nunion() {\n    mirror_glass();\n    frame();\n    corner_scroll();\n    base_stand();\n    back_brace();\n}",
    "renders": true
  },
  {
    "decorative_art": "decorative_mirror",
    "openscad_code": "// Decorative Wall Mirror - Realistic Style\n// Overall dimensions: 120mm width x 140mm height x 15mm depth\n\n$fn = 32;\n\n// Main mirror glass\nmodule mirror_glass() {\n    difference() {\n        // Mirror surface\n        translate([0, 0, 13])\n            cube([80, 100, 2], center=true);\n        \n        // Beveled edge detail\n        translate([0, 0, 13.5])\n            cube([76, 96, 2], center=true);\n    }\n}\n\n// Ornate frame with floral patterns\nmodule decorative_frame() {\n    // Outer frame\n    difference() {\n        // Main frame body\n        translate([0, 0, 7.5])\n            cube([100, 120, 15], center=true);\n        \n        // Inner cutout\n        translate([0, 0, 7.5])\n            cube([84, 104, 16], center=true);\n    }\n    \n    // Decorative corners\n    for(x = [-40, 40])\n    for(y = [-50, 50]) {\n        translate([x, y, 12])\n            rotate([0, 0, x > 0 ? 0 : 180])\n            rotate([0, 0, y > 0 ? 90 : -90])\n            corner_detail();\n    }\n    \n    // Side decorations\n    for(pos = [-40, 40]) {\n        // Left/right decorations\n        translate([pos, 0, 12])\n            rotate([0, 0, pos > 0 ? 90 : -90])\n            side_decoration();\n        \n        // Top/bottom decorations\n        translate([0, pos + 10*sign(pos), 12])\n            rotate([0, 0, pos > 0 ? 0 : 180])\n            side_decoration();\n    }\n}\n\n// Corner floral detail\nmodule corner_detail() {\n    difference() {\n        union() {\n            // Main corner piece\n            translate([35, 45, 0])\n                cylinder(h=5, r1=12, r2=8);\n            \n            // Petal details\n            for(i = [0:45:315]) {\n                rotate([0, 0, i])\n                translate([42, 45, 2.5])\n                    scale([1.5, 0.8, 1])\n                    cylinder(h=5, r1=6, r2=0);\n            }\n        }\n        \n        // Center hole\n        translate([35, 45, -1])\n            cylinder(h=7, r=3);\n    }\n}\n\n// Side decoration pattern\nmodule side_decoration() {\n    // Base scroll\n    translate([0, 0, 0])\n        scale([1.2, 0.6, 1])\n        cylinder(h=5, r1=25, r2=20);\n    \n    // Decorative beads\n    for(i = [-15:7.5:15]) {\n        translate([i, 0, 3])\n            sphere(d=5);\n    }\n}\n\n// Back mounting bracket\nmodule mounting_bracket() {\n    // Main bracket\n    translate([0, 40, 0])\n        cube([40, 8, 10], center=true);\n    \n    // Keyhole slots for wall mounting\n    for(x = [-15, 15]) {\n        translate([x, 40, 5])\n            cube([6, 8, 10], center=true);\n    }\n    \n    // Support ribs\n    for(x = [-30, 30]) {\n        translate([x, 20, 5])\n            cube([2, 40, 10], center=true);\n    }\n}\n\n// Assembly\nunion() {\n    // Mirror components\n    mirror_glass();\n    decorative_frame();\n    \n    // Back structure\n    mounting_bracket();\n}\n\n// Print orientation marker (remove before printing)\n%translate([0, 0, -5])\n    cube([120, 140, 0.5], center=true);",
    "renders": true
  },
  {
    "decorative_art": "wall_art",
    "openscad_code": "// Wall-mounted decorative shelf unit - realistic style\n// Overall dimensions: 120mm wide x 80mm tall x 25mm deep\n\n$fn = 32;\n\n// Main parameters\nwidth = 120;\nheight = 80;\ndepth = 25;\nwall_thickness = 2;\nshelf_thickness = 3;\n\n// Wall mounting plate\nmodule mounting_plate() {\n    difference() {\n        // Main plate\n        translate([0, 0, depth/2 - wall_thickness/2])\n            cube([width, height, wall_thickness], center=true);\n        \n        // Keyhole mounting slots (2)\n        for(x = [-40, 40]) {\n            translate([x, height/2 - 15, depth/2 - wall_thickness/2 + 1])\n                rotate([90, 0, 0])\n                    cylinder(h=10, d1=8, d2=4);\n        }\n    }\n}\n\n// Decorative frame border\nmodule frame() {\n    // Top horizontal piece\n    translate([0, height/2 - wall_thickness/2, depth/2])\n        cube([width + wall_thickness*2, wall_thickness*2, depth], center=true);\n    \n    // Bottom horizontal piece\n    translate([0, -height/2 + wall_thickness/2, depth/2])\n        cube([width + wall_thickness*2, wall_thickness*2, depth], center=true);\n    \n    // Left vertical piece\n    translate([-width/2 - wall_thickness/2, 0, depth/2])\n        cube([wall_thickness*2, height + wall_thickness*2, depth], center=true);\n    \n    // Right vertical piece\n    translate([width/2 + wall_thickness/2, 0, depth/2])\n        cube([wall_thickness*2, height + wall_thickness*2, depth], center=true);\n}\n\n// Decorative shelves\nmodule shelves() {\n    // Top shelf (decorative ledge)\n    translate([0, height/2 - 10, depth - shelf_thickness/2])\n        cube([width - 20, shelf_thickness, shelf_thickness], center=true);\n    \n    // Middle shelf (functional)\n    translate([0, 0, depth - shelf_thickness/2])\n        cube([width - 30, shelf_thickness, shelf_thickness], center=true);\n    \n    // Bottom shelf (decorative ledge)\n    translate([0, -height/2 + 10, depth - shelf_thickness/2])\n        cube([width - 20, shelf_thickness, shelf_thickness], center=true);\n}\n\n// Decorative back panel with carved pattern\nmodule back_panel() {\n    difference() {\n        // Main back panel\n        translate([0, 0, wall_thickness + 1])\n            cube([width - wall_thickness*4, height - wall_thickness*4, 1], center=true);\n        \n        // Carved circular pattern\n        for(i = [-1, 1]) {\n            for(j = [-1, 1]) {\n                translate([i*30, j*20, wall_thickness + 1.5])\n                    cylinder(h=2, r=8);\n            }\n        }\n        \n        // Center diamond pattern\n        translate([0, 0, wall_thickness + 1.5])\n            rotate([0, 0, 45])\n                cube([15, 15, 2], center=true);\n    }\n}\n\n// Side brackets for structural support\nmodule brackets() {\n    // Left bracket\n    translate([-width/2 + 10, 0, depth/2])\n        rotate([0, 45, 0])\n            cube([wall_thickness*3, height - 20, wall_thickness*3]);\n    \n    // Right bracket\n    translate([width/2 - 10, 0, depth/2])\n        rotate([0, -45, 0])\n            cube([wall_thickness*3, height - 20, wall_thickness*3]);\n}\n\n// Assembly\nunion() {\n    // Mounting system\n    mounting_plate();\n    \n    // Decorative frame\n    frame();\n    \n    // Shelves\n    shelves();\n    \n    // Back panel decoration\n    back_panel();\n    \n    // Support brackets\n    brackets();\n    \n    // Small decorative spheres at corners\n    translate([width/2 - 5, height/2 - 5, depth - 2])\n        sphere(r=2);\n    translate([-width/2 + 5, height/2 - 5, depth - 2])\n        sphere(r=2);\n    translate([width/2 - 5, -height/2 + 5, depth - 2])\n        sphere(r=2);\n    translate([-width/2 + 5, -height/2 + 5, depth - 2])\n        sphere(r=2);\n}",
    "renders": true
  },
  {
    "decorative_art": "painting_frame",
    "openscad_code": "// Realistic Painting Frame - Medium Complexity\n// Overall dimensions: 120mm x 90mm x 15mm (frame thickness)\n\nframe_width = 120;\nframe_height = 90;\nframe_depth = 15;\nwall_thickness = 2;\nmat_width = 5;\n\n// Outer frame profile\nmodule frame_profile(width, height, depth, thickness) {\n    difference() {\n        // Main frame body\n        cube([width, height, depth], center=true);\n        \n        // Inner cutout for picture\n        translate([0, 0, -1])\n            cube([width - thickness*2, height - thickness*2, depth + 2], center=true);\n    }\n}\n\n// Decorative bead along frame edge\nmodule decorative_bead(length, is_horizontal) {\n    bead_size = 2;\n    count = floor(length / 8);\n    \n    for(i = [0:count-1]) {\n        pos = (i - count/2 + 0.5) * 8;\n        translate(is_horizontal ? [pos, 0, frame_depth/2] : [0, pos, frame_depth/2])\n            sphere(bead_size/2, $fn=16);\n    }\n}\n\n// Corner ornament\nmodule corner_ornament(x, y) {\n    translate([x, y, frame_depth/2 - 1]) {\n        // Base cylinder\n        cylinder(h=2, r=3, $fn=32);\n        \n        // Decorative sphere on top\n        translate([0, 0, 2])\n            sphere(2.5, $fn=32);\n    }\n}\n\n// Back support bracket\nmodule back_support() {\n    // Triangular support\n    translate([0, -frame_height/2 + 10, -frame_depth/2]) {\n        linear_extrude(height=wall_thickness)\n            polygon(points=[[-5, 0], [5, 0], [0, -8]]);\n    }\n}\n\n// Picture mat\nmodule picture_mat() {\n    mat_inner_width = frame_width - wall_thickness*2 - mat_width*2;\n    mat_inner_height = frame_height - wall_thickness*2 - mat_width*2;\n    \n    difference() {\n        // Outer mat\n        cube([mat_inner_width + mat_width*2, mat_inner_height + mat_width*2, wall_thickness], center=true);\n        \n        // Inner opening\n        cube([mat_inner_width, mat_inner_height, wall_thickness + 1], center=true);\n    }\n}\n\n// Hanging wire mounts\nmodule wire_mounts() {\n    // Left mount\n    translate([-frame_width/2 + 10, frame_height/2 - wall_thickness, -frame_depth/2 + 2])\n        cylinder(h=4, r=2, $fn=16);\n    \n    // Right mount\n    translate([frame_width/2 - 10, frame_height/2 - wall_thickness, -frame_depth/2 + 2])\n        cylinder(h=4, r=2, $fn=16);\n}\n\n// Main assembly\nunion() {\n    // Frame body with slight bevel\n    difference() {\n        // Outer frame\n        frame_profile(frame_width, frame_height, frame_depth, wall_thickness*3);\n        \n        // Bevel inner edge\n        translate([0, 0, -frame_depth/2 + 2])\n            cube([frame_width - wall_thickness*4, frame_height - wall_thickness*4, 4], center=true);\n    }\n    \n    // Add decorative beads along edges\n    translate([0, frame_height/2 - wall_thickness*1.5, 0])\n        decorative_bead(frame_width - 20, true);\n    translate([0, -frame_height/2 + wall_thickness*1.5, 0])\n        decorative_bead(frame_width - 20, true);\n    translate([frame_width/2 - wall_thickness*1.5, 0, 0])\n        decorative_bead(frame_height - 20, false);\n    translate([-frame_width/2 + wall_thickness*1.5, 0, 0])\n        decorative_bead(frame_height - 20, false);\n    \n    // Corner ornaments\n    corner_ornament(frame_width/2 - wall_thickness*2, frame_height/2 - wall_thickness*2);\n    corner_ornament(-frame_width/2 + wall_thickness*2, frame_height/2 - wall_thickness*2);\n    corner_ornament(frame_width/2 - wall_thickness*2, -frame_height/2 + wall_thickness*2);\n    corner_ornament(-frame_width/2 + wall_thickness*2, -frame_height/2 + wall_thickness*2);\n    \n    // Picture mat (recessed)\n    translate([0, 0, -frame_depth/2 + wall_thickness])\n        picture_mat();\n    \n    // Back supports\n    back_support();\n    translate([frame_width/2 - 20, 0, 0])\n        mirror([1, 0, 0])\n            back_support();\n    \n    // Hanging wire mounts\n    wire_mounts();\n}",
    "renders": true
  },
  {
    "decorative_art": "sculpture_base",
    "openscad_code": "// Sculpture Base - Modern Art Display Stand\n// Realistic style, medium complexity\n// 110mm x 110mm x 65mm overall dimensions\n\n// Base parameters\nbase_width = 110;\nbase_depth = 110;\nbase_height = 65;\nwall_thickness = 2;\n\n// Main base module\nmodule sculpture_base() {\n    // Bottom platform with decorative edge\n    difference() {\n        // Main platform\n        cube([base_width, base_depth, 8], center=true);\n        \n        // Chamfered edges\n        translate([0, 0, 4])\n        cube([base_width-4, base_depth-4, 8], center=true);\n        \n        // Center cutout for weight reduction\n        translate([0, 0, -1])\n        cube([base_width-20, base_depth-20, 10], center=true);\n    }\n    \n    // Middle support column with decorative rings\n    translate([0, 0, 8])\n    union() {\n        // Main column\n        cylinder(h=45, r1=25, r2=20, center=false);\n        \n        // Decorative rings\n        for(i = [1:3]) {\n            translate([0, 0, i*12])\n            cylinder(h=3, r1=26, r2=26, center=false);\n        }\n        \n        // Vertical fluting details\n        for(angle = [0:30:330]) {\n            rotate([0, 0, angle])\n            translate([22, 0, 0])\n            cube([wall_thickness, 4, 45], center=true);\n        }\n    }\n    \n    // Top display platform\n    translate([0, 0, 53])\n    union() {\n        // Main top surface\n        cube([80, 80, 6], center=true);\n        \n        // Raised edge lip\n        difference() {\n            translate([0, 0, 3])\n            cube([82, 82, 4], center=true);\n            translate([0, 0, 3])\n            cube([76, 76, 4], center=true);\n        }\n        \n        // Corner reinforcements\n        for(x = [-1:2:1]) {\n            for(y = [-1:2:1]) {\n                translate([x*35, y*35, 0])\n                cube([6, 6, 6], center=true);\n            }\n        }\n    }\n    \n    // Decorative corner brackets\n    for(x = [-1:2:1]) {\n        for(y = [-1:2:1]) {\n            translate([x*50, y*50, 4])\n            rotate([0, 0, (x*y > 0) ? 45 : -45])\n            cube([wall_thickness, 15, 6], center=true);\n        }\n    }\n    \n    // Hidden cable management hole\n    translate([0, 0, 57])\n    cylinder(h=15, r1=8, r2=8, center=false);\n}\n\n// Generate the complete base\nsculpture_base();",
    "renders": true
  },
  {
    "decorative_art": "pedestal",
    "openscad_code": "// Pedestal.scad\n// A medium-complexity realistic pedestal for 3-D printing\n// Overall height 120 mm, base footprint 60 mm, top 40 mm\n// Wall thickness ≥2 mm, no overhangs >45°\n\n// Parameters\nbase_d = 60;          // base diameter\ntop_d = 40;           // platform diameter\nh_total = 120;        // total height\nwall = 2.4;           // wall thickness\npillar_h = 80;        // height of fluted pillar section\nfillet = 3;           // small chamfers / fillets\n\n// Render quality\n$fn = 48;\n\n// ---- Main model ----\nunion() {\n    // 1. Octagonal stepped base\n    translate([0,0,0])\n        stepped_base();\n\n    // 2. Fluted column\n    translate([0,0,10])       // sits on stepped base\n        fluted_column();\n\n    // 3. Circular top platform\n    translate([0,0,h_total-10])\n        top_platform();\n}\n\n// ---- Module definitions ----\n\nmodule stepped_base() {\n    // Two octagonal layers with rounded edges\n    difference() {\n        cylinder(d1 = base_d, d2 = base_d*0.9, h = 10, center = false);\n        cylinder(d1 = base_d-wall*2, d2 = base_d*0.9-wall*2, h = 10, center = false);\n    }\n    // Add subtle bottom bevel for printability\n    translate([0,0,-0.01])\n        cylinder(d1 = base_d+0.2, d2 = base_d, h = 0.5, center = false);\n}\n\nmodule fluted_column() {\n    // Central hollow pipe\n    difference() {\n        cylinder(d = base_d*0.9, h = pillar_h, center = false);\n        cylinder(d = base_d*0.9-wall*2, h = pillar_h+0.2, center = false);\n    }\n    // Decorative vertical flutes\n    for (i = [0:11]) {\n        rotate([0,0,i*30])\n            translate([base_d*0.9/2 - wall, -1.5, 0])\n                cube([wall, 3, pillar_h], center = false);\n    }\n}\n\nmodule top_platform() {\n    // Circular platform with slight lip\n    difference() {\n        cylinder(d = top_d, h = 10, center = false);\n        cylinder(d = top_d-wall*2, h = 10, center = false);\n    }\n    // Add a shallow recess for display items\n    translate([0,0,1])\n        cylinder(d = top_d-wall*3, h = 2, center = false);\n}",
    "renders": true
  },
  {
    "decorative_art": "bookend",
    "openscad_code": "// Realistic Bookend Furniture Item - Medium Complexity\n// A decorative bookend with wooden frame and metal accents\n\n// Overall dimensions\nbookend_width = 120;\nbookend_height = 150;\nbookend_depth = 100;\n\n// Wall thickness for 3D printing\nwall_thickness = 2;\n\n// Main base - wooden platform\nmodule base() {\n    difference() {\n        // Main base\n        cube([bookend_width, bookend_depth, 15]);\n        \n        // Lighten the base with internal cavity\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            cube([bookend_width-wall_thickness*2, bookend_depth-wall_thickness*2, 15-wall_thickness]);\n        \n        // Decorative grooves on top\n        for (x = [20:20:bookend_width-20]) {\n            translate([x, 5, 12])\n                cube([2, bookend_depth-10, 3]);\n        }\n    }\n}\n\n// Vertical back support - main structure\nmodule back_support() {\n    // Main back panel\n    difference() {\n        cube([bookend_width, 15, bookend_height]);\n        \n        // Internal hollow for material saving\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            cube([bookend_width-wall_thickness*2, 15-wall_thickness, bookend_height-wall_thickness]);\n    }\n    \n    // Reinforcement ribs\n    for (x = [20:25:bookend_width-20]) {\n        translate([x, 15, 0])\n            cube([2, 8, bookend_height/2]);\n    }\n}\n\n// Side decorative panel with cutout pattern\nmodule decorative_panel() {\n    // Main panel\n    difference() {\n        translate([0, 15, 0])\n            cube([15, bookend_depth-15, bookend_height]);\n        \n        // Internal hollow\n        translate([wall_thickness, 15+wall_thickness, wall_thickness])\n            cube([15-wall_thickness*2, bookend_depth-15-wall_thickness*2, bookend_height-wall_thickness*2]);\n        \n        // Decorative circles pattern\n        for (y = [25:25:bookend_depth-40]) {\n            for (z = [25:25:bookend_height-40]) {\n                translate([7.5, 15+y, z])\n                    rotate([90, 0, 0])\n                        cylinder(h=15, r=8, $fn=20);\n            }\n        }\n    }\n}\n\n// Metal accent strips\nmodule metal_accents() {\n    // Top metal strip\n    translate([-2, -2, bookend_height-3])\n        cube([bookend_width+4, bookend_depth+4, 3]);\n    \n    // Front metal strip\n    translate([-2, bookend_depth-3, 0])\n        cube([bookend_width+4, 3, bookend_height]);\n}\n\n// Support feet\nmodule feet() {\n    foot_size = 8;\n    foot_height = 5;\n    \n    // Four feet at corners\n    for (x = [10, bookend_width-10-8]) {\n        for (y = [10, bookend_depth-10-8]) {\n            translate([x, y, -foot_height])\n                cylinder(h=foot_height, r=foot_size/2, $fn=16);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main wooden structure\n    base();\n    \n    translate([0, 0, 15])\n        back_support();\n    \n    translate([bookend_width-15, 0, 15])\n        decorative_panel();\n    \n    // Metal accents in dark color\n    %metal_accents();\n    \n    // Support feet\n    feet();\n}",
    "renders": true
  },
  {
    "decorative_art": "paperweight",
    "openscad_code": "// Paperweight Furniture: Miniature Writing Desk with Drawers\n// Dimensions: 100mm x 60mm x 35mm (ideal for paperweight use)\n\n// Overall desk dimensions\ndesk_width = 100;\ndesk_depth = 60;\ndesk_height = 35;\n\n// Wall thickness for 3D printing\nwall_th = 2;\n\n// Desk top\nmodule desk_top() {\n    difference() {\n        // Main top surface\n        cube([desk_width, desk_depth, 4]);\n        \n        // Rounded front edge - create chamfer\n        translate([0, -0.1, 3.5])\n            cube([desk_width, desk_depth + 0.2, 1]);\n    }\n}\n\n// Desk legs (4 legs with stretchers)\nmodule desk_legs() {\n    leg_size = 6;\n    leg_height = desk_height - 4;\n    \n    // Generate 4 legs\n    for (x = [0, desk_width - leg_size]) {\n        for (y = [0, desk_depth - leg_size]) {\n            translate([x, y, 0]) {\n                difference() {\n                    cube([leg_size, leg_size, leg_height]);\n                    \n                    // Taper legs slightly\n                    translate([0.5, 0.5, 0])\n                        cube([leg_size - 1, leg_size - 1, leg_height - 0.5]);\n                }\n            }\n        }\n    }\n    \n    // Front and back stretchers\n    stretcher_height = 3;\n    for (z = [0, desk_depth - leg_size]) {\n        translate([leg_size, z, leg_height/2 - stretcher_height/2])\n            cube([desk_width - leg_size*2, wall_th, stretcher_height]);\n    }\n    \n    // Side stretchers\n    for (z = [0, desk_width - leg_size]) {\n        translate([z, leg_size, leg_height/2 - stretcher_height/2])\n            cube([wall_th, desk_depth - leg_size*2, stretcher_height]);\n    }\n}\n\n// Drawer bank with 3 drawers\nmodule drawers() {\n    drawer_bank_width = desk_width * 0.7;\n    drawer_bank_height = desk_height * 0.6;\n    drawer_front_height = (drawer_bank_height - 4*wall_th)/3;\n    \n    // Drawer frame\n    translate([(desk_width - drawer_bank_width)/2, \n               (desk_depth - 15)/2, \n               4]) {\n        difference() {\n            // Main drawer bank box\n            cube([drawer_bank_width, 15, drawer_bank_height]);\n            \n            // Hollow out for drawers\n            translate([wall_th, wall_th, wall_th])\n                cube([drawer_bank_width - wall_th*2, \n                      15 - wall_th*2, \n                      drawer_bank_height - wall_th*2]);\n        }\n        \n        // Three drawers\n        for (i = [0:2]) {\n            drawer_y = wall_th + i*(drawer_front_height + wall_th);\n            translate([wall_th + 1, wall_th/2, drawer_y + 0.5]) {\n                difference() {\n                    // Drawer front\n                    cube([drawer_bank_width - wall_th*2 - 2, \n                          15 - wall_th, \n                          drawer_front_height - 1]);\n                    \n                    // Drawer pull (simple circular)\n                    translate([(drawer_bank_width - wall_th*2 - 2)/2, \n                              -wall_th/2 - 0.5, \n                              drawer_front_height/2])\n                        cylinder(h=3, r=2, $fn=16);\n                }\n            }\n        }\n    }\n}\n\n// Decorative back panel with cutout pattern\nmodule back_panel() {\n    panel_width = desk_width * 0.8;\n    panel_height = desk_height - 8;\n    \n    translate([(desk_width - panel_width)/2, \n               desk_depth - 3, \n               4]) {\n        difference() {\n            // Main panel\n            cube([panel_width, 3, panel_height]);\n            \n            // Decorative cutouts - oval shapes\n            for (x = [panel_width*0.25, panel_width*0.5, panel_width*0.75]) {\n                translate([x, 1.5, panel_height*0.5])\n                    scale([1, 0.6, 1])\n                        sphere(r=5, $fn=32);\n            }\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main desk structure\n    desk_top();\n    desk_legs();\n    drawers();\n    back_panel();\n    \n    // Small decorative items on top\n    // Tiny inkwell\n    translate([desk_width*0.7, desk_depth*0.7, 4.5]) {\n        cylinder(h=3, r=4, $fn=16);\n        translate([0, 0, 3])\n            cylinder(h=1, r=2, $fn=16);\n    }\n    \n    // Miniature book stack\n    for (i = [0:2]) {\n        translate([desk_width*0.3, desk_depth*0.6 + i*2, 4.5]) {\n            cube([8, 3, 1.5]);\n        }\n    }\n}",
    "renders": true
  },
  {
    "decorative_art": "decoration",
    "openscad_code": "// Decorative Jewelry Box / Keepsake Chest (Medium Complexity, Realistic Style)\n// Overall size: 100 mm wide × 70 mm deep × 60 mm high\n// Wall thickness: 2 mm throughout for 3D-printability\n\n$fn = 50;  // Smooth curves for realism\n\nmodule chest_body() {\n    difference() {\n        // Outer shell\n        cube([100, 70, 60], center = true);\n        // Hollow interior\n        translate([0, 0, 2])\n            cube([96, 66, 58], center = true);\n    }\n}\n\nmodule feet() {\n    // Four turned-style feet\n    for (x = [-45, 45])\n        for (y = [-30, 30])\n            translate([x, y, -30.5])\n                cylinder(h = 5, d1 = 10, d2 = 6);\n}\n\nmodule lid() {\n    difference() {\n        // Lid shell\n        translate([0, 0, 30])\n            cube([100, 70, 12], center = true);\n        // Inner recess for nesting\n        translate([0, 0, 30])\n            cube([96, 66, 8], center = true);\n    }\n    // Gentle dome top for realism\n    translate([0, 0, 37])\n        scale([1, 0.7, 0.3])\n            sphere(d = 100);\n}\n\nmodule decorative_bands() {\n    // Front and back ornamental strips\n    for (z = [-20, 20]) {\n        translate([0, 35, z])\n            cube([90, 2, 4], center = true);\n        translate([0, -35, z])\n            cube([90, 2, 4], center = true);\n    }\n    // Side ornamental strips\n    for (z = [-20, 20]) {\n        translate([50, 0, z])\n            cube([2, 66, 4], center = true);\n        translate([-50, 0, z])\n            cube([2, 66, 4], center = true);\n    }\n}\n\nmodule corner_reinforcements() {\n    // Decorative corner braces\n    for (x = [-48, 48])\n        for (y = [-33, 33])\n            translate([x, y, 0])\n                cube([4, 4, 60], center = true);\n}\n\nmodule hinge_detail() {\n    // Two rear hinges\n    for (x = [-30, 30])\n        translate([x, 34, 36])\n            rotate([90, 0, 0])\n                cylinder(h = 8, d = 4);\n}\n\nmodule front_latch() {\n    translate([0, 35, 36])\n        rotate([90, 0, 0])\n            cylinder(h = 8, d1 = 8, d2 = 4);\n    // Latch plate on body\n    translate([0, 35, 28])\n        cube([12, 2, 6], center = true);\n}\n\nunion() {\n    chest_body();\n    feet();\n    lid();\n    decorative_bands();\n    corner_reinforcements();\n    hinge_detail();\n    front_latch();\n}",
    "renders": true
  },
  {
    "decorative_art": "centerpiece",
    "openscad_code": "// Centerpiece Furniture: Decorative Plant Stand with Lattice Sides\n// Dimensions: 120mm wide x 120mm deep x 80mm tall\n\n// Overall dimensions\nstand_width = 120;\nstand_depth = 120;\nstand_height = 80;\nwall_thickness = 2;\n\n// Base thickness\nbase_thickness = 8;\n\n// Top frame dimensions\ntop_frame_width = 4;\n\n// Lattice bar dimensions\nlattice_width = 2;\nlattice_height = stand_height - base_thickness - top_frame_width;\nlattice_spacing = 12;\n\n// Top inner diameter for plant pot\ntop_inner_diameter = 90;\n\n// Module for creating a single lattice bar\nmodule lattice_bar(length, width, height) {\n    cube([length, width, height], center = true);\n}\n\n// Module for creating side lattice panel\nmodule lattice_panel(width, height, bar_width, spacing) {\n    num_bars = floor(width / spacing);\n    union() {\n        for (i = [0 : num_bars]) {\n            translate([i * spacing - width/2, 0, 0])\n                lattice_bar(bar_width, bar_width, height);\n        }\n        for (i = [0 : num_bars]) {\n            translate([0, i * spacing - width/2, 0])\n                rotate([0, 0, 90])\n                    lattice_bar(bar_width, bar_width, height);\n        }\n    }\n}\n\n// Create the base\nmodule base() {\n    // Main base platform\n    difference() {\n        cube([stand_width, stand_depth, base_thickness], center = true);\n        // Optional: Add decorative bevel on bottom edges\n        translate([0, 0, -base_thickness/2 + 1])\n            cube([stand_width - 4, stand_depth - 4, 2], center = true);\n    }\n}\n\n// Create the top frame\nmodule top_frame() {\n    difference() {\n        // Outer frame\n        cube([stand_width, stand_depth, top_frame_width], center = true);\n        // Hollow center for plant pot\n        cylinder(h = top_frame_width + 1, r = top_inner_diameter/2, center = true);\n        // Corner cutouts for aesthetics\n        for (x = [-1, 1]) {\n            for (y = [-1, 1]) {\n                translate([x * (stand_width/2 - 8), y * (stand_depth/2 - 8), 0])\n                    cube([10, 10, top_frame_width + 2], center = true);\n            }\n        }\n    }\n}\n\n// Create legs with lattice sides\nmodule legs() {\n    leg_offset = stand_width/2 - wall_thickness;\n    lattice_panel_size = stand_width - 2 * wall_thickness - 2 * lattice_width;\n    \n    // Four sides with lattice\n    for (side = [0 : 3]) {\n        rotate([0, 0, side * 90])\n        translate([0, stand_depth/2 - wall_thickness/2, \n                   base_thickness/2 + lattice_height/2])\n            cube([stand_width - 2 * wall_thickness, wall_thickness, lattice_height], center = true);\n        \n        rotate([0, 0, side * 90])\n        translate([0, stand_depth/2 - wall_thickness - lattice_width/2, \n                   base_thickness/2 + lattice_height/2])\n            lattice_panel(lattice_panel_size, lattice_height, lattice_width, lattice_spacing);\n    }\n}\n\n// Assembly\ntranslate([0, 0, stand_height/2]) {\n    union() {\n        // Base\n        translate([0, 0, -stand_height/2 + base_thickness/2])\n            base();\n        \n        // Legs with lattice\n        legs();\n        \n        // Top frame\n        translate([0, 0, stand_height/2 - top_frame_width/2])\n            top_frame();\n    }\n}",
    "renders": true
  },
  {
    "decorative_art": "flower_arrangement",
    "openscad_code": "// Flower Arrangement Furniture - Decorative Plant Stand with Vase and Flowers\n// Realistic style, medium complexity, 3D printable\n\n$fn = 50;  // Smooth curves for 3D printing\n\n// Main dimensions\nbase_width = 80;\nbase_depth = 80;\nbase_height = 15;\nleg_height = 120;\nleg_size = 12;\ntop_width = 70;\ntop_depth = 70;\ntop_thickness = 4;\n\n// Vase dimensions\nvase_base = 45;\nvase_top = 35;\nvase_height = 35;\nvase_wall = 2;\n\n// Flower dimensions\nstem_height = 25;\nstem_diameter = 2;\nflower_diameter = 12;\nflower_height = 8;\n\nmodule flower_stand() {\n    // Base with decorative edge\n    difference() {\n        union() {\n            cube([base_width, base_depth, base_height], center=true);\n            // Decorative bevel on base\n            translate([0, 0, base_height/2 - 2])\n                cylinder(h=4, r1=base_width/2 - 2, r2=base_width/2 - 6, center=true);\n        }\n        // Hollow bottom for material saving\n        translate([0, 0, -base_height/2 + 2])\n            cube([base_width - 8, base_depth - 8, base_height - 2], center=true);\n    }\n    \n    // Four decorative legs with fluting\n    for(i = [0:3]) {\n        angle = i * 90;\n        translate([cos(angle) * (base_width/2 - leg_size/2 - 5), \n                  sin(angle) * (base_depth/2 - leg_size/2 - 5), 0])\n            rotate([0, 0, angle])\n            leg();\n    }\n    \n    // Top platform\n    translate([0, 0, leg_height + base_height/2])\n        difference() {\n            cube([top_width, top_depth, top_thickness], center=true);\n            // Central hole for vase\n            translate([0, 0, -top_thickness/2])\n                cylinder(h=top_thickness + 1, r=vase_base/2 + 1, center=true);\n        }\n}\n\nmodule leg() {\n    // Tapered leg with decorative rings\n    union() {\n        // Main leg\n        translate([0, 0, leg_height/2 + base_height/2])\n            cylinder(h=leg_height, r1=leg_size/2, r2=leg_size/2 - 2, center=true);\n        \n        // Decorative rings\n        for(h = [0.2, 0.4, 0.6, 0.8]) {\n            translate([0, 0, base_height/2 + leg_height * h])\n                cylinder(h=3, r=leg_size/2 + 1, center=true);\n        }\n    }\n}\n\nmodule vase() {\n    // Decorative vase with curved profile\n    difference() {\n        union() {\n            // Main vase body\n            translate([0, 0, vase_height/2])\n                cylinder(h=vase_height, r1=vase_base/2, r2=vase_top/2, center=true);\n            // Decorative rim\n            translate([0, 0, vase_height - 1])\n                cylinder(h=3, r1=vase_top/2 + 2, r2=vase_top/2 + 1, center=true);\n        }\n        // Hollow interior\n        translate([0, 0, -1])\n            cylinder(h=vase_height + 2, r=vase_base/2 - vase_wall, center=true);\n    }\n}\n\nmodule flower(stem_h, angle) {\n    // Individual flower with stem and petals\n    translate([0, 0, stem_h])\n        rotate([angle, 0, 0])\n        union() {\n            // Stem\n            translate([0, 0, stem_h/2])\n                cylinder(h=stem_h, d=stem_diameter, center=true);\n            \n            // Flower head\n            translate([0, 0, stem_h])\n                union() {\n                    // Petals\n                    for(i = [0:7]) {\n                        rotate([0, 0, i * 45])\n                            translate([flower_diameter/3, 0, 0])\n                                scale([1, 0.7, 0.3])\n                                sphere(d=flower_diameter);\n                    }\n                    // Center\n                    sphere(d=flower_diameter * 0.6);\n                }\n        }\n}\n\n// Assembly\nflower_stand();\n\n// Position vase on top\ntranslate([0, 0, base_height/2 + leg_height + top_thickness])\n    vase();\n\n// Add flowers in vase\nfor(i = [0:4]) {\n    angle = i * 72;\n    r = vase_top/2 * 0.7;\n    translate([cos(angle) * r, sin(angle) * r, \n              base_height/2 + leg_height + top_thickness + vase_height])\n        rotate([0, 0, angle])\n        flower(stem_height + rand(-3, 3), rand(-10, 10));\n}\n\n// Central tall flower\ntranslate([0, 0, base_height/2 + leg_height + top_thickness + vase_height])\n    flower(stem_height + 8, 0);",
    "renders": true
  },
  {
    "decorative_art": "ceramic_vase",
    "openscad_code": "$fa = 1;\n$fs = 0.4;\n\n// Vase parameters\nvase_height = 120;\nbase_d = 60;\nmid_d = 80;\ntop_d = 40;\nwall_thick = 2;\n\n// Base module\nmodule vase_base() {\n    difference() {\n        cylinder(h=15, d=base_d, $fn=100);\n        translate([0,0,-1])\n            cylinder(h=17, d=base_d-2*wall_thick, $fn=100);\n    }\n}\n\n// Decorative ring pattern\nmodule ring_pattern(height, diameter, count) {\n    step = height / count;\n    for (i=[0:count-1]) {\n        translate([0,0,i*step+step/2])\n            difference() {\n                cylinder(h=step*0.6, d=diameter, $fn=100);\n                translate([0,0,-0.1])\n                    cylinder(h=step*0.8, d=diameter-2*wall_thick, $fn=100);\n            }\n    }\n}\n\n// Curved body using stacked cylinders\nmodule vase_body() {\n    segments = 10;\n    for (i=[0:segments-1]) {\n        h = (vase_height-30)/segments;\n        z = 15 + i*h;\n        t = i/(segments-1);\n        d = base_d + (mid_d-base_d)*sin(t*180);\n        difference() {\n            cylinder(h=h+0.1, d=d, $fn=100);\n            translate([0,0,z-0.1])\n                cylinder(h=h+0.3, d=d-2*wall_thick, $fn=100);\n        }\n    }\n}\n\n// Neck transition\nmodule vase_neck() {\n    segments = 8;\n    for (i=[0:segments-1]) {\n        h = 15/segments;\n        z = vase_height-15 + i*h;\n        t = i/(segments-1);\n        d = mid_d - (mid_d-top_d)*t;\n        difference() {\n            cylinder(h=h+0.1, d=d, $fn=100);\n            translate([0,0,z-0.1])\n                cylinder(h=h+0.3, d=d-2*wall_thick, $fn=100);\n        }\n    }\n}\n\n// Rim detail\nmodule vase_rim() {\n    difference() {\n        cylinder(h=5, d=top_d+6, $fn=100);\n        translate([0,0,-1])\n            cylinder(h=7, d=top_d, $fn=100);\n    }\n}\n\n// Decorative handles\nmodule handles() {\n    handle_width = 20;\n    handle_thick = 4;\n    \n    for (side=[-1,1]) {\n        translate([side*(mid_d/2-5), 0, vase_height/2]) {\n            rotate([0,90,0])\n                difference() {\n                    cylinder(h=handle_width, d=handle_thick, $fn=20);\n                    translate([0,side*handle_width/2,0])\n                        rotate([90,0,0])\n                            cube([handle_thick+1, handle_thick+1, handle_width], center=true);\n                }\n        }\n    }\n}\n\n// Surface texture pattern\nmodule surface_texture() {\n    pattern_height = 1;\n    pattern_depth = 0.5;\n    bands = 3;\n    \n    for (band=[0:bands-1]) {\n        z = 20 + band*(vase_height-40)/bands;\n        for (angle=[0:30:359]) {\n            rotate([0,0,angle])\n                translate([base_d/2-wall_thick, 0, z])\n                    cube([pattern_depth, 2, pattern_height], center=true);\n        }\n    }\n}\n\n// Main assembly\nunion() {\n    vase_base();\n    vase_body();\n    vase_neck();\n    vase_rim();\n    handles();\n    surface_texture();\n}",
    "renders": true
  },
  {
    "decorative_art": "glass_vase",
    "openscad_code": "// Realistic Glass Vase – OpenSCAD\n// Height ≈ 120 mm, Ø 75 mm, wall thickness 2 mm\n\n$fn = 50; // smooth curves\n\n// overall scale factor for easy resizing\nscale_factor = 1;\n\n// main body shell\nmodule vase_shell(h = 120, r_base = 35, r_mid = 40, r_top = 30){\n    difference(){\n        // outer profile (rotated spline)\n        rotate_extrude(){\n            offset(delta = 0)\n            polygon(points=[\n                [0,0],                 // base center\n                [r_base,0],            // base corner\n                [r_mid, h*0.40],       // widest point\n                [r_top, h*0.85],       // neck start\n                [r_top*0.75, h]        // lip\n            ]);\n        }\n        // inner hollow (offset inward 2 mm)\n        rotate_extrude(){\n            offset(delta = -2)\n            polygon(points=[\n                [0,0],\n                [r_base-2,0],\n                [r_mid-2, h*0.40],\n                [r_top-2, h*0.85],\n                [r_top*0.75-2, h-2]\n            ]);\n        }\n    }\n}\n\n// decorative horizontal ridges spaced every 10 mm\nmodule ridges(h = 120, r_base = 35, r_mid = 40, r_top = 30){\n    for(i=[1:10:h-5]){\n        // radius at height i\n        r = (i < h*0.40) ? r_base + (r_mid - r_base)*(i/(h*0.40)) :\n             (i < h*0.85) ? r_mid + (r_top - r_mid)*((i - h*0.40)/(h*0.45)) :\n             r_top + (r_top*0.75 - r_top)*((i - h*0.85)/(h*0.15));\n        translate([0,0,i])\n            rotate_extrude()\n                polygon(points=[\n                    [r-0.5,0], [r+0.5,0], [r+0.5,2], [r-0.5,2]\n                ]);\n    }\n}\n\n// stable circular base plate (prints flat)\nmodule base_plate(){\n    difference(){\n        cylinder(h=4, r1=38, r2=38, center=false);\n        cylinder(h=4.2, r1=36, r2=36, center=false);\n    }\n}\n\n// simple petal pattern engraved on neck\nmodule petal_engrave(){\n    for(a=[0:30:359]){\n        rotate([0,0,a])\n            translate([r_top-1,0,102])\n                rotate([90,0,0])\n                    cylinder(h=15, r1=2, r2=0.5, $fn=6);\n    }\n}\n\n// assembly\nscale([scale_factor,scale_factor,scale_factor]){\n    union(){\n        base_plate();\n        vase_shell();\n        ridges();\n        petal_engrave();\n    }\n}",
    "renders": true
  },
  {
    "decorative_art": "bowl",
    "openscad_code": "// Realistic medium-complexity decorative bowl furniture item\n// Wall thickness: 2 mm, printable without supports\n\n$fn = 64;          // Smooth curves\nwall = 2;          // 2 mm wall thickness\nbase_d = 120;      // Base outer diameter (mm)\ntop_d = 160;       // Top outer diameter (mm)\nheight = 80;       // Overall height (mm)\nfoot_h = 8;        // Foot height\nbowl_h = height - foot_h;\n\nmodule bowl_shell() {\n    difference() {\n        // Outer shell\n        cylinder(h = bowl_h, d1 = base_d, d2 = top_d, center = false);\n        \n        // Hollow inside\n        translate([0, 0, wall])\n        cylinder(h = bowl_h - wall, d1 = base_d - 2*wall, d2 = top_d - 2*wall, center = false);\n    }\n}\n\nmodule decorative_rim() {\n    // Top rim with subtle bead\n    translate([0, 0, bowl_h - wall])\n    difference() {\n        cylinder(h = wall*2, d = top_d + 4, center = false);\n        cylinder(h = wall*2 + 0.1, d = top_d, center = false);\n    }\n}\n\nmodule foot_base() {\n    // Stable circular foot with slight taper\n    cylinder(h = foot_h, d1 = base_d + 8, d2 = base_d, center = false);\n}\n\nmodule reinforcement_ring() {\n    // Hidden internal ring for strength\n    translate([0, 0, foot_h + wall])\n    difference() {\n        cylinder(h = 6, d = base_d - 4, center = false);\n        cylinder(h = 6.1, d = base_d - 4 - 2*wall, center = false);\n    }\n}\n\nmodule decorative_pattern() {\n    // Subtle vertical fluting around upper rim\n    for(i = [0:11]) {\n        rotate([0, 0, i*30])\n        translate([top_d/2 - 8, -1.5, bowl_h - 15])\n        cube([4, 3, 15]);\n    }\n}\n\nmodule bowl_assembly() {\n    union() {\n        foot_base();\n        translate([0, 0, foot_h])\n        bowl_shell();\n        decorative_rim();\n        reinforcement_ring();\n        translate([0, 0, bowl_h - 15])\n        decorative_pattern();\n    }\n}\n\n// Main model\nbowl_assembly();",
    "renders": true
  },
  {
    "decorative_art": "decorative_bowl",
    "openscad_code": "// Decorative Bowl - Medium Complexity\n// Realistic style with furniture characteristics\n\n$fn = 50;  // Smooth curves\n\n// Main bowl body\nmodule bowl_body() {\n    difference() {\n        // Outer shell\n        cylinder(h = 40, r1 = 60, r2 = 45, center = false);\n        \n        // Inner cavity\n        translate([0, 0, 2])\n        cylinder(h = 38, r1 = 58, r2 = 43, center = false);\n    }\n}\n\n// Decorative base ring\nmodule base_ring() {\n    difference() {\n        // Outer ring\n        cylinder(h = 8, r1 = 65, r2 = 65, center = false);\n        \n        // Inner cutout\n        translate([0, 0, -0.1])\n        cylinder(h = 8.2, r1 = 60, r2 = 60, center = false);\n    }\n}\n\n// Support legs\nmodule legs() {\n    for(i = [0:3]) {\n        rotate([0, 0, i * 90])\n        translate([50, 0, 0])\n        rotate([0, 15, 0])\n        cube([4, 4, 15], center = true);\n    }\n}\n\n// Decorative rim pattern\nmodule rim_pattern() {\n    for(i = [0:35]) {\n        rotate([0, 0, i * 10])\n        translate([55, 0, 40])\n        cube([2, 3, 2], center = true);\n    }\n}\n\n// Inner texture rings\nmodule texture_rings() {\n    for(i = [1:8]) {\n        translate([0, 0, i * 4])\n        difference() {\n            cylinder(h = 0.5, r1 = 58 - (i * 1.5), r2 = 57 - (i * 1.5), center = false);\n            cylinder(h = 0.5, r1 = 55 - (i * 1.5), r2 = 54 - (i * 1.5), center = false);\n        }\n    }\n}\n\n// Side decorative panels\nmodule side_panels() {\n    for(i = [0:7]) {\n        rotate([0, 0, i * 45])\n        translate([40, 0, 20])\n        rotate([0, 90, 0])\n        difference() {\n            cylinder(h = 15, r1 = 3, r2 = 3, center = true);\n            translate([0, 0, -8])\n            cube([6, 6, 16], center = true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Base structure\n    translate([0, 0, 0])\n    base_ring();\n    \n    // Legs\n    translate([0, 0, 4])\n    legs();\n    \n    // Main bowl\n    translate([0, 0, 15])\n    bowl_body();\n    \n    // Rim decoration\n    translate([0, 0, 0])\n    rim_pattern();\n    \n    // Inner texture\n    translate([0, 0, 15])\n    texture_rings();\n    \n    // Side decorations\n    translate([0, 0, 20])\n    side_panels();\n}",
    "renders": true
  },
  {
    "decorative_art": "platter",
    "openscad_code": "// Realistic Platter Furniture Item - Medium Complexity\n// Decorative serving platter with stand and ornate details\n\n// Overall dimensions\nplatter_diameter = 120;\nplatter_height = 8;\nstand_height = 25;\nbase_diameter = 60;\nwall_thickness = 2;\n\n// Main platter body\nmodule platter_body() {\n    difference() {\n        // Outer platter shape\n        cylinder(h=platter_height, d=platter_diameter, $fn=100);\n        \n        // Hollow center\n        translate([0, 0, -0.1])\n            cylinder(h=platter_height+0.2, d=platter_diameter-wall_thickness*2, $fn=100);\n        \n        // Inner recess for food\n        translate([0, 0, wall_thickness])\n            cylinder(h=platter_height-wall_thickness, d=platter_diameter-wall_thickness*4, $fn=100);\n    }\n}\n\n// Decorative rim pattern\nmodule rim_pattern() {\n    for(i=[0:15:359]) {\n        rotate([0, 0, i])\n            translate([platter_diameter/2-3, 0, platter_height/2])\n                scale([1.5, 0.8, 1])\n                    sphere(d=2, $fn=20);\n    }\n}\n\n// Central decorative medallion\nmodule medallion() {\n    translate([0, 0, wall_thickness+0.1]) {\n        // Base disc\n        cylinder(h=1.5, d=20, $fn=50);\n        \n        // Raised center\n        translate([0, 0, 1.5])\n            cylinder(h=2, d=12, $fn=50);\n        \n        // Top sphere\n        translate([0, 0, 3.5])\n            sphere(d=6, $fn=25);\n    }\n}\n\n// Support stand with three legs\nmodule stand() {\n    // Central column\n    cylinder(h=stand_height-wall_thickness, d=base_diameter/3, $fn=50);\n    \n    // Three decorative legs\n    for(i=[0:120:240]) {\n        rotate([0, 0, i])\n            translate([base_diameter/4, 0, 0])\n                rotate([90, 0, 0])\n                    cylinder(h=stand_height-wall_thickness, d=wall_thickness*2, $fn=20);\n    }\n}\n\n// Base plate\nmodule base() {\n    difference() {\n        cylinder(h=wall_thickness, d=base_diameter, $fn=100);\n        \n        // Decorative cutouts in base\n        for(i=[0:45:315]) {\n            rotate([0, 0, i])\n                translate([base_diameter/3, 0, -0.1])\n                    cube([base_diameter/6, wall_thickness*1.5, wall_thickness+0.2], center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Platter top\n    platter_body();\n    \n    // Decorative rim\n    rim_pattern();\n    \n    // Central decoration\n    medallion();\n    \n    // Support structure\n    translate([0, 0, -stand_height])\n        union() {\n            stand();\n            translate([0, 0, -wall_thickness])\n                base();\n        }\n}",
    "renders": true
  },
  {
    "decorative_art": "serving_tray",
    "openscad_code": "// Realistic Serving Tray - Medium Complexity\n// Includes decorative edge profile, handles, and bottom ribs for strength\n\n// Overall dimensions\nlength = 140;\nwidth = 90;\nheight = 20;\nwall_thickness = 2;\nhandle_length = 25;\n\n// Decorative edge profile\nmodule edge_profile() {\n    difference() {\n        // Main tray body\n        cube([length, width, height], center=true);\n        \n        // Hollow out interior\n        translate([0, 0, wall_thickness])\n        cube([length - 2*wall_thickness, width - 2*wall_thickness, height], center=true);\n    }\n    \n    // Add decorative top edge chamfer\n    difference() {\n        translate([0, 0, height/2 - 1])\n        cube([length, width, 2], center=true);\n        \n        translate([0, 0, height/2])\n        cube([length - 2*wall_thickness, width - 2*wall_thickness, 2], center=true);\n    }\n}\n\n// Handle module with ergonomic grip\nmodule handle() {\n    // Handle base\n    translate([length/2 - 5, 0, 0])\n    rotate([0, 90, 0])\n    cylinder(h=handle_length, r1=6, r2=4, center=true);\n    \n    // Handle grip detail\n    translate([length/2 + handle_length/2 - 5, 0, 0])\n    rotate([0, 90, 0])\n    cylinder(h=10, r1=3, r2=3, center=true);\n    \n    // Decorative end cap\n    translate([length/2 + handle_length - 5, 0, 0])\n    sphere(r=4);\n}\n\n// Bottom reinforcement ribs\nmodule ribs() {\n    for(i = [-width/3, 0, width/3]) {\n        translate([0, i, -height/2 + wall_thickness/2])\n        cube([length - 20, wall_thickness, 3], center=true);\n    }\n}\n\n// Corner radius details\nmodule corner_details() {\n    for(x = [-length/2 + 5, length/2 - 5]) {\n        for(y = [-width/2 + 5, width/2 - 5]) {\n            translate([x, y, height/2 - 5])\n            cylinder(h=10, r=3, center=true);\n        }\n    }\n}\n\n// Assembly\nunion() {\n    // Main tray\n    edge_profile();\n    \n    // Handles on both ends\n    handle();\n    mirror([1, 0, 0]) handle();\n    \n    // Bottom ribs for strength\n    ribs();\n    \n    // Decorative corner posts\n    corner_details();\n}",
    "renders": true
  },
  {
    "decorative_art": "tray",
    "openscad_code": "// Realistic Medium-Complexity Decorative Serving Tray\n// Overall dimensions: 220mm x 140mm x 25mm (fits on most printers diagonally)\n\n$fn = 32;  // Smooth curves\n\n// Main tray body\nmodule tray_body() {\n    difference() {\n        // Outer tray shell\n        cube([220, 140, 25], center=true);\n        \n        // Hollow out interior with 2mm walls\n        translate([0, 0, 2])\n            cube([216, 136, 25], center=true);\n    }\n}\n\n// Rounded corners using cylinders\nmodule rounded_corners() {\n    // Corner radius 10mm\n    corner_radius = 10;\n    \n    // Bottom corner rounding\n    for (x = [-110, 110])\n        for (y = [-70, 70]) {\n            translate([x, y, 0])\n                cylinder(r=corner_radius, h=2, center=true);\n            \n            // Top corner rounding\n            translate([x, y, 25-2])\n                cylinder(r=corner_radius, h=2, center=true);\n        }\n}\n\n// Side handles\nmodule handles() {\n    module handle() {\n        // Handle grip\n        translate([0, 0, 12.5])\n            rotate([90, 0, 0])\n                difference() {\n                    // Main handle body\n                    translate([0, 0, 15])\n                        cylinder(h=30, r=8);\n                    \n                    // Grip hole\n                    cylinder(h=30, r=5);\n                    \n                    // Finger grooves\n                    for (i = [-2:2])\n                        translate([0, i*5, 0])\n                            cube([2, 3, 30], center=true);\n                }\n        \n        // Mounting bracket\n        translate([0, 0, 12.5])\n            cube([16, 4, 25], center=true);\n    }\n    \n    // Left handle\n    translate([-110-15, 0, 0])\n        handle();\n    \n    // Right handle\n    translate([110+15, 0, 0])\n        mirror([1, 0, 0])\n            handle();\n}\n\n// Decorative bottom pattern\nmodule bottom_pattern() {\n    pattern_spacing = 20;\n    \n    // Diamond pattern grid\n    for (x = [-100:pattern_spacing:100])\n        for (y = [-60:pattern_spacing:60]) {\n            translate([x, y, 0.5])\n                rotate([0, 0, 45])\n                    cube([8, 8, 1], center=true);\n        }\n}\n\n// Raised rim detail\nmodule rim_detail() {\n    // Top rim lip\n    translate([0, 0, 25-1])\n        difference() {\n            cube([220, 140, 2], center=true);\n            cube([216, 136, 2], center=true);\n        }\n    \n    // Interior rim fillet\n    translate([0, 0, 23])\n        difference() {\n            cube([216, 136, 2], center=true);\n            cube([212, 132, 2], center=true);\n        }\n}\n\n// Assembly\nunion() {\n    tray_body();\n    rounded_corners();\n    handles();\n    \n    // Add bottom pattern\n    difference() {\n        translate([0, 0, -12.5])\n            cube([220, 140, 1], center=true);\n        bottom_pattern();\n    }\n    \n    rim_detail();\n}",
    "renders": true
  },
  {
    "decorative_art": "decorative_box",
    "openscad_code": "// Decorative Box - Realistic Style, Medium Complexity\n// Overall dimensions: 80mm x 60mm x 45mm\n\n// Wall thickness\nwall = 2;\n\n// Main box body\nmodule box_body() {\n    difference() {\n        // Outer shell\n        cube([80, 60, 45]);\n        \n        // Inner cavity\n        translate([wall, wall, wall])\n            cube([80-2*wall, 60-2*wall, 45-wall]);\n    }\n}\n\n// Decorative top rim with rounded edges\nmodule top_rim() {\n    translate([0, 0, 45-wall])\n        difference() {\n            // Top frame\n            cube([80, 60, wall]);\n            \n            // Inner cutout\n            translate([wall, wall, 0])\n                cube([80-2*wall, 60-2*wall, wall]);\n            \n            // Rounded corners by subtracting spheres\n            for (x = [wall, 80-wall]) {\n                for (y = [wall, 60-wall]) {\n                    translate([x, y, wall/2])\n                        sphere(r=wall, $fn=8);\n                }\n            }\n        }\n}\n\n// Ornate corner posts\nmodule corner_post(x, y) {\n    translate([x, y, 0]) {\n        // Main post body\n        cylinder(h=45, r=4, $fn=12);\n        \n        // Decorative rings\n        for (h = [10, 20, 30, 40]) {\n            translate([0, 0, h])\n                cylinder(h=2, r=5, $fn=12);\n        }\n    }\n}\n\n// Side panel decorations\nmodule side_decoration() {\n    // Left side pattern\n    for (i = [1:3]) {\n        translate([wall/2, 15*i, 15])\n            rotate([0, 90, 0])\n                cylinder(h=wall, r=3, $fn=6);\n    }\n    \n    // Right side pattern\n    for (i = [1:3]) {\n        translate([80-wall/2, 15*i, 15])\n            rotate([0, 90, 0])\n                cylinder(h=wall, r=3, $fn=6);\n    }\n    \n    // Front pattern\n    for (i = [1:4]) {\n        translate([i*16, wall/2, 15])\n            rotate([90, 0, 0])\n                cylinder(h=wall, r=3, $fn=6);\n    }\n    \n    // Back pattern\n    for (i = [1:4]) {\n        translate([i*16, 60-wall/2, 15])\n            rotate([90, 0, 0])\n                cylinder(h=wall, r=3, $fn=6);\n    }\n}\n\n// Hinge detail on back\nmodule hinge() {\n    translate([20, 60, 40]) {\n        cylinder(h=10, r=2, $fn=8);\n    }\n    translate([60, 60, 40]) {\n        cylinder(h=10, r=2, $fn=8);\n    }\n}\n\n// Assembly\nunion() {\n    box_body();\n    top_rim();\n    \n    // Corner posts\n    corner_post(4, 4);\n    corner_post(76, 4);\n    corner_post(4, 56);\n    corner_post(76, 56);\n    \n    side_decoration();\n    hinge();\n}",
    "renders": true
  },
  {
    "decorative_art": "jewelry_box",
    "openscad_code": "// Realistic Jewelry Box - Medium Complexity\n// External dimensions: 80mm x 60mm x 45mm\n\n$fn = 50;\n\n// Main parameters\nbox_width = 80;\nbox_depth = 60;\nbox_height = 45;\nwall_thickness = 2;\nlid_clearance = 0.2;\n\n// Base with feet\nmodule box_base() {\n    difference() {\n        // Main base block\n        cube([box_width, box_depth, box_height/4]);\n        \n        // Hollow out interior\n        translate([wall_thickness, wall_thickness, wall_thickness])\n            cube([box_width-2*wall_thickness, box_depth-2*wall_thickness, box_height/4]);\n        \n        // Decorative base molding\n        for(x = [wall_thickness:10:box_width-wall_thickness]) {\n            translate([x, wall_thickness, box_height/4-3])\n                cube([1, box_depth-2*wall_thickness, 3]);\n        }\n    }\n    \n    // Four feet\n    for(x = [5, box_width-5]) {\n        for(y = [5, box_depth-5]) {\n            translate([x-2, y-2, -3])\n                cylinder(h=3, r1=3, r2=2);\n        }\n    }\n}\n\n// Main body with compartments\nmodule box_body() {\n    difference() {\n        // Outer shell\n        translate([0, 0, box_height/4])\n            cube([box_width, box_depth, box_height*3/4]);\n        \n        // Interior cavity\n        translate([wall_thickness, wall_thickness, box_height/4+wall_thickness])\n            cube([box_width-2*wall_thickness, box_depth-2*wall_thickness, box_height*3/4-2*wall_thickness]);\n        \n        // Ring holder slots\n        for(i = [0:3]) {\n            translate([box_width/2-10+i*5, box_depth*2/3, box_height/4+wall_thickness])\n                cube([1, box_depth/3-2*wall_thickness, 10]);\n        }\n    }\n    \n    // Front decorative panel\n    translate([wall_thickness, wall_thickness, box_height/4+wall_thickness])\n        cube([box_width-2*wall_thickness, 3, box_height*3/4-2*wall_thickness]);\n}\n\n// Hinged lid with mirror\nmodule box_lid() {\n    // Lid frame\n    difference() {\n        translate([0, 0, box_height-lid_clearance])\n            cube([box_width, box_depth, box_height/4]);\n        \n        // Hollow lid\n        translate([wall_thickness, wall_thickness, box_height-lid_clearance+wall_thickness])\n            cube([box_width-2*wall_thickness, box_depth-2*wall_thickness, box_height/4-2*wall_thickness]);\n        \n        // Mirror recess\n        translate([wall_thickness*2, wall_thickness*2, box_height-lid_clearance+wall_thickness])\n            cube([box_width-4*wall_thickness, box_depth-4*wall_thickness, 1]);\n    }\n    \n    // Mirror insert\n    translate([wall_thickness*2+0.5, wall_thickness*2+0.5, box_height-lid_clearance+wall_thickness+0.5])\n        cube([box_width-5*wall_thickness, box_depth-5*wall_thickness, 0.5]);\n    \n    // Hinge pins\n    for(y = [box_depth/3, box_depth*2/3]) {\n        translate([box_width/2-2, y, box_height-lid_clearance])\n            cylinder(h=4, r=1.5);\n    }\n}\n\n// Decorative elements\nmodule decorative_details() {\n    // Side panels pattern\n    for(i = [0:2]) {\n        for(j = [0:1]) {\n            translate([wall_thickness+5+i*20, wall_thickness+5+j*20, box_height/4+wall_thickness+2])\n                cube([3, 3, 2]);\n        }\n    }\n    \n    // Front ornament\n    translate([box_width/2, wall_thickness/2, box_height/2])\n        rotate([90, 0, 0])\n        cylinder(h=wall_thickness, r=3);\n    \n    // Top handle\n    translate([box_width/2, box_depth/2, box_height+box_height/4-lid_clearance-3])\n        difference() {\n            cylinder(h=5, r1=8, r2=3);\n            translate([0, 0, 2])\n                cylinder(h=5, r=2);\n        }\n}\n\n// Assembly\nunion() {\n    box_base();\n    box_body();\n    box_lid();\n    decorative_details();\n}",
    "renders": true
  },
  {
    "decorative_art": "keepsake_box",
    "openscad_code": "// Keepsake Box – OpenSCAD\n// Overall size: 80 x 50 x 45 mm  (L x W x H)\n// Wall thickness: 2 mm\n// Hinged lid with lip, decorative feet, corner braces, and front clasp\n\n// Configuration\nbox_l = 80;\nbox_w = 50;\nbox_h = 30;\nlid_h  = 12;\nwall_t = 2;\nfoot_h = 5;\n\n// Main body shell\nmodule body_shell() {\n    difference() {\n        // outer block\n        cube([box_l, box_w, box_h]);\n        // hollow cavity\n        translate([wall_t, wall_t, wall_t])\n            cube([box_l - 2*wall_t, box_w - 2*wall_t, box_h - wall_t]);\n    }\n}\n\n// Lid with lip and hinge pins\nmodule lid() {\n    difference() {\n        // lid plate\n        translate([0, 0, box_h])\n            cube([box_l, box_w, lid_h]);\n        // recessed top\n        translate([wall_t, wall_t, box_h + wall_t])\n            cube([box_l - 2*wall_t, box_w - 2*wall_t, lid_h - wall_t]);\n    }\n    // lip for alignment\n    translate([wall_t, wall_t, box_h])\n        cube([box_l - 2*wall_t, box_w - 2*wall_t, 1]);\n}\n\n// Ornamental feet (simple ogee-style)\nmodule foot() {\n    difference() {\n        cylinder(h = foot_h, r1 = 4, r2 = 3, $fn = 32);\n        translate([0, 0, -0.1])\n            cylinder(h = foot_h + 0.2, r1 = 1.5, r2 = 1.5, $fn = 32);\n    }\n}\n\n// Corner braces for realism and strength\nmodule corner_brace() {\n    cube([wall_t + 2, wall_t + 2, box_h]);\n}\n\n// Decorative clasp on front\nmodule clasp() {\n    union() {\n        // plate\n        translate([box_l/2 - 4, 0, -0.1])\n            cube([8, 3, 2]);\n        // knob\n        translate([box_l/2, 1.5, 1])\n            sphere(r = 2, $fn = 20);\n    }\n}\n\n// Main assembly\nunion() {\n    // body\n    body_shell();\n\n    // lid\n    lid();\n\n    // four feet\n    for(x = [wall_t + 3, box_l - wall_t - 3])\n        for(y = [wall_t + 3, box_w - wall_t - 3])\n            translate([x, y, -foot_h])\n                foot();\n\n    // four corner braces (subtractive for groove look)\n    difference() {\n        // invisible placeholder to trigger difference\n        translate([0, 0, 0]) cube([0.1, 0.1, 0.1]);\n        for(x = [0, box_l - wall_t - 2])\n            for(y = [0, box_w - wall_t - 2])\n                translate([x, y, 0])\n                    corner_brace();\n    }\n\n    // front clasp\n    translate([0, box_w, box_h + lid_h/2])\n        rotate([90, 0, 0])\n            clasp();\n}",
    "renders": true
  },
  {
    "decorative_art": "trinket_box",
    "openscad_code": "// Realistic trinket box with hinged lid and decorative paneling\n// Outer dimensions: 60 x 40 x 35 mm\n\n$fn = 50;  // Smooth curves\n\nmodule trinket_box() {\n    difference() {\n        union() {\n            // Main body shell\n            body();\n\n            // Hinged lid assembly\n            translate([0, 0, 30])\n            rotate([0, -20, 0])  // Opens 20 degrees for display\n            lid();\n\n            // Decorative feet\n            feet();\n        }\n\n        // Interior cavity\n        translate([5, 5, 5])\n        cube([50, 30, 30], center = false);\n    }\n}\n\nmodule body() {\n    difference() {\n        // Main box frame\n        cube([60, 40, 35], center = false);\n\n        // Rounded top edge\n        translate([2, 2, 33])\n        minkowski() {\n            cube([56, 36, 2], center = false);\n            cylinder(h = 0.5, r = 2);\n        }\n\n        // Decorative panel recesses on sides\n        for (side = [0, 1]) {\n            translate([side ? 58 : 0, 5, 5])\n            rotate([0, side ? 0 : 90, 0])\n            cube([2, 30, 25], center = false);\n        }\n\n        // Front and back panel recesses\n        for (side = [0, 1]) {\n            translate([5, side ? 38 : 0, 5])\n            rotate([90, 0, 0])\n            cube([50, 2, 25], center = false);\n        }\n    }\n\n    // Add decorative raised panels\n    for (x = [10, 30, 50]) {\n        translate([x - 5, 2, 10])\n        cube([10, 36, 15]);\n    }\n\n    // Back hinge supports\n    translate([5, 38, 30])\n    cube([50, 2, 5], center = false);\n}\n\nmodule lid() {\n    difference() {\n        // Lid top\n        translate([0, 0, 0])\n        cube([60, 40, 5], center = false);\n\n        // Rounded top surface\n        translate([2, 2, 5])\n        minkowski() {\n            cube([56, 36, 0.5], center = false);\n            cylinder(h = 0.5, r = 2);\n        }\n\n        // Finger notch for opening\n        translate([25, 0, 2])\n        cube([10, 3, 3], center = false);\n    }\n\n    // Hinge pins\n    translate([2, 38, -2])\n    cylinder(h = 6, r = 2);\n\n    translate([58, 38, -2])\n    cylinder(h = 6, r = 2);\n\n    // Decorative top panel\n    translate([5, 5, 5.5])\n    cube([50, 30, 1], center = false);\n\n    // Ornate corner details\n    for (x = [5, 55]) {\n        for (y = [5, 35]) {\n            translate([x, y, 5.5])\n            cylinder(h = 1, r = 2);\n        }\n    }\n}\n\nmodule feet() {\n    // Four decorative feet\n    for (x = [5, 55]) {\n        for (y = [5, 35]) {\n            translate([x, y, -3])\n            cylinder(h = 3, r = 3);\n\n            // Add stepped detail\n            translate([x, y, -3])\n            cylinder(h = 1, r = 4);\n        }\n    }\n}\n\ntrinket_box();",
    "renders": true
  },
  {
    "decorative_art": "music_box",
    "openscad_code": "// Realistic style music box furniture with medium complexity\n// Dimensions: 80mm x 60mm x 50mm\n\n$fn = 32;\n\n// Main body of the music box\nmodule body() {\n    difference() {\n        // Main box structure\n        cube([80, 60, 40]);\n        \n        // Hollow interior (2mm walls)\n        translate([2, 2, 2])\n            cube([76, 56, 38]);\n    }\n}\n\n// Lid with curved top\nmodule lid() {\n    translate([0, 0, 40]) {\n        difference() {\n            // Main lid base\n            translate([0, 0, 5])\n                cube([80, 60, 6]);\n            \n            // Hollow interior\n            translate([2, 2, 5])\n                cube([76, 56, 6]);\n            \n            // Finger notch for opening\n            translate([35, -1, 5])\n                cube([10, 3, 3]);\n        }\n        \n        // Curved top surface\n        translate([40, 30, 12]) {\n            scale([40, 30, 6])\n                sphere(1);\n        }\n    }\n}\n\n// Piano-style keys decoration\nmodule keys() {\n    translate([15, 2, 0]) {\n        for(i = [0:7]) {\n            translate([i*6, 0, 0]) {\n                // White keys\n                translate([0, 0, 2])\n                    cube([5, 8, 1]);\n                \n                // Black keys (every other)\n                if(i%7 != 2 && i%7 != 5) {\n                    translate([3.5, 0, 3])\n                        cube([3, 6, 2]);\n                }\n            }\n        }\n    }\n}\n\n// Decorative legs\nmodule legs() {\n    for(x = [5, 75]) {\n        for(y = [5, 55]) {\n            translate([x, y, -8]) {\n                cylinder(h=8, r=3);\n            }\n        }\n    }\n}\n\n// Ornate handle on top\nmodule handle() {\n    translate([40, 30, 50]) {\n        // Base\n        cylinder(h=2, r=8);\n        \n        // Handle arch\n        translate([0, 0, 2]) {\n            rotate_extrude(angle=180) {\n                translate([8, 0, 0])\n                    circle(r=2);\n            }\n        }\n    }\n}\n\n// Side decorative panels\nmodule side_panels() {\n    // Left side\n    translate([-1, 30, 20]) {\n        cube([1, 56, 36]);\n    }\n    \n    // Right side\n    translate([80, 30, 20]) {\n        cube([1, 56, 36]);\n    }\n}\n\n// Assembly\nunion() {\n    body();\n    lid();\n    keys();\n    legs();\n    handle();\n    side_panels();\n}",
    "renders": true
  },
  {
    "decorative_art": "snow_globe",
    "openscad_code": "// Snow Globe Furniture Piece - Decorative Table Accent\n// Realistic style, medium complexity\n\n$fn = 36;  // Smooth curves for 3D printing\n\n// Main parameters\nbase_diameter = 80;\nbase_height = 15;\nglobe_diameter = 70;\nglobe_wall = 2;\nscene_height = 25;\ntotal_height = base_height + globe_diameter + 10;\n\n// Base module with furniture-style legs\nmodule decorative_base() {\n    // Main base cylinder\n    difference() {\n        cylinder(h=base_height, d=base_diameter, center=false);\n        \n        // Hollow center for weight reduction\n        translate([0, 0, 2])\n            cylinder(h=base_height, d=base_diameter-8, center=false);\n    }\n    \n    // Decorative ring detail\n    translate([0, 0, 10])\n        difference() {\n            cylinder(h=3, d=base_diameter+4, center=false);\n            cylinder(h=3, d=base_diameter-4, center=false);\n        }\n    \n    // Furniture-style bracket legs (4 legs)\n    for (i = [0:90:270]) {\n        rotate([0, 0, i])\n            translate([30, 0, 0])\n                rotate([90, 0, 0])\n                    cylinder(h=12, d=6, center=false);\n    }\n}\n\n// Globe sphere with wall thickness\nmodule glass_globe() {\n    difference() {\n        sphere(d=globe_diameter);\n        sphere(d=globe_diameter - globe_wall*2);\n    }\n}\n\n// Winter scene inside globe\nmodule winter_scene() {\n    // Snow layer\n    translate([0, 0, -globe_diameter/2 + 5])\n        cube([globe_diameter-10, globe_diameter-10, 5], center=true);\n    \n    // Miniature fir tree (furniture-style decorative element)\n    module tree(trunk_h, trunk_d) {\n        color(\"darkgreen\")\n        for (i = [0:4]) {\n            translate([0, 0, i*trunk_h/5])\n                scale([1-i*0.15, 1-i*0.15, 1])\n                    cone(h=trunk_h/5, d1=trunk_d*(1-i*0.2), d2=trunk_d*(1-i*0.1));\n        }\n        // Trunk\n        color(\"brown\")\n        translate([0, 0, 0])\n            cylinder(h=trunk_h/5, d=trunk_d/4, center=false);\n    }\n    \n    // Place trees in scene\n    translate([-15, -15, -globe_diameter/2 + 10])\n        tree(15, 8);\n    translate([15, 10, -globe_diameter/2 + 10])\n        tree(12, 6);\n    translate([0, 15, -globe_diameter/2 + 10])\n        tree(10, 5);\n    \n    // Small decorative bench (furniture element)\n    translate([10, -10, -globe_diameter/2 + 10])\n        rotate([0, 0, 45]) {\n            // Bench seat\n            color(\"brown\")\n            cube([12, 4, 1], center=true);\n            // Bench legs\n            translate([-4, 0, -2])\n                cube([1, 3, 4], center=true);\n            translate([4, 0, -2])\n                cube([1, 3, 4], center=true);\n        }\n}\n\n// Assembly\ntranslate([0, 0, 0])\n    decorative_base();\n\ntranslate([0, 0, base_height])\n    glass_globe();\n\ntranslate([0, 0, base_height + globe_diameter/2])\n    winter_scene();\n\n// Decorative cap on top\ntranslate([0, 0, base_height + globe_diameter])\n    difference() {\n        cylinder(h=8, d=20, center=false);\n        cylinder(h=8, d=16, center=false);\n    }",
    "renders": true
  }
]